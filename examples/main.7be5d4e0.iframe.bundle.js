(self.webpackChunk_adrian_insua_react_big_calendar=self.webpackChunk_adrian_insua_react_big_calendar||[]).push([[792],{"./.storybook/preview.js-generated-config-entry.js":function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{__namedExportsOrder:function(){return __namedExportsOrder},parameters:function(){return parameters}});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}},storySort:{order:["About Big Calendar","About Our Examples","props","Examples","Guides","Addons",["Introduction","props"]]},viewMode:"docs"},__namedExportsOrder=["parameters"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return(0,ClientApi.FQ)(value);case"argTypes":return(0,ClientApi.hA)(value);case"decorators":return value.forEach((function(decorator){return(0,ClientApi.dK)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.$K)(loader,!1)}));case"parameters":return(0,ClientApi.Gu)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.T$)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.FW)(enhancer)}));case"render":return(0,ClientApi.kf)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.Gu)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./stories/Calendar.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ComplexDayViewLayout:function(){return ComplexDayViewLayout},CustomDateCellWrapper:function(){return CustomDateCellWrapper},CustomDayColumnWrapper:function(){return CustomDayColumnWrapper},CustomEventWrapper:function(){return CustomEventWrapper},CustomNoAgendaEventsLabel:function(){return CustomNoAgendaEventsLabel},CustomShowMore:function(){return CustomShowMore},CustomTimeGutterHeader:function(){return CustomTimeGutterHeader},CustomTimeGutterWrapper:function(){return CustomTimeGutterWrapper},CustomTimeSlotWrapper:function(){return CustomTimeSlotWrapper},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),_resources_events__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./stories/resources/events.js"),_src__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/index.js"),_helpers__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./stories/helpers/index.js"),_helpers_createEvents__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./stories/helpers/createEvents.js"),_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./stories/resources/customComponents.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Additional Examples",component:_src__WEBPACK_IMPORTED_MODULE_4__.Vv,decorators:[function(Story){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Story,{})})}]};var Template=function Template(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_helpers__WEBPACK_IMPORTED_MODULE_5__.Vv,Object.assign({},args))};Template.displayName="Template";var ComplexDayViewLayout=Template.bind({});ComplexDayViewLayout.storyName="complex day view layout",ComplexDayViewLayout.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.DAY,defaultDate:new Date,events:(0,_helpers_createEvents__WEBPACK_IMPORTED_MODULE_8__.A)(1),step:30};var TimeGutter=function TimeGutter(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("p",{children:"Custom gutter text"})};TimeGutter.displayName="TimeGutter";var CustomTimeGutterHeader=Template.bind({});CustomTimeGutterHeader.storyName="custom TimeGutter header",CustomTimeGutterHeader.args={popup:!0,events:_resources_events__WEBPACK_IMPORTED_MODULE_3__.A,onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event selected"),defaultDate:new Date(2015,3,1),defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.WEEK,views:[_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.WEEK,_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.DAY],components:{timeGutterHeader:TimeGutter}};var CustomTimeGutterWrapper=Template.bind({});CustomTimeGutterWrapper.storyName="custom TimeGutter wrapper",CustomTimeGutterWrapper.args={popup:!0,events:_resources_events__WEBPACK_IMPORTED_MODULE_3__.A,onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event selected"),defaultDate:new Date(2015,3,1),defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.WEEK,views:[_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.WEEK,_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.DAY],components:{timeGutterWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__.A.timeGutterWrapper}};var CustomDateCellWrapper=Template.bind({});CustomDateCellWrapper.storyName="add custom dateCellWrapper",CustomDateCellWrapper.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.MONTH,events:_helpers__WEBPACK_IMPORTED_MODULE_5__.AZ,components:{dateCellWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__.A.dateCellWrapper}};var CustomTimeSlotWrapper=Template.bind({});CustomTimeSlotWrapper.storyName="add custom timeSlotWrapper",CustomTimeSlotWrapper.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.DAY,events:_helpers__WEBPACK_IMPORTED_MODULE_5__.AZ,components:{timeSlotWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__.A.timeSlotWrapper}};var CustomEventWrapper=Template.bind({});CustomEventWrapper.storyName="add custom eventWrapper",CustomEventWrapper.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.DAY,events:_helpers__WEBPACK_IMPORTED_MODULE_5__.AZ,components:{eventWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__.A.eventWrapper}};var CustomNoAgendaEventsLabel=Template.bind({});CustomNoAgendaEventsLabel.storyName="add custom no agenda events label",CustomNoAgendaEventsLabel.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.AGENDA,events:_helpers__WEBPACK_IMPORTED_MODULE_5__.AZ,messages:{noEventsInRange:"There are no special events in this range [test message]"}};var CustomDayColumnWrapper=Template.bind({});CustomDayColumnWrapper.storyName="add custom dayColumnWrapper",CustomDayColumnWrapper.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.DAY,events:_helpers__WEBPACK_IMPORTED_MODULE_5__.GI,resources:_helpers__WEBPACK_IMPORTED_MODULE_5__.ES,resourceAccessor:"resourceId",resourceIdAccessor:"id",resourceTitleAccessor:"name",components:{dayColumnWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__.A.dayColumnWrapper}},CustomDayColumnWrapper.parameters={docs:{description:{story:"The custom DayColumnWrapper allows you to add your own custom logic when rendering a Day Column."}}};var CustomShowMore=Template.bind({});CustomShowMore.storyName="add custom showMore",CustomShowMore.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_5__.Pp.MONTH,events:_helpers__WEBPACK_IMPORTED_MODULE_5__.AZ,components:{showMore:_resources_customComponents__WEBPACK_IMPORTED_MODULE_6__.A.showMore}},ComplexDayViewLayout.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},ComplexDayViewLayout.parameters),CustomTimeGutterHeader.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomTimeGutterHeader.parameters),CustomTimeGutterWrapper.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomTimeGutterWrapper.parameters),CustomDateCellWrapper.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomDateCellWrapper.parameters),CustomTimeSlotWrapper.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomTimeSlotWrapper.parameters),CustomEventWrapper.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomEventWrapper.parameters),CustomNoAgendaEventsLabel.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomNoAgendaEventsLabel.parameters),CustomDayColumnWrapper.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomDayColumnWrapper.parameters),CustomShowMore.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},CustomShowMore.parameters);var __namedExportsOrder=["ComplexDayViewLayout","CustomTimeGutterHeader","CustomTimeGutterWrapper","CustomDateCellWrapper","CustomTimeSlotWrapper","CustomEventWrapper","CustomNoAgendaEventsLabel","CustomDayColumnWrapper","CustomShowMore"]},"./stories/DragAndDrop.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomStepsAndTimeslots:function(){return CustomStepsAndTimeslots},DraggableAndResizable:function(){return DraggableAndResizable},DraggableMultipleResources:function(){return DraggableMultipleResources},WithCustomDateCellWrapper:function(){return WithCustomDateCellWrapper},WithCustomEventWrapper:function(){return WithCustomEventWrapper},WithCustomTimeslotWrapper:function(){return WithCustomTimeslotWrapper},WithMultiDayTimes:function(){return WithMultiDayTimes},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),_helpers__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./stories/helpers/index.js"),_resources_customComponents__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/resources/customComponents.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Additional Examples/Drag and Drop",component:_helpers__WEBPACK_IMPORTED_MODULE_3__.Vv,decorators:[function(Story){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Story,{})})}]};var Template=function Template(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_helpers__WEBPACK_IMPORTED_MODULE_3__.zm,Object.assign({},args))})};Template.displayName="Template";var DraggableAndResizable=Template.bind({});DraggableAndResizable.storyName="draggable and resizable",DraggableAndResizable.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,events:_helpers__WEBPACK_IMPORTED_MODULE_3__.AZ,resizable:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized")};var CustomStepsAndTimeslots=Template.bind({});CustomStepsAndTimeslots.storyName="draggable and resizable with non-default steps and timeslots",CustomStepsAndTimeslots.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,events:_helpers__WEBPACK_IMPORTED_MODULE_3__.AZ,resizable:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized"),steps:15,timeslots:4};var WithMultiDayTimes=Template.bind({});WithMultiDayTimes.storyName="draggable and resizable with showMultiDayTimes",WithMultiDayTimes.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,events:_helpers__WEBPACK_IMPORTED_MODULE_3__.AZ,resizable:!0,showMultiDayTimes:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized")};var WithCustomDateCellWrapper=Template.bind({});WithCustomDateCellWrapper.storyName="draggable and resizable with custom dateCellWrapper",WithCustomDateCellWrapper.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,events:_helpers__WEBPACK_IMPORTED_MODULE_3__.AZ,resizable:!0,showMultiDayTimes:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized"),components:{dateCellWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_4__.A.dateCellWrapper}};var WithCustomTimeslotWrapper=Template.bind({});WithCustomTimeslotWrapper.storyName="draggable and resizable with custom timeSlotWrapper",WithCustomTimeslotWrapper.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,events:_helpers__WEBPACK_IMPORTED_MODULE_3__.AZ,resizable:!0,showMultiDayTimes:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized"),components:{timeSlotWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_4__.A.timeSlotWrapper}};var WithCustomEventWrapper=Template.bind({});WithCustomEventWrapper.storyName="draggable and resizable with custom eventWrapper",WithCustomEventWrapper.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,events:_helpers__WEBPACK_IMPORTED_MODULE_3__.AZ,resizable:!0,showMultiDayTimes:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized"),components:{eventWrapper:_resources_customComponents__WEBPACK_IMPORTED_MODULE_4__.A.eventWrapper}};var DraggableMultipleResources=Template.bind({});DraggableMultipleResources.storyName="draggable and resizable with multiple resource lanes",DraggableMultipleResources.args={defaultDate:new Date,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.DAY,views:[_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.DAY,_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.WEEK,_helpers__WEBPACK_IMPORTED_MODULE_3__.Pp.AGENDA],events:_helpers__WEBPACK_IMPORTED_MODULE_3__.GI,resources:_helpers__WEBPACK_IMPORTED_MODULE_3__.ES,resourceAccessor:"resourceId",resourceIdAccessor:"id",resourceTitleAccessor:"name",resizable:!0,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event dropped"),onEventResize:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event resized")},DraggableAndResizable.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},DraggableAndResizable.parameters),CustomStepsAndTimeslots.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},CustomStepsAndTimeslots.parameters),WithMultiDayTimes.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},WithMultiDayTimes.parameters),WithCustomDateCellWrapper.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},WithCustomDateCellWrapper.parameters),WithCustomTimeslotWrapper.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},WithCustomTimeslotWrapper.parameters),WithCustomEventWrapper.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},WithCustomEventWrapper.parameters),DraggableMultipleResources.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <DragAndDropCalendar {...args} />\n  </div>\n)'}},DraggableMultipleResources.parameters);var __namedExportsOrder=["DraggableAndResizable","CustomStepsAndTimeslots","WithMultiDayTimes","WithCustomDateCellWrapper","WithCustomTimeslotWrapper","WithCustomEventWrapper","DraggableMultipleResources"]},"./stories/Durations.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DaylightSavingsEnds:function(){return DaylightSavingsEnds},DaylightSavingsEndsAfter2Am:function(){return DaylightSavingsEndsAfter2Am},DaylightSavingsStarts:function(){return DaylightSavingsStarts},DaylightSavingsStartsAfter2Am:function(){return DaylightSavingsStartsAfter2Am},__namedExportsOrder:function(){return __namedExportsOrder}});var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react_big_calendar__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/index.js")),_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/addons/dragAndDrop/index.js"),moment__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__),globalize__WEBPACK_IMPORTED_MODULE_6__=(__webpack_require__("./node_modules/moment-timezone/builds/moment-timezone-with-data-1970-2030.js"),__webpack_require__("./node_modules/globalize/lib/globalize.js")),globalize__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(globalize__WEBPACK_IMPORTED_MODULE_6__),luxon__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/luxon/src/luxon.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["localizer"],localizers={globalize:(0,react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.fk)(globalize__WEBPACK_IMPORTED_MODULE_6___default()),moment:(0,react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.ye)(moment__WEBPACK_IMPORTED_MODULE_4___default()),luxon:(0,react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.AW)(luxon__WEBPACK_IMPORTED_MODULE_7__.c9,{firstDayOfWeek:7})},DraggableCalendar=(0,_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_3__.A)(react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Vv);__webpack_exports__.default={title:"Additional Examples/Event Durations",component:react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Vv,decorators:[function(Story){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(Story,{})})}]};var Template=function Template(_ref){var _ref$localizer=_ref.localizer,loc=void 0===_ref$localizer?"moment":_ref$localizer,args=(0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_9__.A)(_ref,_excluded),localizer=localizers[loc];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(DraggableCalendar,Object.assign({localizer:localizer},args))};Template.displayName="Template";var DaylightSavingsStarts=Template.bind({});DaylightSavingsStarts.argTypes={localizer:{options:["globalize","moment","luxon"],control:{type:"select"}}},DaylightSavingsStarts.args={defaultView:react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Pp.DAY,localizer:"moment",min:moment__WEBPACK_IMPORTED_MODULE_4___default()("12:00am","h:mma").toDate(),max:moment__WEBPACK_IMPORTED_MODULE_4___default()("11:59pm","h:mma").toDate(),events:[{title:"on DST",start:new Date(2022,2,13,1),end:new Date(2022,2,13,2,30),allDay:!1},{title:"crosses DST",start:new Date(2022,2,13,1),end:new Date(2022,2,13,6,30),allDay:!1},{title:"After DST",start:new Date(2022,2,13,7),end:new Date(2022,2,13,9,30),allDay:!1}],defaultDate:new Date(2022,2,13)};var DaylightSavingsStartsAfter2Am=Template.bind({});DaylightSavingsStartsAfter2Am.argTypes={localizer:{options:["globalize","moment","luxon"],control:{type:"select"}}},DaylightSavingsStartsAfter2Am.args={defaultView:react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Pp.DAY,localizer:"moment",min:moment__WEBPACK_IMPORTED_MODULE_4___default()("3:00am","h:mma").toDate(),max:moment__WEBPACK_IMPORTED_MODULE_4___default()("11:59pm","h:mma").toDate(),events:[{title:"on DST",start:new Date(2022,2,13,1),end:new Date(2022,2,13,2,30),allDay:!1},{title:"crosses DST",start:new Date(2022,2,13,1),end:new Date(2022,2,13,6,30),allDay:!1},{title:"After DST",start:new Date(2022,2,13,7),end:new Date(2022,2,13,9,30),allDay:!1}],defaultDate:new Date(2022,2,13)};var DaylightSavingsEnds=Template.bind({});DaylightSavingsEnds.argTypes={localizer:{options:["globalize","moment","luxon"],control:{type:"select"}}},DaylightSavingsEnds.args={defaultView:react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Pp.DAY,localizer:"moment",min:moment__WEBPACK_IMPORTED_MODULE_4___default()("12:00am","h:mma").toDate(),max:moment__WEBPACK_IMPORTED_MODULE_4___default()("11:59pm","h:mma").toDate(),events:[{title:"on DST",start:new Date(2022,10,6,1),end:new Date(2022,10,6,3,30),allDay:!1},{title:"crosses DST",start:new Date(2022,10,6,1),end:new Date(2022,10,6,6,30),allDay:!1},{title:"After DST",start:new Date(2022,10,6,7),end:new Date(2022,10,6,7,45),allDay:!1}],defaultDate:new Date(2022,10,6)};var DaylightSavingsEndsAfter2Am=Template.bind({});DaylightSavingsEndsAfter2Am.argTypes={localizer:{options:["globalize","moment","luxon"],control:{type:"select"}}},DaylightSavingsEndsAfter2Am.args={defaultView:react_big_calendar__WEBPACK_IMPORTED_MODULE_2__.Pp.DAY,localizer:"moment",min:moment__WEBPACK_IMPORTED_MODULE_4___default()("3:00am","h:mma").toDate(),max:moment__WEBPACK_IMPORTED_MODULE_4___default()("11:59pm","h:mma").toDate(),events:[{title:"After DST",start:new Date(2022,10,6,7),end:new Date(2022,10,6,9,30),allDay:!1}],defaultDate:new Date(2022,10,6)},DaylightSavingsStarts.parameters=Object.assign({storySource:{source:"({ localizer: loc = 'moment', ...args }) => {\n  const localizer = localizers[loc]\n  return <DraggableCalendar localizer={localizer} {...args} />\n}"}},DaylightSavingsStarts.parameters),DaylightSavingsStartsAfter2Am.parameters=Object.assign({storySource:{source:"({ localizer: loc = 'moment', ...args }) => {\n  const localizer = localizers[loc]\n  return <DraggableCalendar localizer={localizer} {...args} />\n}"}},DaylightSavingsStartsAfter2Am.parameters),DaylightSavingsEnds.parameters=Object.assign({storySource:{source:"({ localizer: loc = 'moment', ...args }) => {\n  const localizer = localizers[loc]\n  return <DraggableCalendar localizer={localizer} {...args} />\n}"}},DaylightSavingsEnds.parameters),DaylightSavingsEndsAfter2Am.parameters=Object.assign({storySource:{source:"({ localizer: loc = 'moment', ...args }) => {\n  const localizer = localizers[loc]\n  return <DraggableCalendar localizer={localizer} {...args} />\n}"}},DaylightSavingsEndsAfter2Am.parameters);var __namedExportsOrder=["DaylightSavingsStarts","DaylightSavingsStartsAfter2Am","DaylightSavingsEnds","DaylightSavingsEndsAfter2Am"]},"./stories/Layout.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DaySpan:function(){return DaySpan},EndOfWeekAllDay:function(){return EndOfWeekAllDay},EventAtEndOfWeek:function(){return EventAtEndOfWeek},EventAtStartOfWeek:function(){return EventAtStartOfWeek},EventLayout:function(){return EventLayout},EventsOnAConstrainedDayColumn:function(){return EventsOnAConstrainedDayColumn},FirstOfWeekAllDay:function(){return FirstOfWeekAllDay},NoDuration:function(){return NoDuration},OverlappingBackgroundEventsNoOverlap:function(){return OverlappingBackgroundEventsNoOverlap},OverlappingBackgroundEventsOverlap:function(){return OverlappingBackgroundEventsOverlap},ZeroDurationOddities:function(){return ZeroDurationOddities},ZeroDurationOverlap:function(){return ZeroDurationOverlap},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js");var moment__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__),_helpers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/helpers/index.js"),_helpers_createEvents__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./stories/helpers/createEvents.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Additional Examples/Layout",component:_helpers__WEBPACK_IMPORTED_MODULE_4__.Vv,decorators:[function(Story){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Story,{})})}]};var Template=function Template(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_helpers__WEBPACK_IMPORTED_MODULE_4__.Vv,Object.assign({},args))};Template.displayName="Template";var defaultDate=new Date,EventLayout=Template.bind({});EventLayout.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.DAY,defaultDate:defaultDate,timeslots:4,events:(0,_helpers_createEvents__WEBPACK_IMPORTED_MODULE_6__.A)(1)};var FirstOfWeekAllDay=Template.bind({});FirstOfWeekAllDay.storyName="first of the week all-day event",FirstOfWeekAllDay.args={defaultDate:new Date(2016,11,4),events:[{allDay:!0,title:"All Day Event",start:new Date(2016,11,4),end:new Date(2016,11,4)}]};var EndOfWeekAllDay=Template.bind({});EndOfWeekAllDay.storyName="end of the week all-day event",EndOfWeekAllDay.args={defaultDate:new Date(2016,11,3),events:[{allDay:!0,title:"All Day Event",start:new Date(2016,11,3),end:new Date(2016,11,3)}]};var EventAtStartOfWeek=Template.bind({});EventAtStartOfWeek.args={defaultDate:new Date(2016,11,4),events:[{title:"has time",start:moment__WEBPACK_IMPORTED_MODULE_3___default()(new Date(2016,11,4)).add(1,"days").subtract(5,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_3___default()(new Date(2016,11,4)).add(1,"days").subtract(4,"hours").toDate()}]};var EventAtEndOfWeek=Template.bind({});EventAtEndOfWeek.args={defaultDate:new Date(2016,11,3),events:[{title:"has time",start:moment__WEBPACK_IMPORTED_MODULE_3___default()(new Date(2016,11,3)).add(1,"days").subtract(5,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_3___default()(new Date(2016,11,3)).add(1,"days").subtract(4,"hours").toDate()}]};var EventsOnAConstrainedDayColumn=Template.bind({});EventsOnAConstrainedDayColumn.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.DAY,min:moment__WEBPACK_IMPORTED_MODULE_3___default()("8 am","h a").toDate(),max:moment__WEBPACK_IMPORTED_MODULE_3___default()("5 pm","h a").toDate(),events:_helpers__WEBPACK_IMPORTED_MODULE_4__.AZ};var NoDuration=Template.bind({});NoDuration.args={defaultDate:new Date(2016,11,4),events:[{title:"start of the week",start:new Date(2016,11,4),end:new Date(2016,11,4)},{title:"end of the week",start:new Date(2016,11,3),end:new Date(2016,11,3)},{title:"middle",start:new Date(2016,11,6),end:new Date(2016,11,6)}]};var DaySpan=Template.bind({});DaySpan.storyName="Single days should only span one slot, multi-days multiple",DaySpan.args={defaultDate:new Date(2015,3,1),events:[{title:"SingleDay 1",start:new Date(2015,3,10),end:new Date(2015,3,11)},{title:"SingleDay 2",start:new Date(2015,3,11),end:new Date(2015,3,12)},{title:"SingleDay 3",start:new Date(2015,3,12),end:new Date(2015,3,13)},{title:"SingleDay 4",start:new Date(2015,3,13),end:new Date(2015,3,14)},{title:"MultiDay 1",start:new Date(2015,3,24),end:new Date(2015,3,25,1,0,0,0)},{title:"MultiDay 2",start:new Date(2015,3,25),end:new Date(2015,3,26,1,0,0,0)}]};var ZeroDurationOddities=function ZeroDurationOddities(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_helpers__WEBPACK_IMPORTED_MODULE_4__.zm,{defaultDate:new Date(2015,3,1),events:[{id:4,title:"0 day duration",start:new Date(2015,3,8,0,0,0),end:new Date(2015,3,8,0,0,0)},{id:4,title:"1 day duration",start:new Date(2015,3,9,0,0,0),end:new Date(2015,3,10,0,0,0)}]})};ZeroDurationOddities.displayName="ZeroDurationOddities";var ZeroDurationOverlap=function ZeroDurationOverlap(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_helpers__WEBPACK_IMPORTED_MODULE_4__.zm,{defaultDate:defaultDate,events:[{title:"event a",start:defaultDate,end:defaultDate},{title:"event b",start:defaultDate,end:defaultDate}],dayLayoutAlgorithm:"no-overlap",scrollToTime:defaultDate,defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK})};ZeroDurationOverlap.displayName="ZeroDurationOverlap";var OverlappingBackgroundEventsOverlap=Template.bind({});OverlappingBackgroundEventsOverlap.storyName="Overlapping Background Events - 'overlap'",OverlappingBackgroundEventsOverlap.args={defaultDate:new Date(2016,11,3),dayLayoutAlgorithm:"overlap",defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK,scrollToTime:new Date(2016,11,1,7,0),backgroundEvents:[{title:"First Event",start:new Date(2016,10,28,10,30),end:new Date(2016,10,28,18,0)},{title:"Second Event",start:new Date(2016,10,28,12,0),end:new Date(2016,10,28,16,30)},{title:"Third Event",start:new Date(2016,10,29,8,0),end:new Date(2016,10,29,21,0)},{title:"Fourth Event",start:new Date(2016,10,29,9,30),end:new Date(2016,10,29,19,30)},{title:"Fifth Event",start:new Date(2016,10,29,11,0),end:new Date(2016,10,29,18,0)},{title:"Sixth Event",start:new Date(2016,11,1,9,0),end:new Date(2016,11,1,14,0)},{title:"Seventh Event",start:new Date(2016,11,1,11,0),end:new Date(2016,11,1,16,0)},{title:"Eighth Event",start:new Date(2016,11,1,13,0),end:new Date(2016,11,1,18,0)}]};var OverlappingBackgroundEventsNoOverlap=Template.bind({});OverlappingBackgroundEventsNoOverlap.storyName="Overlapping Background Events - 'no-overlap'",OverlappingBackgroundEventsNoOverlap.args={defaultDate:new Date(2016,11,3),dayLayoutAlgorithm:"no-overlap",defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK,scrollToTime:new Date(2016,11,1,7,0),backgroundEvents:[{title:"First Event",start:new Date(2016,10,28,10,30),end:new Date(2016,10,28,18,0)},{title:"Second Event",start:new Date(2016,10,28,12,0),end:new Date(2016,10,28,16,30)},{title:"Third Event",start:new Date(2016,10,29,8,0),end:new Date(2016,10,29,21,0)},{title:"Fourth Event",start:new Date(2016,10,29,9,30),end:new Date(2016,10,29,19,30)},{title:"Fifth Event",start:new Date(2016,10,29,11,0),end:new Date(2016,10,29,18,0)},{title:"Sixth Event",start:new Date(2016,11,1,9,0),end:new Date(2016,11,1,14,0)},{title:"Seventh Event",start:new Date(2016,11,1,11,0),end:new Date(2016,11,1,16,0)},{title:"Eighth Event",start:new Date(2016,11,1,13,0),end:new Date(2016,11,1,18,0)}]},EventLayout.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},EventLayout.parameters),FirstOfWeekAllDay.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},FirstOfWeekAllDay.parameters),EndOfWeekAllDay.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},EndOfWeekAllDay.parameters),EventAtStartOfWeek.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},EventAtStartOfWeek.parameters),EventAtEndOfWeek.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},EventAtEndOfWeek.parameters),EventsOnAConstrainedDayColumn.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},EventsOnAConstrainedDayColumn.parameters),NoDuration.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},NoDuration.parameters),DaySpan.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},DaySpan.parameters),ZeroDurationOddities.parameters=Object.assign({storySource:{source:"() => {\n  return (\n    <DragAndDropCalendar\n      defaultDate={new Date(2015, 3, 1)}\n      events={[\n        {\n          id: 4,\n          title: '0 day duration',\n          start: new Date(2015, 3, 8, 0, 0, 0),\n          end: new Date(2015, 3, 8, 0, 0, 0),\n        },\n        {\n          id: 4,\n          title: '1 day duration',\n          start: new Date(2015, 3, 9, 0, 0, 0),\n          end: new Date(2015, 3, 10, 0, 0, 0),\n        },\n      ]}\n    />\n  )\n}"}},ZeroDurationOddities.parameters),ZeroDurationOverlap.parameters=Object.assign({storySource:{source:"() => {\n  return (\n    <DragAndDropCalendar\n      defaultDate={defaultDate}\n      events={[\n        {\n          title: 'event a',\n          start: defaultDate,\n          end: defaultDate,\n        },\n        {\n          title: 'event b',\n          start: defaultDate,\n          end: defaultDate,\n        },\n      ]}\n      dayLayoutAlgorithm={'no-overlap'}\n      scrollToTime={defaultDate}\n      defaultView={Views.WEEK}\n    />\n  )\n}"}},ZeroDurationOverlap.parameters),OverlappingBackgroundEventsOverlap.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},OverlappingBackgroundEventsOverlap.parameters),OverlappingBackgroundEventsNoOverlap.parameters=Object.assign({storySource:{source:"(args) => <Calendar {...args} />"}},OverlappingBackgroundEventsNoOverlap.parameters);var __namedExportsOrder=["EventLayout","FirstOfWeekAllDay","EndOfWeekAllDay","EventAtStartOfWeek","EventAtEndOfWeek","EventsOnAConstrainedDayColumn","NoDuration","DaySpan","ZeroDurationOddities","ZeroDurationOverlap","OverlappingBackgroundEventsOverlap","OverlappingBackgroundEventsNoOverlap"];ZeroDurationOddities.__docgenInfo={description:"",methods:[],displayName:"ZeroDurationOddities"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/Layout.stories.js"]={name:"ZeroDurationOddities",docgenInfo:ZeroDurationOddities.__docgenInfo,path:"stories/Layout.stories.js"}),ZeroDurationOverlap.__docgenInfo={description:"",methods:[],displayName:"ZeroDurationOverlap"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/Layout.stories.js"]={name:"ZeroDurationOverlap",docgenInfo:ZeroDurationOverlap.__docgenInfo,path:"stories/Layout.stories.js"})},"./stories/Timeslots.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Selectable3Slot:function(){return Selectable3Slot},SelectableStep10x6Slot:function(){return SelectableStep10x6Slot},SelectableStep15x4Slot:function(){return SelectableStep15x4Slot},SelectableStep5x6Slot:function(){return SelectableStep5x6Slot},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),_src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/index.js"),_helpers__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/helpers/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Additional Examples/Timeslots",component:_src__WEBPACK_IMPORTED_MODULE_3__.Vv,decorators:[function(Story){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Story,{})})}]};var Template=function Template(args){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_helpers__WEBPACK_IMPORTED_MODULE_4__.Vv,Object.assign({},args))};Template.displayName="Template";var SelectableStep15x4Slot=Template.bind({});SelectableStep15x4Slot.storyName="selectable, step 15, 4 timeslots",SelectableStep15x4Slot.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK,defaultDate:new Date,selectable:!0,timeslots:4,step:15,events:_helpers__WEBPACK_IMPORTED_MODULE_4__.AZ,onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event selected"),onSelectSlot:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("slot selected")};var SelectableStep10x6Slot=Template.bind({});SelectableStep10x6Slot.storyName="selectable, step 10, 6 timeslots",SelectableStep10x6Slot.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK,defaultDate:new Date,selectable:!0,timeslots:6,step:10,events:_helpers__WEBPACK_IMPORTED_MODULE_4__.AZ,onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event selected"),onSelectSlot:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("slot selected")};var SelectableStep5x6Slot=Template.bind({});SelectableStep5x6Slot.storyName="selectable, step 5, 6 timeslots",SelectableStep5x6Slot.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK,defaultDate:new Date,selectable:!0,timeslots:6,step:5,events:_helpers__WEBPACK_IMPORTED_MODULE_4__.AZ,onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event selected"),onSelectSlot:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("slot selected")};var Selectable3Slot=Template.bind({});Selectable3Slot.storyName="selectable, 3 timeslots",Selectable3Slot.args={defaultView:_helpers__WEBPACK_IMPORTED_MODULE_4__.Pp.WEEK,defaultDate:new Date,selectable:!0,timeslots:3,events:_helpers__WEBPACK_IMPORTED_MODULE_4__.AZ,onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("event selected"),onSelectSlot:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("slot selected")},SelectableStep15x4Slot.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},SelectableStep15x4Slot.parameters),SelectableStep10x6Slot.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},SelectableStep10x6Slot.parameters),SelectableStep5x6Slot.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},SelectableStep5x6Slot.parameters),Selectable3Slot.parameters=Object.assign({storySource:{source:"(args) => <BaseCalendar {...args} />"}},Selectable3Slot.parameters);var __namedExportsOrder=["SelectableStep15x4Slot","SelectableStep10x6Slot","SelectableStep5x6Slot","Selectable3Slot"]},"./stories/addons/dragAndDrop/basic.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example1:function(){return Example1},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return basic_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),events=(__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./stories/resources/events.js")),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),dragAndDrop=__webpack_require__("./src/addons/dragAndDrop/index.js"),jsx_runtime=(__webpack_require__("./src/addons/dragAndDrop/styles.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js")),DragAndDropCalendar=(0,dragAndDrop.A)(src.Vv);function DragAndDrop(_ref){var localizer=_ref.localizer,_useState=(0,react.useState)(events.A),_useState2=(0,slicedToArray.A)(_useState,2),myEvents=_useState2[0],setMyEvents=_useState2[1],moveEvent=(0,react.useCallback)((function(_ref2){var event=_ref2.event,start=_ref2.start,end=_ref2.end,_ref2$isAllDay=_ref2.isAllDay,droppedOnAllDaySlot=void 0!==_ref2$isAllDay&&_ref2$isAllDay,allDay=event.allDay;!allDay&&droppedOnAllDaySlot&&(event.allDay=!0),allDay&&!droppedOnAllDaySlot&&(event.allDay=!1),setMyEvents((function(prev){var _prev$find,existing=null!==(_prev$find=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find?_prev$find:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,toConsumableArray.A)(filtered),[Object.assign({},existing,{start:start,end:end,allDay:event.allDay})])}))}),[setMyEvents]),resizeEvent=(0,react.useCallback)((function(_ref3){var event=_ref3.event,start=_ref3.start,end=_ref3.end;setMyEvents((function(prev){var _prev$find2,existing=null!==(_prev$find2=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find2?_prev$find2:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,toConsumableArray.A)(filtered),[Object.assign({},existing,{start:start,end:end})])}))}),[setMyEvents]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,12)}),[]);return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"dnd",children:(0,jsx_runtime.jsx)("strong",{children:'Drag and Drop an "event" from one slot to another to "move" the event, or drag an event\'s drag handles to "resize" the event.'})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(DragAndDropCalendar,{defaultDate:defaultDate,defaultView:src.Pp.MONTH,events:myEvents,localizer:localizer,onEventDrop:moveEvent,onEventResize:resizeEvent,popup:!0,resizable:!0})})]})}DragAndDrop.displayName="DragAndDrop",DragAndDrop.__docgenInfo={description:"",methods:[],displayName:"DragAndDrop",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/dnd.js"]={name:"DragAndDrop",docgenInfo:DragAndDrop.__docgenInfo,path:"stories/demos/exampleCode/dnd.js"});var basic_stories={title:"Addons/Drag and Drop",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example1=function Example1(){return(0,jsx_runtime.jsx)(DragAndDrop,{localizer:localizer})};Example1.displayName="Example1",Example1.storyName="Basic Drag n Drop",Example1.parameters=Object.assign({storySource:{source:"function Example1() {\n  return <Basic localizer={localizer} />\n}"}},Example1.parameters);var __namedExportsOrder=["Example1"];Example1.__docgenInfo={description:"",methods:[],displayName:"Example1"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/basic.stories.js"]={name:"Example1",docgenInfo:Example1.__docgenInfo,path:"stories/addons/dragAndDrop/basic.stories.js"})},"./stories/addons/dragAndDrop/outside.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example3:function(){return Example3},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__),_src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/index.js"),_demos_exampleCode_dndOutsideSource__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Addons/Drag and Drop",component:_src__WEBPACK_IMPORTED_MODULE_3__.Vv,parameters:{docs:{page:null}}};var localizer=(0,_src__WEBPACK_IMPORTED_MODULE_3__.ye)(moment__WEBPACK_IMPORTED_MODULE_2___default()),Example3=function Example3(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_demos_exampleCode_dndOutsideSource__WEBPACK_IMPORTED_MODULE_4__.A,{localizer:localizer})};Example3.displayName="Example3",Example3.storyName="Drag and Drop (from outside calendar)",Example3.parameters=Object.assign({storySource:{source:"function Example3() {\n  return <Basic localizer={localizer} />\n}"}},Example3.parameters);var __namedExportsOrder=["Example3"];Example3.__docgenInfo={description:"",methods:[],displayName:"Example3"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/outside.stories.js"]={name:"Example3",docgenInfo:Example3.__docgenInfo,path:"stories/addons/dragAndDrop/outside.stories.js"})},"./stories/addons/dragAndDrop/props/dragFromOutsideItem.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DragFromOutsideItem:function(){return DragFromOutsideItem},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return dragFromOutsideItem_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),dndOutsideSource=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"dragfromoutsideitem"},"dragFromOutsideItem"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function () => boolean"))),(0,esm.yg)("p",null,"A callback to get a temporary ",(0,esm.yg)("inlineCode",{parentName:"p"},"event")," to display in a slot in the process of dragging from outside. This is not required for Drag and Drop to function, but provides a nice visual cue to the user when dragging in an item from outside of the Calendar."),(0,esm.yg)("p",null,"Tip: Toggle the checkbox, in the example, and drag an outside item in. Do this from both checkbox states to see the difference in effect."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--drag-from-outside-item",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),dragFromOutsideItem_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),DragFromOutsideItem=function DragFromOutsideItem(){return(0,jsx_runtime.jsx)(dndOutsideSource.A,{localizer:localizer})};DragFromOutsideItem.displayName="DragFromOutsideItem",DragFromOutsideItem.storyName="dragFromOutsideItem",DragFromOutsideItem.parameters=Object.assign({storySource:{source:"function DragFromOutsideItem() {\n  return <Basic localizer={localizer} />\n}"}},DragFromOutsideItem.parameters);var __namedExportsOrder=["DragFromOutsideItem"];DragFromOutsideItem.__docgenInfo={description:"",methods:[],displayName:"DragFromOutsideItem"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/dragFromOutsideItem.stories.js"]={name:"DragFromOutsideItem",docgenInfo:DragFromOutsideItem.__docgenInfo,path:"stories/addons/dragAndDrop/props/dragFromOutsideItem.stories.js"})},"./stories/addons/dragAndDrop/props/draggableAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DraggableAccessor:function(){return DraggableAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return draggableAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),dndOutsideSource=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"draggableaccessor"},"draggableAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string|function (event) => boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"() => true"))),(0,esm.yg)("p",null,"When used, can determine whether an 'event' is draggable"),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--draggable-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),draggableAccessor_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),DraggableAccessor=function DraggableAccessor(){return(0,jsx_runtime.jsx)(dndOutsideSource.A,{localizer:localizer})};DraggableAccessor.displayName="DraggableAccessor",DraggableAccessor.storyName="draggableAccessor",DraggableAccessor.parameters=Object.assign({storySource:{source:"function DraggableAccessor() {\n  return <Basic localizer={localizer} />\n}"}},DraggableAccessor.parameters);var __namedExportsOrder=["DraggableAccessor"];DraggableAccessor.__docgenInfo={description:"",methods:[],displayName:"DraggableAccessor"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/draggableAccessor.stories.js"]={name:"DraggableAccessor",docgenInfo:DraggableAccessor.__docgenInfo,path:"stories/addons/dragAndDrop/props/draggableAccessor.stories.js"})},"./stories/addons/dragAndDrop/props/onDragOver.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnDragOver:function(){return OnDragOver},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onDragOver_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),dndOutsideSource=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"ondragover"},"onDragOver"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (dragEvent: SyntheticEvent) => any"))),(0,esm.yg)("p",null,"If an ",(0,esm.yg)("inlineCode",{parentName:"p"},"onDragOver")," callback ",(0,esm.yg)("em",{parentName:"p"},"is")," passed, then it can discriminate as to whether a draggable item is droppable on the calendar. To designate a draggable item as droppable, call ",(0,esm.yg)("inlineCode",{parentName:"p"},"event.preventDefault")," inside ",(0,esm.yg)("inlineCode",{parentName:"p"},"onDragOver"),". If ",(0,esm.yg)("inlineCode",{parentName:"p"},"event.preventDefault")," is not called in the ",(0,esm.yg)("inlineCode",{parentName:"p"},"onDragOver")," callback, then the draggable item will not be droppable on the calendar."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--on-drag-over",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),onDragOver_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),OnDragOver=function OnDragOver(){return(0,jsx_runtime.jsx)(dndOutsideSource.A,{localizer:localizer})};OnDragOver.displayName="OnDragOver",OnDragOver.storyName="onDragOver",OnDragOver.parameters=Object.assign({storySource:{source:"function OnDragOver() {\n  return <Basic localizer={localizer} />\n}"}},OnDragOver.parameters);var __namedExportsOrder=["OnDragOver"];OnDragOver.__docgenInfo={description:"",methods:[],displayName:"OnDragOver"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/onDragOver.stories.js"]={name:"OnDragOver",docgenInfo:OnDragOver.__docgenInfo,path:"stories/addons/dragAndDrop/props/onDragOver.stories.js"})},"./stories/addons/dragAndDrop/props/onDragStart.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnDragStart:function(){return OnDragStart},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onDragStart_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),dndOutsideSource=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"ondragstart"},"onDragStart"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function ({ event, action, direction }) => any"))),(0,esm.yg)("p",null,"A callback fired when user begins to drag an event."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--on-drag-start",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),onDragStart_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),OnDragStart=function OnDragStart(){return(0,jsx_runtime.jsx)(dndOutsideSource.A,{localizer:localizer})};OnDragStart.displayName="OnDragStart",OnDragStart.storyName="onDragStart",OnDragStart.parameters=Object.assign({storySource:{source:"function OnDragStart() {\n  return <Basic localizer={localizer} />\n}"}},OnDragStart.parameters);var __namedExportsOrder=["OnDragStart"];OnDragStart.__docgenInfo={description:"",methods:[],displayName:"OnDragStart"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/onDragStart.stories.js"]={name:"OnDragStart",docgenInfo:OnDragStart.__docgenInfo,path:"stories/addons/dragAndDrop/props/onDragStart.stories.js"})},"./stories/addons/dragAndDrop/props/onDropFromOutside.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnDropFromOutside:function(){return OnDropFromOutside},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onDropFromOutside_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),dndOutsideSource=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"ondropfromoutside"},"onDropFromOutside"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function ({ start, end, allDay, resource }) => any"))),(0,esm.yg)("p",null,"A callback fired when user drops an item onto the Calendar from outside of the Calendar. Developers will typically use this method to add new items to the Calendar's ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events"),"."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Important:")," The callback does ",(0,esm.yg)("strong",{parentName:"p"},"not")," receive the element being dropped. It only receives the details of the slot an element was dropped on."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--on-drop-from-outside",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),onDropFromOutside_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),OnDropFromOutside=function OnDropFromOutside(){return(0,jsx_runtime.jsx)(dndOutsideSource.A,{localizer:localizer})};OnDropFromOutside.displayName="OnDropFromOutside",OnDropFromOutside.storyName="onDropFromOutside",OnDropFromOutside.parameters=Object.assign({storySource:{source:"function OnDropFromOutside() {\n  return <Basic localizer={localizer} />\n}"}},OnDropFromOutside.parameters);var __namedExportsOrder=["OnDropFromOutside"];OnDropFromOutside.__docgenInfo={description:"",methods:[],displayName:"OnDropFromOutside"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/onDropFromOutside.stories.js"]={name:"OnDropFromOutside",docgenInfo:OnDropFromOutside.__docgenInfo,path:"stories/addons/dragAndDrop/props/onDropFromOutside.stories.js"})},"./stories/addons/dragAndDrop/props/onEventDrop.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnEventDrop:function(){return OnEventDrop},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onEventDrop_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),dndOutsideSource=__webpack_require__("./stories/demos/exampleCode/dndOutsideSource.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"oneventdrop"},"onEventDrop"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function ({ event, start, end, allDay }) => any"))),(0,esm.yg)("p",null,"A callback fired when user drops an item from one slot to another from within the Calendar. Developers will typically use this method to update an item's ",(0,esm.yg)("inlineCode",{parentName:"p"},"start")," and ",(0,esm.yg)("inlineCode",{parentName:"p"},"end")," in ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events"),"."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--on-event-drop",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),onEventDrop_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),OnEventDrop=function OnEventDrop(){return(0,jsx_runtime.jsx)(dndOutsideSource.A,{localizer:localizer})};OnEventDrop.displayName="OnEventDrop",OnEventDrop.storyName="onEventDrop",OnEventDrop.parameters=Object.assign({storySource:{source:"function OnEventDrop() {\n  return <Basic localizer={localizer} />\n}"}},OnEventDrop.parameters);var __namedExportsOrder=["OnEventDrop"];OnEventDrop.__docgenInfo={description:"",methods:[],displayName:"OnEventDrop"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/onEventDrop.stories.js"]={name:"OnEventDrop",docgenInfo:OnEventDrop.__docgenInfo,path:"stories/addons/dragAndDrop/props/onEventDrop.stories.js"})},"./stories/addons/dragAndDrop/props/onEventResize.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnEventResize:function(){return OnEventResize},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onEventResize_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),resizable=__webpack_require__("./stories/demos/exampleCode/resizable.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"oneventresize"},"onEventResize"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function ({ event, start, end }) => any"))),(0,esm.yg)("p",null,"A callback fired when user resizes an event. Developers will typically use this method to update an item's ",(0,esm.yg)("inlineCode",{parentName:"p"},"start")," and ",(0,esm.yg)("inlineCode",{parentName:"p"},"end")," in ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events"),"."),(0,esm.yg)("p",null,"The ",(0,esm.yg)(addon_links_react.A,{kind:"addons-drag-and-drop-props",story:"resizable",mdxType:"LinkTo"},"resizable")," prop must be ",(0,esm.yg)("inlineCode",{parentName:"p"},"true")," (the default) to use the method."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note:")," ",(0,esm.yg)("inlineCode",{parentName:"p"},"resizable")," events must also be draggable. You cannot resize an event with a ",(0,esm.yg)(addon_links_react.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"draggableAccessor")," prop of ",(0,esm.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--on-event-resize",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),onEventResize_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),OnEventResize=function OnEventResize(){return(0,jsx_runtime.jsx)(resizable.A,{localizer:localizer})};OnEventResize.displayName="OnEventResize",OnEventResize.storyName="onEventResize",OnEventResize.parameters=Object.assign({storySource:{source:"function OnEventResize() {\n  return <Basic localizer={localizer} />\n}"}},OnEventResize.parameters);var __namedExportsOrder=["OnEventResize"];OnEventResize.__docgenInfo={description:"",methods:[],displayName:"OnEventResize"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/onEventResize.stories.js"]={name:"OnEventResize",docgenInfo:OnEventResize.__docgenInfo,path:"stories/addons/dragAndDrop/props/onEventResize.stories.js"})},"./stories/addons/dragAndDrop/props/resizable.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Resizable:function(){return Resizable},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resizable_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),resizable=__webpack_require__("./stories/demos/exampleCode/resizable.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"resizable"},"resizable"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"true"))),(0,esm.yg)("p",null,"Determines if events may be resized on the Calendar. Used in conjunction with ",(0,esm.yg)(addon_links_react.A,{kind:"addons-drag-and-drop-props",story:"on-event-resize",mdxType:"LinkTo"},"onEventResize"),". When used with the ",(0,esm.yg)(addon_links_react.A,{kind:"addons-drag-and-drop-props",story:"resizable-accessor",mdxType:"LinkTo"},"resizableAccessor")," the developer has even greater control."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note:")," ",(0,esm.yg)("inlineCode",{parentName:"p"},"resizable")," events must also be draggable. You cannot resize an event with a ",(0,esm.yg)(addon_links_react.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"draggableAccessor")," prop of ",(0,esm.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--resizable",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),resizable_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),Resizable=function Resizable(){return(0,jsx_runtime.jsx)(resizable.A,{localizer:localizer})};Resizable.displayName="Resizable",Resizable.storyName="resizable",Resizable.parameters=Object.assign({storySource:{source:"function Resizable() {\n  return <Basic localizer={localizer} />\n}"}},Resizable.parameters);var __namedExportsOrder=["Resizable"];Resizable.__docgenInfo={description:"",methods:[],displayName:"Resizable"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/resizable.stories.js"]={name:"Resizable",docgenInfo:Resizable.__docgenInfo,path:"stories/addons/dragAndDrop/props/resizable.stories.js"})},"./stories/addons/dragAndDrop/props/resizableAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResizableAccessor:function(){return ResizableAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resizableAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),resizable=__webpack_require__("./stories/demos/exampleCode/resizable.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"resizableaccessor"},"resizableAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string|function (event) => boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"() => true"))),(0,esm.yg)("p",null,"Determines if an event is resizable."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note:")," ",(0,esm.yg)("inlineCode",{parentName:"p"},"resizable")," events must also be draggable. You cannot resize an event with a ",(0,esm.yg)(addon_links_react.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"draggableAccessor")," prop of ",(0,esm.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,esm.yg)(dist_esm.gG,{id:"addons-drag-and-drop-props--resizable",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),resizableAccessor_stories={title:"Addons/Drag and Drop/props",component:src.Vv,parameters:{docs:{page:MDXContent}}},localizer=(0,src.ye)(moment_default()),ResizableAccessor=function ResizableAccessor(){return(0,jsx_runtime.jsx)(resizable.A,{localizer:localizer})};ResizableAccessor.displayName="ResizableAccessor",ResizableAccessor.storyName="resizableAccessor",ResizableAccessor.parameters=Object.assign({storySource:{source:"function ResizableAccessor() {\n  return <Basic localizer={localizer} />\n}"}},ResizableAccessor.parameters);var __namedExportsOrder=["ResizableAccessor"];ResizableAccessor.__docgenInfo={description:"",methods:[],displayName:"ResizableAccessor"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/props/resizableAccessor.stories.js"]={name:"ResizableAccessor",docgenInfo:ResizableAccessor.__docgenInfo,path:"stories/addons/dragAndDrop/props/resizableAccessor.stories.js"})},"./stories/addons/dragAndDrop/resource.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example2:function(){return Example2},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resource_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),DemoLink_component=(__webpack_require__("./node_modules/core-js/modules/es.set.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./stories/DemoLink.component.js")),dragAndDrop=__webpack_require__("./src/addons/dragAndDrop/index.js"),jsx_runtime=(__webpack_require__("./src/addons/dragAndDrop/styles.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js")),DragAndDropCalendar=(0,dragAndDrop.A)(src.Vv),events=[{id:0,title:"Board meeting",start:new Date(2018,0,29,9,0,0),end:new Date(2018,0,29,13,0,0),resourceId:[1,2]},{id:1,title:"MS training",start:new Date(2018,0,29,14,0,0),end:new Date(2018,0,29,16,30,0),resourceId:2},{id:2,title:"Team lead meeting",start:new Date(2018,0,29,8,30,0),end:new Date(2018,0,29,12,30,0),resourceId:3},{id:10,title:"Board meeting",start:new Date(2018,0,30,23,0,0),end:new Date(2018,0,30,23,59,0),resourceId:1},{id:11,title:"Birthday Party",start:new Date(2018,0,30,7,0,0),end:new Date(2018,0,30,10,30,0),resourceId:4},{id:12,title:"Board meeting",start:new Date(2018,0,29,23,59,0),end:new Date(2018,0,30,13,0,0),resourceId:1},{id:13,title:"Board meeting",start:new Date(2018,0,29,23,50,0),end:new Date(2018,0,30,13,0,0),resourceId:2},{id:14,title:"Board meeting",start:new Date(2018,0,29,23,40,0),end:new Date(2018,0,30,13,0,0),resourceId:4}],resourceMap=[{resourceId:1,resourceTitle:"Board room"},{resourceId:2,resourceTitle:"Training room"},{resourceId:3,resourceTitle:"Meeting room 1"},{resourceId:4,resourceTitle:"Meeting room 2"}];function DnDResource(_ref){var localizer=_ref.localizer,_useState=(0,react.useState)(events),_useState2=(0,slicedToArray.A)(_useState,2),myEvents=_useState2[0],setMyEvents=_useState2[1],_useState3=(0,react.useState)(!0),_useState4=(0,slicedToArray.A)(_useState3,2),copyEvent=_useState4[0],setCopyEvent=_useState4[1],toggleCopyEvent=(0,react.useCallback)((function(){return setCopyEvent((function(val){return!val}))}),[]),moveEvent=(0,react.useCallback)((function(_ref2){var event=_ref2.event,start=_ref2.start,end=_ref2.end,resourceId=_ref2.resourceId,_ref2$isAllDay=_ref2.isAllDay,droppedOnAllDaySlot=void 0!==_ref2$isAllDay&&_ref2$isAllDay,allDay=event.allDay;if(!allDay&&droppedOnAllDaySlot&&(event.allDay=!0),Array.isArray(event.resourceId))if(copyEvent)resourceId=(0,toConsumableArray.A)(new Set([].concat((0,toConsumableArray.A)(event.resourceId),[resourceId])));else{var filtered=event.resourceId.filter((function(ev){return ev!==event.sourceResource}));resourceId=(0,toConsumableArray.A)(new Set([].concat((0,toConsumableArray.A)(filtered),[resourceId])))}else copyEvent&&(resourceId=(0,toConsumableArray.A)(new Set([event.resourceId,resourceId])));setMyEvents((function(prev){var _prev$find,existing=null!==(_prev$find=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find?_prev$find:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,toConsumableArray.A)(filtered),[Object.assign({},existing,{start:start,end:end,resourceId:resourceId,allDay:allDay})])}))}),[setMyEvents,copyEvent]),resizeEvent=(0,react.useCallback)((function(_ref3){var event=_ref3.event,start=_ref3.start,end=_ref3.end;setMyEvents((function(prev){var _prev$find2,existing=null!==(_prev$find2=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find2?_prev$find2:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,toConsumableArray.A)(filtered),[Object.assign({},existing,{start:start,end:end})])}))}),[setMyEvents]),_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2018,0,29),scrollToTime:new Date(1972,0,1,8)}}),[]),defaultDate=_useMemo.defaultDate,scrollToTime=_useMemo.scrollToTime;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsxs)(DemoLink_component.A,{fileName:"dndresource",children:[(0,jsx_runtime.jsx)("strong",{children:'Drag and Drop an "event" from one resource slot to another.'}),(0,jsx_runtime.jsx)("div",{style:{margin:"10px 0 20px 0"},children:(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",checked:copyEvent,onChange:toggleCopyEvent}),'Keep copy of dragged "source" event in its original resource slot.']})})]}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(DragAndDropCalendar,{defaultDate:defaultDate,defaultView:src.Pp.DAY,events:myEvents,localizer:localizer,onEventDrop:moveEvent,onEventResize:resizeEvent,resizable:!0,resourceIdAccessor:"resourceId",resources:resourceMap,resourceTitleAccessor:"resourceTitle",scrollToTime:scrollToTime,selectable:!0,showMultiDayTimes:!0,step:15})})]})}DnDResource.displayName="DnDResource",DnDResource.__docgenInfo={description:"",methods:[],displayName:"DnDResource",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/dndresource.js"]={name:"DnDResource",docgenInfo:DnDResource.__docgenInfo,path:"stories/demos/exampleCode/dndresource.js"});var resource_stories={title:"Addons/Drag and Drop",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example2=function Example2(){return(0,jsx_runtime.jsx)(DnDResource,{localizer:localizer})};Example2.displayName="Example2",Example2.storyName="Resource Drag and Drop",Example2.parameters=Object.assign({storySource:{source:"function Example2() {\n  return <DnDResource localizer={localizer} />\n}"}},Example2.parameters);var __namedExportsOrder=["Example2"];Example2.__docgenInfo={description:"",methods:[],displayName:"Example2"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/addons/dragAndDrop/resource.stories.js"]={name:"Example2",docgenInfo:Example2.__docgenInfo,path:"stories/addons/dragAndDrop/resource.stories.js"})},"./stories/demos/backgroundEvents.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example10:function(){return Example10},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return backgroundEvents_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),DemoLink_component=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./stories/DemoLink.component.js")),events=__webpack_require__("./stories/resources/events.js"),backgroundEvents=[{id:0,title:"Available for Clients",start:new Date(2015,3,13,6),end:new Date(2015,3,13,18)}],dates=__webpack_require__("./src/utils/dates.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),allViews=Object.keys(src.Pp).map((function(k){return src.Pp[k]}));function BackgroundEventsCalendar(_ref){var localizer=_ref.localizer,_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),max:dates.WQ(dates.pJ(new Date(2015,17,1),"day"),-1,"hours")}}),[]),defaultDate=_useMemo.defaultDate,max=_useMemo.max;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"backgroundEvents"}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{backgroundEvents:backgroundEvents,dayLayoutAlgorithm:"no-overlap",defaultDate:defaultDate,defaultView:src.Pp.DAY,events:events.A,localizer:localizer,max:max,showMultiDayTimes:!0,step:60,views:allViews})})]})}BackgroundEventsCalendar.displayName="BackgroundEventsCalendar",BackgroundEventsCalendar.__docgenInfo={description:"",methods:[],displayName:"BackgroundEventsCalendar",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/backgroundEvents.js"]={name:"BackgroundEventsCalendar",docgenInfo:BackgroundEventsCalendar.__docgenInfo,path:"stories/demos/exampleCode/backgroundEvents.js"});var backgroundEvents_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example10=function Example10(){return(0,jsx_runtime.jsx)(BackgroundEventsCalendar,{localizer:localizer})};Example10.displayName="Example10",Example10.storyName="Background Events",Example10.parameters=Object.assign({storySource:{source:"function Example10() {\n  return <BackgroundCalendar localizer={localizer} />\n}"}},Example10.parameters);var __namedExportsOrder=["Example10"];Example10.__docgenInfo={description:"",methods:[],displayName:"Example10"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/backgroundEvents.stories.js"]={name:"Example10",docgenInfo:Example10.__docgenInfo,path:"stories/demos/backgroundEvents.stories.js"})},"./stories/demos/basic.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example1:function(){return Example1},__namedExportsOrder:function(){return __namedExportsOrder}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__),_src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/index.js"),_exampleCode_basic__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/demos/exampleCode/basic.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={title:"Examples",component:_src__WEBPACK_IMPORTED_MODULE_3__.Vv,parameters:{docs:{page:null}}};var localizer=(0,_src__WEBPACK_IMPORTED_MODULE_3__.ye)(moment__WEBPACK_IMPORTED_MODULE_2___default()),Example1=function Example1(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_exampleCode_basic__WEBPACK_IMPORTED_MODULE_4__.A,{localizer:localizer})};Example1.displayName="Example1",Example1.storyName="Basic Demo",Example1.parameters=Object.assign({storySource:{source:"function Example1() {\n  return <Basic localizer={localizer} />\n}"}},Example1.parameters);var __namedExportsOrder=["Example1"];Example1.__docgenInfo={description:"",methods:[],displayName:"Example1"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/basic.stories.js"]={name:"Example1",docgenInfo:Example1.__docgenInfo,path:"stories/demos/basic.stories.js"})},"./stories/demos/cultures.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example5:function(){return Example5},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return cultures_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),DemoLink_component=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./stories/DemoLink.component.js")),events=__webpack_require__("./stories/resources/events.js"),Layout=__webpack_require__("./node_modules/react-tackle-box/Layout.js"),Layout_default=__webpack_require__.n(Layout),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_require__("./node_modules/globalize/lib/cultures/globalize.culture.en-GB.js"),__webpack_require__("./node_modules/globalize/lib/cultures/globalize.culture.es.js"),__webpack_require__("./node_modules/globalize/lib/cultures/globalize.culture.fr.js"),__webpack_require__("./node_modules/globalize/lib/cultures/globalize.culture.ar-AE.js");var cultures=["en","en-GB","es","fr","ar-AE"],lang={en:null,"en-GB":null,es:{week:"Semana",work_week:"Semana de trabajo",day:"Día",month:"Mes",previous:"Atrás",next:"Después",today:"Hoy",agenda:"El Diario",showMore:function showMore(total){return"+".concat(total," más")}},fr:{week:"La semaine",work_week:"Semaine de travail",day:"Jour",month:"Mois",previous:"Antérieur",next:"Prochain",today:"Aujourd'hui",agenda:"Ordre du jour",showMore:function showMore(total){return"+".concat(total," plus")}},"ar-AE":{week:"أسبوع",work_week:"أسبوع العمل",day:"يوم",month:"شهر",previous:"سابق",next:"التالي",today:"اليوم",agenda:"جدول أعمال",showMore:function showMore(total){return"+".concat(total," إضافي")}}};function CulturesDemo(_ref){var localizer=_ref.localizer,_useState=(0,react.useState)("fr"),_useState2=(0,slicedToArray.A)(_useState,2),culture=_useState2[0],setCulture=_useState2[1],_useState3=(0,react.useState)(!1),_useState4=(0,slicedToArray.A)(_useState3,2),rightToLeft=_useState4[0],setRightToLeft=_useState4[1],cultureOnClick=(0,react.useCallback)((function(_ref2){var value=_ref2.target.value;setCulture(value),setRightToLeft("ar-AE"===value)}),[setCulture]),_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),messages:lang[culture]}}),[culture]),defaultDate=_useMemo.defaultDate,messages=_useMemo.messages;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"cultures",children:(0,jsx_runtime.jsxs)(Layout_default(),{direction:"column",align:"center",children:[(0,jsx_runtime.jsx)("label",{children:"Select a Culture"})," ",(0,jsx_runtime.jsx)("select",{className:"form-control",style:{width:200,display:"inline-block"},defaultValue:"fr",onChange:cultureOnClick,children:cultures.map((function(c,idx){return(0,jsx_runtime.jsx)("option",{value:c,children:c},idx)}))})]})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{culture:culture,defaultDate:defaultDate,events:events.A,localizer:localizer,messages:messages,rtl:rightToLeft})})]})}CulturesDemo.displayName="CulturesDemo",CulturesDemo.__docgenInfo={description:"",methods:[],displayName:"CulturesDemo",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/cultures.js"]={name:"CulturesDemo",docgenInfo:CulturesDemo.__docgenInfo,path:"stories/demos/exampleCode/cultures.js"});var cultures_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example5=function Example5(){return(0,jsx_runtime.jsx)(CulturesDemo,{localizer:localizer})};Example5.displayName="Example5",Example5.storyName="Localization",Example5.parameters=Object.assign({storySource:{source:"function Example5() {\n  return <CultureDemo localizer={localizer} />\n}"}},Example5.parameters);var __namedExportsOrder=["Example5"];Example5.__docgenInfo={description:"",methods:[],displayName:"Example5"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/cultures.stories.js"]={name:"Example5",docgenInfo:Example5.__docgenInfo,path:"stories/demos/cultures.stories.js"})},"./stories/demos/customView.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example9:function(){return Example9},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return customView_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),date_arithmetic=__webpack_require__("./node_modules/date-arithmetic/index.js"),TimeGrid=__webpack_require__("./src/TimeGrid.js"),events=__webpack_require__("./stories/resources/events.js"),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["date","localizer","max","min","scrollToTime"];function MyWeek(_ref){var date=_ref.date,localizer=_ref.localizer,_ref$max=_ref.max,max=void 0===_ref$max?localizer.endOf(new Date,"day"):_ref$max,_ref$min=_ref.min,min=void 0===_ref$min?localizer.startOf(new Date,"day"):_ref$min,_ref$scrollToTime=_ref.scrollToTime,scrollToTime=void 0===_ref$scrollToTime?localizer.startOf(new Date,"day"):_ref$scrollToTime,props=(0,objectWithoutProperties.A)(_ref,_excluded),currRange=(0,react.useMemo)((function(){return MyWeek.range(date,{localizer:localizer})}),[date,localizer]);return(0,jsx_runtime.jsx)(TimeGrid.A,Object.assign({date:date,eventOffset:15,localizer:localizer,max:max,min:min,range:currRange,scrollToTime:scrollToTime},props))}function CustomView(_ref4){var localizer=_ref4.localizer,_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),views:{month:!0,week:MyWeek}}}),[]),defaultDate=_useMemo.defaultDate,views=_useMemo.views;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"customView",children:(0,jsx_runtime.jsx)("strong",{children:"The Calendar below implements a custom 3-day week view"})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,localizer:localizer,views:views})})]})}MyWeek.displayName="MyWeek",MyWeek.range=function(date,_ref2){for(var localizer=_ref2.localizer,start=date,end=date_arithmetic.add(start,2,"day"),current=start,range=[];localizer.lte(current,end,"day");)range.push(current),current=localizer.add(current,1,"day");return range},MyWeek.navigate=function(date,action,_ref3){var localizer=_ref3.localizer;switch(action){case src.C5.PREVIOUS:return localizer.add(date,-3,"day");case src.C5.NEXT:return localizer.add(date,3,"day");default:return date}},MyWeek.title=function(date){return"My awesome week: ".concat(date.toLocaleDateString())},CustomView.displayName="CustomView",CustomView.__docgenInfo={description:"",methods:[],displayName:"CustomView",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/customView.js"]={name:"CustomView",docgenInfo:CustomView.__docgenInfo,path:"stories/demos/exampleCode/customView.js"});var customView_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example9=function Example9(){return(0,jsx_runtime.jsx)(CustomView,{localizer:localizer})};Example9.displayName="Example9",Example9.storyName="Custom Calendar Views",Example9.parameters=Object.assign({storySource:{source:"function Example9() {\n  return <CustomView localizer={localizer} />\n}"}},Example9.parameters);var __namedExportsOrder=["Example9"];Example9.__docgenInfo={description:"",methods:[],displayName:"Example9"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/customView.stories.js"]={name:"Example9",docgenInfo:Example9.__docgenInfo,path:"stories/demos/customView.stories.js"})},"./stories/demos/dayjs.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DayjsLocalizer:function(){return DayjsLocalizer},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return dayjs_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),dayjs_min=__webpack_require__("./node_modules/dayjs/dayjs.min.js"),dayjs_min_default=__webpack_require__.n(dayjs_min),src=__webpack_require__("./src/index.js"),objectDestructuringEmpty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"),esm_extends=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),DemoLink_component=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./stories/DemoLink.component.js")),events=__webpack_require__("./stories/resources/events.js"),timezone=__webpack_require__("./node_modules/dayjs/plugin/timezone.js"),timezone_default=__webpack_require__.n(timezone),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");dayjs_min_default().extend(timezone_default());var djLocalizer=(0,src.vH)(dayjs_min_default()),ColoredDateCellWrapper=function ColoredDateCellWrapper(_ref){var children=_ref.children;return react.cloneElement(react.Children.only(children),{style:{backgroundColor:"lightblue"}})};function Dayjs(_ref2){var props=(0,esm_extends.A)({},((0,objectDestructuringEmpty.A)(_ref2),_ref2)),_useMemo=(0,react.useMemo)((function(){return{components:{timeSlotWrapper:ColoredDateCellWrapper},defaultDate:new Date(2015,3,1),max:dayjs_min_default()().endOf("day").subtract(1,"hours").toDate(),views:Object.keys(src.Pp).map((function(k){return src.Pp[k]}))}}),[]),components=_useMemo.components,defaultDate=_useMemo.defaultDate,max=_useMemo.max,views=_useMemo.views;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"dayjs"}),(0,jsx_runtime.jsx)("div",Object.assign({className:"height600"},props,{children:(0,jsx_runtime.jsx)(src.Vv,{components:components,defaultDate:defaultDate,events:events.A,localizer:djLocalizer,max:max,showMultiDayTimes:!0,step:60,views:views})}))]})}Dayjs.displayName="Dayjs",Dayjs.__docgenInfo={description:"",methods:[],displayName:"Dayjs"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/dayjs.js"]={name:"Dayjs",docgenInfo:Dayjs.__docgenInfo,path:"stories/demos/exampleCode/dayjs.js"});var dayjs_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.vH)(dayjs_min_default()),DayjsLocalizer=function DayjsLocalizer(){return(0,jsx_runtime.jsx)(Dayjs,{localizer:localizer})};DayjsLocalizer.displayName="DayjsLocalizer",DayjsLocalizer.parameters=Object.assign({storySource:{source:"function DayjsLocalizer() {\n  return <Dayjs localizer={localizer} />\n}"}},DayjsLocalizer.parameters);var __namedExportsOrder=["DayjsLocalizer"];DayjsLocalizer.__docgenInfo={description:"",methods:[],displayName:"DayjsLocalizer"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/dayjs.stories.js"]={name:"DayjsLocalizer",docgenInfo:DayjsLocalizer.__docgenInfo,path:"stories/demos/dayjs.stories.js"})},"./stories/demos/luxon.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LuxonLocalizer:function(){return LuxonLocalizer},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return luxon_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),luxon=__webpack_require__("./node_modules/luxon/src/luxon.js"),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),events=__webpack_require__("./stories/resources/events.js"),TimezoneSelect=__webpack_require__("./stories/demos/TimezoneSelect.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),defaultTZ=luxon.c9.local().zoneName;function Luxon(){var _useState=(0,react.useState)(defaultTZ),_useState2=(0,slicedToArray.A)(_useState,2),timezone=_useState2[0],setTimezone=_useState2[1],_useMemo=(0,react.useMemo)((function(){return luxon.wB.defaultZone=timezone,{defaultDate:(str="2015-04-13",DateTimeObj=luxon.c9,DateTimeObj.fromISO(str).toJSDate()),getNow:function getNow(){return luxon.c9.local().toJSDate()},localizer:(0,src.AW)(luxon.c9),myEvents:(0,toConsumableArray.A)(events.A),scrollToTime:luxon.c9.local().toJSDate()};var str,DateTimeObj}),[timezone]),defaultDate=_useMemo.defaultDate,getNow=_useMemo.getNow,localizer=_useMemo.localizer,myEvents=_useMemo.myEvents,scrollToTime=_useMemo.scrollToTime;return(0,react.useEffect)((function(){return function(){luxon.wB.defaultZone=defaultTZ}}),[]),(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"luxon",children:(0,jsx_runtime.jsx)(TimezoneSelect.A,{defaultTZ:defaultTZ,setTimezone:setTimezone,timezone:timezone,title:"This calendar uses the 'luxonLocalizer'"})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:myEvents,getNow:getNow,localizer:localizer,scrollToTime:scrollToTime})})]})}Luxon.displayName="Luxon",Luxon.__docgenInfo={description:"",methods:[],displayName:"Luxon"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/luxon.js"]={name:"Luxon",docgenInfo:Luxon.__docgenInfo,path:"stories/demos/exampleCode/luxon.js"});var luxon_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.AW)(luxon.c9),LuxonLocalizer=function LuxonLocalizer(){return(0,jsx_runtime.jsx)(Luxon,{localizer:localizer})};LuxonLocalizer.displayName="LuxonLocalizer",LuxonLocalizer.parameters=Object.assign({storySource:{source:"function LuxonLocalizer() {\n  return <Luxon localizer={localizer} />\n}"}},LuxonLocalizer.parameters);var __namedExportsOrder=["LuxonLocalizer"];LuxonLocalizer.__docgenInfo={description:"",methods:[],displayName:"LuxonLocalizer"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/luxon.stories.js"]={name:"LuxonLocalizer",docgenInfo:LuxonLocalizer.__docgenInfo,path:"stories/demos/luxon.stories.js"})},"./stories/demos/noOverlap.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example3:function(){return Example3},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return noOverlap_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),DemoLink_component=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./stories/DemoLink.component.js")),events=__webpack_require__("./stories/resources/events.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function CreateEventWithNoOverlap(_ref){var localizer=_ref.localizer,_ref$dayLayoutAlgorit=_ref.dayLayoutAlgorithm,dayLayoutAlgorithm=void 0===_ref$dayLayoutAlgorit?"no-overlap":_ref$dayLayoutAlgorit,_useState=(0,react.useState)(events.A),_useState2=(0,slicedToArray.A)(_useState,2),myEvents=_useState2[0],setEvents=_useState2[1],handleSelectSlot=(0,react.useCallback)((function(_ref2){var start=_ref2.start,end=_ref2.end,title=window.prompt("New Event Name");title&&setEvents((function(prev){return[].concat((0,toConsumableArray.A)(prev),[{start:start,end:end,title:title}])}))}),[setEvents]),handleSelectEvent=(0,react.useCallback)((function(event){return window.alert(event.title)}),[]),_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,12),scrollToTime:new Date(1970,1,1,6)}}),[]),defaultDate=_useMemo.defaultDate,scrollToTime=_useMemo.scrollToTime;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"createEventWithNoOverlap",children:(0,jsx_runtime.jsxs)("strong",{children:["Click an event to see more info, or drag the mouse over the calendar to select a date/time range.",(0,jsx_runtime.jsx)("br",{}),"The events are being arranged by `no-overlap` algorithm."]})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{dayLayoutAlgorithm:dayLayoutAlgorithm,defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:myEvents,localizer:localizer,onSelectEvent:handleSelectEvent,onSelectSlot:handleSelectSlot,selectable:!0,scrollToTime:scrollToTime})})]})}CreateEventWithNoOverlap.displayName="CreateEventWithNoOverlap",CreateEventWithNoOverlap.__docgenInfo={description:"",methods:[],displayName:"CreateEventWithNoOverlap",props:{dayLayoutAlgorithm:{defaultValue:{value:"'no-overlap'",computed:!1},description:"",type:{name:"string"},required:!1},localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/createEventWithNoOverlap.js"]={name:"CreateEventWithNoOverlap",docgenInfo:CreateEventWithNoOverlap.__docgenInfo,path:"stories/demos/exampleCode/createEventWithNoOverlap.js"});var noOverlap_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example3=function Example3(){return(0,jsx_runtime.jsx)(CreateEventWithNoOverlap,{localizer:localizer})};Example3.displayName="Example3",Example3.storyName="Create events with no-overlap algorithm",Example3.parameters=Object.assign({storySource:{source:"function Example3() {\n  return <CreateEventWithNoOverlap localizer={localizer} />\n}"}},Example3.parameters);var __namedExportsOrder=["Example3"];Example3.__docgenInfo={description:"",methods:[],displayName:"Example3"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/noOverlap.stories.js"]={name:"Example3",docgenInfo:Example3.__docgenInfo,path:"stories/demos/noOverlap.stories.js"})},"./stories/demos/popup.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example6:function(){return Example6},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return popup_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),events=__webpack_require__("./stories/resources/events.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Popup(_ref){var localizer=_ref.localizer,defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"popup",children:(0,jsx_runtime.jsx)("strong",{children:'Click the "+{x} more" link on any calendar day that cannot fit all the days events to see an inline popup of all the events.'})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:localizer,popup:!0})})]})}Popup.displayName="Popup",Popup.__docgenInfo={description:"",methods:[],displayName:"Popup",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/popup.js"]={name:"Popup",docgenInfo:Popup.__docgenInfo,path:"stories/demos/exampleCode/popup.js"});var popup_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example6=function Example6(){return(0,jsx_runtime.jsx)(Popup,{localizer:localizer})};Example6.displayName="Example6",Example6.storyName="Show more via a popup",Example6.parameters=Object.assign({storySource:{source:"function Example6() {\n  return <PopupDemo localizer={localizer} />\n}"}},Example6.parameters);var __namedExportsOrder=["Example6"];Example6.__docgenInfo={description:"",methods:[],displayName:"Example6"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/popup.stories.js"]={name:"Example6",docgenInfo:Example6.__docgenInfo,path:"stories/demos/popup.stories.js"})},"./stories/demos/rendering.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example8:function(){return Example8},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return rendering_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),events=__webpack_require__("./stories/resources/events.js"),rendering_module=__webpack_require__("./stories/demos/exampleCode/rendering.module.scss"),rendering_module_default=__webpack_require__.n(rendering_module),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Event(_ref){var event=_ref.event;return(0,jsx_runtime.jsxs)("span",{children:[(0,jsx_runtime.jsx)("strong",{children:event.title}),event.desc&&":  "+event.desc]})}function EventAgenda(_ref2){var event=_ref2.event;return(0,jsx_runtime.jsxs)("span",{children:[(0,jsx_runtime.jsx)("em",{style:{color:"magenta"},children:event.title}),(0,jsx_runtime.jsx)("p",{children:event.desc})]})}Event.displayName="Event",EventAgenda.displayName="EventAgenda";var customDayPropGetter=function customDayPropGetter(date){return 7===date.getDate()||15===date.getDate()?{className:rendering_module_default().specialDay,style:{border:"solid 3px "+(7===date.getDate()?"#faa":"#afa")}}:{}},customSlotPropGetter=function customSlotPropGetter(date){return 7===date.getDate()||15===date.getDate()?{className:rendering_module_default().specialDay}:{}};function Rendering(_ref3){var localizer=_ref3.localizer,_useMemo=(0,react.useMemo)((function(){return{components:{agenda:{event:EventAgenda},event:Event},defaultDate:new Date(2015,3,7)}}),[]),components=_useMemo.components,defaultDate=_useMemo.defaultDate;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"rendering"}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{components:components,dayPropGetter:customDayPropGetter,defaultDate:defaultDate,defaultView:src.Pp.AGENDA,events:events.A,localizer:localizer,slotPropGetter:customSlotPropGetter})})]})}Rendering.displayName="Rendering",Rendering.__docgenInfo={description:"",methods:[],displayName:"Rendering",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/rendering.js"]={name:"Rendering",docgenInfo:Rendering.__docgenInfo,path:"stories/demos/exampleCode/rendering.js"});var rendering_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example8=function Example8(){return(0,jsx_runtime.jsx)(Rendering,{localizer:localizer})};Example8.displayName="Example8",Example8.storyName="Customized Component Rendering",Example8.parameters=Object.assign({storySource:{source:"function Example8() {\n  return <Rendering localizer={localizer} />\n}"}},Example8.parameters);var __namedExportsOrder=["Example8"];Example8.__docgenInfo={description:"",methods:[],displayName:"Example8"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/rendering.stories.js"]={name:"Example8",docgenInfo:Example8.__docgenInfo,path:"stories/demos/rendering.stories.js"})},"./stories/demos/resource.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example11:function(){return Example11},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resource_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),addon_links_react=(__webpack_require__("./node_modules/core-js/modules/es.array.flat-map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.unscopables.flat-map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/@storybook/addon-links/react.js")),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),dragAndDrop=__webpack_require__("./src/addons/dragAndDrop/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),DragAndDropCalendar=(0,dragAndDrop.A)(src.Vv),resources=[{resourceId:1,resourceTitle:"Board room"},{resourceId:2,resourceTitle:"Training room"},{resourceId:3,resourceTitle:"Meeting room 1"},{resourceId:4,resourceTitle:"Meeting room 2"}],eventId=0,events=Array.from({length:20},(function(_,k){return k})).flatMap((function(i){var currentResource=resources[i%resources.length],dayDiff=i%7;return Array.from({length:5},(function(_,j){return{id:eventId++,title:"Event ".concat(i+j," _ ").concat(currentResource.resourceTitle),start:new Date(2018,0,29+dayDiff,9+j%4,0,0),end:new Date(2018,0,29+dayDiff,11+j%4,0,0),resourceId:currentResource.resourceId}}))}));function Resource(_ref){var localizer=_ref.localizer,_useState=(0,react.useState)(!1),_useState2=(0,slicedToArray.A)(_useState,2),groupResourcesOnWeek=_useState2[0],setGroupResourcesOnWeek=_useState2[1],_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2018,0,29),views:["day","work_week"]}}),[]),defaultDate=_useMemo.defaultDate,views=_useMemo.views,_useState3=(0,react.useState)(events),_useState4=(0,slicedToArray.A)(_useState3,2),myEvents=_useState4[0],setEvents=_useState4[1],handleSelectSlot=(0,react.useCallback)((function(_ref2){var start=_ref2.start,end=_ref2.end,resourceId=_ref2.resourceId,title=window.prompt("New Event Name");title&&setEvents((function(prev){return[].concat((0,toConsumableArray.A)(prev),[{start:start,end:end,title:title,resourceId:resourceId}])}))}),[setEvents]),handleSelectEvent=(0,react.useCallback)((function(event){return window.alert(event.title)}),[]),moveEvent=(0,react.useCallback)((function(_ref3){var event=_ref3.event,start=_ref3.start,end=_ref3.end,resourceId=_ref3.resourceId,_ref3$isAllDay=_ref3.isAllDay,droppedOnAllDaySlot=void 0!==_ref3$isAllDay&&_ref3$isAllDay,allDay=event.allDay;!allDay&&droppedOnAllDaySlot&&(event.allDay=!0),setEvents((function(prev){var _prev$find,existing=null!==(_prev$find=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find?_prev$find:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,toConsumableArray.A)(filtered),[Object.assign({},existing,{start:start,end:end,resourceId:resourceId,allDay:allDay})])}))}),[setEvents]),resizeEvent=(0,react.useCallback)((function(_ref4){var event=_ref4.event,start=_ref4.start,end=_ref4.end;setEvents((function(prev){var _prev$find2,existing=null!==(_prev$find2=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find2?_prev$find2:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,toConsumableArray.A)(filtered),[Object.assign({},existing,{start:start,end:end})])}))}),[setEvents]);return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"resource"}),(0,jsx_runtime.jsxs)("strong",{children:["The calendar below uses the"," ",(0,jsx_runtime.jsx)(addon_links_react.A,{kind:"props",story:"resource-id-accessor",children:"resourceIdAccessor"}),","," ",(0,jsx_runtime.jsx)(addon_links_react.A,{kind:"props",story:"resource-title-accessor",children:"resourceTitleAccessor"})," ","and"," ",(0,jsx_runtime.jsx)(addon_links_react.A,{kind:"props",story:"resources",children:"resources"})," ","props to show events scheduled for different resources.",(0,jsx_runtime.jsx)("br",{}),"Events can be mapped to a single resource, or multiple resources."]}),(0,jsx_runtime.jsx)("div",{style:{margin:"10px 0 20px 0"},children:(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",checked:groupResourcesOnWeek,onChange:function onChange(){return setGroupResourcesOnWeek(!groupResourcesOnWeek)}}),"Group resources on week view."]})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(DragAndDropCalendar,{selectable:!0,defaultDate:defaultDate,defaultView:src.Pp.DAY,events:myEvents,localizer:localizer,resources:resources,resourceIdAccessor:"resourceId",resourceTitleAccessor:"resourceTitle",onSelectSlot:handleSelectSlot,onSelectEvent:handleSelectEvent,onEventDrop:moveEvent,onEventResize:resizeEvent,step:60,views:views,resourceGroupingLayout:groupResourcesOnWeek})})]})}Resource.displayName="Resource",Resource.__docgenInfo={description:"",methods:[],displayName:"Resource",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/resource.js"]={name:"Resource",docgenInfo:Resource.__docgenInfo,path:"stories/demos/exampleCode/resource.js"});var resource_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example11=function Example11(){return(0,jsx_runtime.jsx)(Resource,{localizer:localizer})};Example11.displayName="Example11",Example11.storyName="Resource Scheduling",Example11.parameters=Object.assign({storySource:{source:"function Example11() {\n  return <Resource localizer={localizer} />\n}"}},Example11.parameters);var __namedExportsOrder=["Example11"];Example11.__docgenInfo={description:"",methods:[],displayName:"Example11"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/resource.stories.js"]={name:"Example11",docgenInfo:Example11.__docgenInfo,path:"stories/demos/resource.stories.js"})},"./stories/demos/selectable.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example2:function(){return Example2},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return selectable_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),DemoLink_component=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./stories/DemoLink.component.js")),events=__webpack_require__("./stories/resources/events.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Selectable(_ref){var localizer=_ref.localizer,_useState=(0,react.useState)(events.A),_useState2=(0,slicedToArray.A)(_useState,2),myEvents=_useState2[0],setEvents=_useState2[1],handleSelectSlot=(0,react.useCallback)((function(_ref2){var start=_ref2.start,end=_ref2.end,title=window.prompt("New Event name");title&&setEvents((function(prev){return[].concat((0,toConsumableArray.A)(prev),[{start:start,end:end,title:title}])}))}),[setEvents]),handleSelectEvent=(0,react.useCallback)((function(event){return window.alert(event.title)}),[]),_useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,12),scrollToTime:new Date(1970,1,1,6)}}),[]),defaultDate=_useMemo.defaultDate,scrollToTime=_useMemo.scrollToTime;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"selectable",children:(0,jsx_runtime.jsx)("strong",{children:"Click an event to see more info, or drag the mouse over the calendar to select a date/time range."})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:myEvents,localizer:localizer,onSelectEvent:handleSelectEvent,onSelectSlot:handleSelectSlot,selectable:!0,scrollToTime:scrollToTime})})]})}Selectable.displayName="Selectable",Selectable.__docgenInfo={description:"",methods:[],displayName:"Selectable",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/selectable.js"]={name:"Selectable",docgenInfo:Selectable.__docgenInfo,path:"stories/demos/exampleCode/selectable.js"});var selectable_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example2=function Example2(){return(0,jsx_runtime.jsx)(Selectable,{localizer:localizer})};Example2.displayName="Example2",Example2.storyName="Create Events",Example2.parameters=Object.assign({storySource:{source:"function Example2() {\n  return <Selectable localizer={localizer} />\n}"}},Example2.parameters);var __namedExportsOrder=["Example2"];Example2.__docgenInfo={description:"",methods:[],displayName:"Example2"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/selectable.stories.js"]={name:"Example2",docgenInfo:Example2.__docgenInfo,path:"stories/demos/selectable.stories.js"})},"./stories/demos/timeslots.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example7:function(){return Example7},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return timeslots_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),DemoLink_component=__webpack_require__("./stories/DemoLink.component.js"),events=__webpack_require__("./stories/resources/events.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Timeslots(_ref){var localizer=_ref.localizer,defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,12)}),[]);return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"timeslots"}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,localizer:localizer,step:15,timeslots:8})})]})}Timeslots.displayName="Timeslots",Timeslots.__docgenInfo={description:"",methods:[],displayName:"Timeslots",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/timeslots.js"]={name:"Timeslots",docgenInfo:Timeslots.__docgenInfo,path:"stories/demos/exampleCode/timeslots.js"});var timeslots_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},localizer=(0,src.ye)(moment_default()),Example7=function Example7(){return(0,jsx_runtime.jsx)(Timeslots,{localizer:localizer})};Example7.displayName="Example7",Example7.storyName="Timeslots",Example7.parameters=Object.assign({storySource:{source:"function Example7() {\n  return <Timeslots localizer={localizer} />\n}"}},Example7.parameters);var __namedExportsOrder=["Example7"];Example7.__docgenInfo={description:"",methods:[],displayName:"Example7"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/timeslots.stories.js"]={name:"Example7",docgenInfo:Example7.__docgenInfo,path:"stories/demos/timeslots.stories.js"})},"./stories/demos/timezones.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example4:function(){return Example4},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return timezones_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./src/index.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),DemoLink_component=(__webpack_require__("./node_modules/moment-timezone/index.js"),__webpack_require__("./stories/DemoLink.component.js")),events=__webpack_require__("./stories/resources/events.js"),TimezoneSelect=__webpack_require__("./stories/demos/TimezoneSelect.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),defaultTZ=moment_default().tz.guess();function Timezones(){var _useState=(0,react.useState)(defaultTZ),_useState2=(0,slicedToArray.A)(_useState,2),timezone=_useState2[0],setTimezone=_useState2[1],_useMemo=(0,react.useMemo)((function(){return moment_default().tz.setDefault(timezone),{defaultDate:(str="2015-4-13",momentObj=moment_default(),momentObj(str,"YYYY-MM-DD").toDate()),getNow:function getNow(){return moment_default()().toDate()},localizer:(0,src.ye)(moment_default()),myEvents:(0,toConsumableArray.A)(events.A),scrollToTime:moment_default()().toDate()};var str,momentObj}),[timezone]),defaultDate=_useMemo.defaultDate,getNow=_useMemo.getNow,localizer=_useMemo.localizer,myEvents=_useMemo.myEvents,scrollToTime=_useMemo.scrollToTime;return(0,react.useEffect)((function(){return function(){moment_default().tz.setDefault()}}),[]),(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(DemoLink_component.A,{fileName:"timezones",children:(0,jsx_runtime.jsx)(TimezoneSelect.A,{defaultTZ:defaultTZ,setTimezone:setTimezone,timezone:timezone})}),(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:myEvents,getNow:getNow,localizer:localizer,scrollToTime:scrollToTime})})]})}Timezones.displayName="Timezones",Timezones.__docgenInfo={description:"",methods:[],displayName:"Timezones"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/timezones.js"]={name:"Timezones",docgenInfo:Timezones.__docgenInfo,path:"stories/demos/exampleCode/timezones.js"});var timezones_stories={title:"Examples",component:src.Vv,parameters:{docs:{page:null}}},Example4=function Example4(){return(0,jsx_runtime.jsx)(Timezones,{})};Example4.displayName="Example4",Example4.storyName="Timezones",Example4.parameters=Object.assign({storySource:{source:"function Example4() {\n  return <TimezoneCalendar />\n}"}},Example4.parameters);var __namedExportsOrder=["Example4"];Example4.__docgenInfo={description:"",methods:[],displayName:"Example4"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/timezones.stories.js"]={name:"Example4",docgenInfo:Example4.__docgenInfo,path:"stories/demos/timezones.stories.js"})},"./stories/props/allDayAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllDayAccessor:function(){return AllDayAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return allDayAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"alldayaccessor"},"allDayAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: 'allDay'")),(0,esm.yg)("p",null,'Determines whether the event should be considered an "all day" event and ignore time. Must resolve to a ',(0,esm.yg)("inlineCode",{parentName:"p"},"boolean")," value."),(0,esm.yg)(dist_esm.gG,{id:"props--all-day-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),allDayAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var AllDayAccessor=Template.bind({});AllDayAccessor.storyName="allDayAccessor",AllDayAccessor.args=storyDefaults.o,AllDayAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},AllDayAccessor.parameters);var __namedExportsOrder=["AllDayAccessor"]},"./stories/props/allDayMaxRows.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllDayMaxRows:function(){return AllDayMaxRows},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return allDayMaxRows_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),allDayEvents=[{id:0,title:"All Day Event very long title",allDay:!0,start:new Date(2015,3,0),end:new Date(2015,3,1)},{id:1,title:"#2 All Day Event very long title",allDay:!0,start:new Date(2015,3,0),end:new Date(2015,3,2)},{id:2,title:"#3 All Day Event very long title",allDay:!0,start:new Date(2015,3,0),end:new Date(2015,3,1)},{id:3,title:"#4 All Day Event",allDay:!0,start:new Date(2015,3,0),end:new Date(2015,3,1)},{id:4,title:"#5 All Day Event",allDay:!0,start:new Date(2015,3,0),end:new Date(2015,3,1)},{id:5,title:"#6 All Day Event",allDay:!0,start:new Date(2015,3,7),end:new Date(2015,3,7)}],esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"alldaymaxrows"},"allDayMaxRows"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"number")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Infinity"))),(0,esm.yg)("p",null,"Determines a maximum amount of rows of events to display in the all day section for Week and Day views, will display ",(0,esm.yg)("inlineCode",{parentName:"p"},"showMore")," button if events excede this number."),(0,esm.yg)(dist_esm.gG,{id:"props--all-day-max-rows",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),allDayMaxRows_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var AllDayMaxRows=Template.bind({});AllDayMaxRows.storyName="allDayMaxRows",AllDayMaxRows.args={defaultDate:new Date(2015,3,1),defaultView:src.Pp.WEEK,events:allDayEvents,localizer:mLocalizer,allDayMaxRows:2,popup:!0},AllDayMaxRows.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},AllDayMaxRows.parameters);var __namedExportsOrder=["AllDayMaxRows"]},"./stories/props/backgroundEvents.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BackGroundEvents:function(){return BackGroundEvents},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return backgroundEvents_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),helpers=__webpack_require__("./stories/helpers/index.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"backgroundevents"},"backgroundEvents"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"arrayOf(BackgroundEvent)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"[]"))),(0,esm.yg)("p",null,"An array of background event objects to display on the calendar. Background\nEvents behave similarly to Events but are not factored into Event overlap logic,\nallowing them to sit behind any Events that may occur during the same period.\nBackground Events objects can be any shape, as long as the Calendar knows how to\nretrieve the following details of the event:"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"start time"),(0,esm.yg)("li",{parentName:"ul"},"end time")),(0,esm.yg)("p",null,'Each of these properties can be customized or generated dynamically by\nsetting the various "accessor" props. Without any configuration the default\nevent should look like:'),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"BackgroundEvent {\n  start: Date,\n  end: Date,\n}\n")),(0,esm.yg)(dist_esm.gG,{id:"props--back-ground-events",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),backgroundEvents_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultView:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var BackGroundEvents=Template.bind({});BackGroundEvents.storyName="backgroundEvents",BackGroundEvents.args={backgroundEvents:helpers.Mf,defaultView:src.Pp.WEEK,events:helpers.AZ,localizer:mLocalizer},BackGroundEvents.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},BackGroundEvents.parameters);var __namedExportsOrder=["BackGroundEvents"]},"./stories/props/components.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Components:function(){return Components},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return components_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"components"},"components"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"object"))),(0,esm.yg)("p",null,"Customize how different sections of the calendar render by providing custom Components. In particular the Event component can be specified for the entire calendar, or you can provide an individual component for each view type."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-jsx"},"const components = useMemo(() => ({\n  event: MyEvent, // used by each view (Month, Day, Week)\n  eventWrapper: MyEventWrapper,\n  eventContainerWrapper: MyEventContainerWrapper,\n  dateCellWrapper: MyDateCellWrapper,\n  dayColumnWrapper: MyDayColumnWrapper,\n  timeSlotWrapper: MyTimeSlotWrapper,\n  timeGutterHeader: MyTimeGutterWrapper,\n  resourceHeader: MyResourceHeader,\n  toolbar: MyToolbar,\n  showMore: MyShowMoreButton,\n  agenda: {\n    event: MyAgendaEvent, // with the agenda view use a different component to render events\n    time: MyAgendaTime,\n    date: MyAgendaDate,\n  },\n  day: {\n    header: MyDayHeader,\n    event: MyDayEvent,\n  },\n  week: {\n    header: MyWeekHeader,\n    event: MyWeekEvent,\n  },\n  month: {\n    header: MyMonthHeader,\n    dateHeader: MyMonthDateHeader,\n    event: MyMonthEvent,\n  }\n}), [])\n<Calendar components={components} />\n")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--components",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;__webpack_require__("./node_modules/core-js/modules/es.array.map.js");var clsx_m=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function ViewNamesGroup(_ref){var viewNames=_ref.views,view=_ref.view,messages=_ref.messages,onView=_ref.onView;return viewNames.map((function(name){return(0,jsx_runtime.jsx)("button",{type:"button",className:(0,clsx_m.A)({"rbc-active":view===name}),onClick:function onClick(){return onView(name)},children:messages[name]},name)}))}function CustomToolbar(_ref2){var label=_ref2.label,messages=_ref2.localizer.messages,onNavigate=_ref2.onNavigate,onView=_ref2.onView,view=_ref2.view,views=_ref2.views;return(0,jsx_runtime.jsxs)("div",{className:"rbc-toolbar",children:[(0,jsx_runtime.jsx)("span",{className:"rbc-btn-group",children:(0,jsx_runtime.jsx)(ViewNamesGroup,{view:view,views:views,messages:messages,onView:onView})}),(0,jsx_runtime.jsx)("span",{className:"rbc-toolbar-label",children:label}),(0,jsx_runtime.jsxs)("span",{className:(0,clsx_m.A)("rbc-btn-group","examples--custom-toolbar"),children:[(0,jsx_runtime.jsx)("button",{type:"button",onClick:function onClick(){return onNavigate(src.C5.PREVIOUS)},"aria-label":messages.previous,children:"<"}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:function onClick(){return onNavigate(src.C5.TODAY)},"aria-label":messages.today,children:"•"}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:function onClick(){return onNavigate(src.C5.NEXT)},"aria-label":messages.next,children:">"})]})]})}CustomToolbar.displayName="CustomToolbar",CustomToolbar.__docgenInfo={description:"",methods:[],displayName:"CustomToolbar",props:{date:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},label:{description:"",type:{name:"string"},required:!1},localizer:{description:"",type:{name:"object"},required:!1},messages:{description:"",type:{name:"object"},required:!1},onNavigate:{description:"",type:{name:"func"},required:!1},onView:{description:"",type:{name:"func"},required:!1},view:{description:"",type:{name:"string"},required:!1},views:{description:"",type:{name:"array"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/customComponents/CustomToolbar.component.js"]={name:"CustomToolbar",docgenInfo:CustomToolbar.__docgenInfo,path:"stories/props/customComponents/CustomToolbar.component.js"});__webpack_require__("./stories/resources/customToolbar.scss");var mLocalizer=(0,src.ye)(moment_default()),components_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},Components=function Components(){var _useMemo=(0,react.useMemo)((function(){return{components:{toolbar:CustomToolbar},defaultDate:new Date(2015,3,13)}}),[]),components=_useMemo.components,defaultDate=_useMemo.defaultDate;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,components:components})})};Components.displayName="Components",Components.storyName="components",Components.parameters=Object.assign({storySource:{source:'function Components() {\n  const { components, defaultDate } = useMemo(\n    () => ({\n      components: {\n        toolbar: CustomToolbar,\n      },\n      defaultDate: new Date(2015, 3, 13),\n    }),\n    []\n  )\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        components={components}\n      />\n    </div>\n  )\n}'}},Components.parameters);var __namedExportsOrder=["Components"];Components.__docgenInfo={description:"",methods:[],displayName:"Components"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/components.stories.js"]={name:"Components",docgenInfo:Components.__docgenInfo,path:"stories/props/components.stories.js"})},"./stories/props/culture.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Culture:function(){return Culture},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return culture_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"culture"},"culture"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"none (browser default)"))),(0,esm.yg)("p",null,"Specify a specific culture code for the Calendar. The ",(0,esm.yg)("inlineCode",{parentName:"p"},"culture")," is used by ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"formats",mdxType:"LinkTo"},"formats")," with your ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"localizer")," to 'format' date/time information on the Calendar. To localize messaging, use the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"messages",mdxType:"LinkTo"},"messages")," prop."),(0,esm.yg)("p",null,"See the ",(0,esm.yg)(addon_links_react.A,{kind:"examples",story:"example-5",mdxType:"LinkTo"},"Localization Example")," for another example of combining ",(0,esm.yg)("inlineCode",{parentName:"p"},"rtl"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"localizer"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"culture")," and ",(0,esm.yg)("inlineCode",{parentName:"p"},"messages"),"."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note: it's generally better to handle this globally via your i18n library.")),(0,esm.yg)(dist_esm.gG,{id:"props--culture",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),culture_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}},events:{control:{type:null}},culture:{options:["es","fr","en-us","en-gb"],control:{type:"select"}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Culture=Template.bind({});Culture.storyName="culture",Culture.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,culture:"es"},Culture.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Culture.parameters);var __namedExportsOrder=["Culture"]},"./stories/props/date.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CalDate:function(){return CalDate},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return date_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"date"},"date"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"new Date()")),(0,esm.yg)("li",{parentName:"ul"},"controlled by: ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-navigate",mdxType:"LinkTo"},"onNavigate"))),(0,esm.yg)("p",null,"The current date value of the calendar. Determines the visible view range.\nIf ",(0,esm.yg)("inlineCode",{parentName:"p"},"date")," is omitted then the result of ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"get-now",mdxType:"LinkTo"},"getNow")," is used; otherwise the\ncurrent date is used."),(0,esm.yg)("p",null,"This is a controllable prop, when using ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-navigate",mdxType:"LinkTo"},"onNavigate")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--cal-date",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),date_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},CalDate=function CalDate(){var _useState=(0,react.useState)(new Date(2015,3,1)),_useState2=(0,slicedToArray.A)(_useState,2),date=_useState2[0],setDate=_useState2[1],onNavigate=(0,react.useCallback)((function(newDate){return setDate(newDate)}),[setDate]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{date:date,events:events.A,localizer:mLocalizer,onNavigate:onNavigate})})};CalDate.displayName="CalDate",CalDate.storyName="date",CalDate.parameters=Object.assign({storySource:{source:'function CalDate() {\n  const [date, setDate] = useState(new Date(2015, 3, 1))\n\n  const onNavigate = useCallback((newDate) => setDate(newDate), [setDate])\n\n  return (\n    <div className="height600">\n      <Calendar\n        date={date}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onNavigate={onNavigate}\n      />\n    </div>\n  )\n}'}},CalDate.parameters);var __namedExportsOrder=["CalDate"];CalDate.__docgenInfo={description:"",methods:[],displayName:"CalDate"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/date.stories.js"]={name:"CalDate",docgenInfo:CalDate.__docgenInfo,path:"stories/props/date.stories.js"})},"./stories/props/dayLayoutAlgorithm.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DayLayoutAlgorithm:function(){return DayLayoutAlgorithm},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return dayLayoutAlgorithm_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"daylayoutalgorithm"},"dayLayoutAlgorithm"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | Function(events, minimumStartDifference, slotMetrics, accessors)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"overlap"))),(0,esm.yg)("p",null,"A day event layout(arrangement) algorithm."),(0,esm.yg)("p",null,(0,esm.yg)("inlineCode",{parentName:"p"},"overlap")," allows events to be overlapped."),(0,esm.yg)("p",null,(0,esm.yg)("inlineCode",{parentName:"p"},"no-overlap")," resizes events to avoid overlap."),(0,esm.yg)("p",null,"or custom ",(0,esm.yg)("inlineCode",{parentName:"p"},"Function(events, minimumStartDifference, slotMetrics, accessors)")),(0,esm.yg)(dist_esm.gG,{id:"props--day-layout-algorithm",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),dayLayoutAlgorithm_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},events:{control:{type:null}},dayLayoutAlgorithm:{options:["overlap","no-overlap"],control:{type:"select"}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var DayLayoutAlgorithm=Template.bind({});DayLayoutAlgorithm.storyName="dayLayoutAlgorithm",DayLayoutAlgorithm.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,dayLayoutAlgorithm:"no-overlap"},DayLayoutAlgorithm.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},DayLayoutAlgorithm.parameters);var __namedExportsOrder=["DayLayoutAlgorithm"]},"./stories/props/dayPropGetter.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DayPropGetter:function(){return DayPropGetter},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return dayPropGetter_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"daypropgetter"},"dayPropGetter"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, resourceId?: Any) => {className?: string, style?: Object}"))),(0,esm.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the the day background."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Caution!")," Styles that change layout or position may break the calendar in unexpected ways."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--day-prop-getter",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;__webpack_require__("./stories/resources/propGetter.scss");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),dayPropGetter_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},DayPropGetter=function DayPropGetter(){var dayPropGetter=(0,react.useCallback)((function(date){return Object.assign({},2===moment_default()(date).day()&&{className:"tuesday"},4===moment_default()(date).day()&&{style:{backgroundColor:"darkgreen",color:"white"}})}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,13)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,dayPropGetter:dayPropGetter,events:events.A,localizer:mLocalizer})})};DayPropGetter.displayName="DayPropGetter",DayPropGetter.storyName="dayPropGetter",DayPropGetter.parameters=Object.assign({storySource:{source:"function DayPropGetter() {\n  const dayPropGetter = useCallback(\n    (date) => ({\n      ...(moment(date).day() === 2 && {\n        className: 'tuesday',\n      }),\n      ...(moment(date).day() === 4 && {\n        style: {\n          backgroundColor: 'darkgreen',\n          color: 'white',\n        },\n      }),\n    }),\n    []\n  )\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 13), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        dayPropGetter={dayPropGetter}\n        events={demoEvents}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},DayPropGetter.parameters);var __namedExportsOrder=["DayPropGetter"];DayPropGetter.__docgenInfo={description:"",methods:[],displayName:"DayPropGetter"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/dayPropGetter.stories.js"]={name:"DayPropGetter",docgenInfo:DayPropGetter.__docgenInfo,path:"stories/props/dayPropGetter.stories.js"})},"./stories/props/defaultDate.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultDate:function(){return DefaultDate},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return defaultDate_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"defaultdate"},"defaultDate"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"new Date()"))),(0,esm.yg)("p",null,"Sets the initial ",(0,esm.yg)("inlineCode",{parentName:"p"},"date")," value in your calendar when you don't want it to be 'today', when not using ",(0,esm.yg)("inlineCode",{parentName:"p"},"getNow"),", or controlling ",(0,esm.yg)("inlineCode",{parentName:"p"},"date"),"."),(0,esm.yg)(dist_esm.gG,{id:"props--default-date",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),defaultDate_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultView:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var DefaultDate=Template.bind({});DefaultDate.storyName="defaultDate",DefaultDate.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.DAY,events:events.A,localizer:mLocalizer},DefaultDate.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},DefaultDate.parameters);var __namedExportsOrder=["DefaultDate"]},"./stories/props/defaultView.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultView:function(){return DefaultView},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return defaultView_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"defaultview"},"defaultView"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Views.MONTH (month|week|work_week|day|agenda)"))),(0,esm.yg)("p",null,"The initial ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")," set for your calendar when you don't want it to be the default ('month')."),(0,esm.yg)(dist_esm.gG,{id:"props--default-view",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),defaultView_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var DefaultView=Template.bind({});DefaultView.storyName="defaultView",DefaultView.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.DAY,events:events.A,localizer:mLocalizer},DefaultView.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},DefaultView.parameters);var __namedExportsOrder=["DefaultView"]},"./stories/props/drilldownView.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DrilldownView:function(){return DrilldownView},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return drilldownView_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"drilldownview"},"drilldownView"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Views.DAY"))),(0,esm.yg)("p",null,"The string name of the destination ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")," for drill-down actions, such as clicking a date header, or the truncated events links. If ",(0,esm.yg)("inlineCode",{parentName:"p"},"getDrilldownView")," is also specified it will be used instead."),(0,esm.yg)("p",null,"Set to ",(0,esm.yg)("inlineCode",{parentName:"p"},"null")," to disable drill-down actions."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},'<Calendar drilldownView="agenda" />\n')),(0,esm.yg)(dist_esm.gG,{id:"props--drilldown-view",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),drilldownView_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},drilldownView:{control:{type:"select",options:["day","agenda"],defaultValue:src.Pp.DAY}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var DrilldownView=Template.bind({});DrilldownView.storyName="drilldownView",DrilldownView.args={defaultDate:new Date(2015,3,1),drilldownView:src.Pp.AGENDA,events:events.A,localizer:mLocalizer},DrilldownView.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},DrilldownView.parameters);var __namedExportsOrder=["DrilldownView"]},"./stories/props/elementProps.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ElementProps:function(){return ElementProps},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return elementProps_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"elementprops"},"elementProps"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"object"))),(0,esm.yg)("p",null,"Props passed to main calendar ",(0,esm.yg)("inlineCode",{parentName:"p"},"<div>"),"."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note:")," Will not pass down ",(0,esm.yg)("inlineCode",{parentName:"p"},"className"),"."),(0,esm.yg)(dist_esm.gG,{id:"props--element-props",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;__webpack_require__("./stories/resources/propGetter.scss");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),elementProps_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var ElementProps=Template.bind({});ElementProps.storyName="elementProps",ElementProps.args={defaultDate:new Date(2015,3,13),elementProps:{id:"my_scheduler"},events:events.A,localizer:mLocalizer},ElementProps.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ElementProps.parameters);var __namedExportsOrder=["ElementProps"]},"./stories/props/endAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EndAccessor:function(){return EndAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return endAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"endaccessor"},"endAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => Date")),(0,esm.yg)("li",{parentName:"ul"},"default: 'end'")),(0,esm.yg)("p",null,"The end date/time of the event. Must resolve to a JavaScript ",(0,esm.yg)("inlineCode",{parentName:"p"},"Date")," object."),(0,esm.yg)(dist_esm.gG,{id:"props--end-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),endAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var EndAccessor=Template.bind({});EndAccessor.storyName="endAccessor",EndAccessor.args=storyDefaults.o,EndAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},EndAccessor.parameters);var __namedExportsOrder=["EndAccessor"]},"./stories/props/eventIdAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EventIdAccessor:function(){return EventIdAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return eventIdAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"eventidaccessor"},"eventIdAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | number | function (event: Object) => string | number")),(0,esm.yg)("li",{parentName:"ul"},"default: 'id'")),(0,esm.yg)("p",null,"The id of the event. Must resolve to a string or number. Used as the key for the event in the DOM. If not provided, the event will be given a key of 'evt","_","{index}'."),(0,esm.yg)(dist_esm.gG,{id:"props--event-id-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),eventIdAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var EventIdAccessor=Template.bind({});EventIdAccessor.storyName="eventIdAccessor",EventIdAccessor.args=storyDefaults.o,EventIdAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},EventIdAccessor.parameters);var __namedExportsOrder=["EventIdAccessor"]},"./stories/props/eventPropGetter.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EventPropGetter:function(){return EventPropGetter},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return eventPropGetter_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"eventpropgetter"},"eventPropGetter"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (event: Object, start: Date, end: Date, isSelected: boolean) => {className?: string, style?: Object}"))),(0,esm.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the the event node."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--event-prop-getter",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;__webpack_require__("./stories/resources/propGetter.scss");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),eventPropGetter_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},EventPropGetter=function EventPropGetter(){var eventPropGetter=(0,react.useCallback)((function(event,start,end,isSelected){return Object.assign({},isSelected&&{style:{backgroundColor:"#000"}},moment_default()(start).hour()<12&&{className:"powderBlue"},event.title.includes("Meeting")&&{className:"darkGreen"})}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,eventPropGetter:eventPropGetter,events:events.A,localizer:mLocalizer})})};EventPropGetter.displayName="EventPropGetter",EventPropGetter.storyName="eventPropGetter",EventPropGetter.parameters=Object.assign({storySource:{source:"function EventPropGetter() {\n  const eventPropGetter = useCallback(\n    (event, start, end, isSelected) => ({\n      ...(isSelected && {\n        style: {\n          backgroundColor: '#000',\n        },\n      }),\n      ...(moment(start).hour() < 12 && {\n        className: 'powderBlue',\n      }),\n      ...(event.title.includes('Meeting') && {\n        className: 'darkGreen',\n      }),\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={new Date(2015, 3, 13)}\n        defaultView={Views.WEEK}\n        eventPropGetter={eventPropGetter}\n        events={demoEvents}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},EventPropGetter.parameters);var __namedExportsOrder=["EventPropGetter"];EventPropGetter.__docgenInfo={description:"",methods:[],displayName:"EventPropGetter"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/eventPropGetter.stories.js"]={name:"EventPropGetter",docgenInfo:EventPropGetter.__docgenInfo,path:"stories/props/eventPropGetter.stories.js"})},"./stories/props/events.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Events:function(){return Events},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return events_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"events"},"events"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"arrayOf(Event)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"[]"))),(0,esm.yg)("p",null,"An array of event objects to display on the calendar. Events objects\ncan be any shape, as long as the Calendar knows how to retrieve the\nfollowing details of the event:"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"start time"),(0,esm.yg)("li",{parentName:"ul"},"end time"),(0,esm.yg)("li",{parentName:"ul"},"title"),(0,esm.yg)("li",{parentName:"ul"},'whether its an "all day" event or not'),(0,esm.yg)("li",{parentName:"ul"},"any resource the event may be related to")),(0,esm.yg)("p",null,'Each of these properties can be customized or generated dynamically by\nsetting the various "accessor" props. Without any configuration the default\nevent should look like:'),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"Event {\n  title: string,\n  start: Date,\n  end: Date,\n  allDay?: boolean\n  resource?: any,\n}\n")),(0,esm.yg)(dist_esm.gG,{id:"props--events",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),events_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Events=Template.bind({});Events.storyName="events",Events.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer},Events.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Events.parameters);var __namedExportsOrder=["Events"]},"./stories/props/formats.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Formats:function(){return Formats},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formats_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formats"},"formats"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Object"))),(0,esm.yg)(addon_links_react.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"Localizer")," specific formats, tell the Calendar how to format and display dates and times.",(0,esm.yg)("p",null,"The ",(0,esm.yg)("inlineCode",{parentName:"p"},"format")," types are dependent on the configured localizer; both Moment and Globalize accept strings of tokens according to their own specification, such as: ",(0,esm.yg)("inlineCode",{parentName:"p"},"'DD mm yyyy'"),"."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"const formats = useMemo(() => ({\n  dateFormat: 'dd',\n\n  dayFormat: (date, , localizer) =>\n    localizer.format(date, 'DDD', culture),\n\n  dayRangeHeaderFormat: ({ start, end }, culture, localizer) =>\n    localizer.format(start, { date: 'short' }, culture) + ' — ' +\n    localizer.format(end, { date: 'short' }, culture)\n}), [])\n\n<Calendar formats={formats} />\n")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formats_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},Formats=function Formats(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),formats:{dateFormat:"D",weekdayFormat:function weekdayFormat(date,culture,localizer){return localizer.format(date,"dddd",culture)},dayFormat:function dayFormat(date,culture,localizer){return localizer.format(date,"dddd Do",culture)},timeGutterFormat:function timeGutterFormat(date,culture,localizer){return localizer.format(date,"hh:mm a",culture)}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,formats:formats,localizer:mLocalizer})})};Formats.displayName="Formats",Formats.storyName="formats",Formats.parameters=Object.assign({storySource:{source:"function Formats() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 1),\n      formats: {\n        // the 'date' on each day cell of the 'month' view\n        dateFormat: 'D',\n        // the day of the week header in the 'month' view\n        weekdayFormat: (date, culture, localizer) =>\n          localizer.format(date, 'dddd', culture),\n        // the day header in the 'week' and 'day' (Time Grid) views\n        dayFormat: (date, culture, localizer) =>\n          localizer.format(date, 'dddd Do', culture),\n        // the time in the gutter in the Time Grid views\n        timeGutterFormat: (date, culture, localizer) =>\n          localizer.format(date, 'hh:mm a', culture),\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},Formats.parameters);var __namedExportsOrder=["Formats"];Formats.__docgenInfo={description:"",methods:[],displayName:"Formats"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formats.stories.js"]={name:"Formats",docgenInfo:Formats.__docgenInfo,path:"stories/props/formats.stories.js"})},"./stories/props/formatsAgendaDateFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsAgendDateFormat:function(){return FormatsAgendDateFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsAgendaDateFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsagendadateformat"},"formats.agendaDateFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,"Dates displayed in the gutter of the Agenda ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-agenda-date-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsAgendaDateFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsAgendDateFormat=function FormatsAgendDateFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{agendaDateFormat:function agendaDateFormat(date,culture,localizer){return localizer.format(date,"dddd MMMM Do",culture)}},views:[src.Pp.WEEK,src.Pp.DAY,src.Pp.AGENDA]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.AGENDA,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsAgendDateFormat.displayName="FormatsAgendDateFormat",FormatsAgendDateFormat.storyName="formats.agendaDateFormat",FormatsAgendDateFormat.parameters=Object.assign({storySource:{source:"function FormatsAgendDateFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        agendaDateFormat: (date, culture, localizer) =>\n          localizer.format(date, 'dddd MMMM Do', culture),\n      },\n      views: [Views.WEEK, Views.DAY, Views.AGENDA],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.AGENDA}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsAgendDateFormat.parameters);var __namedExportsOrder=["FormatsAgendDateFormat"];FormatsAgendDateFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsAgendDateFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsAgendaDateFormat.stories.js"]={name:"FormatsAgendDateFormat",docgenInfo:FormatsAgendDateFormat.__docgenInfo,path:"stories/props/formatsAgendaDateFormat.stories.js"})},"./stories/props/formatsAgendaHeaderFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsAgendHeaderFormat:function(){return FormatsAgendHeaderFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsAgendaHeaderFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsagendaheaderformat"},"formats.agendaHeaderFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'Toolbar header format for the Agenda view, e.g. "4/1/2015 — 5/1/2015"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-agenda-header-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsAgendaHeaderFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsAgendHeaderFormat=function FormatsAgendHeaderFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{agendaHeaderFormat:function agendaHeaderFormat(_ref,culture,localizer){var start=_ref.start,end=_ref.end;return localizer.format(start,"dddd MMMM Do, YYYY",culture)+" - "+localizer.format(end,"dddd MMMM Do, YYYY",culture)}},views:[src.Pp.WEEK,src.Pp.DAY,src.Pp.AGENDA]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.AGENDA,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsAgendHeaderFormat.displayName="FormatsAgendHeaderFormat",FormatsAgendHeaderFormat.storyName="formats.agendaHeaderFormat",FormatsAgendHeaderFormat.parameters=Object.assign({storySource:{source:"function FormatsAgendHeaderFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        agendaHeaderFormat: ({ start, end }, culture, localizer) =>\n          localizer.format(start, 'dddd MMMM Do, YYYY', culture) +\n          ' - ' +\n          localizer.format(end, 'dddd MMMM Do, YYYY', culture),\n      },\n      views: [Views.WEEK, Views.DAY, Views.AGENDA],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.AGENDA}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsAgendHeaderFormat.parameters);var __namedExportsOrder=["FormatsAgendHeaderFormat"];FormatsAgendHeaderFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsAgendHeaderFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsAgendaHeaderFormat.stories.js"]={name:"FormatsAgendHeaderFormat",docgenInfo:FormatsAgendHeaderFormat.__docgenInfo,path:"stories/props/formatsAgendaHeaderFormat.stories.js"})},"./stories/props/formatsAgendaTimeFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsAgendTimeFormat:function(){return FormatsAgendTimeFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsAgendaTimeFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsagendatimeformat"},"formats.agendaTimeFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,"Time only (not range) displayed in the gutter of the Agenda ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-agenda-time-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsAgendaTimeFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsAgendTimeFormat=function FormatsAgendTimeFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{agendaTimeFormat:function agendaTimeFormat(date,culture,localizer){return localizer.format(date,"hh:mm A",culture)}},views:[src.Pp.WEEK,src.Pp.DAY,src.Pp.AGENDA]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.AGENDA,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsAgendTimeFormat.displayName="FormatsAgendTimeFormat",FormatsAgendTimeFormat.storyName="formats.agendaTimeFormat",FormatsAgendTimeFormat.parameters=Object.assign({storySource:{source:"function FormatsAgendTimeFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        agendaTimeFormat: (date, culture, localizer) =>\n          localizer.format(date, 'hh:mm A', culture),\n      },\n      views: [Views.WEEK, Views.DAY, Views.AGENDA],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.AGENDA}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsAgendTimeFormat.parameters);var __namedExportsOrder=["FormatsAgendTimeFormat"];FormatsAgendTimeFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsAgendTimeFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsAgendaTimeFormat.stories.js"]={name:"FormatsAgendTimeFormat",docgenInfo:FormatsAgendTimeFormat.__docgenInfo,path:"stories/props/formatsAgendaTimeFormat.stories.js"})},"./stories/props/formatsAgendaTimeRangeFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsAgendaTimeRangeFormat:function(){return FormatsAgendaTimeRangeFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsAgendaTimeRangeFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsagendatimerangeformat"},"formats.agendaTimeRangeFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,"Time range displayed in the gutter of the Agenda ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-agenda-time-range-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsAgendaTimeRangeFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsAgendaTimeRangeFormat=function FormatsAgendaTimeRangeFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{agendaTimeRangeFormat:function agendaTimeRangeFormat(_ref,culture,localizer){var start=_ref.start,end=_ref.end;return localizer.format(start,"hh:mm A",culture)+" - "+localizer.format(end,"hh:mm A",culture)}},views:[src.Pp.WEEK,src.Pp.DAY,src.Pp.AGENDA]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.AGENDA,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsAgendaTimeRangeFormat.displayName="FormatsAgendaTimeRangeFormat",FormatsAgendaTimeRangeFormat.storyName="formats.agendaTimeRangeFormat",FormatsAgendaTimeRangeFormat.parameters=Object.assign({storySource:{source:"function FormatsAgendaTimeRangeFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        agendaTimeRangeFormat: ({ start, end }, culture, localizer) =>\n          localizer.format(start, 'hh:mm A', culture) +\n          ' - ' +\n          localizer.format(end, 'hh:mm A', culture),\n      },\n      views: [Views.WEEK, Views.DAY, Views.AGENDA],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.AGENDA}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsAgendaTimeRangeFormat.parameters);var __namedExportsOrder=["FormatsAgendaTimeRangeFormat"];FormatsAgendaTimeRangeFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsAgendaTimeRangeFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsAgendaTimeRangeFormat.stories.js"]={name:"FormatsAgendaTimeRangeFormat",docgenInfo:FormatsAgendaTimeRangeFormat.__docgenInfo,path:"stories/props/formatsAgendaTimeRangeFormat.stories.js"})},"./stories/props/formatsDateFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsDateFormat:function(){return FormatsDateFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsDateFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsdateformat"},"formats.dateFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'Format for the day of the month heading in the Month view. e.g. "01", "02", "03", etc'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-date-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsDateFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsDateFormat=function FormatsDateFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),formats:{dateFormat:function dateFormat(date,culture,localizer){return localizer.format(date,"D",culture)}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,formats:formats,localizer:mLocalizer})})};FormatsDateFormat.displayName="FormatsDateFormat",FormatsDateFormat.storyName="formats.dateFormat",FormatsDateFormat.parameters=Object.assign({storySource:{source:"function FormatsDateFormat() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 1),\n      formats: {\n        dateFormat: (date, culture, localizer) =>\n          localizer.format(date, 'D', culture),\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},FormatsDateFormat.parameters);var __namedExportsOrder=["FormatsDateFormat"];FormatsDateFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsDateFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsDateFormat.stories.js"]={name:"FormatsDateFormat",docgenInfo:FormatsDateFormat.__docgenInfo,path:"stories/props/formatsDateFormat.stories.js"})},"./stories/props/formatsDayFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsDayFormat:function(){return FormatsDayFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsDayFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsdayformat"},"formats.dayFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'A day of the week format for Week and Day headings, e.g. "Wed 01/04"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-day-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsDayFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsDayFormat=function FormatsDayFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{dayFormat:function dayFormat(date,culture,localizer){return localizer.format(date,"ddd MM/DD",culture)}},views:[src.Pp.WEEK,src.Pp.DAY]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsDayFormat.displayName="FormatsDayFormat",FormatsDayFormat.storyName="formats.dayFormat",FormatsDayFormat.parameters=Object.assign({storySource:{source:"function FormatsDayFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        dayFormat: (date, culture, localizer) =>\n          localizer.format(date, 'ddd MM/DD', culture),\n      },\n      views: [Views.WEEK, Views.DAY],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsDayFormat.parameters);var __namedExportsOrder=["FormatsDayFormat"];FormatsDayFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsDayFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsDayFormat.stories.js"]={name:"FormatsDayFormat",docgenInfo:FormatsDayFormat.__docgenInfo,path:"stories/props/formatsDayFormat.stories.js"})},"./stories/props/formatsDayHeaderFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsDayHeaderFormat:function(){return FormatsDayHeaderFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsDayHeaderFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsdayheaderformat"},"formats.dayHeaderFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'Toolbar header format for the Day view, e.g. "Wednesday Apr 01"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-day-header-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsDayHeaderFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsDayHeaderFormat=function FormatsDayHeaderFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{dayHeaderFormat:function dayHeaderFormat(date,culture,localizer){return localizer.format(date,"dddd MMMM Do",culture)}},views:[src.Pp.WEEK,src.Pp.DAY]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.DAY,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsDayHeaderFormat.displayName="FormatsDayHeaderFormat",FormatsDayHeaderFormat.storyName="formats.dayHeaderFormat",FormatsDayHeaderFormat.parameters=Object.assign({storySource:{source:"function FormatsDayHeaderFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        dayHeaderFormat: (date, culture, localizer) =>\n          localizer.format(date, 'dddd MMMM Do', culture),\n      },\n      views: [Views.WEEK, Views.DAY],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.DAY}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsDayHeaderFormat.parameters);var __namedExportsOrder=["FormatsDayHeaderFormat"];FormatsDayHeaderFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsDayHeaderFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsDayHeaderFormat.stories.js"]={name:"FormatsDayHeaderFormat",docgenInfo:FormatsDayHeaderFormat.__docgenInfo,path:"stories/props/formatsDayHeaderFormat.stories.js"})},"./stories/props/formatsDayRangeHeaderFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsDayRangeHeaderFormat:function(){return FormatsDayRangeHeaderFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsDayRangeHeaderFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsdayrangeheaderformat"},"formats.dayRangeHeaderFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'Toolbar header format for the Week views, e.g. "Mar 29 - Apr 04"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-day-range-header-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsDayRangeHeaderFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsDayRangeHeaderFormat=function FormatsDayRangeHeaderFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{dayRangeHeaderFormat:function dayRangeHeaderFormat(_ref,culture,localizer){var start=_ref.start,end=_ref.end;return localizer.format(start,"ddd D",culture)+" - "+localizer.format(end,"ddd D",culture)}},views:[src.Pp.WEEK,src.Pp.DAY]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsDayRangeHeaderFormat.displayName="FormatsDayRangeHeaderFormat",FormatsDayRangeHeaderFormat.storyName="formats.dayRangeHeaderFormat",FormatsDayRangeHeaderFormat.parameters=Object.assign({storySource:{source:"function FormatsDayRangeHeaderFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        dayRangeHeaderFormat: ({ start, end }, culture, localizer) =>\n          localizer.format(start, 'ddd D', culture) +\n          ' - ' +\n          localizer.format(end, 'ddd D', culture),\n      },\n      views: [Views.WEEK, Views.DAY],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsDayRangeHeaderFormat.parameters);var __namedExportsOrder=["FormatsDayRangeHeaderFormat"];FormatsDayRangeHeaderFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsDayRangeHeaderFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsDayRangeHeaderFormat.stories.js"]={name:"FormatsDayRangeHeaderFormat",docgenInfo:FormatsDayRangeHeaderFormat.__docgenInfo,path:"stories/props/formatsDayRangeHeaderFormat.stories.js"})},"./stories/props/formatsEventTimeRangeEndFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsEventTimeRangeEndFormat:function(){return FormatsEventTimeRangeEndFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsEventTimeRangeEndFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatseventtimerangeendformat"},"formats.eventTimeRangeEndFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,"An optional event time range for events that continue onto another day. Used with ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"show-multi-day-times",mdxType:"LinkTo"},"showMultiDayTimes"),"."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-event-time-range-end-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsEventTimeRangeEndFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsEventTimeRangeEndFormat=function FormatsEventTimeRangeEndFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{eventTimeRangeEndFormat:function eventTimeRangeEndFormat(date,culture,localizer){return" << "+localizer.format(date,"hh:mm A",culture)}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer,showMultiDayTimes:!0})})};FormatsEventTimeRangeEndFormat.displayName="FormatsEventTimeRangeEndFormat",FormatsEventTimeRangeEndFormat.storyName="formats.eventTimeRangeEndFormat",FormatsEventTimeRangeEndFormat.parameters=Object.assign({storySource:{source:"function FormatsEventTimeRangeEndFormat() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        eventTimeRangeEndFormat: (date, culture, localizer) =>\n          ' << ' + localizer.format(date, 'hh:mm A', culture),\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        showMultiDayTimes\n      />\n    </div>\n  )\n}"}},FormatsEventTimeRangeEndFormat.parameters);var __namedExportsOrder=["FormatsEventTimeRangeEndFormat"];FormatsEventTimeRangeEndFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsEventTimeRangeEndFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsEventTimeRangeEndFormat.stories.js"]={name:"FormatsEventTimeRangeEndFormat",docgenInfo:FormatsEventTimeRangeEndFormat.__docgenInfo,path:"stories/props/formatsEventTimeRangeEndFormat.stories.js"})},"./stories/props/formatsEventTimeRangeFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsEventTimeRangeFormat:function(){return FormatsEventTimeRangeFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsEventTimeRangeFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatseventtimerangeformat"},"formats.eventTimeRangeFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,"Time range displayed on events in Time Grid views."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-event-time-range-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsEventTimeRangeFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsEventTimeRangeFormat=function FormatsEventTimeRangeFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{eventTimeRangeFormat:function eventTimeRangeFormat(_ref,culture,localizer){var start=_ref.start,end=_ref.end;return localizer.format(start,"hh:mm a",culture)+" - "+localizer.format(end,"hh:mm a",culture)}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer})})};FormatsEventTimeRangeFormat.displayName="FormatsEventTimeRangeFormat",FormatsEventTimeRangeFormat.storyName="formats.eventTimeRangeFormat",FormatsEventTimeRangeFormat.parameters=Object.assign({storySource:{source:"function FormatsEventTimeRangeFormat() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        eventTimeRangeFormat: ({ start, end }, culture, localizer) =>\n          localizer.format(start, 'hh:mm a', culture) +\n          ' - ' +\n          localizer.format(end, 'hh:mm a', culture),\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},FormatsEventTimeRangeFormat.parameters);var __namedExportsOrder=["FormatsEventTimeRangeFormat"];FormatsEventTimeRangeFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsEventTimeRangeFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsEventTimeRangeFormat.stories.js"]={name:"FormatsEventTimeRangeFormat",docgenInfo:FormatsEventTimeRangeFormat.__docgenInfo,path:"stories/props/formatsEventTimeRangeFormat.stories.js"})},"./stories/props/formatsEventTimeRangeStartFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsEventTimeRangeStartFormat:function(){return FormatsEventTimeRangeStartFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsEventTimeRangeStartFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatseventtimerangestartformat"},"formats.eventTimeRangeStartFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,"An optional event time range for events that continue onto another day. Used with ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"show-multi-day-times",mdxType:"LinkTo"},"showMultiDayTimes"),"."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-event-time-range-start-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsEventTimeRangeStartFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsEventTimeRangeStartFormat=function FormatsEventTimeRangeStartFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{eventTimeRangeStartFormat:function eventTimeRangeStartFormat(date,culture,localizer){return localizer.format(date,"hh:mm A",culture)+" >> "}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer,showMultiDayTimes:!0})})};FormatsEventTimeRangeStartFormat.displayName="FormatsEventTimeRangeStartFormat",FormatsEventTimeRangeStartFormat.storyName="formats.eventTimeRangeStartFormat",FormatsEventTimeRangeStartFormat.parameters=Object.assign({storySource:{source:"function FormatsEventTimeRangeStartFormat() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        eventTimeRangeStartFormat: (date, culture, localizer) =>\n          localizer.format(date, 'hh:mm A', culture) + ' >> ',\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        showMultiDayTimes\n      />\n    </div>\n  )\n}"}},FormatsEventTimeRangeStartFormat.parameters);var __namedExportsOrder=["FormatsEventTimeRangeStartFormat"];FormatsEventTimeRangeStartFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsEventTimeRangeStartFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsEventTimeRangeStartFormat.stories.js"]={name:"FormatsEventTimeRangeStartFormat",docgenInfo:FormatsEventTimeRangeStartFormat.__docgenInfo,path:"stories/props/formatsEventTimeRangeStartFormat.stories.js"})},"./stories/props/formatsMonthHeaderFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsMonthHeaderFormat:function(){return FormatsMonthHeaderFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsMonthHeaderFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsmonthheaderformat"},"formats.monthHeaderFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'Toolbar header format for the Month view, e.g "2015 April"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-month-header-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsMonthHeaderFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsMonthHeaderFormat=function FormatsMonthHeaderFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),formats:{monthHeaderFormat:function monthHeaderFormat(date,culture,localizer){return localizer.format(date,"MMMM [']YY",culture)}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,formats:formats,localizer:mLocalizer})})};FormatsMonthHeaderFormat.displayName="FormatsMonthHeaderFormat",FormatsMonthHeaderFormat.storyName="formats.monthHeaderFormat",FormatsMonthHeaderFormat.parameters=Object.assign({storySource:{source:'function FormatsMonthHeaderFormat() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 1),\n      formats: {\n        monthHeaderFormat: (date, culture, localizer) =>\n          localizer.format(date, `MMMM [\']YY`, culture),\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}'}},FormatsMonthHeaderFormat.parameters);var __namedExportsOrder=["FormatsMonthHeaderFormat"];FormatsMonthHeaderFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsMonthHeaderFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsMonthHeaderFormat.stories.js"]={name:"FormatsMonthHeaderFormat",docgenInfo:FormatsMonthHeaderFormat.__docgenInfo,path:"stories/props/formatsMonthHeaderFormat.stories.js"})},"./stories/props/formatsSelectRangeFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsSelectRangeFormat:function(){return FormatsSelectRangeFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsSelectRangeFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsselectrangeformat"},"formats.selectRangeFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'A time range format shown in the highlighted area when selecting time slots, e.g "08:00 am — 12:00 pm"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-select-range-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsSelectRangeFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsSelectRangeFormat=function FormatsSelectRangeFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{selectRangeFormat:function selectRangeFormat(_ref,culture,localizer){var start=_ref.start,end=_ref.end;return localizer.format(start,"hh:mm a",culture)+" - "+localizer.format(end,"hh:mm a",culture)}},views:[src.Pp.WEEK,src.Pp.DAY]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer,selectable:!0,views:views})})};FormatsSelectRangeFormat.displayName="FormatsSelectRangeFormat",FormatsSelectRangeFormat.storyName="formats.selectRangeFormat",FormatsSelectRangeFormat.parameters=Object.assign({storySource:{source:"function FormatsSelectRangeFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        selectRangeFormat: ({ start, end }, culture, localizer) =>\n          localizer.format(start, 'hh:mm a', culture) +\n          ' - ' +\n          localizer.format(end, 'hh:mm a', culture),\n      },\n      views: [Views.WEEK, Views.DAY],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        selectable\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsSelectRangeFormat.parameters);var __namedExportsOrder=["FormatsSelectRangeFormat"];FormatsSelectRangeFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsSelectRangeFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsSelectRangeFormat.stories.js"]={name:"FormatsSelectRangeFormat",docgenInfo:FormatsSelectRangeFormat.__docgenInfo,path:"stories/props/formatsSelectRangeFormat.stories.js"})},"./stories/props/formatsTimeGutterFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsTimeGutterFormat:function(){return FormatsTimeGutterFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsTimeGutterFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatstimegutterformat"},"formats.timeGutterFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'The timestamp cell formats in Week and Time views, e.g. "4:00 AM"'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-time-gutter-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsTimeGutterFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsTimeGutterFormat=function FormatsTimeGutterFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),formats:{timeGutterFormat:function timeGutterFormat(date,culture,localizer){return localizer.format(date,"hh:mm a",culture)}},views:[src.Pp.WEEK,src.Pp.DAY]}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,formats:formats,localizer:mLocalizer,views:views})})};FormatsTimeGutterFormat.displayName="FormatsTimeGutterFormat",FormatsTimeGutterFormat.storyName="formats.timeGutterFormat",FormatsTimeGutterFormat.parameters=Object.assign({storySource:{source:"function FormatsTimeGutterFormat() {\n  const { defaultDate, formats, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      formats: {\n        timeGutterFormat: (date, culture, localizer) =>\n          localizer.format(date, 'hh:mm a', culture),\n      },\n      views: [Views.WEEK, Views.DAY],\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}"}},FormatsTimeGutterFormat.parameters);var __namedExportsOrder=["FormatsTimeGutterFormat"];FormatsTimeGutterFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsTimeGutterFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsTimeGutterFormat.stories.js"]={name:"FormatsTimeGutterFormat",docgenInfo:FormatsTimeGutterFormat.__docgenInfo,path:"stories/props/formatsTimeGutterFormat.stories.js"})},"./stories/props/formatsWeekdayFormat.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FormatsWeekdayFormat:function(){return FormatsWeekdayFormat},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return formatsWeekdayFormat_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"formatsweekdayformat"},"formats.weekdayFormat"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string"))),(0,esm.yg)("p",null,'Week day name format for the Month week day headings, e.g: "Sun", "Mon", "Tue", etc'),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--formats-weekday-format",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),formatsWeekdayFormat_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},FormatsWeekdayFormat=function FormatsWeekdayFormat(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),formats:{weekdayFormat:function weekdayFormat(date,culture,localizer){return localizer.format(date,"dddd",culture)}}}}),[]),defaultDate=_useMemo.defaultDate,formats=_useMemo.formats;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,formats:formats,localizer:mLocalizer})})};FormatsWeekdayFormat.displayName="FormatsWeekdayFormat",FormatsWeekdayFormat.storyName="formats.weekdayFormat",FormatsWeekdayFormat.parameters=Object.assign({storySource:{source:"function FormatsWeekdayFormat() {\n  const { defaultDate, formats } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 1),\n      formats: {\n        weekdayFormat: (date, culture, localizer) =>\n          localizer.format(date, 'dddd', culture),\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        formats={formats}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},FormatsWeekdayFormat.parameters);var __namedExportsOrder=["FormatsWeekdayFormat"];FormatsWeekdayFormat.__docgenInfo={description:"",methods:[],displayName:"FormatsWeekdayFormat"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/formatsWeekdayFormat.stories.js"]={name:"FormatsWeekdayFormat",docgenInfo:FormatsWeekdayFormat.__docgenInfo,path:"stories/props/formatsWeekdayFormat.stories.js"})},"./stories/props/getDrilldownView.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{GetDrilldownView:function(){return GetDrilldownView},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return getDrilldownView_stories}});__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"getdrilldownview"},"getDrilldownView"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (targetDate: Date, currentViewName: string, configuredViewNames: Views[]) => string|null"))),(0,esm.yg)("p",null,"Functionally equivalent to drilldownView, but accepts a function that can return a view name. It's useful for customizing the drill-down actions depending on the target date and triggering view."),(0,esm.yg)("p",null,"Return null to disable drill-down actions."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--get-drilldown-view",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),getDrilldownView_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},GetDrilldownView=function GetDrilldownView(){var getDrilldownView=(0,react.useCallback)((function(targetDate,currentViewName,configuredViewNames){return"month"===currentViewName&&configuredViewNames.includes("week")?"week":null}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,getDrilldownView:getDrilldownView,localizer:mLocalizer})})};GetDrilldownView.displayName="GetDrilldownView",GetDrilldownView.storyName="getDrilldownView",GetDrilldownView.parameters=Object.assign({storySource:{source:"function GetDrilldownView() {\n  const getDrilldownView = useCallback(\n    (targetDate, currentViewName, configuredViewNames) => {\n      if (currentViewName === 'month' && configuredViewNames.includes('week'))\n        return 'week'\n\n      return null\n    },\n    []\n  )\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        getDrilldownView={getDrilldownView}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},GetDrilldownView.parameters);var __namedExportsOrder=["GetDrilldownView"];GetDrilldownView.__docgenInfo={description:"",methods:[],displayName:"GetDrilldownView"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/getDrilldownView.stories.js"]={name:"GetDrilldownView",docgenInfo:GetDrilldownView.__docgenInfo,path:"stories/props/getDrilldownView.stories.js"})},"./stories/props/getNow.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{GetNow:function(){return GetNow},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return getNow_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"getnow"},"getNow"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function () => Date")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"() => new Date()"))),(0,esm.yg)("p",null,"Determines the current date/time which is highlighted in the views."),(0,esm.yg)("p",null,"The value affects which day is shaded and which time is shown as the current time. It also affects the date used by the Today button in the toolbar."),(0,esm.yg)("p",null,"Providing a value here can be useful when you are implementing time zones using the ",(0,esm.yg)("inlineCode",{parentName:"p"},"startAccessor")," and ",(0,esm.yg)("inlineCode",{parentName:"p"},"endAccessor")," properties."),(0,esm.yg)(dist_esm.gG,{id:"props--get-now",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),getNow_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var GetNow=Template.bind({});GetNow.storyName="getNow",GetNow.args={events:events.A,getNow:function getNow(){return new Date(2015,3,13)},localizer:mLocalizer},GetNow.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},GetNow.parameters);var __namedExportsOrder=["GetNow"]},"./stories/props/length.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Length:function(){return Length},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return length_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"length"},"length"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"number")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"30"))),(0,esm.yg)("p",null,"Determines the end date from date prop in the agenda view date prop + length (in number of days) = end date."),(0,esm.yg)(dist_esm.gG,{id:"props--length",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),length_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},length:"number"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Length=Template.bind({});Length.storyName="length",Length.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.AGENDA,events:events.A,length:14,localizer:mLocalizer},Length.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Length.parameters);var __namedExportsOrder=["Length"]},"./stories/props/localizer.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Localizer:function(){return Localizer},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return localizer_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"localizer"},"localizer"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"instanceOf(DateLocalizer)")," ",(0,esm.yg)("strong",{parentName:"li"},"required"))),(0,esm.yg)("p",null,"The localizer used for ",(0,esm.yg)("strong",{parentName:"p"},"formatting dates")," and times according to the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"formats",mdxType:"LinkTo"},"formats")," and ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"culture",mdxType:"LinkTo"},"culture"),". To format buttons and messaging use the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"messages",mdxType:"LinkTo"},"messages")," prop."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"// When using `Day.js`\nimport { dayjsLocalizer } from 'react-big-calendar'\nimport dayjs from 'dayjs'\n// and, for optional time zone support\nimport timezone from 'dayjs/plugin/timezone'\n\ndayjs.extend(timezone)\n// end optional time zone support\n\n// Note that the dayjsLocalizer extends Day.js with the following plugins:\n// - IsBetween\n// - IsSameOrAfter\n// - IsSameOrBefore\n// - LocaleData\n// - LocalizedFormat\n// - MinMax\n// - UTC\n\nconst localizer = dayjsLocalizer(dayjs)\n")),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"// When using `Globalize`\nimport { globalizeLocalizer } from 'react-big-calendar'\nimport globalize from 'globalize'\n\nconst localizer = globalizeLocalizer(globalize)\n")),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"// When using `Luxon`\nimport { luxonLocalizer } from 'react-big-calendar'\nimport { DateTime, Settings } from 'luxon'\n// only use `Settings` if you require optional time zone support\nSettings.defaultZone = 'America/Los_Angeles'\n// end optional time zone support\n\n// Luxon uses the Intl API, which currently does not contain `weekInfo`\n// to determine which weekday is the start of the week by `culture`.\n// The `luxonLocalizer` defaults this to Sunday, which differs from\n// the Luxon default of Monday. The localizer requires this option\n// to change the display, and the date math for determining the\n// start of a week. Luxon uses non-zero based values for `weekday`.\nconst localizer = luxonLocalizer(DateTime, { firstDayOfWeek: 7 })\n")),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"// When using `moment`\nimport { momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n// and, for optional time zone support\nimport 'moment-timezone'\n\nmoment.tz.setDefault('America/Los_Angeles')\n// end optional time zone support\n\nconst localizer = momentLocalizer(moment)\n")),(0,esm.yg)("p",null,"See the ",(0,esm.yg)(addon_links_react.A,{kind:"examples",story:"example-5",mdxType:"LinkTo"},"Localization Example")," for another example of combining ",(0,esm.yg)("inlineCode",{parentName:"p"},"rtl"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"localizer"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"culture")," and ",(0,esm.yg)("inlineCode",{parentName:"p"},"messages"),"."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--localizer",mdxType:"Story"})),(0,esm.yg)("h2",{id:"more-information"},"More Information"),(0,esm.yg)("p",null,"The ",(0,esm.yg)("inlineCode",{parentName:"p"},"localizer")," can be used for date math in a number of ways. Look at the ",(0,esm.yg)(addon_links_react.A,{kind:"guides-localizers",mdxType:"LinkTo"},"Localizer Guide")," for more information."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),localizer_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}},decorators:[function(Story){return(0,jsx_runtime.jsx)("div",{style:{height:800},children:(0,jsx_runtime.jsx)(Story,{})})}]},Localizer=function Localizer(){var localizer=(0,react.useMemo)((function(){return(0,src.ye)(moment_default())}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:new Date(2015,3,13),events:events.A,localizer:localizer})})};Localizer.displayName="Localizer",Localizer.storyName="localizer *",Localizer.parameters=Object.assign({storySource:{source:'function Localizer() {\n  const localizer = useMemo(() => momentLocalizer(moment), [])\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={new Date(2015, 3, 13)}\n        events={demoEvents}\n        localizer={localizer}\n      />\n    </div>\n  )\n}'}},Localizer.parameters);var __namedExportsOrder=["Localizer"];Localizer.__docgenInfo={description:"",methods:[],displayName:"Localizer"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/localizer.stories.js"]={name:"Localizer",docgenInfo:Localizer.__docgenInfo,path:"stories/props/localizer.stories.js"})},"./stories/props/longPressThreshold.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LongPressThreshold:function(){return LongPressThreshold},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return longPressThreshold_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"longpressthreshold"},"longPressThreshold"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"number")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"250"))),(0,esm.yg)("p",null,'Specifies the number of miliseconds the user must press and hold on the screen for a touch to be considered a "long press." Long presses are used for time slot selection on touch devices.'),(0,esm.yg)(dist_esm.gG,{id:"props--long-press-threshold",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),longPressThreshold_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},longPressThreshold:"number"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var LongPressThreshold=Template.bind({});LongPressThreshold.storyName="longPressThreshold",LongPressThreshold.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,longPressThreshold:250},LongPressThreshold.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},LongPressThreshold.parameters);var __namedExportsOrder=["LongPressThreshold"]},"./stories/props/max.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Max:function(){return Max},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return max_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"max"},"max"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"new Date(1972, 0, 1, 23, 59, 59)"))),(0,esm.yg)("p",null,"Constrains the maximum time of the Day and Week views."),(0,esm.yg)(dist_esm.gG,{id:"props--max",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),max_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},events:{control:{type:null}},max:{control:{type:"date"}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Max=Template.bind({});Max.storyName="max",Max.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,max:new Date(1972,0,1,20,59,59)},Max.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Max.parameters);var __namedExportsOrder=["Max"]},"./stories/props/messages.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Messages:function(){return Messages},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return messages_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"messages"},"messages"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Object"))),(0,esm.yg)("p",null,"String messages used throughout the component, override to provide localizations for button text, ",(0,esm.yg)("inlineCode",{parentName:"p"},"title")," attributes and more."),(0,esm.yg)("p",null,"defaults"),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"{\n  date: 'Date',\n  time: 'Time',\n  event: 'Event',\n  allDay: 'All Day',\n  week: 'Week',\n  work_week: 'Work Week',\n  day: 'Day',\n  month: 'Month',\n  previous: 'Back',\n  next: 'Next',\n  yesterday: 'Yesterday',\n  tomorrow: 'Tomorrow',\n  today: 'Today',\n  agenda: 'Agenda',\n\n  noEventsInRange: 'There are no events in this range.',\n  /**\n   * params {total} count of remaining events \n   * params {remainingEvents} remaining events \n   * params {events} all events in day\n   */\n  showMore: (total, remainingEvents, events) => `+${total} más`,\n}\n")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--messages",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),messages_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},Messages=function Messages(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,13),messages:{week:"Semana",work_week:"Semana de trabajo",day:"Día",month:"Mes",previous:"Atrás",next:"Después",today:"Hoy",agenda:"El Diario",showMore:function showMore(total){return"+".concat(total," más")}}}}),[]),defaultDate=_useMemo.defaultDate,messages=_useMemo.messages;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,messages:messages})})};Messages.displayName="Messages",Messages.storyName="messages",Messages.parameters=Object.assign({storySource:{source:"function Messages() {\n  const { defaultDate, messages } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 13),\n      messages: {\n        week: 'Semana',\n        work_week: 'Semana de trabajo',\n        day: 'Día',\n        month: 'Mes',\n        previous: 'Atrás',\n        next: 'Después',\n        today: 'Hoy',\n        agenda: 'El Diario',\n\n        showMore: (total) => `+${total} más`,\n      },\n    }),\n    []\n  )\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        messages={messages}\n      />\n    </div>\n  )\n}"}},Messages.parameters);var __namedExportsOrder=["Messages"];Messages.__docgenInfo={description:"",methods:[],displayName:"Messages"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/messages.stories.js"]={name:"Messages",docgenInfo:Messages.__docgenInfo,path:"stories/props/messages.stories.js"})},"./stories/props/min.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Min:function(){return Min},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return min_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"min"},"min"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"new Date(1972, 0, 1, 0, 0, 0, 0)"))),(0,esm.yg)("p",null,"Constrains the minimum time of the Day and Week views."),(0,esm.yg)(dist_esm.gG,{id:"props--min",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),min_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},events:{control:{type:null}},min:{control:{type:"date"}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Min=Template.bind({});Min.storyName="min",Min.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,min:new Date(1972,0,1,8)},Min.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Min.parameters);var __namedExportsOrder=["Min"]},"./stories/props/onDoubleClickEvent.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnDoubleClickEvent:function(){return OnDoubleClickEvent},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onDoubleClickEvent_stories}});__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"ondoubleclickevent"},"onDoubleClickEvent"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (event: Object) => any"))),(0,esm.yg)("p",null,"Callback fired when a calendar event is clicked twice. (i.e.: an ",(0,esm.yg)("inlineCode",{parentName:"p"},"onDoubleClick")," handler)."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note:")," The ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," prop is ",(0,esm.yg)("em",{parentName:"p"},"not")," required for this prop to function."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Important:")," The event passed into the function is the Calendar Event, not the SyntheticEvent expected by most click handlers."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-double-click-event",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onDoubleClickEvent_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};function buildMessage(calEvent,eventName){return"[".concat(eventName,"] an 'event' selection was made with:\n  ").concat(JSON.stringify(calEvent,null,2))}var OnDoubleClickEvent=function OnDoubleClickEvent(){var clickRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==clickRef?void 0:clickRef.current)}}),[]);var onSelectEvent=(0,react.useCallback)((function(calEvent){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(buildMessage(calEvent,"onSelectEvent"))}),250)}),[]),onDoubleClickEvent=(0,react.useCallback)((function(calEvent){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(buildMessage(calEvent,"onDoubleClickEvent"))}),250)}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onDoubleClickEvent:onDoubleClickEvent,onSelectEvent:onSelectEvent})})};OnDoubleClickEvent.displayName="OnDoubleClickEvent",OnDoubleClickEvent.storyName="onDoubleClickEvent",OnDoubleClickEvent.parameters=Object.assign({storySource:{source:"function OnDoubleClickEvent() {\n  const clickRef = useRef(null)\n\n  useEffect(() => {\n    /**\n     * What Is This?\n     * This is to prevent a memory leak, in the off chance that you\n     * teardown your interface prior to the timed method being called.\n     */\n    return () => {\n      window.clearTimeout(clickRef?.current)\n    }\n  }, [])\n\n  const onSelectEvent = useCallback((calEvent) => {\n    /**\n     * Here we are waiting 250 milliseconds (use what you want) prior to firing\n     * our method. Why? Because both 'click' and 'doubleClick'\n     * would fire, in the event of a 'doubleClick'. By doing\n     * this, the 'click' handler is overridden by the 'doubleClick'\n     * action.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(calEvent, 'onSelectEvent'))\n    }, 250)\n  }, [])\n\n  const onDoubleClickEvent = useCallback((calEvent) => {\n    /**\n     * Notice our use of the same ref as above.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(calEvent, 'onDoubleClickEvent'))\n    }, 250)\n  }, [])\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onDoubleClickEvent={onDoubleClickEvent}\n        onSelectEvent={onSelectEvent}\n      />\n    </div>\n  )\n}"}},OnDoubleClickEvent.parameters);var __namedExportsOrder=["OnDoubleClickEvent"];OnDoubleClickEvent.__docgenInfo={description:"",methods:[],displayName:"OnDoubleClickEvent"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onDoubleClickEvent.stories.js"]={name:"OnDoubleClickEvent",docgenInfo:OnDoubleClickEvent.__docgenInfo,path:"stories/props/onDoubleClickEvent.stories.js"})},"./stories/props/onDrillDown.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnDrillDown:function(){return OnDrillDown},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onDrillDown_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"ondrilldown"},"onDrillDown"),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-drill-down",mdxType:"Story"})),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date) => // do something"))),(0,esm.yg)("p",null,"Callback fired when date header, or the truncated event links are clicked. When included, it will override the default drilldown behavior."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onDrillDown_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},OnDrillDown=function OnDrillDown(){var _useState=(0,react.useState)(src.Pp.MONTH),_useState2=(0,slicedToArray.A)(_useState,2),view=_useState2[0],setView=_useState2[1],_useState3=(0,react.useState)(new Date(2015,3,13)),_useState4=(0,slicedToArray.A)(_useState3,2),date=_useState4[0],setDate=_useState4[1],onNavigate=(0,react.useCallback)((function(newDate){return setDate(newDate)}),[setDate]),onView=(0,react.useCallback)((function(newView){return setView(newView)}),[setView]),onDrillDown=(0,react.useCallback)((function(newDate){setDate(newDate),setView(src.Pp.AGENDA)}),[setDate,setView]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{date:date,events:events.A,localizer:mLocalizer,onDrillDown:onDrillDown,onNavigate:onNavigate,onView:onView,view:view})})};OnDrillDown.displayName="OnDrillDown",OnDrillDown.storyName="onDrillDown",OnDrillDown.parameters=Object.assign({storySource:{source:'function OnDrillDown() {\n  const [view, setView] = useState(Views.MONTH)\n  const [date, setDate] = useState(new Date(2015, 3, 13))\n  const onNavigate = useCallback((newDate) => setDate(newDate), [setDate])\n  const onView = useCallback((newView) => setView(newView), [setView])\n  const onDrillDown = useCallback(\n    (newDate) => {\n      setDate(newDate)\n      setView(Views.AGENDA)\n    },\n    [setDate, setView]\n  )\n  return (\n    <div className="height600">\n      <Calendar\n        date={date}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onDrillDown={onDrillDown}\n        onNavigate={onNavigate}\n        onView={onView}\n        view={view}\n      />\n    </div>\n  )\n}'}},OnDrillDown.parameters);var __namedExportsOrder=["OnDrillDown"];OnDrillDown.__docgenInfo={description:"",methods:[],displayName:"OnDrillDown"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onDrillDown.stories.js"]={name:"OnDrillDown",docgenInfo:OnDrillDown.__docgenInfo,path:"stories/props/onDrillDown.stories.js"})},"./stories/props/onKeyPressEvent.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnKeyPressEvent:function(){return OnKeyPressEvent},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onKeyPressEvent_stories}});__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onkeypressevent"},"onKeyPressEvent"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (event: Object, e: SyntheticEvent) => void"))),(0,esm.yg)("p",null,"Callback fired when a focused calendar event receives a key press."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-key-press-event",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onKeyPressEvent_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};var OnKeyPressEvent=function OnKeyPressEvent(){var pressRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==pressRef?void 0:pressRef.current)}}),[]);var onKeyPressEvent=(0,react.useCallback)((function(event,keypressEvent){pressRef.current=window.setTimeout((function(){window.alert(function buildMessage(event,_ref){var altKey=_ref.altKey,ctrlKey=_ref.ctrlKey,shiftKey=_ref.shiftKey,metaKey=_ref.metaKey,key=_ref.key,prefix="";return altKey?prefix="ALT + ":ctrlKey?prefix="CTRL + ":shiftKey?prefix="SHIFT + ":metaKey&&(prefix="CMD + "),'You pressed on the "'.concat(prefix).concat(key,'" on "event":\nJSON.stringify(event, null, 2)')}(0,keypressEvent))}),250)}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,13)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onKeyPressEvent:onKeyPressEvent})})};OnKeyPressEvent.displayName="OnKeyPressEvent",OnKeyPressEvent.storyName="onKeypressEvent",OnKeyPressEvent.parameters=Object.assign({storySource:{source:'function OnKeyPressEvent() {\n  const pressRef = useRef(null)\n\n  useEffect(() => {\n    return () => {\n      // To prevent possible memory leak on unmount\n      window.clearTimeout(pressRef?.current)\n    }\n  }, [])\n\n  const onKeyPressEvent = useCallback((event, keypressEvent) => {\n    /**\n     * We delay our response to capture ctrl/shift/alt + key\n     * *Storybook will swallow some presses from it\'s own built-ins\n     */\n    pressRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(event, keypressEvent))\n    }, 250)\n  }, [])\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 13), [])\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onKeyPressEvent={onKeyPressEvent}\n      />\n    </div>\n  )\n}'}},OnKeyPressEvent.parameters);var __namedExportsOrder=["OnKeyPressEvent"];OnKeyPressEvent.__docgenInfo={description:"",methods:[],displayName:"OnKeyPressEvent"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onKeyPressEvent.stories.js"]={name:"OnKeyPressEvent",docgenInfo:OnKeyPressEvent.__docgenInfo,path:"stories/props/onKeyPressEvent.stories.js"})},"./stories/props/onNavigate.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnNavigate:function(){return OnNavigate},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onNavigate_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onnavigate"},"onNavigate"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function")),(0,esm.yg)("li",{parentName:"ul"},"controls: ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"date",mdxType:"LinkTo"},"date")),(0,esm.yg)("li",{parentName:"ul"},"example: ",(0,esm.yg)("inlineCode",{parentName:"li"},"(newDate) => setDate(newDate)"))),(0,esm.yg)("p",null,"Callback fired when the ",(0,esm.yg)("inlineCode",{parentName:"p"},"date")," value changes. When included it is used to 'control' the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"date",mdxType:"LinkTo"},"date")," prop value."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-navigate",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onNavigate_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},OnNavigate=function OnNavigate(){var _useState=(0,react.useState)(new Date(2015,3,1)),_useState2=(0,slicedToArray.A)(_useState,2),date=_useState2[0],setDate=_useState2[1],onNavigate=(0,react.useCallback)((function(newDate){return setDate(newDate)}),[setDate]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{date:date,events:events.A,localizer:mLocalizer,onNavigate:onNavigate})})};OnNavigate.displayName="OnNavigate",OnNavigate.storyName="onNavigate",OnNavigate.parameters=Object.assign({storySource:{source:'function OnNavigate() {\n  const [date, setDate] = useState(new Date(2015, 3, 1))\n\n  const onNavigate = useCallback((newDate) => setDate(newDate), [setDate])\n\n  return (\n    <div className="height600">\n      <Calendar\n        date={date}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onNavigate={onNavigate}\n      />\n    </div>\n  )\n}'}},OnNavigate.parameters);var __namedExportsOrder=["OnNavigate"];OnNavigate.__docgenInfo={description:"",methods:[],displayName:"OnNavigate"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onNavigate.stories.js"]={name:"OnNavigate",docgenInfo:OnNavigate.__docgenInfo,path:"stories/props/onNavigate.stories.js"})},"./stories/props/onRangeChange.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnRangeChange:function(){return OnRangeChange},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onRangeChange_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onrangechange"},"onRangeChange"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (range: Array [1|7] | Object {start: Date, end: Date}) => // do something"))),(0,esm.yg)("p",null,"Callback fired when the visible date range changes. Returns an Array of dates or an object with start and end dates for BUILTIN views."),(0,esm.yg)("p",null,"Custom views may return something different."),(0,esm.yg)("p",null,(0,esm.yg)("em",{parentName:"p"},"Note:")," This method is not fired on initial render. Only as the user navigates through Big Calendar."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-range-change",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onRangeChange_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};var OnRangeChange=function OnRangeChange(){var _useState=(0,react.useState)(new Date(2015,3,1)),_useState2=(0,slicedToArray.A)(_useState,2),date=_useState2[0],setDate=_useState2[1],onNavigate=(0,react.useCallback)((function(newDate){return setDate(newDate)}),[setDate]),onRangeChange=(0,react.useCallback)((function(range){window.alert(function buildMessage(range){return range?Array.isArray(range)?1===range.length?"[onRangeChange] was given an array with\n    a single item of ".concat(range[0].toLocaleString(),",\n    which only occurs within the 'day' view."):"[onRangeChange] was given an array of seven dates,\n  starting with ".concat(range[0].toLocaleString(),"\n  and ending with ").concat(range[6].toLocaleString(),".\n  This occurs when within the 'week' or 'work week' views."):"[onRangeChange] was given an object with\n    a start of ".concat(range.start.toLocaleString(),"\n    and an end of ").concat(range.end.toLocaleString(),".\n    An object with 'start' and 'end' is passed\n    when in the 'month' or 'agenda' views."):"no range"}(range))}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{date:date,events:events.A,localizer:mLocalizer,onNavigate:onNavigate,onRangeChange:onRangeChange})})};OnRangeChange.displayName="OnRangeChange",OnRangeChange.storyName="onRangeChange",OnRangeChange.parameters=Object.assign({storySource:{source:'function OnRangeChange() {\n  const [date, setDate] = useState(new Date(2015, 3, 1))\n\n  const onNavigate = useCallback((newDate) => setDate(newDate), [setDate])\n\n  const onRangeChange = useCallback((range) => {\n    window.alert(buildMessage(range))\n  }, [])\n\n  return (\n    <div className="height600">\n      <Calendar\n        date={date}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onNavigate={onNavigate}\n        onRangeChange={onRangeChange}\n      />\n    </div>\n  )\n}'}},OnRangeChange.parameters);var __namedExportsOrder=["OnRangeChange"];OnRangeChange.__docgenInfo={description:"",methods:[],displayName:"OnRangeChange"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onRangeChange.stories.js"]={name:"OnRangeChange",docgenInfo:OnRangeChange.__docgenInfo,path:"stories/props/onRangeChange.stories.js"})},"./stories/props/onSelectEvent.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnSelectEvent:function(){return OnSelectEvent},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onSelectEvent_stories}});__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onselectevent"},"onSelectEvent"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (event: Object) => any"))),(0,esm.yg)("p",null,"Callback fired when a calendar event is selected (i.e.: an ",(0,esm.yg)("inlineCode",{parentName:"p"},"onClick")," handler)."),(0,esm.yg)("p",null,"The method receives the selected event as a parameter. If using ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"resources",mdxType:"LinkTo"},"resources"),", and are in a TimeGrid view ('day' or 'week'), the ",(0,esm.yg)("inlineCode",{parentName:"p"},"event")," will have an additional ",(0,esm.yg)("inlineCode",{parentName:"p"},"sourceResource")," property containing the resource object that the event is associated with."),(0,esm.yg)("p",null,"Clicking on a ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"backgroundEvents",mdxType:"LinkTo"},"backgroundEvent")," will also fire the ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelectEvent")," callback. It will also receive the ",(0,esm.yg)("inlineCode",{parentName:"p"},"backgroundEvent")," as the ",(0,esm.yg)("inlineCode",{parentName:"p"},"event")," object, but contain a ",(0,esm.yg)("inlineCode",{parentName:"p"},"isBackgroundEvent")," property set to ",(0,esm.yg)("inlineCode",{parentName:"p"},"true"),". This will allow you to distinguish between a background event and a regular event within your ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelectEvent")," handler."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note:")," The ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," prop is ",(0,esm.yg)("em",{parentName:"p"},"not")," required for this prop to function."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Important:")," The event passed into the function is the Calendar Event, not the SyntheticEvent expected by most click handlers."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-select-event",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onSelectEvent_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};function buildMessage(calEvent,eventName){return"[".concat(eventName,"] an 'event' selection was made with:\n  ").concat(JSON.stringify(calEvent,null,2))}var OnSelectEvent=function OnSelectEvent(){var clickRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==clickRef?void 0:clickRef.current)}}),[]);var onSelectEvent=(0,react.useCallback)((function(calEvent){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(buildMessage(calEvent,"onSelectEvent"))}),250)}),[]),onDoubleClickEvent=(0,react.useCallback)((function(calEvent){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(buildMessage(calEvent,"onDoubleClickEvent"))}),250)}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onDoubleClickEvent:onDoubleClickEvent,onSelectEvent:onSelectEvent})})};OnSelectEvent.displayName="OnSelectEvent",OnSelectEvent.storyName="onSelectEvent",OnSelectEvent.parameters=Object.assign({storySource:{source:"function OnSelectEvent() {\n  const clickRef = useRef(null)\n\n  useEffect(() => {\n    /**\n     * What Is This?\n     * This is to prevent a memory leak, in the off chance that you\n     * teardown your interface prior to the timed method being called.\n     */\n    return () => {\n      window.clearTimeout(clickRef?.current)\n    }\n  }, [])\n\n  const onSelectEvent = useCallback((calEvent) => {\n    /**\n     * Here we are waiting 250 milliseconds (use what you want) prior to firing\n     * our method. Why? Because both 'click' and 'doubleClick'\n     * would fire, in the event of a 'doubleClick'. By doing\n     * this, the 'click' handler is overridden by the 'doubleClick'\n     * action.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(calEvent, 'onSelectEvent'))\n    }, 250)\n  }, [])\n\n  const onDoubleClickEvent = useCallback((calEvent) => {\n    /**\n     * Notice our use of the same ref as above.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(calEvent, 'onDoubleClickEvent'))\n    }, 250)\n  }, [])\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onDoubleClickEvent={onDoubleClickEvent}\n        onSelectEvent={onSelectEvent}\n      />\n    </div>\n  )\n}"}},OnSelectEvent.parameters);var __namedExportsOrder=["OnSelectEvent"];OnSelectEvent.__docgenInfo={description:"",methods:[],displayName:"OnSelectEvent"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onSelectEvent.stories.js"]={name:"OnSelectEvent",docgenInfo:OnSelectEvent.__docgenInfo,path:"stories/props/onSelectEvent.stories.js"})},"./stories/props/onSelectSlot.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnSelectSlot:function(){return OnSelectSlot},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onSelectSlot_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onselectslot"},"onSelectSlot"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (Object: slotInfo) => any")),(0,esm.yg)("li",{parentName:"ul"},"requires: ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable"))),(0,esm.yg)("p",null,"A callback fired when a date selection is made. Only fires when ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," is true."),(0,esm.yg)("p",null,(0,esm.yg)("em",{parentName:"p"},"Things To Know:")," When you 'doubleClick', both 'click' and 'doubleClick' will fire. Click on the 'showCode' button, at the bottom of the example below, to see how you can get around this issue."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},";(slotInfo: {\n  start: Date,\n  end: Date,\n  slots: Array<Date>,\n  action: 'select' | 'click' | 'doubleClick',\n  resourceId: ?number, // only if the calendar is resource view\n  bounds: ?{\n    // For \"select\" action\n    x: number,\n    y: number,\n    top: number,\n    right: number,\n    left: number,\n    bottom: number,\n  },\n  box: ?{\n    // For \"click\" or \"doubleClick\" actions\n    clientX: number,\n    clientY: number,\n    x: number,\n    y: number,\n  },\n}) => any\n")),(0,esm.yg)("h2",{id:"whats-the-difference"},"What's The Difference?"),(0,esm.yg)("p",null,"How is this different from ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-selecting",mdxType:"LinkTo"},"onSelecting"),"? That is a very good question. The ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelecting")," method is only available in the Time views (",(0,esm.yg)("inlineCode",{parentName:"p"},"week"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"work week"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"day"),"), whereas ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," is also available in the ",(0,esm.yg)("inlineCode",{parentName:"p"},"month")," view. The ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelecting")," method allows you to 'cancel' your selection by returning ",(0,esm.yg)("inlineCode",{parentName:"p"},"false"),". The ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," method returns a ",(0,esm.yg)("inlineCode",{parentName:"p"},"slotInfo")," object, containing a lot of additional information about your selection."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-select-slot",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onSelectSlot_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};var OnSelectSlot=function OnSelectSlot(){var clickRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==clickRef?void 0:clickRef.current)}}),[]);var onSelectSlot=(0,react.useCallback)((function(slotInfo){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(function buildMessage(slotInfo){return"[onSelectSlot] a date selection was made, passing 'slotInfo'\n  ".concat(JSON.stringify(slotInfo,null,2))}(slotInfo))}),250)}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onSelectSlot:onSelectSlot,selectable:!0})})};OnSelectSlot.displayName="OnSelectSlot",OnSelectSlot.storyName="onSelectSlot",OnSelectSlot.parameters=Object.assign({storySource:{source:"function OnSelectSlot() {\n  const clickRef = useRef(null)\n\n  useEffect(() => {\n    /**\n     * What Is This?\n     * This is to prevent a memory leak, in the off chance that you\n     * teardown your interface prior to the timed method being called.\n     */\n    return () => {\n      window.clearTimeout(clickRef?.current)\n    }\n  }, [])\n\n  const onSelectSlot = useCallback((slotInfo) => {\n    /**\n     * Here we are waiting 250 milliseconds (use what you want) prior to firing\n     * our method. Why? Because both 'click' and 'doubleClick'\n     * would fire, in the event of a 'doubleClick'. By doing\n     * this, the 'click' handler is overridden by the 'doubleClick'\n     * action.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(slotInfo))\n    }, 250)\n  }, [])\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onSelectSlot={onSelectSlot}\n        selectable\n      />\n    </div>\n  )\n}"}},OnSelectSlot.parameters);var __namedExportsOrder=["OnSelectSlot"];OnSelectSlot.__docgenInfo={description:"",methods:[],displayName:"OnSelectSlot"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onSelectSlot.stories.js"]={name:"OnSelectSlot",docgenInfo:OnSelectSlot.__docgenInfo,path:"stories/props/onSelectSlot.stories.js"})},"./stories/props/onSelecting.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnSelecting:function(){return OnSelecting},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onSelecting_stories}});__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onselecting"},"onSelecting"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"(range: Object { start: Date, end: Date, resourceId: null|string|number }) => ?boolean")),(0,esm.yg)("li",{parentName:"ul"},"requires: ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable"))),(0,esm.yg)("p",null,"Callback fired when dragging a selection in the Time views. Only fires when ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," is true."),(0,esm.yg)("p",null,"Returning ",(0,esm.yg)("inlineCode",{parentName:"p"},"false")," from the handler will prevent a selection."),(0,esm.yg)("h2",{id:"whats-the-difference"},"What's The Difference?"),(0,esm.yg)("p",null,"How is this different from ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-select-slot",mdxType:"LinkTo"},"onSelectSlot"),"? That is a very good question. The ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelecting")," method is only available in the Time views (",(0,esm.yg)("inlineCode",{parentName:"p"},"week"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"work week"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"day"),"), whereas ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," is also available in the ",(0,esm.yg)("inlineCode",{parentName:"p"},"month")," view. The ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelecting")," method allows you to 'cancel' your selection by returning ",(0,esm.yg)("inlineCode",{parentName:"p"},"false"),". The ",(0,esm.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," method returns a ",(0,esm.yg)("inlineCode",{parentName:"p"},"slotInfo")," object, containing a lot of additional information about your selection."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-selecting",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onSelecting_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};function buildMessage(range,eventName){return"[".concat(eventName,"] a date range selection was made, passing:\n  ").concat(JSON.stringify(range,null,2))}var OnSelecting=function OnSelecting(){var clickRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==clickRef?void 0:clickRef.current)}}),[]);var onSelectSlot=(0,react.useCallback)((function(slotInfo){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(buildMessage(slotInfo,"onSelectSlot"))}),250)}),[]),onSelecting=(0,react.useCallback)((function(range){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(buildMessage(range,"onSelecting"))}),250)}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,onSelecting:onSelecting,onSelectSlot:onSelectSlot,selectable:!0})})};OnSelecting.displayName="OnSelecting",OnSelecting.storyName="onSelecting",OnSelecting.parameters=Object.assign({storySource:{source:"function OnSelecting() {\n  const clickRef = useRef(null)\n\n  useEffect(() => {\n    /**\n     * What Is This?\n     * This is to prevent a memory leak, in the off chance that you\n     * teardown your interface prior to the timed method being called.\n     */\n    return () => {\n      window.clearTimeout(clickRef?.current)\n    }\n  }, [])\n\n  const onSelectSlot = useCallback((slotInfo) => {\n    /**\n     * Here we are waiting 250 milliseconds (use what you want) prior to firing\n     * our method. Why? Because both 'click' and 'doubleClick'\n     * would fire, in the event of a 'doubleClick'. By doing\n     * this, the 'click' handler is overridden by the 'doubleClick'\n     * action.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(slotInfo, 'onSelectSlot'))\n    }, 250)\n  }, [])\n\n  const onSelecting = useCallback((range) => {\n    /**\n     * Here we are waiting 250 milliseconds (use what you want) prior to firing\n     * our method. Why? Because both 'click' and 'doubleClick'\n     * would fire, in the event of a 'doubleClick'. By doing\n     * this, the 'click' handler is overridden by the 'doubleClick'\n     * action.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(range, 'onSelecting'))\n    }, 250)\n  }, [])\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onSelecting={onSelecting}\n        onSelectSlot={onSelectSlot}\n        selectable\n      />\n    </div>\n  )\n}"}},OnSelecting.parameters);var __namedExportsOrder=["OnSelecting"];OnSelecting.__docgenInfo={description:"",methods:[],displayName:"OnSelecting"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onSelecting.stories.js"]={name:"OnSelecting",docgenInfo:OnSelecting.__docgenInfo,path:"stories/props/onSelecting.stories.js"})},"./stories/props/onShowMore.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnShowMore:function(){return OnShowMore},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onShowMore_stories}});__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onshowmore"},"onShowMore"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (events: Array[event: Object], date: Date) => any"))),(0,esm.yg)("p",null,"Callback fired when a +{count} more is clicked. Receives ",(0,esm.yg)("strong",{parentName:"p"},"all")," of the ",(0,esm.yg)("inlineCode",{parentName:"p"},"events")," for the ",(0,esm.yg)("inlineCode",{parentName:"p"},"date")," on which it was selected."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-show-more",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onShowMore_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};var OnShowMore=function OnShowMore(){var onShowMore=(0,react.useCallback)((function(events,date){return window.alert(function buildMessage(calEvents,date){return"[onShowMore] received ".concat(calEvents.length," for ").concat(date.toLocaleDateString())}(events,date))}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onShowMore:onShowMore})})};OnShowMore.displayName="OnShowMore",OnShowMore.storyName="onShowMore",OnShowMore.parameters=Object.assign({storySource:{source:'function OnShowMore() {\n  const onShowMore = useCallback(\n    (events, date) => window.alert(buildMessage(events, date)),\n    []\n  )\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onShowMore={onShowMore}\n      />\n    </div>\n  )\n}'}},OnShowMore.parameters);var __namedExportsOrder=["OnShowMore"];OnShowMore.__docgenInfo={description:"",methods:[],displayName:"OnShowMore"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onShowMore.stories.js"]={name:"OnShowMore",docgenInfo:OnShowMore.__docgenInfo,path:"stories/props/onShowMore.stories.js"})},"./stories/props/onView.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OnView:function(){return OnView},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return onView_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"onview"},"onView"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: 'function'"),(0,esm.yg)("li",{parentName:"ul"},"controls: ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"view",mdxType:"LinkTo"},"view")),(0,esm.yg)("li",{parentName:"ul"},"example: ",(0,esm.yg)("inlineCode",{parentName:"li"},"(newView) => setView(newView)"))),(0,esm.yg)("p",null,"Callback fired when the ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")," value changes. When included it is used to 'control' the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"view",mdxType:"LinkTo"},"view")," prop value."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--on-view",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),onView_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},OnView=function OnView(){var _useState=(0,react.useState)(new Date(2015,3,1)),_useState2=(0,slicedToArray.A)(_useState,2),date=_useState2[0],setDate=_useState2[1],_useState3=(0,react.useState)(src.Pp.WEEK),_useState4=(0,slicedToArray.A)(_useState3,2),view=_useState4[0],setView=_useState4[1],onNavigate=(0,react.useCallback)((function(newDate){return setDate(newDate)}),[setDate]),onView=(0,react.useCallback)((function(newView){return setView(newView)}),[setView]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{date:date,events:events.A,localizer:mLocalizer,onNavigate:onNavigate,onView:onView,view:view})})};OnView.displayName="OnView",OnView.storyName="onView",OnView.parameters=Object.assign({storySource:{source:'function OnView() {\n  const [date, setDate] = useState(new Date(2015, 3, 1))\n  const [view, setView] = useState(Views.WEEK)\n\n  const onNavigate = useCallback((newDate) => setDate(newDate), [setDate])\n  const onView = useCallback((newView) => setView(newView), [setView])\n\n  return (\n    <div className="height600">\n      <Calendar\n        date={date}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onNavigate={onNavigate}\n        onView={onView}\n        view={view}\n      />\n    </div>\n  )\n}'}},OnView.parameters);var __namedExportsOrder=["OnView"];OnView.__docgenInfo={description:"",methods:[],displayName:"OnView"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/onView.stories.js"]={name:"OnView",docgenInfo:OnView.__docgenInfo,path:"stories/props/onView.stories.js"})},"./stories/props/popup.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Popup:function(){return Popup},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return popup_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"popup"},"popup"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"true"))),(0,esm.yg)("p",null,'Show truncated events in an overlay when you click the "+',(0,esm.yg)("em",{parentName:"p"},"x"),' more" link.'),(0,esm.yg)(dist_esm.gG,{id:"props--popup",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),popup_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},popup:"boolean"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Popup=Template.bind({});Popup.storyName="popup",Popup.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,popup:!0},Popup.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Popup.parameters);var __namedExportsOrder=["Popup"]},"./stories/props/popupOffset.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{PopupOffset:function(){return PopupOffset},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return popupOffset_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"popupoffset"},"popupOffset"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"number|shape {x: number, y: number}"))),(0,esm.yg)("p",null,'Distance in pixels, from the edges of the viewport, the "show more" overlay should be positioned.'),(0,esm.yg)(dist_esm.gG,{id:"props--popup-offset",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),popupOffset_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},popup:"boolean"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var PopupOffset=Template.bind({});PopupOffset.storyName="popupOffset",PopupOffset.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,popup:!0,popupOffset:{x:30,y:20}},PopupOffset.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},PopupOffset.parameters);var __namedExportsOrder=["PopupOffset"]},"./stories/props/resourceGroupingLayout.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResourceGroupingLayout:function(){return ResourceGroupingLayout},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resourceGroupingLayout_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.flat-map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.unscopables.flat-map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"resourcegroupinglayout"},"resourceGroupingLayout"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: 'false'")),(0,esm.yg)("p",null,"Determines whether grouped resources should be displayed in a layout that organizes them from Resource > Day to Day > Resource."),(0,esm.yg)("p",null,"For example"),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-md"},"resourceGroupingLayout={false}\nResource 1\n  Day 1\n    Event 1\n    Event 2\n  Day 2\n    Event 3\n    Event 4\nResource 2\n  Day 3\n    Event 5\n    Event 6\n  Day 4\n    Event 7\n    Event 8\n\nresourceGroupingLayout={true}\nDay 1\n  Resource 1\n    Event 1\n    Event 2\n  Resource 2\n    Event 3\n    Event 4\nDay 2\n  Resource 1\n    Event 5\n    Event 6\n  Resource 2\n    Event 7\n    Event 8\n")),(0,esm.yg)(dist_esm.gG,{id:"props--resource-grouping-layout",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),resourceGroupingLayout_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var resources=[{resourceId:1,resourceTitle:"Board room"},{resourceId:2,resourceTitle:"Training room"},{resourceId:3,resourceTitle:"Meeting room 1"},{resourceId:4,resourceTitle:"Meeting room 2"}],eventId=0,events=Array.from({length:20},(function(_,k){return k})).flatMap((function(i){var currentResource=resources[i%resources.length],dayDiff=i%7;return Array.from({length:5},(function(_,j){return{id:eventId++,title:"Event ".concat(i+j," _ ").concat(currentResource.resourceTitle),start:new Date(2018,0,29+dayDiff,9+j%4,0,0),end:new Date(2018,0,29+dayDiff,11+j%4,0,0),resourceId:currentResource.resourceId}}))})),ResourceGroupingLayout=Template.bind({});ResourceGroupingLayout.storyName="resourceGroupingLayout",ResourceGroupingLayout.args=Object.assign({},storyDefaults._,{defaultDate:new Date(2018,0,29),resourceGroupingLayout:!0,resourceIdAccessor:"resourceId",resourceTitleAccessor:"resourceTitle",resources:resources,events:events}),ResourceGroupingLayout.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ResourceGroupingLayout.parameters);var __namedExportsOrder=["ResourceGroupingLayout"]},"./stories/props/resourceIdAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResourceIdAccessor:function(){return ResourceIdAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resourceIdAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"resourceidaccessor"},"resourceIdAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (resource: Object) => string | number // must be unique"))),(0,esm.yg)("p",null,"Provides a unique identifier, or an array of unique identifiers, for each resource in the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"resources",mdxType:"LinkTo"},"resources")," array"),(0,esm.yg)(dist_esm.gG,{id:"props--resource-id-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),resourceIdAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var ResourceIdAccessor=Template.bind({});ResourceIdAccessor.storyName="resourceIdAccessor",ResourceIdAccessor.args=storyDefaults._,ResourceIdAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ResourceIdAccessor.parameters);var __namedExportsOrder=["ResourceIdAccessor"]},"./stories/props/resourceTitleAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ResourceTitleAccessor:function(){return ResourceTitleAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resourceTitleAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"resourcetitleaccessor"},"resourceTitleAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (resource: Object) => string"))),(0,esm.yg)("p",null,"Provides a human readable name for the resource object, used in headers."),(0,esm.yg)(dist_esm.gG,{id:"props--resource-title-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),resourceTitleAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var ResourceTitleAccessor=Template.bind({});ResourceTitleAccessor.storyName="resourceTitleAccessor",ResourceTitleAccessor.args=storyDefaults._,ResourceTitleAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ResourceTitleAccessor.parameters);var __namedExportsOrder=["ResourceTitleAccessor"]},"./stories/props/resources.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Resources:function(){return Resources},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return resources_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),resourceEvents=__webpack_require__("./stories/resources/resourceEvents.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"resources"},"resources"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"arrayOf(Resource)"))),(0,esm.yg)("p",null,"An array of resource objects that map events to a specific resource. Resource objects, like events, can be any shape or have any properties, but should be uniquly identifiable via the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"resource-id-accessor",mdxType:"LinkTo"},"resourceIdAccessor"),', as well as a "title" or name as provided by the ',(0,esm.yg)(addon_links_react.A,{kind:"props",story:"resource-title-accessor",mdxType:"LinkTo"},"resourceTitleAccessor")," prop."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"Resource {\n  id: string | number, // must be unique\n  title: string\n}\n")),(0,esm.yg)(dist_esm.gG,{id:"props--resources",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),resources_stories_resourceEvents=resourceEvents.A.events,resources=resourceEvents.A.list,mLocalizer=(0,src.ye)(moment_default()),resources_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Resources=Template.bind({});Resources.storyName="resources",Resources.args={defaultDate:new Date(2015,3,4),defaultView:src.Pp.DAY,events:resources_stories_resourceEvents,localizer:mLocalizer,resources:resources},Resources.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Resources.parameters);var __namedExportsOrder=["Resources"]},"./stories/props/rtl.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{RightToLeft:function(){return RightToLeft},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return rtl_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"rtl"},"rtl"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"false"))),(0,esm.yg)("p",null,"Switch the calendar to a right-to-left read direction. Best if used in conjunction with your ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"localizer")," and ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"messages",mdxType:"LinkTo"},"messages")," props."),(0,esm.yg)("p",null,"See the ",(0,esm.yg)(addon_links_react.A,{kind:"examples",story:"example-5",mdxType:"LinkTo"},"Localization Example")," for another example of combining ",(0,esm.yg)("inlineCode",{parentName:"p"},"rtl"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"localizer"),", ",(0,esm.yg)("inlineCode",{parentName:"p"},"culture")," and ",(0,esm.yg)("inlineCode",{parentName:"p"},"messages"),"."),(0,esm.yg)(dist_esm.gG,{id:"props--right-to-left",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),rtl_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},rtl:"boolean"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var RightToLeft=Template.bind({});RightToLeft.storyName="rtl",RightToLeft.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,rtl:!0,messages:{week:"أسبوع",work_week:"أسبوع العمل",day:"يوم",month:"شهر",previous:"سابق",next:"التالي",today:"اليوم",agenda:"جدول أعمال",showMore:function showMore(total){return"+".concat(total," إضافي")}}},RightToLeft.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},RightToLeft.parameters);var __namedExportsOrder=["RightToLeft"]},"./stories/props/scrollToTime.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ScrollToTime:function(){return ScrollToTime},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return scrollToTime_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"scrolltotime"},"scrollToTime"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"new Date()"))),(0,esm.yg)("p",null,"Determines how far down the scroll pane is initially scrolled down."),(0,esm.yg)(dist_esm.gG,{id:"props--scroll-to-time",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),scrollToTime_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},events:{control:{type:null}},scrollToTime:{control:{type:"date"}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var ScrollToTime=Template.bind({});ScrollToTime.storyName="scrollToTime",ScrollToTime.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,scrollToTime:new Date(1972,0,1,22)},ScrollToTime.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ScrollToTime.parameters);var __namedExportsOrder=["ScrollToTime"]},"./stories/props/selectable.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Selectable:function(){return Selectable},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return selectable_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"selectable"},"selectable"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean | 'ignoreEvents'"))),(0,esm.yg)("p",null,"Allows mouse selection of ranges of dates/times."),(0,esm.yg)("p",null,"The 'ignoreEvents' option prevents selection code from running when a drag begins over an event. Useful when you want custom event click or drag logic"),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--selectable",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),selectable_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}};var Selectable=function Selectable(){var clickRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==clickRef?void 0:clickRef.current)}}),[]);var onSelectSlot=(0,react.useCallback)((function(slotInfo){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){window.alert(function buildMessage(slotInfo){return"[onSelectSlot] a date selection was made, passing 'slotInfo'\n  ".concat(JSON.stringify(slotInfo,null,2))}(slotInfo))}),250)}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onSelectSlot:onSelectSlot,selectable:!0})})};Selectable.displayName="Selectable",Selectable.storyName="selectable",Selectable.parameters=Object.assign({storySource:{source:"function Selectable() {\n  const clickRef = useRef(null)\n\n  useEffect(() => {\n    /**\n     * What Is This?\n     * This is to prevent a memory leak, in the off chance that you\n     * teardown your interface prior to the timed method being called.\n     */\n    return () => {\n      window.clearTimeout(clickRef?.current)\n    }\n  }, [])\n\n  const onSelectSlot = useCallback((slotInfo) => {\n    /**\n     * Here we are waiting 250 milliseconds prior to firing\n     * our method. Why? Because both 'click' and 'doubleClick'\n     * would fire, in the event of a 'doubleClick'. By doing\n     * this, the 'click' handler is overridden by the 'doubleClick'\n     * action.\n     */\n    window.clearTimeout(clickRef?.current)\n    clickRef.current = window.setTimeout(() => {\n      window.alert(buildMessage(slotInfo))\n    }, 250)\n  }, [])\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onSelectSlot={onSelectSlot}\n        selectable\n      />\n    </div>\n  )\n}"}},Selectable.parameters);var __namedExportsOrder=["Selectable"];Selectable.__docgenInfo={description:"",methods:[],displayName:"Selectable"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/selectable.stories.js"]={name:"Selectable",docgenInfo:Selectable.__docgenInfo,path:"stories/props/selectable.stories.js"})},"./stories/props/selected.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Selected:function(){return Selected},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return selected_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"selected"},"selected"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Event: Object"))),(0,esm.yg)("p",null,"The selected event, if any. By default, Big Calendar 'controls' the ",(0,esm.yg)("inlineCode",{parentName:"p"},"selected")," (highlighted) event in the display. You can use this prop to control which event is highlighted. The ",(0,esm.yg)("inlineCode",{parentName:"p"},"selected")," event must be a object reference to the event within the ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events")," array."),(0,esm.yg)("p",null,"Often used in conjunction with ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-select-event",mdxType:"LinkTo"},"OnSelectEvent")," and/or ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-double-click-event",mdxType:"LinkTo"},"onDoubleClickEvent"),"."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--selected",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),selected_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},Selected=function Selected(){var _useState=(0,react.useState)((function(){return events.A.find((function(event){return"Itaewon Halloween Meeting"===event.title}))})),_useState2=(0,slicedToArray.A)(_useState,2),selected=_useState2[0],setSelected=_useState2[1],clickRef=(0,react.useRef)(null);(0,react.useEffect)((function(){return function(){window.clearTimeout(null==clickRef?void 0:clickRef.current)}}),[]);var onSelectEvent=(0,react.useCallback)((function(calEvent){window.clearTimeout(null==clickRef?void 0:clickRef.current),clickRef.current=window.setTimeout((function(){setSelected(calEvent)}),250)}),[setSelected]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,1)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,onSelectEvent:onSelectEvent,selected:selected})})};Selected.displayName="Selected",Selected.storyName="selected",Selected.parameters=Object.assign({storySource:{source:"function Selected() {\n  const [selected, setSelected] = useState(() => {\n    // let's make an initial selection\n    return demoEvents.find(\n      (event) => event.title === 'Itaewon Halloween Meeting'\n    )\n  })\n  const clickRef = useRef(null)\n\n  useEffect(() => {\n    /**\n     * What Is This?\n     * This is to prevent a memory leak, in the off chance that you\n     * teardown your interface prior to the timed method being called.\n     */\n    return () => {\n      window.clearTimeout(clickRef?.current)\n    }\n  }, [])\n\n  const onSelectEvent = useCallback(\n    (calEvent) => {\n      /**\n       * Here we are waiting 250 milliseconds (use what you want) prior to firing\n       * our method. Why? Because both 'click' and 'doubleClick'\n       * would fire, in the event of a 'doubleClick'. By doing\n       * this, the 'click' handler is overridden by the 'doubleClick'\n       * action.\n       */\n      window.clearTimeout(clickRef?.current)\n      clickRef.current = window.setTimeout(() => {\n        setSelected(calEvent)\n      }, 250)\n    },\n    [setSelected]\n  )\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 1), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onSelectEvent={onSelectEvent}\n        selected={selected}\n      />\n    </div>\n  )\n}"}},Selected.parameters);var __namedExportsOrder=["Selected"];Selected.__docgenInfo={description:"",methods:[],displayName:"Selected"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/selected.stories.js"]={name:"Selected",docgenInfo:Selected.__docgenInfo,path:"stories/props/selected.stories.js"})},"./stories/props/showAllEvents.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ShowAllEvents:function(){return ShowAllEvents},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return showAllEvents_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"showallevents"},"showAllEvents"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"false"))),(0,esm.yg)("p",null,"Displays all events on the month view instead of having some hidden behind +{count} more. This will cause the rows in the month view to be scrollable if the number of events exceed the height of the row."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--show-all-events",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),showAllEvents_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},showAllEvents:"boolean"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var ShowAllEvents=Template.bind({});ShowAllEvents.storyName="showAllEvents",ShowAllEvents.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,showAllEvents:!0},ShowAllEvents.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ShowAllEvents.parameters);var __namedExportsOrder=["ShowAllEvents"]},"./stories/props/showMultiDayTimes.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ShowMultiDayTimes:function(){return ShowMultiDayTimes},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return showMultiDayTimes_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"showmultidaytimes"},"showMultiDayTimes"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"false"))),(0,esm.yg)("p",null,"Support to show multi-day events with specific start and end times in the main time grid (rather than in the all day header)."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Note: This may cause calendars with several events to look very busy in the week and day views.")),(0,esm.yg)(dist_esm.gG,{id:"props--show-multi-day-times",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),showMultiDayTimes_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},max:{control:{type:null}},showMultiDayTimes:"boolean"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var ShowMultiDayTimes=Template.bind({});ShowMultiDayTimes.storyName="showMultiDayTimes",ShowMultiDayTimes.args={defaultDate:new Date(2016,11,4),defaultView:src.Pp.WEEK,events:[{title:"start of the week",start:new Date(2016,11,4,15),end:new Date(2016,11,5,3)},{title:"single day longer than max",start:new Date(2016,11,4,15),end:new Date(2016,11,4,23,30)},{title:"end of the week",start:new Date(2016,11,3),end:new Date(2016,11,3)},{title:"middle",start:new Date(2016,11,6),end:new Date(2016,11,6)}],localizer:mLocalizer,max:moment_default()().endOf("day").add(-1,"hours").toDate(),showMultiDayTimes:!0},ShowMultiDayTimes.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},ShowMultiDayTimes.parameters);var __namedExportsOrder=["ShowMultiDayTimes"]},"./stories/props/slotGroupPropGetter.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{SlotGroupPropGetter:function(){return SlotGroupPropGetter},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return slotGroupPropGetter_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"slotgrouppropgetter"},"slotGroupPropGetter"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (group: Date[]) => { style?: Object }"))),(0,esm.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the time-slot node."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Caution! Styles that change layout or position may break the calendar in unexpected ways.")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--slot-group-prop-getter",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;__webpack_require__("./stories/resources/propGetter.scss");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),slotGroupPropGetter_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},SlotGroupPropGetter=function SlotGroupPropGetter(){var slotGroupPropGetter=(0,react.useCallback)((function(){return{style:{minHeight:60}}}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,13)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,slotGroupPropGetter:slotGroupPropGetter,events:events.A,localizer:mLocalizer})})};SlotGroupPropGetter.displayName="SlotGroupPropGetter",SlotGroupPropGetter.storyName="slotGroupPropGetter",SlotGroupPropGetter.parameters=Object.assign({storySource:{source:'function SlotGroupPropGetter() {\n  const slotGroupPropGetter = useCallback(\n    () => ({\n      style: {\n        minHeight: 60,\n      },\n    }),\n    []\n  )\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 13), [])\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        slotGroupPropGetter={slotGroupPropGetter}\n        events={demoEvents}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}'}},SlotGroupPropGetter.parameters);var __namedExportsOrder=["SlotGroupPropGetter"];SlotGroupPropGetter.__docgenInfo={description:"",methods:[],displayName:"SlotGroupPropGetter"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/slotGroupPropGetter.stories.js"]={name:"SlotGroupPropGetter",docgenInfo:SlotGroupPropGetter.__docgenInfo,path:"stories/props/slotGroupPropGetter.stories.js"})},"./stories/props/slotPropGetter.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{SlotPropGetter:function(){return SlotPropGetter},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return slotPropGetter_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"slotpropgetter"},"slotPropGetter"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"function (date: Date) => {className?: string, style?: Object}"))),(0,esm.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the the time-slot node."),(0,esm.yg)("p",null,(0,esm.yg)("strong",{parentName:"p"},"Caution!")," Styles that change layout or position may break the calendar in unexpected ways."),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--slot-prop-getter",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;__webpack_require__("./stories/resources/propGetter.scss");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),slotPropGetter_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},SlotPropGetter=function SlotPropGetter(){var slotPropGetter=(0,react.useCallback)((function(date){return Object.assign({className:"slotDefault"},moment_default()(date).hour()<8&&{style:{backgroundColor:"powderblue",color:"black"}},moment_default()(date).hour()>12&&{style:{backgroundColor:"darkgreen",color:"white"}})}),[]),defaultDate=(0,react.useMemo)((function(){return new Date(2015,3,13)}),[]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,defaultView:src.Pp.WEEK,slotPropGetter:slotPropGetter,events:events.A,localizer:mLocalizer})})};SlotPropGetter.displayName="SlotPropGetter",SlotPropGetter.storyName="slotPropGetter",SlotPropGetter.parameters=Object.assign({storySource:{source:"function SlotPropGetter() {\n  const slotPropGetter = useCallback(\n    (date) => ({\n      className: 'slotDefault',\n      ...(moment(date).hour() < 8 && {\n        style: {\n          backgroundColor: 'powderblue',\n          color: 'black',\n        },\n      }),\n      ...(moment(date).hour() > 12 && {\n        style: {\n          backgroundColor: 'darkgreen',\n          color: 'white',\n        },\n      }),\n    }),\n    []\n  )\n\n  const defaultDate = useMemo(() => new Date(2015, 3, 13), [])\n\n  return (\n    <div className=\"height600\">\n      <Calendar\n        defaultDate={defaultDate}\n        defaultView={Views.WEEK}\n        slotPropGetter={slotPropGetter}\n        events={demoEvents}\n        localizer={mLocalizer}\n      />\n    </div>\n  )\n}"}},SlotPropGetter.parameters);var __namedExportsOrder=["SlotPropGetter"];SlotPropGetter.__docgenInfo={description:"",methods:[],displayName:"SlotPropGetter"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/slotPropGetter.stories.js"]={name:"SlotPropGetter",docgenInfo:SlotPropGetter.__docgenInfo,path:"stories/props/slotPropGetter.stories.js"})},"./stories/props/startAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{StartAccessor:function(){return StartAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return startAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"startaccessor"},"startAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => Date")),(0,esm.yg)("li",{parentName:"ul"},"default: 'start'")),(0,esm.yg)("p",null,"The start date/time of the event. Must resolve to a JavaScript ",(0,esm.yg)("inlineCode",{parentName:"p"},"Date")," object."),(0,esm.yg)(dist_esm.gG,{id:"props--start-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),startAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var StartAccessor=Template.bind({});StartAccessor.storyName="startAccessor",StartAccessor.args=storyDefaults.o,StartAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},StartAccessor.parameters);var __namedExportsOrder=["StartAccessor"]},"./stories/props/step.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Step:function(){return Step},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return step_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"step"},"step"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"number")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"30"))),(0,esm.yg)("p",null,"Determines the selectable time increments in week and day views"),(0,esm.yg)(dist_esm.gG,{id:"props--step",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),step_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},step:"number"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Step=Template.bind({});Step.storyName="step",Step.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,step:15},Step.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Step.parameters);var __namedExportsOrder=["Step"]},"./stories/props/timeslots.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Timeslots:function(){return Timeslots},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return timeslots_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"timeslots"},"timeslots"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"number"))),(0,esm.yg)("p",null,'The number of slots per "section" in the time grid views. Adjust with ',(0,esm.yg)(addon_links_react.A,{kind:"props",story:"step",mdxType:"LinkTo"},"step")," to change the default of 1 hour long groups, with 30 minute slots."),(0,esm.yg)(dist_esm.gG,{id:"props--timeslots",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),timeslots_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},defaultView:{control:{type:null}},step:"number",timeslots:"number"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Timeslots=Template.bind({});Timeslots.storyName="timeslots",Timeslots.args={defaultDate:new Date(2015,3,13),defaultView:src.Pp.WEEK,events:events.A,localizer:mLocalizer,step:15,timeslots:4},Timeslots.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Timeslots.parameters);var __namedExportsOrder=["Timeslots"]},"./stories/props/titleAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TitleAccessor:function(){return TitleAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return titleAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"titleaccessor"},"titleAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => string")),(0,esm.yg)("li",{parentName:"ul"},"default: 'title'")),(0,esm.yg)("p",null,"Accessor for the event title, used to display event information. Should resolve to a ",(0,esm.yg)("inlineCode",{parentName:"p"},"renderable")," value."),(0,esm.yg)(dist_esm.gG,{id:"props--title-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),titleAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var TitleAccessor=Template.bind({});TitleAccessor.storyName="titleAccessor",TitleAccessor.args=storyDefaults.o,TitleAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},TitleAccessor.parameters);var __namedExportsOrder=["TitleAccessor"]},"./stories/props/toolbar.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Toolbar:function(){return Toolbar},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return toolbar_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"toolbar"},"toolbar"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"boolean")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"true"))),(0,esm.yg)("p",null,"Determines whether the toolbar is displayed"),(0,esm.yg)(dist_esm.gG,{id:"props--toolbar",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),toolbar_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}},toolbar:"boolean"},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var Toolbar=Template.bind({});Toolbar.storyName="toolbar",Toolbar.args={defaultDate:new Date(2015,3,13),events:events.A,localizer:mLocalizer,toolbar:!0},Toolbar.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},Toolbar.parameters);var __namedExportsOrder=["Toolbar"]},"./stories/props/tooltipAccessor.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TooltipAccessor:function(){return TooltipAccessor},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return tooltipAccessor_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var src=__webpack_require__("./src/index.js"),storyDefaults=__webpack_require__("./stories/props/storyDefaults.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"tooltipaccessor"},"tooltipAccessor"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => string")),(0,esm.yg)("li",{parentName:"ul"},"default: 'title'")),(0,esm.yg)("p",null,"Accessor for the event tooltip, used to display event information. Should resolve to a ",(0,esm.yg)("inlineCode",{parentName:"p"},"renderable")," value. Removes the tooltip if null."),(0,esm.yg)(dist_esm.gG,{id:"props--tooltip-accessor",mdxType:"Story"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),tooltipAccessor_stories={title:"props",component:src.Vv,argTypes:{localizer:{control:{type:null}},events:{control:{type:null}},defaultDate:{control:{type:null}}},parameters:{docs:{page:MDXContent}}},Template=function Template(args){return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,Object.assign({},args))})};Template.displayName="Template";var TooltipAccessor=Template.bind({});TooltipAccessor.storyName="tooltipAccessor",TooltipAccessor.args=storyDefaults.o,TooltipAccessor.parameters=Object.assign({storySource:{source:'(args) => (\n  <div className="height600">\n    <Calendar {...args} />\n  </div>\n)'}},TooltipAccessor.parameters);var __namedExportsOrder=["TooltipAccessor"]},"./stories/props/view.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{View:function(){return View},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return view_stories}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),addon_links_react=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"view"},"view"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"string")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Views.MONTH (month|week|work_week|day|agenda)")),(0,esm.yg)("li",{parentName:"ul"},"controlled by: ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-view",mdxType:"LinkTo"},"onView"))),(0,esm.yg)("p",null,"The current view value of the calendar. Determines the visible 'view'.\nIf ",(0,esm.yg)("inlineCode",{parentName:"p"},"view")," is omitted then it is defaulted to 'month'."),(0,esm.yg)("p",null,"This is a controllable prop, when using ",(0,esm.yg)(addon_links_react.A,{kind:"props",story:"on-view",mdxType:"LinkTo"},"onView")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--view",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),view_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},View=function View(){var _useState=(0,react.useState)(new Date(2015,3,1)),_useState2=(0,slicedToArray.A)(_useState,2),date=_useState2[0],setDate=_useState2[1],_useState3=(0,react.useState)(src.Pp.WEEK),_useState4=(0,slicedToArray.A)(_useState3,2),view=_useState4[0],setView=_useState4[1],onNavigate=(0,react.useCallback)((function(newDate){return setDate(newDate)}),[setDate]),onView=(0,react.useCallback)((function(newView){return setView(newView)}),[setView]);return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{date:date,events:events.A,localizer:mLocalizer,onNavigate:onNavigate,onView:onView,view:view})})};View.displayName="View",View.storyName="view",View.parameters=Object.assign({storySource:{source:'function View() {\n  const [date, setDate] = useState(new Date(2015, 3, 1))\n  const [view, setView] = useState(Views.WEEK)\n\n  const onNavigate = useCallback((newDate) => setDate(newDate), [setDate])\n  const onView = useCallback((newView) => setView(newView), [setView])\n\n  return (\n    <div className="height600">\n      <Calendar\n        date={date}\n        events={demoEvents}\n        localizer={mLocalizer}\n        onNavigate={onNavigate}\n        onView={onView}\n        view={view}\n      />\n    </div>\n  )\n}'}},View.parameters);var __namedExportsOrder=["View"];View.__docgenInfo={description:"",methods:[],displayName:"View"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/view.stories.js"]={name:"View",docgenInfo:View.__docgenInfo,path:"stories/props/view.stories.js"})},"./stories/props/views.stories.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CalViews:function(){return CalViews},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return views_stories}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),moment=__webpack_require__("./node_modules/moment/moment.js"),moment_default=__webpack_require__.n(moment),src=__webpack_require__("./src/index.js"),events=__webpack_require__("./stories/resources/events.js"),esm=(__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js")),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,esm.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,esm.yg)("h1",{id:"views"},"views"),(0,esm.yg)("ul",null,(0,esm.yg)("li",{parentName:"ul"},"type: ",(0,esm.yg)("inlineCode",{parentName:"li"},"Views ('month'|'week'|'work_week'|'day'|'agenda')")),(0,esm.yg)("li",{parentName:"ul"},"default: ",(0,esm.yg)("inlineCode",{parentName:"li"},"[views.MONTH, views.WEEK, views.DAY, views.AGENDA]"))),(0,esm.yg)("p",null,"An array of built-in view names to allow the calendar to display. accepts either an array of builtin view names,"),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"views={['month', 'day', 'agenda']}\n")),(0,esm.yg)("p",null,"or an object hash of the view name and the component (or boolean for builtin)."),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"views={{\n  month: true,\n  week: false,\n  myweek: WorkWeekViewComponent,\n}}\n")),(0,esm.yg)("p",null,"Custom views can be any React component, that implements the following interface:"),(0,esm.yg)("pre",null,(0,esm.yg)("code",{parentName:"pre",className:"language-js"},"interface View {\n  static title(date: Date, { formats: DateFormat[], culture: string?, ...props }): string\n  static navigate(date: Date, action: 'PREV' | 'NEXT' | 'DATE'): Date\n}\n")),(0,esm.yg)(dist_esm.Hl,{mdxType:"Canvas"},(0,esm.yg)(dist_esm.gG,{id:"props--cal-views",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),mLocalizer=(0,src.ye)(moment_default()),views_stories={title:"props",component:src.Vv,parameters:{docs:{page:MDXContent}}},CalViews=function CalViews(){var _useMemo=(0,react.useMemo)((function(){return{defaultDate:new Date(2015,3,1),views:[src.Pp.MONTH,src.Pp.DAY,src.Pp.AGENDA]}}),[]),defaultDate=_useMemo.defaultDate,views=_useMemo.views;return(0,jsx_runtime.jsx)("div",{className:"height600",children:(0,jsx_runtime.jsx)(src.Vv,{defaultDate:defaultDate,events:events.A,localizer:mLocalizer,views:views})})};CalViews.displayName="CalViews",CalViews.storyName="views",CalViews.parameters=Object.assign({storySource:{source:'function CalViews() {\n  const { defaultDate, views } = useMemo(\n    () => ({\n      defaultDate: new Date(2015, 3, 1),\n      views: [Views.MONTH, Views.DAY, Views.AGENDA],\n    }),\n    []\n  )\n\n  return (\n    <div className="height600">\n      <Calendar\n        defaultDate={defaultDate}\n        events={demoEvents}\n        localizer={mLocalizer}\n        views={views}\n      />\n    </div>\n  )\n}'}},CalViews.parameters);var __namedExportsOrder=["CalViews"];CalViews.__docgenInfo={description:"",methods:[],displayName:"CalViews"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/props/views.stories.js"]={name:"CalViews",docgenInfo:CalViews.__docgenInfo,path:"stories/props/views.stories.js"})},"./src/BackgroundWrapper.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var _NoopWrapper__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/NoopWrapper.js");__webpack_exports__.A=_NoopWrapper__WEBPACK_IMPORTED_MODULE_0__.A},"./src/DateContentRow.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return src_DateContentRow}});var classCallCheck=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),createClass=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),callSuper=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/callSuper.js"),inherits=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),clsx_m=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),height=__webpack_require__("./node_modules/dom-helpers/esm/height.js"),querySelectorAll=__webpack_require__("./node_modules/dom-helpers/esm/querySelectorAll.js"),helpers=__webpack_require__("./src/utils/helpers.js"),selection=__webpack_require__("./src/utils/selection.js"),Selection=__webpack_require__("./src/Selection.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),BackgroundCells=function(_React$Component){function BackgroundCells(props,context){var _this;return(0,classCallCheck.default)(this,BackgroundCells),(_this=(0,callSuper.default)(this,BackgroundCells,[props,context])).state={selecting:!1},_this.containerRef=(0,react.createRef)(),_this}return(0,inherits.default)(BackgroundCells,_React$Component),(0,createClass.default)(BackgroundCells,[{key:"componentDidMount",value:function componentDidMount(){this.props.selectable&&this._selectable()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this._teardownSelectable()}},{key:"componentDidUpdate",value:function componentDidUpdate(prevProps){!prevProps.selectable&&this.props.selectable&&this._selectable(),prevProps.selectable&&!this.props.selectable&&this._teardownSelectable()}},{key:"render",value:function render(){var _this$props=this.props,range=_this$props.range,getNow=_this$props.getNow,getters=_this$props.getters,currentDate=_this$props.date,Wrapper=_this$props.components.dateCellWrapper,localizer=_this$props.localizer,_this$state=this.state,selecting=_this$state.selecting,startIdx=_this$state.startIdx,endIdx=_this$state.endIdx,current=getNow();return(0,jsx_runtime.jsx)("div",{className:"rbc-row-bg",ref:this.containerRef,children:range.map((function(date,index){var selected=selecting&&index>=startIdx&&index<=endIdx,_getters$dayProp=getters.dayProp(date),className=_getters$dayProp.className,style=_getters$dayProp.style;return(0,jsx_runtime.jsx)(Wrapper,{value:date,range:range,children:(0,jsx_runtime.jsx)("div",{style:style,className:(0,clsx_m.A)("rbc-day-bg",className,selected&&"rbc-selected-cell",localizer.isSameDate(date,current)&&"rbc-today",currentDate&&localizer.neq(currentDate,date,"month")&&"rbc-off-range-bg")})},index)}))})}},{key:"_selectable",value:function _selectable(){var _this2=this,node=this.containerRef.current,selector=this._selector=new Selection.Ay(this.props.container,{longPressThreshold:this.props.longPressThreshold}),selectorClicksHandler=function selectorClicksHandler(point,actionType){if(!(0,Selection.xH)(node,point)&&!(0,Selection.fN)(node,point)){var rowBox=(0,Selection.rF)(node),_this2$props=_this2.props,range=_this2$props.range,rtl=_this2$props.rtl;if((0,selection.bY)(rowBox,point)){var currentCell=(0,selection.sU)(rowBox,point.x,rtl,range.length);_this2._selectSlot({startIdx:currentCell,endIdx:currentCell,action:actionType,box:point})}}_this2._initial={},_this2.setState({selecting:!1})};selector.on("selecting",(function(box){var _this2$props2=_this2.props,range=_this2$props2.range,rtl=_this2$props2.rtl,startIdx=-1,endIdx=-1;if(_this2.state.selecting||((0,helpers.me)(_this2.props.onSelectStart,[box]),_this2._initial={x:box.x,y:box.y}),selector.isSelected(node)){var nodeBox=(0,Selection.rF)(node),_dateCellSelection=(0,selection.bx)(_this2._initial,nodeBox,box,range.length,rtl);startIdx=_dateCellSelection.startIdx,endIdx=_dateCellSelection.endIdx}_this2.setState({selecting:!0,startIdx:startIdx,endIdx:endIdx})})),selector.on("beforeSelect",(function(box){if("ignoreEvents"===_this2.props.selectable)return!(0,Selection.xH)(_this2.containerRef.current,box)})),selector.on("click",(function(point){return selectorClicksHandler(point,"click")})),selector.on("doubleClick",(function(point){return selectorClicksHandler(point,"doubleClick")})),selector.on("select",(function(bounds){_this2._selectSlot(Object.assign({},_this2.state,{action:"select",bounds:bounds})),_this2._initial={},_this2.setState({selecting:!1}),(0,helpers.me)(_this2.props.onSelectEnd,[_this2.state])}))}},{key:"_teardownSelectable",value:function _teardownSelectable(){this._selector&&(this._selector.teardown(),this._selector=null)}},{key:"_selectSlot",value:function _selectSlot(_ref){var endIdx=_ref.endIdx,startIdx=_ref.startIdx,action=_ref.action,bounds=_ref.bounds,box=_ref.box;-1!==endIdx&&-1!==startIdx&&this.props.onSelectSlot&&this.props.onSelectSlot({start:startIdx,end:endIdx,action:action,bounds:bounds,box:box,resourceId:this.props.resourceId})}}])}(react.Component);BackgroundCells.__docgenInfo={description:"",methods:[{name:"_selectable",docblock:null,modifiers:[],params:[],returns:null},{name:"_teardownSelectable",docblock:null,modifiers:[],params:[],returns:null},{name:"_selectSlot",docblock:null,modifiers:[],params:[{name:"{ endIdx, startIdx, action, bounds, box }",type:null}],returns:null}],displayName:"BackgroundCells",props:{date:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},getters:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},container:{description:"",type:{name:"func"},required:!1},dayPropGetter:{description:"",type:{name:"func"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!0},onSelectEnd:{description:"",type:{name:"func"},required:!1},onSelectStart:{description:"",type:{name:"func"},required:!1},range:{description:"",type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},type:{description:"",type:{name:"string"},required:!1},resourceId:{description:"",type:{name:"any"},required:!1},localizer:{description:"",type:{name:"any"},required:!1}}};var src_BackgroundCells=BackgroundCells;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/BackgroundCells.js"]={name:"BackgroundCells",docgenInfo:BackgroundCells.__docgenInfo,path:"src/BackgroundCells.js"});var EventRow=__webpack_require__("./src/EventRow.js"),EventRowMixin=(__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./src/EventRowMixin.js")),eventLevels=__webpack_require__("./src/utils/eventLevels.js"),range=__webpack_require__("./node_modules/lodash/range.js"),range_default=__webpack_require__.n(range),isSegmentInSlot=function isSegmentInSlot(seg,slot){return seg.left<=slot&&seg.right>=slot},eventsInSlot=function eventsInSlot(segments,slot){return segments.filter((function(seg){return isSegmentInSlot(seg,slot)})).map((function(seg){return seg.event}))},EventEndingRow=function(_React$Component){function EventEndingRow(){return(0,classCallCheck.default)(this,EventEndingRow),(0,callSuper.default)(this,EventEndingRow,arguments)}return(0,inherits.default)(EventEndingRow,_React$Component),(0,createClass.default)(EventEndingRow,[{key:"render",value:function render(){for(var _this$props=this.props,segments=_this$props.segments,slots=_this$props.slotMetrics.slots,rowSegments=(0,eventLevels.O_)(segments).levels[0],current=1,lastEnd=1,row=[];current<=slots;){var key="_lvl_"+current,_ref=rowSegments.filter((function(seg){return isSegmentInSlot(seg,current)}))[0]||{},event=_ref.event,left=_ref.left,right=_ref.right,span=_ref.span;if(event){var gap=Math.max(0,left-lastEnd);if(this.canRenderSlotEvent(left,span)){var content=EventRowMixin.A.renderEvent(this.props,event);gap&&row.push(EventRowMixin.A.renderSpan(slots,gap,key+"_gap")),row.push(EventRowMixin.A.renderSpan(slots,span,key,content)),lastEnd=current=right+1}else gap&&row.push(EventRowMixin.A.renderSpan(slots,gap,key+"_gap")),row.push(EventRowMixin.A.renderSpan(slots,1,key,this.renderShowMore(segments,current))),lastEnd=current+=1}else current++}return(0,jsx_runtime.jsx)("div",{className:"rbc-row",children:row})}},{key:"canRenderSlotEvent",value:function canRenderSlotEvent(slot,span){var segments=this.props.segments;return range_default()(slot,slot+span).every((function(s){return 1===eventsInSlot(segments,s).length}))}},{key:"renderShowMore",value:function renderShowMore(segments,slot){var _this=this,_this$props2=this.props,localizer=_this$props2.localizer,slotMetrics=_this$props2.slotMetrics,components=_this$props2.components,events=slotMetrics.getEventsForSlot(slot),remainingEvents=eventsInSlot(segments,slot),count=remainingEvents.length;if(null!=components&&components.showMore){var ShowMore=components.showMore,slotDate=slotMetrics.getDateForSlot(slot-1);return!!count&&(0,jsx_runtime.jsx)(ShowMore,{localizer:localizer,slotDate:slotDate,slot:slot,count:count,events:events,remainingEvents:remainingEvents})}return!!count&&(0,jsx_runtime.jsx)("button",{type:"button",className:(0,clsx_m.A)("rbc-button-link","rbc-show-more"),onClick:function onClick(e){return _this.showMore(slot,e)},children:localizer.messages.showMore(count,remainingEvents,events)},"sm_"+slot)}},{key:"showMore",value:function showMore(slot,e){e.preventDefault(),e.stopPropagation(),this.props.onShowMore(slot,e.target)}}])}(react.Component);EventEndingRow.defaultProps=Object.assign({},EventRowMixin.A.defaultProps),EventEndingRow.__docgenInfo={description:"",methods:[{name:"canRenderSlotEvent",docblock:null,modifiers:[],params:[{name:"slot",type:null},{name:"span",type:null}],returns:null},{name:"renderShowMore",docblock:null,modifiers:[],params:[{name:"segments",type:null},{name:"slot",type:null}],returns:null},{name:"showMore",docblock:null,modifiers:[],params:[{name:"slot",type:null},{name:"e",type:null}],returns:null}],displayName:"EventEndingRow",props:{segments:{description:"",type:{name:"array"},required:!1},slots:{description:"",type:{name:"number"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1}},composes:["./EventRowMixin"]};var src_EventEndingRow=EventEndingRow;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/EventEndingRow.js"]={name:"EventEndingRow",docgenInfo:EventEndingRow.__docgenInfo,path:"src/EventEndingRow.js"});var NoopWrapper=__webpack_require__("./src/NoopWrapper.js"),ScrollableWeekWrapper=function ScrollableWeekWrapper(_ref){var children=_ref.children;return(0,jsx_runtime.jsx)("div",{className:"rbc-row-content-scroll-container",children:children})};ScrollableWeekWrapper.displayName="ScrollableWeekWrapper",ScrollableWeekWrapper.__docgenInfo={description:"",methods:[],displayName:"ScrollableWeekWrapper"};var src_ScrollableWeekWrapper=ScrollableWeekWrapper;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ScrollableWeekWrapper.js"]={name:"ScrollableWeekWrapper",docgenInfo:ScrollableWeekWrapper.__docgenInfo,path:"src/ScrollableWeekWrapper.js"});__webpack_require__("./node_modules/core-js/modules/es.array.find.js");var memoize_one_esm=__webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js"),isEqual=function isEqual(a,b){return a[0].range===b[0].range&&a[0].events===b[0].events};function getSlotMetrics(){return(0,memoize_one_esm.A)((function(options){for(var range=options.range,events=options.events,maxRows=options.maxRows,minRows=options.minRows,accessors=options.accessors,localizer=options.localizer,_endOfRange=(0,eventLevels.qO)({dateRange:range,localizer:localizer}),first=_endOfRange.first,last=_endOfRange.last,segments=events.map((function(evt){return(0,eventLevels.FA)(evt,range,accessors,localizer)})),_eventLevels=(0,eventLevels.O_)(segments,Math.max(maxRows-1,1)),levels=_eventLevels.levels,extra=_eventLevels.extra,minEventRows=extra.length>0?minRows-1:minRows;levels.length<minEventRows;)levels.push([]);return{first:first,last:last,levels:levels,extra:extra,range:range,slots:range.length,clone:function clone(args){return getSlotMetrics()(Object.assign({},options,args))},getDateForSlot:function getDateForSlot(slotNumber){return range[slotNumber]},getSlotForDate:function getSlotForDate(date){return range.find((function(r){return localizer.isSameDate(r,date)}))},getEventsForSlot:function getEventsForSlot(slot){return segments.filter((function(seg){return function isSegmentInSlot(seg,slot){return seg.left<=slot&&seg.right>=slot}(seg,slot)})).map((function(seg){return seg.event}))},continuesPrior:function continuesPrior(event){return localizer.continuesPrior(accessors.start(event),first)},continuesAfter:function continuesAfter(event){var start=accessors.start(event),end=accessors.end(event);return localizer.continuesAfter(start,end,last)}}}),isEqual)}var DateContentRow=function(_React$Component){function DateContentRow(){var _this;(0,classCallCheck.default)(this,DateContentRow);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,DateContentRow,[].concat(args))).handleSelectSlot=function(slot){var _this$props=_this.props,range=_this$props.range;(0,_this$props.onSelectSlot)(range.slice(slot.start,slot.end+1),slot)},_this.handleShowMore=function(slot,target){var cell,_this$props2=_this.props,range=_this$props2.range,onShowMore=_this$props2.onShowMore,metrics=_this.slotMetrics(_this.props),row=(0,querySelectorAll.A)(_this.containerRef.current,".rbc-row-bg")[0];row&&(cell=row.children[slot-1]),onShowMore(metrics.getEventsForSlot(slot),range[slot-1],cell,slot,target)},_this.getContainer=function(){var container=_this.props.container;return container?container():_this.containerRef.current},_this.renderHeadingCell=function(date,index){var _this$props3=_this.props,renderHeader=_this$props3.renderHeader,getNow=_this$props3.getNow,localizer=_this$props3.localizer;return renderHeader({date:date,key:"header_".concat(index),className:(0,clsx_m.A)("rbc-date-cell",localizer.isSameDate(date,getNow())&&"rbc-now")})},_this.renderDummy=function(){var _this$props4=_this.props,className=_this$props4.className,range=_this$props4.range,renderHeader=_this$props4.renderHeader,showAllEvents=_this$props4.showAllEvents;return(0,jsx_runtime.jsx)("div",{className:className,ref:_this.containerRef,children:(0,jsx_runtime.jsxs)("div",{className:(0,clsx_m.A)("rbc-row-content",showAllEvents&&"rbc-row-content-scrollable"),children:[renderHeader&&(0,jsx_runtime.jsx)("div",{className:"rbc-row",ref:_this.headingRowRef,children:range.map(_this.renderHeadingCell)}),(0,jsx_runtime.jsx)("div",{className:"rbc-row",ref:_this.eventRowRef,children:(0,jsx_runtime.jsx)("div",{className:"rbc-row-segment",children:(0,jsx_runtime.jsx)("div",{className:"rbc-event",children:(0,jsx_runtime.jsx)("div",{className:"rbc-event-content",children:" "})})})})]})})},_this.containerRef=(0,react.createRef)(),_this.headingRowRef=(0,react.createRef)(),_this.eventRowRef=(0,react.createRef)(),_this.slotMetrics=getSlotMetrics(),_this}return(0,inherits.default)(DateContentRow,_React$Component),(0,createClass.default)(DateContentRow,[{key:"getRowLimit",value:function getRowLimit(){var _this$headingRowRef,eventHeight=(0,height.A)(this.eventRowRef.current,!0),headingHeight=null!==(_this$headingRowRef=this.headingRowRef)&&void 0!==_this$headingRowRef&&_this$headingRowRef.current?(0,height.A)(this.headingRowRef.current,!0):0,eventSpace=(0,height.A)(this.containerRef.current,!0)-headingHeight;return Math.max(Math.floor(eventSpace/eventHeight),1)}},{key:"render",value:function render(){var _this$props5=this.props,date=_this$props5.date,rtl=_this$props5.rtl,range=_this$props5.range,className=_this$props5.className,selected=_this$props5.selected,selectable=_this$props5.selectable,renderForMeasure=_this$props5.renderForMeasure,accessors=_this$props5.accessors,getters=_this$props5.getters,components=_this$props5.components,getNow=_this$props5.getNow,renderHeader=_this$props5.renderHeader,onSelect=_this$props5.onSelect,localizer=_this$props5.localizer,onSelectStart=_this$props5.onSelectStart,onSelectEnd=_this$props5.onSelectEnd,onDoubleClick=_this$props5.onDoubleClick,onKeyPress=_this$props5.onKeyPress,resourceId=_this$props5.resourceId,longPressThreshold=_this$props5.longPressThreshold,isAllDay=_this$props5.isAllDay,resizable=_this$props5.resizable,showAllEvents=_this$props5.showAllEvents;if(renderForMeasure)return this.renderDummy();var metrics=this.slotMetrics(this.props),levels=metrics.levels,extra=metrics.extra,ScrollableWeekComponent=showAllEvents?src_ScrollableWeekWrapper:NoopWrapper.A,WeekWrapper=components.weekWrapper,eventRowProps={selected:selected,accessors:accessors,getters:getters,localizer:localizer,components:components,onSelect:onSelect,onDoubleClick:onDoubleClick,onKeyPress:onKeyPress,resourceId:resourceId,slotMetrics:metrics,resizable:resizable};return(0,jsx_runtime.jsxs)("div",{className:className,role:"rowgroup",ref:this.containerRef,children:[(0,jsx_runtime.jsx)(src_BackgroundCells,{localizer:localizer,date:date,getNow:getNow,rtl:rtl,range:range,selectable:selectable,container:this.getContainer,getters:getters,onSelectStart:onSelectStart,onSelectEnd:onSelectEnd,onSelectSlot:this.handleSelectSlot,components:components,longPressThreshold:longPressThreshold,resourceId:resourceId}),(0,jsx_runtime.jsxs)("div",{className:(0,clsx_m.A)("rbc-row-content",showAllEvents&&"rbc-row-content-scrollable"),role:"row",children:[renderHeader&&(0,jsx_runtime.jsx)("div",{className:"rbc-row ",ref:this.headingRowRef,children:range.map(this.renderHeadingCell)}),(0,jsx_runtime.jsx)(ScrollableWeekComponent,{children:(0,jsx_runtime.jsxs)(WeekWrapper,Object.assign({isAllDay:isAllDay},eventRowProps,{rtl:this.props.rtl,children:[levels.map((function(segs,idx){return(0,jsx_runtime.jsx)(EventRow.A,Object.assign({segments:segs},eventRowProps),idx)})),!!extra.length&&(0,jsx_runtime.jsx)(src_EventEndingRow,Object.assign({segments:extra,onShowMore:this.handleShowMore},eventRowProps))]}))})]})]})}}])}(react.Component);DateContentRow.defaultProps={minRows:0,maxRows:1/0},DateContentRow.__docgenInfo={description:"",methods:[{name:"handleSelectSlot",docblock:null,modifiers:[],params:[{name:"slot",type:null}],returns:null},{name:"handleShowMore",docblock:null,modifiers:[],params:[{name:"slot",type:null},{name:"target",type:null}],returns:null},{name:"getContainer",docblock:null,modifiers:[],params:[],returns:null},{name:"getRowLimit",docblock:null,modifiers:[],params:[],returns:null},{name:"renderHeadingCell",docblock:null,modifiers:[],params:[{name:"date",type:null},{name:"index",type:null}],returns:null},{name:"renderDummy",docblock:null,modifiers:[],params:[],returns:null}],displayName:"DateContentRow",props:{minRows:{defaultValue:{value:"0",computed:!1},description:"",type:{name:"number"},required:!1},maxRows:{defaultValue:{value:"Infinity",computed:!0},description:"",type:{name:"number"},required:!1},date:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},events:{description:"",type:{name:"array"},required:!0},range:{description:"",type:{name:"array"},required:!0},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},resourceId:{description:"",type:{name:"any"},required:!1},renderForMeasure:{description:"",type:{name:"bool"},required:!1},renderHeader:{description:"",type:{name:"func"},required:!1},container:{description:"",type:{name:"func"},required:!1},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},showAllEvents:{description:"",type:{name:"bool"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelect:{description:"",type:{name:"func"},required:!1},onSelectEnd:{description:"",type:{name:"func"},required:!1},onSelectStart:{description:"",type:{name:"func"},required:!1},onDoubleClick:{description:"",type:{name:"func"},required:!1},onKeyPress:{description:"",type:{name:"func"},required:!1},dayPropGetter:{description:"",type:{name:"func"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},isAllDay:{description:"",type:{name:"bool"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0}}};var src_DateContentRow=DateContentRow;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/DateContentRow.js"]={name:"DateContentRow",docgenInfo:DateContentRow.__docgenInfo,path:"src/DateContentRow.js"})},"./src/EventCell.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),_babel_runtime_helpers_esm_callSuper__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/callSuper.js"),_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),react__WEBPACK_IMPORTED_MODULE_1__=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),clsx__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["style","className","event","selected","isAllDay","onSelect","onDoubleClick","onKeyPress","localizer","continuesPrior","continuesAfter","accessors","getters","children","components","slotStart","slotEnd"],EventCell=function(_React$Component){function EventCell(){return(0,_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__.default)(this,EventCell),(0,_babel_runtime_helpers_esm_callSuper__WEBPACK_IMPORTED_MODULE_4__.default)(this,EventCell,arguments)}return(0,_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__.default)(EventCell,_React$Component),(0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__.default)(EventCell,[{key:"render",value:function render(){var _this$props=this.props,style=_this$props.style,className=_this$props.className,event=_this$props.event,selected=_this$props.selected,isAllDay=_this$props.isAllDay,onSelect=_this$props.onSelect,_onDoubleClick=_this$props.onDoubleClick,onKeyPress=_this$props.onKeyPress,localizer=_this$props.localizer,continuesPrior=_this$props.continuesPrior,continuesAfter=_this$props.continuesAfter,accessors=_this$props.accessors,getters=_this$props.getters,children=_this$props.children,_this$props$component=_this$props.components,Event=_this$props$component.event,EventWrapper=_this$props$component.eventWrapper,slotStart=_this$props.slotStart,slotEnd=_this$props.slotEnd,props=(0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_7__.A)(_this$props,_excluded);delete props.resizable;var title=accessors.title(event),tooltip=accessors.tooltip(event),end=accessors.end(event),start=accessors.start(event),allDay=accessors.allDay(event),showAsAllDay=isAllDay||allDay||localizer.diff(start,localizer.ceil(end,"day"),"day")>1,userProps=getters.eventProp(event,start,end,selected),content=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"rbc-event-content",title:tooltip||void 0,children:Event?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Event,{event:event,continuesPrior:continuesPrior,continuesAfter:continuesAfter,title:title,isAllDay:allDay,localizer:localizer,slotStart:slotStart,slotEnd:slotEnd}):title});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(EventWrapper,Object.assign({},this.props,{type:"date",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",Object.assign({},props,{style:Object.assign({},userProps.style,style),className:(0,clsx__WEBPACK_IMPORTED_MODULE_8__.A)("rbc-event",className,userProps.className,{"rbc-selected":selected,"rbc-event-allday":showAsAllDay,"rbc-event-continues-prior":continuesPrior,"rbc-event-continues-after":continuesAfter}),onClick:function onClick(e){return onSelect&&onSelect(event,e)},onDoubleClick:function onDoubleClick(e){return _onDoubleClick&&_onDoubleClick(event,e)},onKeyDown:function onKeyDown(e){return onKeyPress&&onKeyPress(event,e)},children:"function"==typeof children?children(content):content}))}))}}])}(react__WEBPACK_IMPORTED_MODULE_1__.Component);EventCell.__docgenInfo={description:"",methods:[],displayName:"EventCell",props:{event:{description:"",type:{name:"object"},required:!0},slotStart:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},slotEnd:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},selected:{description:"",type:{name:"bool"},required:!1},isAllDay:{description:"",type:{name:"bool"},required:!1},continuesPrior:{description:"",type:{name:"bool"},required:!1},continuesAfter:{description:"",type:{name:"bool"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!1},onSelect:{description:"",type:{name:"func"},required:!1},onDoubleClick:{description:"",type:{name:"func"},required:!1},onKeyPress:{description:"",type:{name:"func"},required:!1}}},__webpack_exports__.A=EventCell,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/EventCell.js"]={name:"EventCell",docgenInfo:EventCell.__docgenInfo,path:"src/EventCell.js"})},"./src/EventRow.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),_babel_runtime_helpers_esm_callSuper__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/callSuper.js"),_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),clsx__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/clsx/dist/clsx.m.js")),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_EventRowMixin__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/EventRowMixin.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js"),EventRow=function(_React$Component){function EventRow(){return(0,_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__.default)(this,EventRow),(0,_babel_runtime_helpers_esm_callSuper__WEBPACK_IMPORTED_MODULE_5__.default)(this,EventRow,arguments)}return(0,_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__.default)(EventRow,_React$Component),(0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__.default)(EventRow,[{key:"render",value:function render(){var _this=this,_this$props=this.props,segments=_this$props.segments,slots=_this$props.slotMetrics.slots,className=_this$props.className,lastEnd=1;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:(0,clsx__WEBPACK_IMPORTED_MODULE_8__.A)(className,"rbc-row"),children:segments.reduce((function(row,_ref,li){var event=_ref.event,left=_ref.left,right=_ref.right,span=_ref.span,key="_lvl_"+li,gap=left-lastEnd,content=_EventRowMixin__WEBPACK_IMPORTED_MODULE_2__.A.renderEvent(_this.props,event);return gap&&row.push(_EventRowMixin__WEBPACK_IMPORTED_MODULE_2__.A.renderSpan(slots,gap,"".concat(key,"_gap"))),row.push(_EventRowMixin__WEBPACK_IMPORTED_MODULE_2__.A.renderSpan(slots,span,key,content)),lastEnd=right+1,row}),[])})}}])}(react__WEBPACK_IMPORTED_MODULE_1__.Component);EventRow.defaultProps=Object.assign({},_EventRowMixin__WEBPACK_IMPORTED_MODULE_2__.A.defaultProps),EventRow.__docgenInfo={description:"",methods:[],displayName:"EventRow",props:{segments:{description:"",type:{name:"array"},required:!1}},composes:["./EventRowMixin"]},__webpack_exports__.A=EventRow,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/EventRow.js"]={name:"EventRow",docgenInfo:EventRow.__docgenInfo,path:"src/EventRow.js"})},"./src/EventRowMixin.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),_EventCell__WEBPACK_IMPORTED_MODULE_1__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/EventCell.js")),_utils_selection__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/selection.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.A={propTypes:{slotMetrics:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,selected:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object,isAllDay:prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool,accessors:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,localizer:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,components:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,getters:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,onSelect:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,onDoubleClick:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,onKeyPress:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func},defaultProps:{segments:[],selected:{}},renderEvent:function renderEvent(props,event){var selected=props.selected,accessors=(props.isAllDay,props.accessors),getters=props.getters,onSelect=props.onSelect,onDoubleClick=props.onDoubleClick,onKeyPress=props.onKeyPress,localizer=props.localizer,slotMetrics=props.slotMetrics,components=props.components,resizable=props.resizable,continuesPrior=slotMetrics.continuesPrior(event),continuesAfter=slotMetrics.continuesAfter(event);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_EventCell__WEBPACK_IMPORTED_MODULE_1__.A,{event:event,getters:getters,localizer:localizer,accessors:accessors,components:components,onSelect:onSelect,onDoubleClick:onDoubleClick,onKeyPress:onKeyPress,continuesPrior:continuesPrior,continuesAfter:continuesAfter,slotStart:slotMetrics.first,slotEnd:slotMetrics.last,selected:(0,_utils_selection__WEBPACK_IMPORTED_MODULE_2__.sp)(event,selected),resizable:resizable})},renderSpan:function renderSpan(slots,len,key){var content=arguments.length>3&&void 0!==arguments[3]?arguments[3]:" ",per=Math.abs(len)/slots*100+"%";return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"rbc-row-segment",style:{WebkitFlexBasis:per,flexBasis:per,maxWidth:per},children:content},key)}}},"./src/Header.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),Header=function Header(_ref){var label=_ref.label;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("span",{role:"columnheader","aria-sort":"none",children:label})};Header.displayName="Header",Header.__docgenInfo={description:"",methods:[],displayName:"Header",props:{label:{description:"",type:{name:"node"},required:!1}}},__webpack_exports__.A=Header,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Header.js"]={name:"Header",docgenInfo:Header.__docgenInfo,path:"src/Header.js"})},"./src/NoopWrapper.js":function(__unused_webpack_module,__webpack_exports__){"use strict";__webpack_exports__.A=function NoopWrapper(props){return props.children}},"./src/PopOverlay.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return src_PopOverlay}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),Overlay=__webpack_require__("./node_modules/react-overlays/esm/Overlay.js");__webpack_require__("./node_modules/core-js/modules/es.array.map.js");var EventCell=__webpack_require__("./src/EventCell.js"),selection=__webpack_require__("./src/utils/selection.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Pop(_ref){var containerRef=_ref.containerRef,accessors=_ref.accessors,getters=_ref.getters,selected=_ref.selected,components=_ref.components,localizer=_ref.localizer,show=_ref.show,events=_ref.events,slotStart=_ref.slotStart,slotEnd=_ref.slotEnd,onSelect=_ref.onSelect,onDoubleClick=_ref.onDoubleClick,onKeyPress=_ref.onKeyPress,handleDragStart=_ref.handleDragStart,popperRef=_ref.popperRef,target=_ref.target,offset=_ref.offset;return function useClickOutside(_ref){var ref=_ref.ref,callback=_ref.callback;(0,react.useEffect)((function(){var handleClickOutside=function handleClickOutside(e){ref.current&&!ref.current.contains(e.target)&&callback()};return document.addEventListener("mousedown",handleClickOutside),function(){document.removeEventListener("mousedown",handleClickOutside)}}),[ref,callback])}({ref:popperRef,callback:show}),(0,react.useLayoutEffect)((function(){if(popperRef.current&&containerRef.current&&target){var targetRect=target.getBoundingClientRect(),containerRect=containerRef.current.getBoundingClientRect(),popperRect=popperRef.current.getBoundingClientRect(),rbcDayBg=popperRef.current.parentElement.querySelector(".rbc-day-bg"),topOffset=targetRect.bottom+offset.y>containerRect.bottom+window.scrollY?targetRect.top-popperRect.height-offset.y+window.scrollY:targetRect.bottom+offset.y+window.scrollY,leftOffset=targetRect.right+250>containerRect.right?targetRect.left-250+targetRect.width:targetRect.left;if(rbcDayBg){var rbcDayBgWidth=rbcDayBg.getBoundingClientRect().width;rbcDayBgWidth&&rbcDayBgWidth>0&&(popperRef.current.style.minWidth="".concat(rbcDayBgWidth,"px"))}popperRef.current.style.top="".concat(topOffset,"px"),popperRef.current.style.left="".concat(leftOffset,"px")}}),[offset.x,offset.y,target,containerRef,popperRef]),(0,jsx_runtime.jsxs)("div",{className:"rbc-overlay",ref:popperRef,children:[(0,jsx_runtime.jsx)("div",{className:"rbc-overlay-header",children:localizer.format(slotStart,"dayHeaderFormat")}),events.map((function(event,idx){return(0,jsx_runtime.jsx)(EventCell.A,{type:"popup",localizer:localizer,event:event,getters:getters,onSelect:onSelect,accessors:accessors,components:components,onDoubleClick:onDoubleClick,onKeyPress:onKeyPress,continuesPrior:localizer.lt(accessors.end(event),slotStart,"day"),continuesAfter:localizer.gte(accessors.start(event),slotEnd,"day"),slotStart:slotStart,slotEnd:slotEnd,selected:(0,selection.sp)(event,selected),draggable:!0,onDragStart:function onDragStart(){return handleDragStart(event)},onDragEnd:function onDragEnd(){return show()}},idx)}))]})}Pop.displayName="Pop";var Popup=react.forwardRef((function(props,ref){return(0,jsx_runtime.jsx)(Pop,Object.assign({},props,{popperRef:ref}))}));Popup.propTypes={accessors:prop_types_default().object.isRequired,getters:prop_types_default().object.isRequired,selected:prop_types_default().object,components:prop_types_default().object.isRequired,localizer:prop_types_default().object.isRequired,position:prop_types_default().object.isRequired,show:prop_types_default().func.isRequired,events:prop_types_default().array.isRequired,slotStart:prop_types_default().instanceOf(Date).isRequired,slotEnd:prop_types_default().instanceOf(Date),onSelect:prop_types_default().func,onDoubleClick:prop_types_default().func,onKeyPress:prop_types_default().func,handleDragStart:prop_types_default().func,style:prop_types_default().object,offset:prop_types_default().shape({x:prop_types_default().number,y:prop_types_default().number})},Popup.__docgenInfo={description:"",methods:[],displayName:"Popup",props:{accessors:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},selected:{description:"",type:{name:"object"},required:!1},components:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},position:{description:"",type:{name:"object"},required:!0},show:{description:"",type:{name:"func"},required:!0},events:{description:"",type:{name:"array"},required:!0},slotStart:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},slotEnd:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},onSelect:{description:"",type:{name:"func"},required:!1},onDoubleClick:{description:"",type:{name:"func"},required:!1},onKeyPress:{description:"",type:{name:"func"},required:!1},handleDragStart:{description:"",type:{name:"func"},required:!1},style:{description:"",type:{name:"object"},required:!1},offset:{description:"",type:{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}},required:!1}}};var src_Popup=Popup;function CalOverlay(_ref){var containerRef=_ref.containerRef,_ref$popupOffset=_ref.popupOffset,popupOffset=void 0===_ref$popupOffset?5:_ref$popupOffset,overlay=_ref.overlay,accessors=_ref.accessors,localizer=_ref.localizer,components=_ref.components,getters=_ref.getters,selected=_ref.selected,handleSelectEvent=_ref.handleSelectEvent,handleDoubleClickEvent=_ref.handleDoubleClickEvent,handleKeyPressEvent=_ref.handleKeyPressEvent,handleDragStart=_ref.handleDragStart,onHide=_ref.onHide,overlayDisplay=_ref.overlayDisplay,popperRef=(0,react.useRef)(null);if(!overlay.position)return null;var offset=popupOffset;isNaN(popupOffset)||(offset={x:popupOffset,y:popupOffset});var position=overlay.position,events=overlay.events,date=overlay.date,end=overlay.end;return(0,jsx_runtime.jsx)(Overlay.A,{rootClose:!0,flip:!0,show:!0,placement:"bottom",onHide:onHide,target:overlay.target,children:function children(_ref2){var props=_ref2.props;return(0,jsx_runtime.jsx)(src_Popup,Object.assign({},props,{containerRef:containerRef,ref:popperRef,target:overlay.target,offset:offset,accessors:accessors,getters:getters,selected:selected,components:components,localizer:localizer,position:position,show:overlayDisplay,events:events,slotStart:date,slotEnd:end,onSelect:handleSelectEvent,onDoubleClick:handleDoubleClickEvent,onKeyPress:handleKeyPressEvent,handleDragStart:handleDragStart}))}})}"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Popup.js"]={name:"Popup",docgenInfo:Popup.__docgenInfo,path:"src/Popup.js"}),CalOverlay.displayName="CalOverlay";var PopOverlay=react.forwardRef((function(props,ref){return(0,jsx_runtime.jsx)(CalOverlay,Object.assign({},props,{containerRef:ref}))}));PopOverlay.propTypes={popupOffset:prop_types_default().oneOfType([prop_types_default().number,prop_types_default().shape({x:prop_types_default().number,y:prop_types_default().number})]),overlay:prop_types_default().shape({position:prop_types_default().object,events:prop_types_default().array,date:prop_types_default().instanceOf(Date),end:prop_types_default().instanceOf(Date)}),accessors:prop_types_default().object.isRequired,localizer:prop_types_default().object.isRequired,components:prop_types_default().object.isRequired,getters:prop_types_default().object.isRequired,selected:prop_types_default().object,handleSelectEvent:prop_types_default().func,handleDoubleClickEvent:prop_types_default().func,handleKeyPressEvent:prop_types_default().func,handleDragStart:prop_types_default().func,onHide:prop_types_default().func,overlayDisplay:prop_types_default().func},PopOverlay.__docgenInfo={description:"",methods:[],displayName:"PopOverlay",props:{popupOffset:{description:"",type:{name:"union",value:[{name:"number"},{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}}]},required:!1},overlay:{description:"",type:{name:"shape",value:{position:{name:"object",required:!1},events:{name:"array",required:!1},date:{name:"instanceOf",value:"Date",required:!1},end:{name:"instanceOf",value:"Date",required:!1}}},required:!1},accessors:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},selected:{description:"",type:{name:"object"},required:!1},handleSelectEvent:{description:"",type:{name:"func"},required:!1},handleDoubleClickEvent:{description:"",type:{name:"func"},required:!1},handleKeyPressEvent:{description:"",type:{name:"func"},required:!1},handleDragStart:{description:"",type:{name:"func"},required:!1},onHide:{description:"",type:{name:"func"},required:!1},overlayDisplay:{description:"",type:{name:"func"},required:!1}}};var src_PopOverlay=PopOverlay;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/PopOverlay.js"]={name:"PopOverlay",docgenInfo:PopOverlay.__docgenInfo,path:"src/PopOverlay.js"})},"./src/Selection.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{LP:function(){return getEventNodeFromPoint},fN:function(){return isShowMore},rF:function(){return getBoundsForNode},xH:function(){return isEvent}});var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),dom_helpers_contains__WEBPACK_IMPORTED_MODULE_6__=(__webpack_require__("./node_modules/core-js/modules/es.array.splice.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("./node_modules/dom-helpers/esm/contains.js")),dom_helpers_closest__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/dom-helpers/esm/closest.js"),dom_helpers_listen__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/dom-helpers/esm/listen.js");function addEventListener(type,handler){var target=arguments.length>2&&void 0!==arguments[2]?arguments[2]:document;return(0,dom_helpers_listen__WEBPACK_IMPORTED_MODULE_5__.A)(target,type,handler,{passive:!1})}function getEventNodeFromPoint(node,_ref){var clientX=_ref.clientX,clientY=_ref.clientY,target=document.elementFromPoint(clientX,clientY);return(0,dom_helpers_closest__WEBPACK_IMPORTED_MODULE_7__.A)(target,".rbc-event",node)}function isEvent(node,bounds){return!!getEventNodeFromPoint(node,bounds)}function isShowMore(node,bounds){return!!function getShowMoreNodeFromPoint(node,_ref2){var clientX=_ref2.clientX,clientY=_ref2.clientY,target=document.elementFromPoint(clientX,clientY);return(0,dom_helpers_closest__WEBPACK_IMPORTED_MODULE_7__.A)(target,".rbc-show-more",node)}(node,bounds)}function getEventCoordinates(e){var target=e;return e.touches&&e.touches.length&&(target=e.touches[0]),{clientX:target.clientX,clientY:target.clientY,pageX:target.pageX,pageY:target.pageY}}var Selection=function(){return(0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_9__.default)((function Selection(node){var _ref3=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_ref3$global=_ref3.global,global=void 0!==_ref3$global&&_ref3$global,_ref3$longPressThresh=_ref3.longPressThreshold,longPressThreshold=void 0===_ref3$longPressThresh?250:_ref3$longPressThresh,_ref3$validContainers=_ref3.validContainers,validContainers=void 0===_ref3$validContainers?[]:_ref3$validContainers;(0,_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__.default)(this,Selection),this._initialEvent=null,this.selecting=!1,this.isDetached=!1,this.container=node,this.globalMouse=!node||global,this.longPressThreshold=longPressThreshold,this.validContainers=validContainers,this._listeners=Object.create(null),this._handleInitialEvent=this._handleInitialEvent.bind(this),this._handleMoveEvent=this._handleMoveEvent.bind(this),this._handleTerminatingEvent=this._handleTerminatingEvent.bind(this),this._keyListener=this._keyListener.bind(this),this._dropFromOutsideListener=this._dropFromOutsideListener.bind(this),this._dragOverFromOutsideListener=this._dragOverFromOutsideListener.bind(this),this._removeTouchMoveWindowListener=addEventListener("touchmove",(function(){}),window),this._removeKeyDownListener=addEventListener("keydown",this._keyListener),this._removeKeyUpListener=addEventListener("keyup",this._keyListener),this._removeDropFromOutsideListener=addEventListener("drop",this._dropFromOutsideListener),this._removeDragOverFromOutsideListener=addEventListener("dragover",this._dragOverFromOutsideListener),this._addInitialEventListener()}),[{key:"on",value:function on(type,handler){var handlers=this._listeners[type]||(this._listeners[type]=[]);return handlers.push(handler),{remove:function remove(){var idx=handlers.indexOf(handler);-1!==idx&&handlers.splice(idx,1)}}}},{key:"emit",value:function emit(type){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];var result;return(this._listeners[type]||[]).forEach((function(fn){void 0===result&&(result=fn.apply(void 0,args))})),result}},{key:"teardown",value:function teardown(){this._initialEvent=null,this._initialEventData=null,this._selectRect=null,this.selecting=!1,this._lastClickData=null,this.isDetached=!0,this._listeners=Object.create(null),this._removeTouchMoveWindowListener&&this._removeTouchMoveWindowListener(),this._removeInitialEventListener&&this._removeInitialEventListener(),this._removeEndListener&&this._removeEndListener(),this._onEscListener&&this._onEscListener(),this._removeMoveListener&&this._removeMoveListener(),this._removeKeyUpListener&&this._removeKeyUpListener(),this._removeKeyDownListener&&this._removeKeyDownListener(),this._removeDropFromOutsideListener&&this._removeDropFromOutsideListener(),this._removeDragOverFromOutsideListener&&this._removeDragOverFromOutsideListener()}},{key:"isSelected",value:function isSelected(node){var box=this._selectRect;return!(!box||!this.selecting)&&objectsCollide(box,getBoundsForNode(node))}},{key:"filter",value:function filter(items){return this._selectRect&&this.selecting?items.filter(this.isSelected,this):[]}},{key:"_addLongPressListener",value:function _addLongPressListener(handler,initialEvent){var _this=this,timer=null,removeTouchMoveListener=null,removeTouchEndListener=null,handleTouchStart=function handleTouchStart(initialEvent){timer=setTimeout((function(){cleanup(),handler(initialEvent)}),_this.longPressThreshold),removeTouchMoveListener=addEventListener("touchmove",(function(){return cleanup()})),removeTouchEndListener=addEventListener("touchend",(function(){return cleanup()}))},removeTouchStartListener=addEventListener("touchstart",handleTouchStart),cleanup=function cleanup(){timer&&clearTimeout(timer),removeTouchMoveListener&&removeTouchMoveListener(),removeTouchEndListener&&removeTouchEndListener(),timer=null,removeTouchMoveListener=null,removeTouchEndListener=null};return initialEvent&&handleTouchStart(initialEvent),function(){cleanup(),removeTouchStartListener()}}},{key:"_addInitialEventListener",value:function _addInitialEventListener(){var _this2=this,removeMouseDownListener=addEventListener("mousedown",(function(e){_this2._removeInitialEventListener(),_this2._handleInitialEvent(e),_this2._removeInitialEventListener=addEventListener("mousedown",_this2._handleInitialEvent)})),removeTouchStartListener=addEventListener("touchstart",(function(e){_this2._removeInitialEventListener(),_this2._removeInitialEventListener=_this2._addLongPressListener(_this2._handleInitialEvent,e)}));this._removeInitialEventListener=function(){removeMouseDownListener(),removeTouchStartListener()}}},{key:"_dropFromOutsideListener",value:function _dropFromOutsideListener(e){var _getEventCoordinates=getEventCoordinates(e),pageX=_getEventCoordinates.pageX,pageY=_getEventCoordinates.pageY,clientX=_getEventCoordinates.clientX,clientY=_getEventCoordinates.clientY;this.emit("dropFromOutside",{x:pageX,y:pageY,clientX:clientX,clientY:clientY}),e.preventDefault()}},{key:"_dragOverFromOutsideListener",value:function _dragOverFromOutsideListener(e){var _getEventCoordinates2=getEventCoordinates(e),pageX=_getEventCoordinates2.pageX,pageY=_getEventCoordinates2.pageY,clientX=_getEventCoordinates2.clientX,clientY=_getEventCoordinates2.clientY;this.emit("dragOverFromOutside",{x:pageX,y:pageY,clientX:clientX,clientY:clientY}),e.preventDefault()}},{key:"_handleInitialEvent",value:function _handleInitialEvent(e){if(this._initialEvent=e,!this.isDetached){var offsetData,_getEventCoordinates3=getEventCoordinates(e),clientX=_getEventCoordinates3.clientX,clientY=_getEventCoordinates3.clientY,pageX=_getEventCoordinates3.pageX,pageY=_getEventCoordinates3.pageY,node=this.container();if(3!==e.which&&2!==e.button&&function isOverContainer(container,x,y){return!container||(0,dom_helpers_contains__WEBPACK_IMPORTED_MODULE_6__.A)(container,document.elementFromPoint(x,y))}(node,clientX,clientY)){if(!this.globalMouse&&node&&!(0,dom_helpers_contains__WEBPACK_IMPORTED_MODULE_6__.A)(node,e.target)){var _normalizeDistance=function normalizeDistance(){var distance=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;"object"!=typeof distance&&(distance={top:distance,left:distance,right:distance,bottom:distance});return distance}(0),top=_normalizeDistance.top,left=_normalizeDistance.left,bottom=_normalizeDistance.bottom,right=_normalizeDistance.right;if(!objectsCollide({top:(offsetData=getBoundsForNode(node)).top-top,left:offsetData.left-left,bottom:offsetData.bottom+bottom,right:offsetData.right+right},{top:pageY,left:pageX}))return}if(!1!==this.emit("beforeSelect",this._initialEventData={isTouch:/^touch/.test(e.type),x:pageX,y:pageY,clientX:clientX,clientY:clientY}))switch(e.type){case"mousedown":this._removeEndListener=addEventListener("mouseup",this._handleTerminatingEvent),this._onEscListener=addEventListener("keydown",this._handleTerminatingEvent),this._removeMoveListener=addEventListener("mousemove",this._handleMoveEvent);break;case"touchstart":this._handleMoveEvent(e),this._removeEndListener=addEventListener("touchend",this._handleTerminatingEvent),this._removeMoveListener=addEventListener("touchmove",this._handleMoveEvent)}}}}},{key:"_isWithinValidContainer",value:function _isWithinValidContainer(e){var eventTarget=e.target,containers=this.validContainers;return!(containers&&containers.length&&eventTarget)||containers.some((function(target){return!!eventTarget.closest(target)}))}},{key:"_handleTerminatingEvent",value:function _handleTerminatingEvent(e){var selecting=this.selecting,bounds=this._selectRect;if(!selecting&&e.type.includes("key")&&(e=this._initialEvent),this.selecting=!1,this._removeEndListener&&this._removeEndListener(),this._removeMoveListener&&this._removeMoveListener(),this._selectRect=null,this._initialEvent=null,this._initialEventData=null,e){var inRoot=!this.container||(0,dom_helpers_contains__WEBPACK_IMPORTED_MODULE_6__.A)(this.container(),e.target),isWithinValidContainer=this._isWithinValidContainer(e);return"Escape"!==e.key&&isWithinValidContainer?!selecting&&inRoot?this._handleClickEvent(e):selecting?this.emit("select",bounds):this.emit("reset"):this.emit("reset")}}},{key:"_handleClickEvent",value:function _handleClickEvent(e){var _getEventCoordinates4=getEventCoordinates(e),pageX=_getEventCoordinates4.pageX,pageY=_getEventCoordinates4.pageY,clientX=_getEventCoordinates4.clientX,clientY=_getEventCoordinates4.clientY,now=(new Date).getTime();return this._lastClickData&&now-this._lastClickData.timestamp<250?(this._lastClickData=null,this.emit("doubleClick",{x:pageX,y:pageY,clientX:clientX,clientY:clientY})):(this._lastClickData={timestamp:now},this.emit("click",{x:pageX,y:pageY,clientX:clientX,clientY:clientY}))}},{key:"_handleMoveEvent",value:function _handleMoveEvent(e){if(null!==this._initialEventData&&!this.isDetached){var _this$_initialEventDa=this._initialEventData,x=_this$_initialEventDa.x,y=_this$_initialEventDa.y,_getEventCoordinates5=getEventCoordinates(e),pageX=_getEventCoordinates5.pageX,pageY=_getEventCoordinates5.pageY,w=Math.abs(x-pageX),h=Math.abs(y-pageY),left=Math.min(pageX,x),top=Math.min(pageY,y),old=this.selecting,click=this.isClick(pageX,pageY);(!click||old||w||h)&&(old||click||this.emit("selectStart",this._initialEventData),click||(this.selecting=!0,this._selectRect={top:top,left:left,x:pageX,y:pageY,right:left+w,bottom:top+h},this.emit("selecting",this._selectRect)),e.preventDefault())}}},{key:"_keyListener",value:function _keyListener(e){this.ctrl=e.metaKey||e.ctrlKey}},{key:"isClick",value:function isClick(pageX,pageY){var _this$_initialEventDa2=this._initialEventData,x=_this$_initialEventDa2.x,y=_this$_initialEventDa2.y;return!_this$_initialEventDa2.isTouch&&Math.abs(pageX-x)<=5&&Math.abs(pageY-y)<=5}}])}();function objectsCollide(nodeA,nodeB){var tolerance=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,_getBoundsForNode=getBoundsForNode(nodeA),aTop=_getBoundsForNode.top,aLeft=_getBoundsForNode.left,_getBoundsForNode$rig=_getBoundsForNode.right,aRight=void 0===_getBoundsForNode$rig?aLeft:_getBoundsForNode$rig,_getBoundsForNode$bot=_getBoundsForNode.bottom,aBottom=void 0===_getBoundsForNode$bot?aTop:_getBoundsForNode$bot,_getBoundsForNode2=getBoundsForNode(nodeB),bTop=_getBoundsForNode2.top,bLeft=_getBoundsForNode2.left,_getBoundsForNode2$ri=_getBoundsForNode2.right,bRight=void 0===_getBoundsForNode2$ri?bLeft:_getBoundsForNode2$ri,_getBoundsForNode2$bo=_getBoundsForNode2.bottom;return!(aBottom-tolerance<bTop||aTop+tolerance>(void 0===_getBoundsForNode2$bo?bTop:_getBoundsForNode2$bo)||aRight-tolerance<bLeft||aLeft+tolerance>bRight)}function getBoundsForNode(node){if(!node.getBoundingClientRect)return node;var rect=node.getBoundingClientRect(),left=rect.left+pageOffset("left"),top=rect.top+pageOffset("top");return{top:top,left:left,right:(node.offsetWidth||0)+left,bottom:(node.offsetHeight||0)+top}}function pageOffset(dir){return"left"===dir?window.pageXOffset||document.body.scrollLeft||0:"top"===dir?window.pageYOffset||document.body.scrollTop||0:void 0}__webpack_exports__.Ay=Selection},"./src/TimeGrid.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return TimeGrid}});var slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),classCallCheck=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),createClass=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),callSuper=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/callSuper.js"),inherits=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),clsx_m=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.sort.js"),__webpack_require__("./node_modules/clsx/dist/clsx.m.js")),animationFrame=__webpack_require__("./node_modules/dom-helpers/esm/animationFrame.js"),memoize_one_esm=__webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js"),react=__webpack_require__("./node_modules/react/index.js"),esm_position=__webpack_require__("./node_modules/dom-helpers/esm/position.js"),esm_width=__webpack_require__("./node_modules/dom-helpers/esm/width.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),Selection=__webpack_require__("./src/Selection.js"),getKey=(__webpack_require__("./node_modules/core-js/modules/es.array.find-index.js"),function getKey(_ref){var min=_ref.min,max=_ref.max,step=_ref.step,slots=_ref.slots,localizer=_ref.localizer;return"".concat(+localizer.startOf(min,"minutes"))+"".concat(+localizer.startOf(max,"minutes"))+"".concat(step,"-").concat(slots)});function getSlotMetrics(_ref2){for(var start=_ref2.min,end=_ref2.max,step=_ref2.step,timeslots=_ref2.timeslots,localizer=_ref2.localizer,key=getKey({start:start,end:end,step:step,timeslots:timeslots,localizer:localizer}),totalMin=1+localizer.getTotalMin(start,end),minutesFromMidnight=localizer.getMinutesFromMidnight(start),numGroups=Math.ceil((totalMin-1)/(step*timeslots)),numSlots=numGroups*timeslots,groups=new Array(numGroups),slots=new Array(numSlots),grp=0;grp<numGroups;grp++){groups[grp]=new Array(timeslots);for(var slot=0;slot<timeslots;slot++){var slotIdx=grp*timeslots+slot,minFromStart=slotIdx*step;slots[slotIdx]=groups[grp][slot]=localizer.getSlotDate(start,minutesFromMidnight,minFromStart)}}var lastSlotMinFromStart=slots.length*step;function positionFromDate(date){var diff=localizer.diff(start,date,"minutes")+localizer.getDstOffset(start,date);return Math.min(diff,totalMin)}return slots.push(localizer.getSlotDate(start,minutesFromMidnight,lastSlotMinFromStart)),{groups:groups,update:function update(args){return getKey(args)!==key?getSlotMetrics(args):this},dateIsInGroup:function dateIsInGroup(date,groupIndex){var nextGroup=groups[groupIndex+1];return localizer.inRange(date,groups[groupIndex][0],nextGroup?nextGroup[0]:end,"minutes")},nextSlot:function nextSlot(slot){var next=slots[Math.min(slots.findIndex((function(s){return s===slot||localizer.eq(s,slot)}))+1,slots.length-1)];return localizer.eq(next,slot)&&(next=localizer.add(slot,step,"minutes")),next},closestSlotToPosition:function closestSlotToPosition(percent){var slot=Math.min(slots.length-1,Math.max(0,Math.floor(percent*numSlots)));return slots[slot]},closestSlotFromPoint:function closestSlotFromPoint(point,boundaryRect){var range=Math.abs(boundaryRect.top-boundaryRect.bottom);return this.closestSlotToPosition((point.y-boundaryRect.top)/range)},closestSlotFromDate:function closestSlotFromDate(date){var offset=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(localizer.lt(date,start,"minutes"))return slots[0];if(localizer.gt(date,end,"minutes"))return slots[slots.length-1];var diffMins=localizer.diff(start,date,"minutes");return slots[(diffMins-diffMins%step)/step+offset]},startsBeforeDay:function startsBeforeDay(date){return localizer.lt(date,start,"day")},startsAfterDay:function startsAfterDay(date){return localizer.gt(date,end,"day")},startsBefore:function startsBefore(date){return localizer.lt(localizer.merge(start,date),start,"minutes")},startsAfter:function startsAfter(date){return localizer.gt(localizer.merge(end,date),end,"minutes")},getRange:function getRange(rangeStart,rangeEnd,ignoreMin,ignoreMax){ignoreMin||(rangeStart=localizer.min(end,localizer.max(start,rangeStart))),ignoreMax||(rangeEnd=localizer.min(end,localizer.max(start,rangeEnd)));var rangeStartMin=positionFromDate(rangeStart),rangeEndMin=positionFromDate(rangeEnd),top=rangeEndMin>step*numSlots&&!localizer.eq(end,rangeEnd)?(rangeStartMin-step)/(step*numSlots)*100:rangeStartMin/(step*numSlots)*100;return{top:top,height:rangeEndMin/(step*numSlots)*100-top,start:positionFromDate(rangeStart),startDate:rangeStart,end:positionFromDate(rangeEnd),endDate:rangeEnd}},getCurrentTimePosition:function getCurrentTimePosition(rangeStart){return positionFromDate(rangeStart)/(step*numSlots)*100}}}var selection=__webpack_require__("./src/utils/selection.js"),helpers=__webpack_require__("./src/utils/helpers.js"),sortBy=(__webpack_require__("./node_modules/core-js/modules/es.array.splice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/lodash/sortBy.js")),sortBy_default=__webpack_require__.n(sortBy),Event=function(){return(0,createClass.default)((function Event(data,_ref){var accessors=_ref.accessors,slotMetrics=_ref.slotMetrics;(0,classCallCheck.default)(this,Event);var _slotMetrics$getRange=slotMetrics.getRange(accessors.start(data),accessors.end(data)),start=_slotMetrics$getRange.start,startDate=_slotMetrics$getRange.startDate,end=_slotMetrics$getRange.end,endDate=_slotMetrics$getRange.endDate,top=_slotMetrics$getRange.top,height=_slotMetrics$getRange.height;this.start=start,this.end=end,this.startMs=+startDate,this.endMs=+endDate,this.top=top,this.height=height,this.data=data}),[{key:"_width",get:function get(){return this.rows?100/(this.rows.reduce((function(max,row){return Math.max(max,row.leaves.length+1)}),0)+1):this.leaves?(100-this.container._width)/(this.leaves.length+1):this.row._width}},{key:"width",get:function get(){var noOverlap=this._width,overlap=Math.min(100,1.7*this._width);if(this.rows)return overlap;if(this.leaves)return this.leaves.length>0?overlap:noOverlap;var leaves=this.row.leaves;return leaves.indexOf(this)===leaves.length-1?noOverlap:overlap}},{key:"xOffset",get:function get(){if(this.rows)return 0;if(this.leaves)return this.container._width;var _this$row=this.row,leaves=_this$row.leaves,xOffset=_this$row.xOffset,_width=_this$row._width;return xOffset+(leaves.indexOf(this)+1)*_width}}])}();function onSameRow(a,b,minimumStartDifference){return Math.abs(b.start-a.start)<minimumStartDifference||b.start>a.start&&b.start<a.end}function getStyledEvents(_ref2){for(var events=_ref2.events,minimumStartDifference=_ref2.minimumStartDifference,slotMetrics=_ref2.slotMetrics,accessors=_ref2.accessors,eventsInRenderOrder=function sortByRender(events){for(var sortedByTime=sortBy_default()(events,["startMs",function(e){return-e.endMs}]),sorted=[];sortedByTime.length>0;){var event=sortedByTime.shift();sorted.push(event);for(var i=0;i<sortedByTime.length;i++){var test=sortedByTime[i];if(!(event.endMs>test.startMs)){if(i>0){var _event=sortedByTime.splice(i,1)[0];sorted.push(_event)}break}}}return sorted}(events.map((function(event){return new Event(event,{slotMetrics:slotMetrics,accessors:accessors})}))),containerEvents=[],_loop=function _loop(){var event=eventsInRenderOrder[i],container=containerEvents.find((function(c){return c.end>event.start||Math.abs(event.start-c.start)<minimumStartDifference}));if(!container)return event.rows=[],containerEvents.push(event),1;event.container=container;for(var row=null,j=container.rows.length-1;!row&&j>=0;j--)onSameRow(container.rows[j],event,minimumStartDifference)&&(row=container.rows[j]);row?(row.leaves.push(event),event.row=row):(event.leaves=[],container.rows.push(event))},i=0;i<eventsInRenderOrder.length;i++)_loop();return eventsInRenderOrder.map((function(event){return{event:event.data,style:{top:event.top,height:event.height,width:event.width,xOffset:Math.max(0,event.xOffset)}}}))}function getMaxIdxDFS(node,maxIdx,visited){for(var i=0;i<node.friends.length;++i)if(!(visited.indexOf(node.friends[i])>-1)){maxIdx=maxIdx>node.friends[i].idx?maxIdx:node.friends[i].idx,visited.push(node.friends[i]);var newIdx=getMaxIdxDFS(node.friends[i],maxIdx,visited);maxIdx=maxIdx>newIdx?maxIdx:newIdx}return maxIdx}var DefaultAlgorithms={overlap:getStyledEvents,"no-overlap":function no_overlap(_ref){var styledEvents=getStyledEvents({events:_ref.events,minimumStartDifference:_ref.minimumStartDifference,slotMetrics:_ref.slotMetrics,accessors:_ref.accessors});styledEvents.sort((function(a,b){return a=a.style,b=b.style,a.top!==b.top?a.top>b.top?1:-1:a.height!==b.height?a.top+a.height<b.top+b.height?1:-1:0}));for(var i=0;i<styledEvents.length;++i)styledEvents[i].friends=[],delete styledEvents[i].style.left,delete styledEvents[i].style.left,delete styledEvents[i].idx,delete styledEvents[i].size;for(var _i3=0;_i3<styledEvents.length-1;++_i3)for(var se1=styledEvents[_i3],y1=se1.style.top,y2=se1.style.top+se1.style.height,j=_i3+1;j<styledEvents.length;++j){var se2=styledEvents[j],y3=se2.style.top,y4=se2.style.top+se2.style.height;(y3>=y1&&y4<=y2||y4>y1&&y4<=y2||y3>=y1&&y3<y2)&&(se1.friends.push(se2),se2.friends.push(se1))}for(var _i6=0;_i6<styledEvents.length;++_i6){for(var se=styledEvents[_i6],bitmap=[],_j3=0;_j3<100;++_j3)bitmap.push(1);for(var _j6=0;_j6<se.friends.length;++_j6)void 0!==se.friends[_j6].idx&&(bitmap[se.friends[_j6].idx]=0);se.idx=bitmap.indexOf(1)}for(var _i9=0;_i9<styledEvents.length;++_i9){var size;if(!styledEvents[_i9].size){var allFriends=[];size=100/(getMaxIdxDFS(styledEvents[_i9],0,allFriends)+1),styledEvents[_i9].size=size;for(var _j9=0;_j9<allFriends.length;++_j9)allFriends[_j9].size=size}}for(var _i12=0;_i12<styledEvents.length;++_i12){var e=styledEvents[_i12];e.style.left=e.idx*e.size;for(var _maxIdx=0,_j12=0;_j12<e.friends.length;++_j12){var idx=e.friends[_j12].idx;_maxIdx=_maxIdx>idx?_maxIdx:idx}_maxIdx<=e.idx&&(e.size=100-e.idx*e.size);var padding=0===e.idx?0:3;e.style.width="calc(".concat(e.size,"% - ").concat(padding,"px)"),e.style.height="calc(".concat(e.style.height,"% - 2px)"),e.style.xOffset="calc(".concat(e.style.left,"% + ").concat(padding,"px)")}return styledEvents}};var BackgroundWrapper=__webpack_require__("./src/BackgroundWrapper.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),TimeSlotGroup=function(_Component){function TimeSlotGroup(){return(0,classCallCheck.default)(this,TimeSlotGroup),(0,callSuper.default)(this,TimeSlotGroup,arguments)}return(0,inherits.default)(TimeSlotGroup,_Component),(0,createClass.default)(TimeSlotGroup,[{key:"render",value:function render(){var _this$props=this.props,renderSlot=_this$props.renderSlot,resource=_this$props.resource,group=_this$props.group,getters=_this$props.getters,_this$props$component=_this$props.components,_this$props$component2=(_this$props$component=void 0===_this$props$component?{}:_this$props$component).timeSlotWrapper,Wrapper=void 0===_this$props$component2?BackgroundWrapper.A:_this$props$component2,groupProps=getters?getters.slotGroupProp(group):{};return(0,jsx_runtime.jsx)("div",Object.assign({className:"rbc-timeslot-group"},groupProps,{children:group.map((function(value,idx){var slotProps=getters?getters.slotProp(value,resource):{};return(0,jsx_runtime.jsx)(Wrapper,{value:value,resource:resource,children:(0,jsx_runtime.jsx)("div",Object.assign({},slotProps,{className:(0,clsx_m.A)("rbc-time-slot",slotProps.className),children:renderSlot&&renderSlot(value,idx)}))},idx)}))}))}}])}(react.Component);TimeSlotGroup.__docgenInfo={description:"",methods:[],displayName:"TimeSlotGroup",props:{renderSlot:{description:"",type:{name:"func"},required:!1},group:{description:"",type:{name:"array"},required:!0},resource:{description:"",type:{name:"any"},required:!1},components:{description:"",type:{name:"object"},required:!1},getters:{description:"",type:{name:"object"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/TimeSlotGroup.js"]={name:"TimeSlotGroup",docgenInfo:TimeSlotGroup.__docgenInfo,path:"src/TimeSlotGroup.js"});var TimeGridEvent=__webpack_require__("./src/TimeGridEvent.js"),DayColumnWrapper=(__webpack_require__("./src/utils/propTypes.js"),function DayColumnWrapper(_ref){var children=_ref.children,className=_ref.className,style=_ref.style,innerRef=_ref.innerRef;return(0,jsx_runtime.jsx)("div",{className:className,style:style,ref:innerRef,children:children})});DayColumnWrapper.displayName="DayColumnWrapper";var src_DayColumnWrapper=react.forwardRef((function(props,ref){return(0,jsx_runtime.jsx)(DayColumnWrapper,Object.assign({},props,{innerRef:ref}))})),_excluded=["dayProp"],_excluded2=["eventContainerWrapper"],DayColumn=function(_React$Component){function DayColumn(){var _this;(0,classCallCheck.default)(this,DayColumn);for(var _len=arguments.length,_args=new Array(_len),_key=0;_key<_len;_key++)_args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,DayColumn,[].concat(_args))).state={selecting:!1,timeIndicatorPosition:null},_this.intervalTriggered=!1,_this.renderEvents=function(_ref){var events=_ref.events,isBackgroundEvent=_ref.isBackgroundEvent,_this$props=_this.props,rtl=_this$props.rtl,selected=_this$props.selected,accessors=_this$props.accessors,localizer=_this$props.localizer,getters=_this$props.getters,components=_this$props.components,step=_this$props.step,timeslots=_this$props.timeslots,dayLayoutAlgorithm=_this$props.dayLayoutAlgorithm,resizable=_this$props.resizable,slotMetrics=_this.slotMetrics,messages=localizer.messages,styledEvents=function DayEventLayout_getStyledEvents(_ref){_ref.events,_ref.minimumStartDifference,_ref.slotMetrics,_ref.accessors;var dayLayoutAlgorithm=_ref.dayLayoutAlgorithm,algorithm=dayLayoutAlgorithm;return dayLayoutAlgorithm in DefaultAlgorithms&&(algorithm=DefaultAlgorithms[dayLayoutAlgorithm]),function isFunction(a){return!!(a&&a.constructor&&a.call&&a.apply)}(algorithm)?algorithm.apply(this,arguments):[]}({events:events,accessors:accessors,slotMetrics:slotMetrics,minimumStartDifference:Math.ceil(step*timeslots/2),dayLayoutAlgorithm:dayLayoutAlgorithm});return styledEvents.map((function(_ref2,idx){var _accessors$eventId,label,event=_ref2.event,style=_ref2.style,end=accessors.end(event),start=accessors.start(event),key=null!==(_accessors$eventId=accessors.eventId(event))&&void 0!==_accessors$eventId?_accessors$eventId:"evt_"+idx,format="eventTimeRangeFormat",startsBeforeDay=slotMetrics.startsBeforeDay(start),startsAfterDay=slotMetrics.startsAfterDay(end);startsBeforeDay?format="eventTimeRangeEndFormat":startsAfterDay&&(format="eventTimeRangeStartFormat"),label=startsBeforeDay&&startsAfterDay?messages.allDay:localizer.format({start:start,end:end},format);var continuesPrior=startsBeforeDay||slotMetrics.startsBefore(start),continuesAfter=startsAfterDay||slotMetrics.startsAfter(end);return(0,jsx_runtime.jsx)(TimeGridEvent.A,{style:style,event:event,label:label,getters:getters,rtl:rtl,components:components,continuesPrior:continuesPrior,continuesAfter:continuesAfter,accessors:accessors,resource:_this.props.resource,selected:(0,selection.sp)(event,selected),onClick:function onClick(e){return _this._select(Object.assign({},event,_this.props.resource&&{sourceResource:_this.props.resource},isBackgroundEvent&&{isBackgroundEvent:!0}),e)},onDoubleClick:function onDoubleClick(e){return _this._doubleClick(event,e)},isBackgroundEvent:isBackgroundEvent,onKeyPress:function onKeyPress(e){return _this._keyPress(event,e)},resizable:resizable},key)}))},_this._selectable=function(){var node=_this.containerRef.current,_this$props2=_this.props,longPressThreshold=_this$props2.longPressThreshold,localizer=_this$props2.localizer,selector=_this._selector=new Selection.Ay((function(){return node}),{longPressThreshold:longPressThreshold}),maybeSelect=function maybeSelect(box){var onSelecting=_this.props.onSelecting,current=_this.state||{},state=selectionState(box),start=state.startDate,end=state.endDate;onSelecting&&(localizer.eq(current.startDate,start,"minutes")&&localizer.eq(current.endDate,end,"minutes")||!1===onSelecting({start:start,end:end,resourceId:_this.props.resource}))||_this.state.start===state.start&&_this.state.end===state.end&&_this.state.selecting===state.selecting||_this.setState(state)},selectionState=function selectionState(point){var currentSlot=_this.slotMetrics.closestSlotFromPoint(point,(0,Selection.rF)(node));_this.state.selecting||(_this._initialSlot=currentSlot);var initialSlot=_this._initialSlot;localizer.lte(initialSlot,currentSlot)?currentSlot=_this.slotMetrics.nextSlot(currentSlot):localizer.gt(initialSlot,currentSlot)&&(initialSlot=_this.slotMetrics.nextSlot(initialSlot));var selectRange=_this.slotMetrics.getRange(localizer.min(initialSlot,currentSlot),localizer.max(initialSlot,currentSlot));return Object.assign({},selectRange,{selecting:!0,top:"".concat(selectRange.top,"%"),height:"".concat(selectRange.height,"%")})},selectorClicksHandler=function selectorClicksHandler(box,actionType){if(!(0,Selection.xH)(_this.containerRef.current,box)){var _selectionState=selectionState(box),startDate=_selectionState.startDate,endDate=_selectionState.endDate;_this._selectSlot({startDate:startDate,endDate:endDate,action:actionType,box:box})}_this.setState({selecting:!1})};selector.on("selecting",maybeSelect),selector.on("selectStart",maybeSelect),selector.on("beforeSelect",(function(box){if("ignoreEvents"===_this.props.selectable)return!(0,Selection.xH)(_this.containerRef.current,box)})),selector.on("click",(function(box){return selectorClicksHandler(box,"click")})),selector.on("doubleClick",(function(box){return selectorClicksHandler(box,"doubleClick")})),selector.on("select",(function(bounds){_this.state.selecting&&(_this._selectSlot(Object.assign({},_this.state,{action:"select",bounds:bounds})),_this.setState({selecting:!1}))})),selector.on("reset",(function(){_this.state.selecting&&_this.setState({selecting:!1})}))},_this._teardownSelectable=function(){_this._selector&&(_this._selector.teardown(),_this._selector=null)},_this._selectSlot=function(_ref3){for(var startDate=_ref3.startDate,endDate=_ref3.endDate,action=_ref3.action,bounds=_ref3.bounds,box=_ref3.box,current=startDate,slots=[];_this.props.localizer.lte(current,endDate);)slots.push(current),current=new Date(+current+60*_this.props.step*1e3);(0,helpers.me)(_this.props.onSelectSlot,{slots:slots,start:startDate,end:endDate,resourceId:_this.props.resource,action:action,bounds:bounds,box:box})},_this._select=function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];(0,helpers.me)(_this.props.onSelectEvent,args)},_this._doubleClick=function(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++)args[_key3]=arguments[_key3];(0,helpers.me)(_this.props.onDoubleClickEvent,args)},_this._keyPress=function(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++)args[_key4]=arguments[_key4];(0,helpers.me)(_this.props.onKeyPressEvent,args)},_this.slotMetrics=getSlotMetrics(_this.props),_this.containerRef=(0,react.createRef)(),_this}return(0,inherits.default)(DayColumn,_React$Component),(0,createClass.default)(DayColumn,[{key:"componentDidMount",value:function componentDidMount(){this.props.selectable&&this._selectable(),this.props.isNow&&this.setTimeIndicatorPositionUpdateInterval()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this._teardownSelectable(),this.clearTimeIndicatorInterval()}},{key:"componentDidUpdate",value:function componentDidUpdate(prevProps,prevState){this.props.selectable&&!prevProps.selectable&&this._selectable(),!this.props.selectable&&prevProps.selectable&&this._teardownSelectable();var _this$props3=this.props,getNow=_this$props3.getNow,isNow=_this$props3.isNow,localizer=_this$props3.localizer,date=_this$props3.date,min=_this$props3.min,max=_this$props3.max,getNowChanged=localizer.neq(prevProps.getNow(),getNow(),"minutes");if(prevProps.isNow!==isNow||getNowChanged){if(this.clearTimeIndicatorInterval(),isNow){var tail=!getNowChanged&&localizer.eq(prevProps.date,date,"minutes")&&prevState.timeIndicatorPosition===this.state.timeIndicatorPosition;this.setTimeIndicatorPositionUpdateInterval(tail)}}else isNow&&(localizer.neq(prevProps.min,min,"minutes")||localizer.neq(prevProps.max,max,"minutes"))&&this.positionTimeIndicator()}},{key:"setTimeIndicatorPositionUpdateInterval",value:function setTimeIndicatorPositionUpdateInterval(){var _this3=this,tail=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.intervalTriggered||tail||this.positionTimeIndicator(),this._timeIndicatorTimeout=window.setTimeout((function(){_this3.intervalTriggered=!0,_this3.positionTimeIndicator(),_this3.setTimeIndicatorPositionUpdateInterval()}),6e4)}},{key:"clearTimeIndicatorInterval",value:function clearTimeIndicatorInterval(){this.intervalTriggered=!1,window.clearTimeout(this._timeIndicatorTimeout)}},{key:"positionTimeIndicator",value:function positionTimeIndicator(){var _this$props4=this.props,min=_this$props4.min,max=_this$props4.max,current=(0,_this$props4.getNow)();if(current>=min&&current<=max){var top=this.slotMetrics.getCurrentTimePosition(current);this.intervalTriggered=!0,this.setState({timeIndicatorPosition:top})}else this.clearTimeIndicatorInterval()}},{key:"render",value:function render(){var _this$props5=this.props,date=_this$props5.date,max=_this$props5.max,rtl=_this$props5.rtl,isNow=_this$props5.isNow,resource=_this$props5.resource,accessors=_this$props5.accessors,localizer=_this$props5.localizer,_this$props5$getters=_this$props5.getters,dayProp=_this$props5$getters.dayProp,getters=(0,objectWithoutProperties.A)(_this$props5$getters,_excluded),_this$props5$componen=_this$props5.components,EventContainer=_this$props5$componen.eventContainerWrapper,components=(0,objectWithoutProperties.A)(_this$props5$componen,_excluded2);this.slotMetrics=this.slotMetrics.update(this.props);var slotMetrics=this.slotMetrics,_this$state=this.state,selecting=_this$state.selecting,top=_this$state.top,height=_this$state.height,selectDates={start:_this$state.startDate,end:_this$state.endDate},_dayProp=dayProp(max,resource),className=_dayProp.className,style=_dayProp.style,DayColumnWrapperComponent=components.dayColumnWrapper||src_DayColumnWrapper;return(0,jsx_runtime.jsxs)(DayColumnWrapperComponent,{ref:this.containerRef,date:date,style:style,className:(0,clsx_m.A)(className,"rbc-day-slot","rbc-time-column",isNow&&"rbc-now",isNow&&"rbc-today",selecting&&"rbc-slot-selecting"),slotMetrics:slotMetrics,resource:resource,children:[slotMetrics.groups.map((function(grp,idx){return(0,jsx_runtime.jsx)(TimeSlotGroup,{group:grp,resource:resource,getters:getters,components:components},idx)})),(0,jsx_runtime.jsx)(EventContainer,{localizer:localizer,resource:resource,accessors:accessors,getters:getters,components:components,slotMetrics:slotMetrics,children:(0,jsx_runtime.jsxs)("div",{className:(0,clsx_m.A)("rbc-events-container",rtl&&"rtl"),children:[this.renderEvents({events:this.props.backgroundEvents,isBackgroundEvent:!0}),this.renderEvents({events:this.props.events})]})}),selecting&&(0,jsx_runtime.jsx)("div",{className:"rbc-slot-selection",style:{top:top,height:height},children:(0,jsx_runtime.jsx)("span",{children:localizer.format(selectDates,"selectRangeFormat")})}),isNow&&this.intervalTriggered&&(0,jsx_runtime.jsx)("div",{className:"rbc-current-time-indicator",style:{top:"".concat(this.state.timeIndicatorPosition,"%")}})]})}}])}(react.Component);DayColumn.defaultProps={dragThroughEvents:!0,timeslots:2},DayColumn.__docgenInfo={description:"",methods:[{name:"setTimeIndicatorPositionUpdateInterval",docblock:"@param tail {Boolean} - whether `positionTimeIndicator` call should be\n  deferred or called upon setting interval (`true` - if deferred);",modifiers:[],params:[{name:"tail",description:"{Boolean} - whether `positionTimeIndicator` call should be\n  deferred or called upon setting interval (`true` - if deferred);",type:null,optional:!1}],returns:null,description:null},{name:"clearTimeIndicatorInterval",docblock:null,modifiers:[],params:[],returns:null},{name:"positionTimeIndicator",docblock:null,modifiers:[],params:[],returns:null},{name:"renderEvents",docblock:null,modifiers:[],params:[{name:"{ events, isBackgroundEvent }",type:null}],returns:null},{name:"_selectable",docblock:null,modifiers:[],params:[],returns:null},{name:"_teardownSelectable",docblock:null,modifiers:[],params:[],returns:null},{name:"_selectSlot",docblock:null,modifiers:[],params:[{name:"{ startDate, endDate, action, bounds, box }",type:null}],returns:null},{name:"_select",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"_doubleClick",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"_keyPress",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null}],displayName:"DayColumn",props:{dragThroughEvents:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1},timeslots:{defaultValue:{value:"2",computed:!1},description:"",type:{name:"number"},required:!1},events:{description:"",type:{name:"array"},required:!0},backgroundEvents:{description:"",type:{name:"array"},required:!0},step:{description:"",type:{name:"number"},required:!0},date:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},min:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},max:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},getNow:{description:"",type:{name:"func"},required:!0},isNow:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},showMultiDayTimes:{description:"",type:{name:"bool"},required:!1},culture:{description:"",type:{name:"string"},required:!1},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},eventOffset:{description:"",type:{name:"number"},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onSelecting:{description:"",type:{name:"func"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!0},onSelectEvent:{description:"",type:{name:"func"},required:!0},onDoubleClickEvent:{description:"",type:{name:"func"},required:!0},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},className:{description:"",type:{name:"string"},required:!1},resource:{description:"",type:{name:"any"},required:!1},dayLayoutAlgorithm:{description:"",type:{name:"custom",raw:"DayLayoutAlgorithmPropType"},required:!1}}};var src_DayColumn=DayColumn;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/DayColumn.js"]={name:"DayColumn",docgenInfo:DayColumn.__docgenInfo,path:"src/DayColumn.js"});var PopOverlay=__webpack_require__("./src/PopOverlay.js"),scrollbarSize=__webpack_require__("./node_modules/dom-helpers/esm/scrollbarSize.js"),DateContentRow=__webpack_require__("./src/DateContentRow.js"),Header=__webpack_require__("./src/Header.js"),ResourceHeader=function ResourceHeader(_ref){var label=_ref.label;return(0,jsx_runtime.jsx)(react.Fragment,{children:label})};ResourceHeader.displayName="ResourceHeader",ResourceHeader.__docgenInfo={description:"",methods:[],displayName:"ResourceHeader",props:{label:{description:"",type:{name:"node"},required:!1},index:{description:"",type:{name:"number"},required:!1},resource:{description:"",type:{name:"object"},required:!1}}};var src_ResourceHeader=ResourceHeader;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ResourceHeader.js"]={name:"ResourceHeader",docgenInfo:ResourceHeader.__docgenInfo,path:"src/ResourceHeader.js"});var TimeGridHeader=function(_React$Component){function TimeGridHeader(){var _this;(0,classCallCheck.default)(this,TimeGridHeader);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,TimeGridHeader,[].concat(args))).handleHeaderClick=function(date,view,e){e.preventDefault(),(0,helpers.me)(_this.props.onDrillDown,[date,view])},_this.renderRow=function(resource){var _this$props=_this.props,events=_this$props.events,rtl=_this$props.rtl,selectable=_this$props.selectable,getNow=_this$props.getNow,range=_this$props.range,getters=_this$props.getters,localizer=_this$props.localizer,accessors=_this$props.accessors,components=_this$props.components,resizable=_this$props.resizable,resourceId=accessors.resourceId(resource),eventsToDisplay=resource?events.filter((function(event){return accessors.resource(event)===resourceId})):events;return(0,jsx_runtime.jsx)(DateContentRow.A,{isAllDay:!0,rtl:rtl,getNow:getNow,minRows:2,maxRows:_this.props.allDayMaxRows+1,range:range,events:eventsToDisplay,resourceId:resourceId,className:"rbc-allday-cell",selectable:selectable,selected:_this.props.selected,components:components,accessors:accessors,getters:getters,localizer:localizer,onSelect:_this.props.onSelectEvent,onShowMore:_this.props.onShowMore,onDoubleClick:_this.props.onDoubleClickEvent,onKeyPress:_this.props.onKeyPressEvent,onSelectSlot:_this.props.onSelectSlot,longPressThreshold:_this.props.longPressThreshold,resizable:resizable})},_this}return(0,inherits.default)(TimeGridHeader,_React$Component),(0,createClass.default)(TimeGridHeader,[{key:"renderHeaderCells",value:function renderHeaderCells(range){var _this2=this,_this$props2=this.props,localizer=_this$props2.localizer,getDrilldownView=_this$props2.getDrilldownView,getNow=_this$props2.getNow,dayProp=_this$props2.getters.dayProp,_this$props2$componen=_this$props2.components.header,HeaderComponent=void 0===_this$props2$componen?Header.A:_this$props2$componen,today=getNow();return range.map((function(date,i){var drilldownView=getDrilldownView(date),label=localizer.format(date,"dayFormat"),_dayProp=dayProp(date),className=_dayProp.className,style=_dayProp.style,header=(0,jsx_runtime.jsx)(HeaderComponent,{date:date,label:label,localizer:localizer});return(0,jsx_runtime.jsx)("div",{style:style,className:(0,clsx_m.A)("rbc-header",className,localizer.isSameDate(date,today)&&"rbc-today"),children:drilldownView?(0,jsx_runtime.jsx)("button",{type:"button",className:"rbc-button-link",onClick:function onClick(e){return _this2.handleHeaderClick(date,drilldownView,e)},children:header}):(0,jsx_runtime.jsx)("span",{children:header})},i)}))}},{key:"render",value:function render(){var _this3=this,_this$props3=this.props,width=_this$props3.width,rtl=_this$props3.rtl,resources=_this$props3.resources,range=_this$props3.range,events=_this$props3.events,getNow=_this$props3.getNow,accessors=_this$props3.accessors,selectable=_this$props3.selectable,components=_this$props3.components,getters=_this$props3.getters,scrollRef=_this$props3.scrollRef,localizer=_this$props3.localizer,isOverflowing=_this$props3.isOverflowing,_this$props3$componen=_this$props3.components,TimeGutterHeader=_this$props3$componen.timeGutterHeader,_this$props3$componen2=_this$props3$componen.resourceHeader,ResourceHeaderComponent=void 0===_this$props3$componen2?src_ResourceHeader:_this$props3$componen2,resizable=_this$props3.resizable,style={};isOverflowing&&(style[rtl?"marginLeft":"marginRight"]="".concat((0,scrollbarSize.A)()-1,"px"));var groupedEvents=resources.groupEvents(events);return(0,jsx_runtime.jsxs)("div",{style:style,ref:scrollRef,className:(0,clsx_m.A)("rbc-time-header",isOverflowing&&"rbc-overflowing"),children:[(0,jsx_runtime.jsx)("div",{className:"rbc-label rbc-time-header-gutter",style:{width:width,minWidth:width,maxWidth:width},children:TimeGutterHeader&&(0,jsx_runtime.jsx)(TimeGutterHeader,{})}),resources.map((function(_ref,idx){var _ref2=(0,slicedToArray.A)(_ref,2),id=_ref2[0],resource=_ref2[1];return(0,jsx_runtime.jsxs)("div",{className:"rbc-time-header-content",children:[resource&&(0,jsx_runtime.jsx)("div",{className:"rbc-row rbc-row-resource",children:(0,jsx_runtime.jsx)("div",{className:"rbc-header",children:(0,jsx_runtime.jsx)(ResourceHeaderComponent,{index:idx,label:accessors.resourceTitle(resource),resource:resource})})},"resource_".concat(idx)),(0,jsx_runtime.jsx)("div",{className:"rbc-row rbc-time-header-cell".concat(range.length<=1?" rbc-time-header-cell-single-day":""),children:_this3.renderHeaderCells(range)}),(0,jsx_runtime.jsx)(DateContentRow.A,{isAllDay:!0,rtl:rtl,getNow:getNow,minRows:2,maxRows:_this3.props.allDayMaxRows+1,range:range,events:groupedEvents.get(id)||[],resourceId:resource&&id,className:"rbc-allday-cell",selectable:selectable,selected:_this3.props.selected,components:components,accessors:accessors,getters:getters,localizer:localizer,onSelect:_this3.props.onSelectEvent,onShowMore:_this3.props.onShowMore,onDoubleClick:_this3.props.onDoubleClickEvent,onKeyDown:_this3.props.onKeyPressEvent,onSelectSlot:_this3.props.onSelectSlot,longPressThreshold:_this3.props.longPressThreshold,resizable:resizable})]},id||idx)}))]})}}])}(react.Component);TimeGridHeader.__docgenInfo={description:"",methods:[{name:"handleHeaderClick",docblock:null,modifiers:[],params:[{name:"date",type:null},{name:"view",type:null},{name:"e",type:null}],returns:null},{name:"renderHeaderCells",docblock:null,modifiers:[],params:[{name:"range",type:null}],returns:null},{name:"renderRow",docblock:null,modifiers:[],params:[{name:"resource",type:null}],returns:null}],displayName:"TimeGridHeader",props:{range:{description:"",type:{name:"array"},required:!0},events:{description:"",type:{name:"array"},required:!0},resources:{description:"",type:{name:"object"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},isOverflowing:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},width:{description:"",type:{name:"number"},required:!1},localizer:{description:"",type:{name:"object"},required:!0},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},allDayMaxRows:{description:"",type:{name:"number"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelectEvent:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},getDrilldownView:{description:"",type:{name:"func"},required:!0},scrollRef:{description:"",type:{name:"any"},required:!1}}};var src_TimeGridHeader=TimeGridHeader;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/TimeGridHeader.js"]={name:"TimeGridHeader",docgenInfo:TimeGridHeader.__docgenInfo,path:"src/TimeGridHeader.js"});var TimeGridHeaderResources=function(_React$Component){function TimeGridHeaderResources(){var _this;(0,classCallCheck.default)(this,TimeGridHeaderResources);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,TimeGridHeaderResources,[].concat(args))).handleHeaderClick=function(date,view,e){e.preventDefault(),(0,helpers.me)(_this.props.onDrillDown,[date,view])},_this}return(0,inherits.default)(TimeGridHeaderResources,_React$Component),(0,createClass.default)(TimeGridHeaderResources,[{key:"renderHeaderCells",value:function renderHeaderCells(range){var _this2=this,_this$props=this.props,localizer=_this$props.localizer,getDrilldownView=_this$props.getDrilldownView,getNow=_this$props.getNow,dayProp=_this$props.getters.dayProp,_this$props$component=_this$props.components,_this$props$component2=_this$props$component.header,HeaderComponent=void 0===_this$props$component2?Header.A:_this$props$component2,_this$props$component3=_this$props$component.resourceHeader,ResourceHeaderComponent=void 0===_this$props$component3?src_ResourceHeader:_this$props$component3,resources=_this$props.resources,accessors=_this$props.accessors,events=_this$props.events,rtl=_this$props.rtl,selectable=_this$props.selectable,components=_this$props.components,getters=_this$props.getters,resizable=_this$props.resizable,today=getNow(),groupedEvents=resources.groupEvents(events);return range.map((function(date,idx){var drilldownView=getDrilldownView(date),label=localizer.format(date,"dayFormat"),_dayProp=dayProp(date),className=_dayProp.className,style=_dayProp.style,header=(0,jsx_runtime.jsx)(HeaderComponent,{date:date,label:label,localizer:localizer});return(0,jsx_runtime.jsxs)("div",{className:"rbc-time-header-content rbc-resource-grouping",children:[(0,jsx_runtime.jsx)("div",{className:"rbc-row rbc-time-header-cell".concat(range.length<=1?" rbc-time-header-cell-single-day":""),children:(0,jsx_runtime.jsx)("div",{style:style,className:(0,clsx_m.A)("rbc-header",className,localizer.isSameDate(date,today)&&"rbc-today"),children:drilldownView?(0,jsx_runtime.jsx)("button",{type:"button",className:"rbc-button-link",onClick:function onClick(e){return _this2.handleHeaderClick(date,drilldownView,e)},children:header}):(0,jsx_runtime.jsx)("span",{children:header})})}),(0,jsx_runtime.jsx)("div",{className:"rbc-row",children:resources.map((function(_ref,idx){var _ref2=(0,slicedToArray.A)(_ref,2),id=_ref2[0],resource=_ref2[1];return(0,jsx_runtime.jsx)("div",{className:(0,clsx_m.A)("rbc-header",className,localizer.isSameDate(date,today)&&"rbc-today"),children:(0,jsx_runtime.jsx)(ResourceHeaderComponent,{index:idx,label:accessors.resourceTitle(resource),resource:resource})},"resource_".concat(id,"_").concat(idx))}))}),(0,jsx_runtime.jsx)("div",{className:"rbc-row rbc-m-b-negative-3 rbc-h-full",children:resources.map((function(_ref3,idx){var _ref4=(0,slicedToArray.A)(_ref3,2),id=_ref4[0],resource=_ref4[1],filteredEvents=(groupedEvents.get(id)||[]).filter((function(event){return localizer.isSameDate(event.start,date)||localizer.isSameDate(event.end,date)}));return(0,jsx_runtime.jsx)(DateContentRow.A,{isAllDay:!0,rtl:rtl,getNow:getNow,minRows:2,maxRows:_this2.props.allDayMaxRows+1,range:[date],events:filteredEvents,resourceId:resource&&id,className:"rbc-allday-cell",selectable:selectable,selected:_this2.props.selected,components:components,accessors:accessors,getters:getters,localizer:localizer,onSelect:_this2.props.onSelectEvent,onShowMore:_this2.props.onShowMore,onDoubleClick:_this2.props.onDoubleClickEvent,onKeyDown:_this2.props.onKeyPressEvent,onSelectSlot:_this2.props.onSelectSlot,longPressThreshold:_this2.props.longPressThreshold,resizable:resizable},"resource_".concat(id,"_").concat(idx))}))})]},idx)}))}},{key:"render",value:function render(){var _this$props2=this.props,width=_this$props2.width,rtl=_this$props2.rtl,range=_this$props2.range,scrollRef=_this$props2.scrollRef,isOverflowing=_this$props2.isOverflowing,TimeGutterHeader=_this$props2.components.timeGutterHeader,style={};return isOverflowing&&(style[rtl?"marginLeft":"marginRight"]="".concat((0,scrollbarSize.A)()-1,"px")),(0,jsx_runtime.jsxs)("div",{style:style,ref:scrollRef,className:(0,clsx_m.A)("rbc-time-header",isOverflowing&&"rbc-overflowing"),children:[(0,jsx_runtime.jsx)("div",{className:"rbc-label rbc-time-header-gutter",style:{width:width,minWidth:width,maxWidth:width},children:TimeGutterHeader&&(0,jsx_runtime.jsx)(TimeGutterHeader,{})}),this.renderHeaderCells(range)]})}}])}(react.Component);TimeGridHeaderResources.__docgenInfo={description:"",methods:[{name:"handleHeaderClick",docblock:null,modifiers:[],params:[{name:"date",type:null},{name:"view",type:null},{name:"e",type:null}],returns:null},{name:"renderHeaderCells",docblock:null,modifiers:[],params:[{name:"range",type:null}],returns:null}],displayName:"TimeGridHeaderResources",props:{range:{description:"",type:{name:"array"},required:!0},events:{description:"",type:{name:"array"},required:!0},resources:{description:"",type:{name:"object"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},isOverflowing:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},width:{description:"",type:{name:"number"},required:!1},localizer:{description:"",type:{name:"object"},required:!0},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},allDayMaxRows:{description:"",type:{name:"number"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelectEvent:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},getDrilldownView:{description:"",type:{name:"func"},required:!0},scrollRef:{description:"",type:{name:"any"},required:!1}}};var src_TimeGridHeaderResources=TimeGridHeaderResources;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/TimeGridHeaderResources.js"]={name:"TimeGridHeaderResources",docgenInfo:TimeGridHeaderResources.__docgenInfo,path:"src/TimeGridHeaderResources.js"});var TimeGutter=function TimeGutter(_ref2){var min=_ref2.min,max=_ref2.max,timeslots=_ref2.timeslots,step=_ref2.step,localizer=_ref2.localizer,getNow=_ref2.getNow,resource=_ref2.resource,components=_ref2.components,getters=_ref2.getters,gutterRef=_ref2.gutterRef,TimeGutterWrapper=components.timeGutterWrapper,_useMemo=(0,react.useMemo)((function(){return function adjustForDST(_ref){var min=_ref.min,max=_ref.max,localizer=_ref.localizer;return localizer.getTimezoneOffset(min)!==localizer.getTimezoneOffset(max)?{start:localizer.add(min,-1,"day"),end:localizer.add(max,-1,"day")}:{start:min,end:max}}({min:min,max:max,localizer:localizer})}),[null==min?void 0:min.toISOString(),null==max?void 0:max.toISOString(),localizer]),start=_useMemo.start,end=_useMemo.end,_useState=(0,react.useState)(getSlotMetrics({min:start,max:end,timeslots:timeslots,step:step,localizer:localizer})),_useState2=(0,slicedToArray.A)(_useState,2),slotMetrics=_useState2[0],setSlotMetrics=_useState2[1];(0,react.useEffect)((function(){slotMetrics&&setSlotMetrics(slotMetrics.update({min:start,max:end,timeslots:timeslots,step:step,localizer:localizer}))}),[null==start?void 0:start.toISOString(),null==end?void 0:end.toISOString(),timeslots,step]);var renderSlot=(0,react.useCallback)((function(value,idx){if(idx)return null;var isNow=slotMetrics.dateIsInGroup(getNow(),idx);return(0,jsx_runtime.jsx)("span",{className:(0,clsx_m.A)("rbc-label",isNow&&"rbc-now"),children:localizer.format(value,"timeGutterFormat")})}),[slotMetrics,localizer,getNow]);return(0,jsx_runtime.jsx)(TimeGutterWrapper,{slotMetrics:slotMetrics,children:(0,jsx_runtime.jsx)("div",{className:"rbc-time-gutter rbc-time-column",ref:gutterRef,children:slotMetrics.groups.map((function(grp,idx){return(0,jsx_runtime.jsx)(TimeSlotGroup,{group:grp,resource:resource,components:components,renderSlot:renderSlot,getters:getters},idx)}))})})};TimeGutter.displayName="TimeGutter";var src_TimeGutter=react.forwardRef((function(props,ref){return(0,jsx_runtime.jsx)(TimeGutter,Object.assign({gutterRef:ref},props))})),constants=__webpack_require__("./src/utils/constants.js"),eventLevels=__webpack_require__("./src/utils/eventLevels.js"),NONE=(__webpack_require__("./node_modules/core-js/modules/es.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),{});var TimeGrid=function(_Component){function TimeGrid(props){var _this;return(0,classCallCheck.default)(this,TimeGrid),(_this=(0,callSuper.default)(this,TimeGrid,[props])).handleScroll=function(e){_this.scrollRef.current&&(_this.scrollRef.current.scrollLeft=e.target.scrollLeft)},_this.handleResize=function(){animationFrame.Z(_this.rafHandle),_this.rafHandle=animationFrame.E(_this.checkOverflow)},_this.handleKeyPressEvent=function(){_this.clearSelection();for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];(0,helpers.me)(_this.props.onKeyPressEvent,args)},_this.handleSelectEvent=function(){_this.clearSelection();for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];(0,helpers.me)(_this.props.onSelectEvent,args)},_this.handleDoubleClickEvent=function(){_this.clearSelection();for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++)args[_key3]=arguments[_key3];(0,helpers.me)(_this.props.onDoubleClickEvent,args)},_this.handleShowMore=function(events,date,cell,slot,target){var _this$props=_this.props,popup=_this$props.popup,onDrillDown=_this$props.onDrillDown,onShowMore=_this$props.onShowMore,getDrilldownView=_this$props.getDrilldownView,doShowMoreDrillDown=_this$props.doShowMoreDrillDown;if(_this.clearSelection(),popup){var position=(0,esm_position.A)(cell,_this.containerRef.current);_this.setState({overlay:{date:date,events:events,position:Object.assign({},position,{width:"200px"}),target:target}})}else doShowMoreDrillDown&&(0,helpers.me)(onDrillDown,[date,getDrilldownView(date)||constants.l.DAY]);(0,helpers.me)(onShowMore,[events,date,slot])},_this.handleSelectAllDaySlot=function(slots,slotInfo){var onSelectSlot=_this.props.onSelectSlot,start=new Date(slots[0]),end=new Date(slots[slots.length-1]);end.setDate(slots[slots.length-1].getDate()+1),(0,helpers.me)(onSelectSlot,{slots:slots,start:start,end:end,action:slotInfo.action,resourceId:slotInfo.resourceId})},_this.overlayDisplay=function(){_this.setState({overlay:null})},_this.checkOverflow=function(){if(!_this._updatingOverflow){var content=_this.contentRef.current;if(null!=content&&content.scrollHeight){var isOverflowing=content.scrollHeight>content.clientHeight;_this.state.isOverflowing!==isOverflowing&&(_this._updatingOverflow=!0,_this.setState({isOverflowing:isOverflowing},(function(){_this._updatingOverflow=!1})))}}},_this.memoizedResources=(0,memoize_one_esm.A)((function(resources,accessors){return function Resources(resources,accessors){return{map:function map(fn){return resources?resources.map((function(resource,idx){return fn([accessors.resourceId(resource),resource],idx)})):[fn([NONE,null],0)]},groupEvents:function groupEvents(events){var eventsByResource=new Map;return resources?(events.forEach((function(event){var id=accessors.resource(event)||NONE;if(Array.isArray(id))id.forEach((function(item){var resourceEvents=eventsByResource.get(item)||[];resourceEvents.push(event),eventsByResource.set(item,resourceEvents)}));else{var resourceEvents=eventsByResource.get(id)||[];resourceEvents.push(event),eventsByResource.set(id,resourceEvents)}})),eventsByResource):(eventsByResource.set(NONE,events),eventsByResource)}}}(resources,accessors)})),_this.state={gutterWidth:void 0,isOverflowing:null},_this.scrollRef=react.createRef(),_this.contentRef=react.createRef(),_this.containerRef=react.createRef(),_this._scrollRatio=null,_this.gutterRef=(0,react.createRef)(),_this}return(0,inherits.default)(TimeGrid,_Component),(0,createClass.default)(TimeGrid,[{key:"getSnapshotBeforeUpdate",value:function getSnapshotBeforeUpdate(){return this.checkOverflow(),null}},{key:"componentDidMount",value:function componentDidMount(){null==this.props.width&&this.measureGutter(),this.calculateScroll(),this.applyScroll(),window.addEventListener("resize",this.handleResize)}},{key:"componentWillUnmount",value:function componentWillUnmount(){window.removeEventListener("resize",this.handleResize),animationFrame.Z(this.rafHandle),this.measureGutterAnimationFrameRequest&&window.cancelAnimationFrame(this.measureGutterAnimationFrameRequest)}},{key:"componentDidUpdate",value:function componentDidUpdate(){this.applyScroll()}},{key:"renderDayColumn",value:function renderDayColumn(date,id,resource,groupedEvents,groupedBackgroundEvents,localizer,accessors,components,dayLayoutAlgorithm,now){var _this$props2=this.props,min=_this$props2.min,max=_this$props2.max,daysEvents=(groupedEvents.get(id)||[]).filter((function(event){return localizer.inRange(date,accessors.start(event),accessors.end(event),"day")})),daysBackgroundEvents=(groupedBackgroundEvents.get(id)||[]).filter((function(event){return localizer.inRange(date,accessors.start(event),accessors.end(event),"day")}));return(0,react.createElement)(src_DayColumn,Object.assign({},this.props,{localizer:localizer,min:localizer.merge(date,min),max:localizer.merge(date,max),resource:resource&&id,components:components,isNow:localizer.isSameDate(date,now),key:"".concat(id,"-").concat(date),date:date,events:daysEvents,backgroundEvents:daysBackgroundEvents,dayLayoutAlgorithm:dayLayoutAlgorithm}))}},{key:"renderResourcesFirst",value:function renderResourcesFirst(range,resources,groupedEvents,groupedBackgroundEvents,localizer,accessors,now,components,dayLayoutAlgorithm){var _this2=this;return resources.map((function(_ref){var _ref2=(0,slicedToArray.A)(_ref,2),id=_ref2[0],resource=_ref2[1];return range.map((function(date){return _this2.renderDayColumn(date,id,resource,groupedEvents,groupedBackgroundEvents,localizer,accessors,components,dayLayoutAlgorithm,now)}))}))}},{key:"renderRangeFirst",value:function renderRangeFirst(range,resources,groupedEvents,groupedBackgroundEvents,localizer,accessors,now,components,dayLayoutAlgorithm){var _this3=this;return range.map((function(date){return(0,jsx_runtime.jsx)("div",{style:{display:"flex",minHeight:"100%",flex:1},children:resources.map((function(_ref3){var _ref4=(0,slicedToArray.A)(_ref3,2),id=_ref4[0],resource=_ref4[1];return(0,jsx_runtime.jsx)("div",{style:{flex:1},children:_this3.renderDayColumn(date,id,resource,groupedEvents,groupedBackgroundEvents,localizer,accessors,components,dayLayoutAlgorithm,now)},accessors.resourceId(resource))}))},date)}))}},{key:"renderEvents",value:function renderEvents(range,events,backgroundEvents,now){var _this$props3=this.props,accessors=_this$props3.accessors,localizer=_this$props3.localizer,resourceGroupingLayout=_this$props3.resourceGroupingLayout,components=_this$props3.components,dayLayoutAlgorithm=_this$props3.dayLayoutAlgorithm,resources=this.memoizedResources(this.props.resources,accessors),groupedEvents=resources.groupEvents(events),groupedBackgroundEvents=resources.groupEvents(backgroundEvents);return resourceGroupingLayout?this.renderRangeFirst(range,resources,groupedEvents,groupedBackgroundEvents,localizer,accessors,now,components,dayLayoutAlgorithm):this.renderResourcesFirst(range,resources,groupedEvents,groupedBackgroundEvents,localizer,accessors,now,components,dayLayoutAlgorithm)}},{key:"render",value:function render(){var _this$props$allDayMax,_this$props4=this.props,events=_this$props4.events,backgroundEvents=_this$props4.backgroundEvents,range=_this$props4.range,width=_this$props4.width,rtl=_this$props4.rtl,selected=_this$props4.selected,getNow=_this$props4.getNow,resources=_this$props4.resources,components=_this$props4.components,accessors=_this$props4.accessors,getters=_this$props4.getters,localizer=_this$props4.localizer,min=_this$props4.min,max=_this$props4.max,showMultiDayTimes=_this$props4.showMultiDayTimes,longPressThreshold=_this$props4.longPressThreshold,resizable=_this$props4.resizable,resourceGroupingLayout=_this$props4.resourceGroupingLayout;width=width||this.state.gutterWidth;var start=range[0],end=range[range.length-1];this.slots=range.length;var allDayEvents=[],rangeEvents=[],rangeBackgroundEvents=[];events.forEach((function(event){if((0,eventLevels.r4)(event,start,end,accessors,localizer)){var eStart=accessors.start(event),eEnd=accessors.end(event);accessors.allDay(event)||localizer.startAndEndAreDateOnly(eStart,eEnd)||!showMultiDayTimes&&!localizer.isSameDate(eStart,eEnd)?allDayEvents.push(event):rangeEvents.push(event)}})),backgroundEvents.forEach((function(event){(0,eventLevels.r4)(event,start,end,accessors,localizer)&&rangeBackgroundEvents.push(event)})),allDayEvents.sort((function(a,b){return(0,eventLevels.kD)(a,b,accessors,localizer)}));var headerProps={range:range,events:allDayEvents,width:width,rtl:rtl,getNow:getNow,localizer:localizer,selected:selected,allDayMaxRows:this.props.showAllEvents?1/0:null!==(_this$props$allDayMax=this.props.allDayMaxRows)&&void 0!==_this$props$allDayMax?_this$props$allDayMax:1/0,resources:this.memoizedResources(resources,accessors),selectable:this.props.selectable,accessors:accessors,getters:getters,components:components,scrollRef:this.scrollRef,isOverflowing:this.state.isOverflowing,longPressThreshold:longPressThreshold,onSelectSlot:this.handleSelectAllDaySlot,onSelectEvent:this.handleSelectEvent,onShowMore:this.handleShowMore,onDoubleClickEvent:this.props.onDoubleClickEvent,onKeyPressEvent:this.props.onKeyPressEvent,onDrillDown:this.props.onDrillDown,getDrilldownView:this.props.getDrilldownView,resizable:resizable};return(0,jsx_runtime.jsxs)("div",{className:(0,clsx_m.A)("rbc-time-view",resources&&"rbc-time-view-resources"),ref:this.containerRef,children:[resources&&resources.length>1&&resourceGroupingLayout?(0,jsx_runtime.jsx)(src_TimeGridHeaderResources,Object.assign({},headerProps)):(0,jsx_runtime.jsx)(src_TimeGridHeader,Object.assign({},headerProps)),this.props.popup&&this.renderOverlay(),(0,jsx_runtime.jsxs)("div",{ref:this.contentRef,className:"rbc-time-content",onScroll:this.handleScroll,children:[(0,jsx_runtime.jsx)(src_TimeGutter,{date:start,ref:this.gutterRef,localizer:localizer,min:localizer.merge(start,min),max:localizer.merge(start,max),step:this.props.step,getNow:this.props.getNow,timeslots:this.props.timeslots,components:components,className:"rbc-time-gutter",getters:getters}),this.renderEvents(range,rangeEvents,rangeBackgroundEvents,getNow())]})]})}},{key:"renderOverlay",value:function renderOverlay(){var _this$state$overlay,_this$state,_this4=this,overlay=null!==(_this$state$overlay=null===(_this$state=this.state)||void 0===_this$state?void 0:_this$state.overlay)&&void 0!==_this$state$overlay?_this$state$overlay:{},_this$props5=this.props,accessors=_this$props5.accessors,localizer=_this$props5.localizer,components=_this$props5.components,getters=_this$props5.getters,selected=_this$props5.selected,popupOffset=_this$props5.popupOffset,handleDragStart=_this$props5.handleDragStart;return(0,jsx_runtime.jsx)(PopOverlay.A,{overlay:overlay,accessors:accessors,localizer:localizer,components:components,getters:getters,selected:selected,popupOffset:popupOffset,ref:this.containerRef,handleKeyPressEvent:this.handleKeyPressEvent,handleSelectEvent:this.handleSelectEvent,handleDoubleClickEvent:this.handleDoubleClickEvent,handleDragStart:handleDragStart,show:!!overlay.position,overlayDisplay:this.overlayDisplay,onHide:function onHide(){return _this4.setState({overlay:null})}})}},{key:"clearSelection",value:function clearSelection(){clearTimeout(this._selectTimer),this._pendingSelection=[]}},{key:"measureGutter",value:function measureGutter(){var _this5=this;this.measureGutterAnimationFrameRequest&&window.cancelAnimationFrame(this.measureGutterAnimationFrameRequest),this.measureGutterAnimationFrameRequest=window.requestAnimationFrame((function(){var _this5$gutterRef,width=null!==(_this5$gutterRef=_this5.gutterRef)&&void 0!==_this5$gutterRef&&_this5$gutterRef.current?(0,esm_width.A)(_this5.gutterRef.current):void 0;width&&_this5.state.gutterWidth!==width&&_this5.setState({gutterWidth:width})}))}},{key:"applyScroll",value:function applyScroll(){if(null!=this._scrollRatio&&!0===this.props.enableAutoScroll){var content=this.contentRef.current;content.scrollTop=content.scrollHeight*this._scrollRatio,this._scrollRatio=null}}},{key:"calculateScroll",value:function calculateScroll(){var props=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props,min=props.min,max=props.max,scrollToTime=props.scrollToTime,localizer=props.localizer,diffMillis=localizer.diff(localizer.merge(scrollToTime,min),scrollToTime,"milliseconds"),totalMillis=localizer.diff(min,max,"milliseconds");this._scrollRatio=diffMillis/totalMillis}}])}(react.Component);TimeGrid.defaultProps={step:30,timeslots:2,resourceGroupingLayout:!1},TimeGrid.__docgenInfo={description:"",methods:[{name:"handleScroll",docblock:null,modifiers:[],params:[{name:"e",type:null}],returns:null},{name:"handleResize",docblock:null,modifiers:[],params:[],returns:null},{name:"handleKeyPressEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleSelectEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleDoubleClickEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleShowMore",docblock:null,modifiers:[],params:[{name:"events",type:null},{name:"date",type:null},{name:"cell",type:null},{name:"slot",type:null},{name:"target",type:null}],returns:null},{name:"handleSelectAllDaySlot",docblock:null,modifiers:[],params:[{name:"slots",type:null},{name:"slotInfo",type:null}],returns:null},{name:"renderDayColumn",docblock:null,modifiers:[],params:[{name:"date",type:null},{name:"id",type:null},{name:"resource",type:null},{name:"groupedEvents",type:null},{name:"groupedBackgroundEvents",type:null},{name:"localizer",type:null},{name:"accessors",type:null},{name:"components",type:null},{name:"dayLayoutAlgorithm",type:null},{name:"now",type:null}],returns:null},{name:"renderResourcesFirst",docblock:null,modifiers:[],params:[{name:"range",type:null},{name:"resources",type:null},{name:"groupedEvents",type:null},{name:"groupedBackgroundEvents",type:null},{name:"localizer",type:null},{name:"accessors",type:null},{name:"now",type:null},{name:"components",type:null},{name:"dayLayoutAlgorithm",type:null}],returns:null},{name:"renderRangeFirst",docblock:null,modifiers:[],params:[{name:"range",type:null},{name:"resources",type:null},{name:"groupedEvents",type:null},{name:"groupedBackgroundEvents",type:null},{name:"localizer",type:null},{name:"accessors",type:null},{name:"now",type:null},{name:"components",type:null},{name:"dayLayoutAlgorithm",type:null}],returns:null},{name:"renderEvents",docblock:null,modifiers:[],params:[{name:"range",type:null},{name:"events",type:null},{name:"backgroundEvents",type:null},{name:"now",type:null}],returns:null},{name:"renderOverlay",docblock:null,modifiers:[],params:[],returns:null},{name:"overlayDisplay",docblock:null,modifiers:[],params:[],returns:null},{name:"clearSelection",docblock:null,modifiers:[],params:[],returns:null},{name:"measureGutter",docblock:null,modifiers:[],params:[],returns:null},{name:"applyScroll",docblock:null,modifiers:[],params:[],returns:null},{name:"calculateScroll",docblock:null,modifiers:[],params:[{name:"props",type:null}],returns:null},{name:"checkOverflow",docblock:null,modifiers:[],params:[],returns:null}],displayName:"TimeGrid",props:{step:{defaultValue:{value:"30",computed:!1},description:"",type:{name:"number"},required:!1},timeslots:{defaultValue:{value:"2",computed:!1},description:"",type:{name:"number"},required:!1},resourceGroupingLayout:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},events:{description:"",type:{name:"array"},required:!0},backgroundEvents:{description:"",type:{name:"array"},required:!0},resources:{description:"",type:{name:"array"},required:!1},range:{description:"",type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1},min:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},max:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},getNow:{description:"",type:{name:"func"},required:!0},scrollToTime:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},enableAutoScroll:{description:"",type:{name:"bool"},required:!1},showMultiDayTimes:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},width:{description:"",type:{name:"number"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},allDayMaxRows:{description:"",type:{name:"number"},required:!1},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onNavigate:{description:"",type:{name:"func"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelectEnd:{description:"",type:{name:"func"},required:!1},onSelectStart:{description:"",type:{name:"func"},required:!1},onSelectEvent:{description:"",type:{name:"func"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},getDrilldownView:{description:"",type:{name:"func"},required:!0},dayLayoutAlgorithm:{description:"",type:{name:"custom",raw:"DayLayoutAlgorithmPropType"},required:!1},showAllEvents:{description:"",type:{name:"bool"},required:!1},doShowMoreDrillDown:{description:"",type:{name:"bool"},required:!1},popup:{description:"",type:{name:"bool"},required:!1},handleDragStart:{description:"",type:{name:"func"},required:!1},popupOffset:{description:"",type:{name:"union",value:[{name:"number"},{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}}]},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/TimeGrid.js"]={name:"TimeGrid",docgenInfo:TimeGrid.__docgenInfo,path:"src/TimeGrid.js"})},"./src/TimeGridEvent.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),clsx__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/clsx/dist/clsx.m.js")),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));function stringifyPercent(v){return"string"==typeof v?v:v+"%"}function TimeGridEvent(props){var style=props.style,className=props.className,event=props.event,accessors=props.accessors,rtl=props.rtl,selected=props.selected,label=props.label,continuesPrior=props.continuesPrior,continuesAfter=props.continuesAfter,getters=props.getters,onClick=props.onClick,onDoubleClick=props.onDoubleClick,isBackgroundEvent=props.isBackgroundEvent,onKeyPress=props.onKeyPress,_props$components=props.components,Event=_props$components.event,EventWrapper=_props$components.eventWrapper,title=accessors.title(event),tooltip=accessors.tooltip(event),end=accessors.end(event),start=accessors.start(event),userProps=getters.eventProp(event,start,end,selected),inner=[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"rbc-event-label",children:label},"1"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:"rbc-event-content",children:Event?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Event,{event:event,title:title}):title},"2")],height=style.height,top=style.top,width=style.width,xOffset=style.xOffset,eventStyle=Object.assign({},userProps.style,(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__.A)({top:stringifyPercent(top),height:stringifyPercent(height),width:stringifyPercent(width)},rtl?"right":"left",stringifyPercent(xOffset)));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(EventWrapper,Object.assign({type:"time"},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{role:"button",tabIndex:0,onClick:onClick,onDoubleClick:onDoubleClick,style:eventStyle,onKeyDown:onKeyPress,title:tooltip?("string"==typeof label?label+": ":"")+tooltip:void 0,className:(0,clsx__WEBPACK_IMPORTED_MODULE_4__.A)(isBackgroundEvent?"rbc-background-event":"rbc-event",className,userProps.className,{"rbc-selected":selected,"rbc-event-continues-earlier":continuesPrior,"rbc-event-continues-later":continuesAfter}),children:inner})}))}TimeGridEvent.displayName="TimeGridEvent",TimeGridEvent.__docgenInfo={description:"",methods:[],displayName:"TimeGridEvent"},__webpack_exports__.A=TimeGridEvent,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/TimeGridEvent.js"]={name:"TimeGridEvent",docgenInfo:TimeGridEvent.__docgenInfo,path:"src/TimeGridEvent.js"})},"./src/addons/dragAndDrop/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return dragAndDrop}});var objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),classCallCheck=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),createClass=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),callSuper=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/callSuper.js"),inherits=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),clsx_m=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),accessors=(__webpack_require__("./src/utils/propTypes.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("./src/utils/accessors.js")),DnDContext=react.createContext(),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),EventWrapper=function(_React$Component){function EventWrapper(){var _this;(0,classCallCheck.default)(this,EventWrapper);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,EventWrapper,[].concat(args))).handleResizeUp=function(e){0===e.button&&_this.context.draggable.onBeginAction(_this.props.event,"resize","UP")},_this.handleResizeDown=function(e){0===e.button&&_this.context.draggable.onBeginAction(_this.props.event,"resize","DOWN")},_this.handleResizeLeft=function(e){0===e.button&&_this.context.draggable.onBeginAction(_this.props.event,"resize","LEFT")},_this.handleResizeRight=function(e){0===e.button&&_this.context.draggable.onBeginAction(_this.props.event,"resize","RIGHT")},_this.handleStartDragging=function(e){var _e$target$getAttribut;0===e.button&&((null===(_e$target$getAttribut=e.target.getAttribute("class"))||void 0===_e$target$getAttribut?void 0:_e$target$getAttribut.includes("rbc-addons-dnd-resize"))||(Object.assign({},_this.props.event).sourceResource=_this.props.resource,_this.context.draggable.onBeginAction(_this.props.event,"move")))},_this}return(0,inherits.default)(EventWrapper,_React$Component),(0,createClass.default)(EventWrapper,[{key:"renderAnchor",value:function renderAnchor(direction){var cls="Up"===direction||"Down"===direction?"ns":"ew";return(0,jsx_runtime.jsx)("div",{className:"rbc-addons-dnd-resize-".concat(cls,"-anchor"),onMouseDown:this["handleResize".concat(direction)],children:(0,jsx_runtime.jsx)("div",{className:"rbc-addons-dnd-resize-".concat(cls,"-icon")})})}},{key:"render",value:function render(){var _this$props=this.props,event=_this$props.event,type=_this$props.type,continuesPrior=_this$props.continuesPrior,continuesAfter=_this$props.continuesAfter,resizable=_this$props.resizable,children=this.props.children;if(event.__isPreview)return react.cloneElement(children,{className:(0,clsx_m.A)(children.props.className,"rbc-addons-dnd-drag-preview")});var draggable=this.context.draggable,draggableAccessor=draggable.draggableAccessor,resizableAccessor=draggable.resizableAccessor,isDraggable=!draggableAccessor||!!(0,accessors.s)(event,draggableAccessor);if(!isDraggable)return children;var isResizable=resizable&&(!resizableAccessor||!!(0,accessors.s)(event,resizableAccessor));if(isResizable||isDraggable){var newProps={onMouseDown:this.handleStartDragging,onTouchStart:this.handleStartDragging};if(isResizable){var StartAnchor=null,EndAnchor=null;"date"===type?(StartAnchor=!continuesPrior&&this.renderAnchor("Left"),EndAnchor=!continuesAfter&&this.renderAnchor("Right")):(StartAnchor=!continuesPrior&&this.renderAnchor("Up"),EndAnchor=!continuesAfter&&this.renderAnchor("Down")),newProps.children=(0,jsx_runtime.jsxs)("div",{className:"rbc-addons-dnd-resizable",children:[StartAnchor,children.props.children,EndAnchor]})}draggable.dragAndDropAction.interacting&&draggable.dragAndDropAction.event===event&&(newProps.className=(0,clsx_m.A)(children.props.className,"rbc-addons-dnd-dragged-event")),children=react.cloneElement(children,newProps)}return children}}])}(react.Component);EventWrapper.contextType=DnDContext,EventWrapper.__docgenInfo={description:"",methods:[{name:"handleResizeUp",docblock:null,modifiers:[],params:[{name:"e",type:null}],returns:null},{name:"handleResizeDown",docblock:null,modifiers:[],params:[{name:"e",type:null}],returns:null},{name:"handleResizeLeft",docblock:null,modifiers:[],params:[{name:"e",type:null}],returns:null},{name:"handleResizeRight",docblock:null,modifiers:[],params:[{name:"e",type:null}],returns:null},{name:"handleStartDragging",docblock:null,modifiers:[],params:[{name:"e",type:null}],returns:null},{name:"renderAnchor",docblock:null,modifiers:[],params:[{name:"direction",type:null}],returns:null}],displayName:"EventWrapper",props:{type:{description:"",type:{name:"enum",value:[{value:"'date'",computed:!1},{value:"'time'",computed:!1}]},required:!1},event:{description:"",type:{name:"object"},required:!0},draggable:{description:"",type:{name:"bool"},required:!1},allDay:{description:"",type:{name:"bool"},required:!1},isRow:{description:"",type:{name:"bool"},required:!1},continuesPrior:{description:"",type:{name:"bool"},required:!1},continuesAfter:{description:"",type:{name:"bool"},required:!1},isDragging:{description:"",type:{name:"bool"},required:!1},isResizing:{description:"",type:{name:"bool"},required:!1},resource:{description:"",type:{name:"number"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1}}};var dragAndDrop_EventWrapper=EventWrapper;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/addons/dragAndDrop/EventWrapper.js"]={name:"EventWrapper",docgenInfo:EventWrapper.__docgenInfo,path:"src/addons/dragAndDrop/EventWrapper.js"});var esm=__webpack_require__("./node_modules/dom-helpers/esm/index.js"),querySelectorAll=__webpack_require__("./node_modules/dom-helpers/cjs/querySelectorAll.js"),querySelectorAll_default=__webpack_require__.n(querySelectorAll),Selection=__webpack_require__("./src/Selection.js"),TimeGridEvent=__webpack_require__("./src/TimeGridEvent.js"),_excluded=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),["children"]),dragAccessors={start:(0,accessors.C)((function(e){return e.start})),end:(0,accessors.C)((function(e){return e.end}))};function mergeComponents(){var components=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},addons=arguments.length>1?arguments[1]:void 0,keys=Object.keys(addons),result=Object.assign({},components);return keys.forEach((function(key){result[key]=components[key]?function nest(){for(var _len=arguments.length,Components=new Array(_len),_key=0;_key<_len;_key++)Components[_key]=arguments[_key];var factories=Components.filter(Boolean).map(react.createFactory);return function Nest(_ref){var children=_ref.children,props=(0,objectWithoutProperties.A)(_ref,_excluded);return factories.reduceRight((function(child,factory){return factory(props,child)}),children)}}(components[key],addons[key]):addons[key]})),result}function pointInColumn(bounds,point){var left=bounds.left,right=bounds.right,top=bounds.top,x=point.x,y=point.y;return x<right+10&&x>left&&y>top}function eventTimes(event,accessors,localizer){var start=accessors.start(event),end=accessors.end(event);return localizer.eq(start,end,"minutes")&&0===localizer.diff(start,end,"minutes")&&(end=localizer.add(end,1,"day")),{start:start,end:end,duration:localizer.diff(start,end,"milliseconds")}}var EventContainerWrapper=function(_React$Component){function EventContainerWrapper(){var _this;(0,classCallCheck.default)(this,EventContainerWrapper);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,EventContainerWrapper,[].concat(args))).handleMove=function(point,bounds){if(!pointInColumn(bounds,point))return _this.reset();var event=_this.context.draggable.dragAndDropAction.event,_this$props=_this.props,accessors=_this$props.accessors,slotMetrics=_this$props.slotMetrics,newSlot=slotMetrics.closestSlotFromPoint({y:point.y-_this.eventOffsetTop,x:point.x},bounds),duration=eventTimes(event,accessors,_this.props.localizer).duration,newEnd=_this.props.localizer.add(newSlot,duration,"milliseconds");_this.update(event,slotMetrics.getRange(newSlot,newEnd,!1,!0))},_this.handleDropFromOutside=function(point,boundaryBox){var _this$props2=_this.props,slotMetrics=_this$props2.slotMetrics,resource=_this$props2.resource,start=slotMetrics.closestSlotFromPoint({y:point.y,x:point.x},boundaryBox),end=_this._calculateDnDEnd(start);_this.context.draggable.onDropFromOutside({start:start,end:end,allDay:!1,resource:resource})},_this.handleDragOverFromOutside=function(point,bounds){var slotMetrics=_this.props.slotMetrics,start=slotMetrics.closestSlotFromPoint({y:point.y,x:point.x},bounds),end=_this._calculateDnDEnd(start),event=_this.context.draggable.dragFromOutsideItem();_this.update(event,slotMetrics.getRange(start,end,!1,!0))},_this._calculateDnDEnd=function(start){var _this$props3=_this.props,accessors=_this$props3.accessors,slotMetrics=_this$props3.slotMetrics,localizer=_this$props3.localizer,eventDuration=eventTimes(_this.context.draggable.dragFromOutsideItem(),accessors,localizer).duration,end=slotMetrics.nextSlot(start);if(!isNaN(eventDuration)){var eventEndSlot=localizer.add(start,eventDuration,"milliseconds");end=new Date(Math.max(eventEndSlot,end))}return end},_this.updateParentScroll=function(parent,node){setTimeout((function(){var draggedEl=querySelectorAll_default()(node,".rbc-addons-dnd-drag-preview")[0];draggedEl&&(draggedEl.offsetTop<parent.scrollTop?(0,esm.F1)(parent,Math.max(draggedEl.offsetTop,0)):draggedEl.offsetTop+draggedEl.offsetHeight>parent.scrollTop+parent.clientHeight&&(0,esm.F1)(parent,Math.min(draggedEl.offsetTop-parent.offsetHeight+draggedEl.offsetHeight,parent.scrollHeight)))}))},_this._selectable=function(){var wrapper=_this.ref.current,node=wrapper.children[0],isBeingDragged=!1,selector=_this._selector=new Selection.Ay((function(){return wrapper.closest(".rbc-time-view")})),parent=(0,esm.mi)(wrapper);selector.on("beforeSelect",(function(point){var dragAndDropAction=_this.context.draggable.dragAndDropAction;if(!dragAndDropAction.action)return!1;if("resize"===dragAndDropAction.action)return pointInColumn((0,Selection.rF)(node),point);var eventNode=(0,Selection.LP)(node,point);if(!eventNode)return!1;_this.eventOffsetTop=point.y-(0,Selection.rF)(eventNode).top})),selector.on("selecting",(function(box){var bounds=(0,Selection.rF)(node),dragAndDropAction=_this.context.draggable.dragAndDropAction;"move"===dragAndDropAction.action&&(_this.updateParentScroll(parent,node),_this.handleMove(box,bounds)),"resize"===dragAndDropAction.action&&(_this.updateParentScroll(parent,node),_this.handleResize(box,bounds))})),selector.on("dropFromOutside",(function(point){if(_this.context.draggable.onDropFromOutside){var bounds=(0,Selection.rF)(node);pointInColumn(bounds,point)&&_this.handleDropFromOutside(point,bounds)}})),selector.on("dragOverFromOutside",(function(point){if(_this.context.draggable.dragFromOutsideItem?_this.context.draggable.dragFromOutsideItem():null){var bounds=(0,Selection.rF)(node);if(!pointInColumn(bounds,point))return _this.reset();_this.handleDragOverFromOutside(point,bounds)}})),selector.on("selectStart",(function(){isBeingDragged=!0,_this.context.draggable.onStart()})),selector.on("select",(function(point){var bounds=(0,Selection.rF)(node);if(isBeingDragged=!1,"resize"===_this.context.draggable.dragAndDropAction.action)_this.handleInteractionEnd();else{if(!_this.state.event||!pointInColumn(bounds,point))return;_this.handleInteractionEnd()}})),selector.on("click",(function(){isBeingDragged&&_this.reset(),_this.context.draggable.onEnd(null)})),selector.on("reset",(function(){_this.reset(),_this.context.draggable.onEnd(null)}))},_this.handleInteractionEnd=function(){var resource=_this.props.resource,event=_this.state.event;_this.reset(),_this.context.draggable.onEnd({start:event.start,end:event.end,resourceId:resource})},_this._teardownSelectable=function(){_this._selector&&(_this._selector.teardown(),_this._selector=null)},_this.state={},_this.ref=react.createRef(),_this}return(0,inherits.default)(EventContainerWrapper,_React$Component),(0,createClass.default)(EventContainerWrapper,[{key:"componentDidMount",value:function componentDidMount(){this._selectable()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this._teardownSelectable()}},{key:"reset",value:function reset(){this.state.event&&this.setState({event:null,top:null,height:null})}},{key:"update",value:function update(event,_ref){var startDate=_ref.startDate,endDate=_ref.endDate,top=_ref.top,height=_ref.height,lastEvent=this.state.event;lastEvent&&startDate===lastEvent.start&&endDate===lastEvent.end||this.setState({top:top,height:height,event:Object.assign({},event,{start:startDate,end:endDate})})}},{key:"handleResize",value:function handleResize(point,bounds){var newRange,_this$props4=this.props,accessors=_this$props4.accessors,slotMetrics=_this$props4.slotMetrics,localizer=_this$props4.localizer,_this$context$draggab=this.context.draggable.dragAndDropAction,event=_this$context$draggab.event,direction=_this$context$draggab.direction,newTime=slotMetrics.closestSlotFromPoint(point,bounds),_eventTimes3=eventTimes(event,accessors,localizer),start=_eventTimes3.start,end=_eventTimes3.end;if("UP"===direction){var newStart=localizer.min(newTime,slotMetrics.closestSlotFromDate(end,-1));newRange=slotMetrics.getRange(newStart,end),newRange=Object.assign({},newRange,{endDate:end})}else if("DOWN"===direction){var newEnd=localizer.max(newTime,slotMetrics.closestSlotFromDate(start));newRange=slotMetrics.getRange(start,newEnd),newRange=Object.assign({},newRange,{startDate:start})}this.update(event,newRange)}},{key:"renderContent",value:function renderContent(){var _this$props5=this.props,children=_this$props5.children,accessors=_this$props5.accessors,components=_this$props5.components,getters=_this$props5.getters,slotMetrics=_this$props5.slotMetrics,localizer=_this$props5.localizer,_this$state=this.state,event=_this$state.event,top=_this$state.top,height=_this$state.height;if(!event)return children;var label,events=children.props.children,start=event.start,end=event.end,format="eventTimeRangeFormat",startsBeforeDay=slotMetrics.startsBeforeDay(start),startsAfterDay=slotMetrics.startsAfterDay(end);return startsBeforeDay?format="eventTimeRangeEndFormat":startsAfterDay&&(format="eventTimeRangeStartFormat"),label=startsBeforeDay&&startsAfterDay?localizer.messages.allDay:localizer.format({start:start,end:end},format),react.cloneElement(children,{children:(0,jsx_runtime.jsxs)(react.Fragment,{children:[events,event&&(0,jsx_runtime.jsx)(TimeGridEvent.A,{event:event,label:label,className:"rbc-addons-dnd-drag-preview",style:{top:top,height:height,width:100},getters:getters,components:components,accessors:Object.assign({},accessors,dragAccessors),continuesPrior:startsBeforeDay,continuesAfter:startsAfterDay})]})})}},{key:"render",value:function render(){return(0,jsx_runtime.jsx)("div",{ref:this.ref,children:this.renderContent()})}}])}(react.Component);EventContainerWrapper.contextType=DnDContext,EventContainerWrapper.__docgenInfo={description:"",methods:[{name:"reset",docblock:null,modifiers:[],params:[],returns:null},{name:"update",docblock:null,modifiers:[],params:[{name:"event",type:null},{name:"{ startDate, endDate, top, height }",type:null}],returns:null},{name:"handleMove",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"bounds",type:null}],returns:null},{name:"handleResize",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"bounds",type:null}],returns:null},{name:"handleDropFromOutside",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"boundaryBox",type:null}],returns:null},{name:"handleDragOverFromOutside",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"bounds",type:null}],returns:null},{name:"_calculateDnDEnd",docblock:null,modifiers:[],params:[{name:"start",type:null}],returns:null},{name:"updateParentScroll",docblock:null,modifiers:[],params:[{name:"parent",type:null},{name:"node",type:null}],returns:null},{name:"_selectable",docblock:null,modifiers:[],params:[],returns:null},{name:"handleInteractionEnd",docblock:null,modifiers:[],params:[],returns:null},{name:"_teardownSelectable",docblock:null,modifiers:[],params:[],returns:null},{name:"renderContent",docblock:null,modifiers:[],params:[],returns:null}],displayName:"EventContainerWrapper",props:{accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},slotMetrics:{description:"",type:{name:"object"},required:!0},resource:{description:"",type:{name:"any"},required:!1}}};var dragAndDrop_EventContainerWrapper=EventContainerWrapper;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/addons/dragAndDrop/EventContainerWrapper.js"]={name:"EventContainerWrapper",docgenInfo:EventContainerWrapper.__docgenInfo,path:"src/addons/dragAndDrop/EventContainerWrapper.js"});var toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),EventRow=__webpack_require__("./src/EventRow.js"),eventLevels=__webpack_require__("./src/utils/eventLevels.js"),selection=__webpack_require__("./src/utils/selection.js"),WeekWrapper=function(_React$Component){function WeekWrapper(){var _this;(0,classCallCheck.default)(this,WeekWrapper);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,WeekWrapper,[].concat(args))).handleMove=function(point,bounds,draggedEvent){if(!(0,selection.bY)(bounds,point))return _this.reset();var event=_this.context.draggable.dragAndDropAction.event||draggedEvent,_this$props=_this.props,accessors=_this$props.accessors,slotMetrics=_this$props.slotMetrics,rtl=_this$props.rtl,localizer=_this$props.localizer,slot=(0,selection.sU)(bounds,point.x,rtl,slotMetrics.slots),date=slotMetrics.getDateForSlot(slot),_eventTimes=eventTimes(event,accessors,localizer),start=_eventTimes.start,duration=_eventTimes.duration;start=localizer.merge(date,start);var end=localizer.add(start,duration,"milliseconds");_this.update(event,start,end)},_this.handleDropFromOutside=function(point,bounds){if(_this.context.draggable.onDropFromOutside){var _this$props2=_this.props,slotMetrics=_this$props2.slotMetrics,rtl=_this$props2.rtl,localizer=_this$props2.localizer,slot=(0,selection.sU)(bounds,point.x,rtl,slotMetrics.slots),start=slotMetrics.getDateForSlot(slot);_this.context.draggable.onDropFromOutside({start:start,end:localizer.add(start,1,"day"),allDay:!1})}},_this.handleDragOverFromOutside=function(point,node){var item=_this.context.draggable.dragFromOutsideItem?_this.context.draggable.dragFromOutsideItem():null;item&&_this.handleMove(point,node,item)},_this._selectable=function(){var node=_this.ref.current.closest(".rbc-month-row, .rbc-allday-cell"),container=node.closest(".rbc-month-view, .rbc-time-view"),isMonthRow=node.classList.contains("rbc-month-row"),selector=_this._selector=new Selection.Ay((function(){return container}),{validContainers:(0,toConsumableArray.A)(isMonthRow?[]:[".rbc-day-slot",".rbc-allday-cell"])});selector.on("beforeSelect",(function(point){var isAllDay=_this.props.isAllDay,action=_this.context.draggable.dragAndDropAction.action,bounds=(0,Selection.rF)(node),isInBox=(0,selection.bY)(bounds,point);return"move"===action||"resize"===action&&(!isAllDay||isInBox)})),selector.on("selecting",(function(box){var bounds=(0,Selection.rF)(node),dragAndDropAction=_this.context.draggable.dragAndDropAction;"move"===dragAndDropAction.action&&_this.handleMove(box,bounds),"resize"===dragAndDropAction.action&&_this.handleResize(box,bounds)})),selector.on("selectStart",(function(){return _this.context.draggable.onStart()})),selector.on("select",(function(point){var bounds=(0,Selection.rF)(node);_this.state.segment&&((0,selection.bY)(bounds,point)?_this.handleInteractionEnd():_this.reset())})),selector.on("dropFromOutside",(function(point){if(_this.context.draggable.onDropFromOutside){var bounds=(0,Selection.rF)(node);(0,selection.bY)(bounds,point)&&_this.handleDropFromOutside(point,bounds)}})),selector.on("dragOverFromOutside",(function(point){if(_this.context.draggable.dragFromOutsideItem){var bounds=(0,Selection.rF)(node);_this.handleDragOverFromOutside(point,bounds)}})),selector.on("click",(function(){return _this.context.draggable.onEnd(null)})),selector.on("reset",(function(){_this.reset(),_this.context.draggable.onEnd(null)}))},_this.handleInteractionEnd=function(){var _this$props3=_this.props,resourceId=_this$props3.resourceId,isAllDay=_this$props3.isAllDay,event=_this.state.segment.event;_this.reset(),_this.context.draggable.onEnd({start:event.start,end:event.end,resourceId:resourceId,isAllDay:isAllDay})},_this._teardownSelectable=function(){_this._selector&&(_this._selector.teardown(),_this._selector=null)},_this.state={},_this.ref=react.createRef(),_this}return(0,inherits.default)(WeekWrapper,_React$Component),(0,createClass.default)(WeekWrapper,[{key:"componentDidMount",value:function componentDidMount(){this._selectable()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this._teardownSelectable()}},{key:"reset",value:function reset(){this.state.segment&&this.setState({segment:null})}},{key:"update",value:function update(event,start,end){var segment=(0,eventLevels.FA)(Object.assign({},event,{end:end,start:start,__isPreview:!0}),this.props.slotMetrics.range,dragAccessors,this.props.localizer),lastSegment=this.state.segment;lastSegment&&segment.span===lastSegment.span&&segment.left===lastSegment.left&&segment.right===lastSegment.right||this.setState({segment:segment})}},{key:"handleResize",value:function handleResize(point,bounds){var _this$context$draggab=this.context.draggable.dragAndDropAction,event=_this$context$draggab.event,direction=_this$context$draggab.direction,_this$props4=this.props,accessors=_this$props4.accessors,slotMetrics=_this$props4.slotMetrics,rtl=_this$props4.rtl,localizer=_this$props4.localizer,_eventTimes2=eventTimes(event,accessors,localizer),start=_eventTimes2.start,end=_eventTimes2.end,slot=(0,selection.sU)(bounds,point.x,rtl,slotMetrics.slots),date=slotMetrics.getDateForSlot(slot),cursorInRow=(0,selection.bY)(bounds,point);if("RIGHT"===direction){if(cursorInRow){if(slotMetrics.last<start)return this.reset();end=localizer.eq(localizer.startOf(end,"day"),end)?localizer.add(date,1,"day"):date}else{if(!(localizer.inRange(start,slotMetrics.first,slotMetrics.last)||bounds.bottom<point.y&&+slotMetrics.first>+start))return void this.setState({segment:null});end=localizer.add(slotMetrics.last,1,"milliseconds")}var originalEnd=accessors.end(event);end=localizer.merge(end,originalEnd),localizer.lt(end,start)&&(end=originalEnd)}else if("LEFT"===direction){if(cursorInRow){if(slotMetrics.first>end)return this.reset();start=date}else{if(!(localizer.inRange(end,slotMetrics.first,slotMetrics.last)||bounds.top>point.y&&localizer.lt(slotMetrics.last,end)))return void this.reset();start=localizer.add(slotMetrics.first,-1,"milliseconds")}var originalStart=accessors.start(event);start=localizer.merge(start,originalStart),localizer.gt(start,end)&&(start=originalStart)}this.update(event,start,end)}},{key:"render",value:function render(){var _this$props5=this.props,children=_this$props5.children,accessors=_this$props5.accessors,segment=this.state.segment;return(0,jsx_runtime.jsxs)("div",{ref:this.ref,className:"rbc-addons-dnd-row-body",children:[children,segment&&(0,jsx_runtime.jsx)(EventRow.A,Object.assign({},this.props,{selected:null,className:"rbc-addons-dnd-drag-row",segments:[segment],accessors:Object.assign({},accessors,dragAccessors)}))]})}}])}(react.Component);WeekWrapper.contextType=DnDContext,WeekWrapper.__docgenInfo={description:"",methods:[{name:"reset",docblock:null,modifiers:[],params:[],returns:null},{name:"update",docblock:null,modifiers:[],params:[{name:"event",type:null},{name:"start",type:null},{name:"end",type:null}],returns:null},{name:"handleMove",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"bounds",type:null},{name:"draggedEvent",type:null}],returns:null},{name:"handleDropFromOutside",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"bounds",type:null}],returns:null},{name:"handleDragOverFromOutside",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"node",type:null}],returns:null},{name:"handleResize",docblock:null,modifiers:[],params:[{name:"point",type:null},{name:"bounds",type:null}],returns:null},{name:"_selectable",docblock:null,modifiers:[],params:[],returns:null},{name:"handleInteractionEnd",docblock:null,modifiers:[],params:[],returns:null},{name:"_teardownSelectable",docblock:null,modifiers:[],params:[],returns:null}],displayName:"WeekWrapper",props:{isAllDay:{description:"",type:{name:"bool"},required:!1},slotMetrics:{description:"",type:{name:"object"},required:!0},accessors:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},resourceId:{description:"",type:{name:"any"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},localizer:{description:"",type:{name:"any"},required:!1}}};var dragAndDrop_WeekWrapper=WeekWrapper;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/addons/dragAndDrop/WeekWrapper.js"]={name:"WeekWrapper",docgenInfo:WeekWrapper.__docgenInfo,path:"src/addons/dragAndDrop/WeekWrapper.js"});var withDragAndDrop_excluded=["selectable","elementProps","components"];var dragAndDrop=function withDragAndDrop(Calendar){var DragAndDropCalendar=function(_React$Component){function DragAndDropCalendar(){var _this;(0,classCallCheck.default)(this,DragAndDropCalendar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,DragAndDropCalendar,[].concat(args))).defaultOnDragOver=function(event){event.preventDefault()},_this.handleBeginAction=function(event,action,direction){_this.setState({event:event,action:action,direction:direction});var onDragStart=_this.props.onDragStart;onDragStart&&onDragStart({event:event,action:action,direction:direction})},_this.handleInteractionStart=function(){!1===_this.state.interacting&&_this.setState({interacting:!0})},_this.handleInteractionEnd=function(interactionInfo){var _this$state=_this.state,action=_this$state.action,event=_this$state.event;if(action&&(_this.setState({action:null,event:null,interacting:!1,direction:null}),null!=interactionInfo)){interactionInfo.event=event;var _this$props=_this.props,onEventDrop=_this$props.onEventDrop,onEventResize=_this$props.onEventResize;"move"===action&&onEventDrop&&onEventDrop(interactionInfo),"resize"===action&&onEventResize&&onEventResize(interactionInfo)}},_this.state={interacting:!1},_this}return(0,inherits.default)(DragAndDropCalendar,_React$Component),(0,createClass.default)(DragAndDropCalendar,[{key:"getDnDContextValue",value:function getDnDContextValue(){return{draggable:{onStart:this.handleInteractionStart,onEnd:this.handleInteractionEnd,onBeginAction:this.handleBeginAction,onDropFromOutside:this.props.onDropFromOutside,dragFromOutsideItem:this.props.dragFromOutsideItem,draggableAccessor:this.props.draggableAccessor,resizableAccessor:this.props.resizableAccessor,dragAndDropAction:this.state}}}},{key:"render",value:function render(){var _this$props2=this.props,selectable=_this$props2.selectable,elementProps=_this$props2.elementProps,components=_this$props2.components,props=(0,objectWithoutProperties.A)(_this$props2,withDragAndDrop_excluded),interacting=this.state.interacting;delete props.onEventDrop,delete props.onEventResize,props.selectable=!!selectable&&"ignoreEvents",this.components=mergeComponents(components,{eventWrapper:dragAndDrop_EventWrapper,eventContainerWrapper:dragAndDrop_EventContainerWrapper,weekWrapper:dragAndDrop_WeekWrapper});var elementPropsWithDropFromOutside=this.props.onDropFromOutside?Object.assign({},elementProps,{onDragOver:this.props.onDragOver||this.defaultOnDragOver}):elementProps;props.className=(0,clsx_m.A)(props.className,"rbc-addons-dnd",!!interacting&&"rbc-addons-dnd-is-dragging");var context=this.getDnDContextValue();return(0,jsx_runtime.jsx)(DnDContext.Provider,{value:context,children:(0,jsx_runtime.jsx)(Calendar,Object.assign({},props,{elementProps:elementPropsWithDropFromOutside,components:this.components}))})}}])}(react.Component);return DragAndDropCalendar.defaultProps=Object.assign({},Calendar.defaultProps,{draggableAccessor:null,resizableAccessor:null,resizable:!0}),DragAndDropCalendar}},"./src/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Vv:function(){return src_Calendar},C5:function(){return constants.o},Pp:function(){return constants.l},vH:function(){return dayjs},fk:function(){return globalize},AW:function(){return luxon},ye:function(){return moment}});var NoopWrapper=__webpack_require__("./src/NoopWrapper.js"),BackgroundWrapper=(NoopWrapper.A,__webpack_require__("./src/BackgroundWrapper.js")),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),classCallCheck=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),createClass=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),callSuper=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/callSuper.js"),inherits=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),clsx_m=(__webpack_require__("./node_modules/core-js/modules/es.object.entries.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/clsx/dist/clsx.m.js")),react=__webpack_require__("./node_modules/react/index.js"),esm=__webpack_require__("./node_modules/uncontrollable/lib/esm/index.js"),prop_types=(__webpack_require__("./src/utils/propTypes.js"),__webpack_require__("./node_modules/prop-types/index.js")),prop_types_default=__webpack_require__.n(prop_types),browser=__webpack_require__("./node_modules/invariant/browser.js"),browser_default=__webpack_require__.n(browser),dates=__webpack_require__("./src/utils/dates.js"),localePropType=prop_types_default().oneOfType([prop_types_default().string,prop_types_default().func]);function _format(localizer,formatter,value,format,culture){var result="function"==typeof format?format(value,culture,localizer):formatter.call(localizer,value,format,culture);return browser_default()(null==result||"string"==typeof result,"`localizer format(..)` must return a string, null, or undefined"),result}function getSlotDate(dt,minutesFromMidnight,offset){return new Date(dt.getFullYear(),dt.getMonth(),dt.getDate(),0,minutesFromMidnight+offset,0,0)}function getDstOffset(start,end){return start.getTimezoneOffset()-end.getTimezoneOffset()}function getTotalMin(start,end){return(0,dates.Ui)(start,end,"minutes")+getDstOffset(start,end)}function getMinutesFromMidnight(start){var daystart=(0,dates.GH)(start,"day");return(0,dates.Ui)(daystart,start,"minutes")+getDstOffset(daystart,start)}function continuesPrior(start,first){return(0,dates.lt)(start,first,"day")}function continuesAfter(start,end,last){return(0,dates.eq)(start,end,"minutes")?(0,dates.RO)(end,last,"minutes"):(0,dates.gt)(end,last,"minutes")}function daySpan(start,end){return(0,dates.p0)(start,end,"day")}function sortEvents(_ref){var _ref$evtA=_ref.evtA,aStart=_ref$evtA.start,aEnd=_ref$evtA.end,aAllDay=_ref$evtA.allDay,_ref$evtB=_ref.evtB,bStart=_ref$evtB.start,bEnd=_ref$evtB.end,bAllDay=_ref$evtB.allDay,startSort=+(0,dates.GH)(aStart,"day")-+(0,dates.GH)(bStart,"day"),durA=daySpan(aStart,aEnd),durB=daySpan(bStart,bEnd);return startSort||durB-durA||!!bAllDay-!!aAllDay||+aStart-+bStart||+aEnd-+bEnd}function inEventRange(_ref2){var _ref2$event=_ref2.event,start=_ref2$event.start,end=_ref2$event.end,_ref2$range=_ref2.range,rangeStart=_ref2$range.start,rangeEnd=_ref2$range.end,eStart=(0,dates.GH)(start,"day"),startsBeforeEnd=(0,dates.wJ)(eStart,rangeEnd,"day"),endsAfterStart=(0,dates.t7)(eStart,end,"minutes")?(0,dates.gt)(end,rangeStart,"minutes"):(0,dates.RO)(end,rangeStart,"minutes");return startsBeforeEnd&&endsAfterStart}function isSameDate(date1,date2){return(0,dates.eq)(date1,date2,"day")}function startAndEndAreDateOnly(start,end){return(0,dates.pR)(start)&&(0,dates.pR)(end)}var localizer_DateLocalizer=(0,createClass.default)((function DateLocalizer(spec){var _this=this;(0,classCallCheck.default)(this,DateLocalizer),browser_default()("function"==typeof spec.format,"date localizer `format(..)` must be a function"),browser_default()("function"==typeof spec.firstOfWeek,"date localizer `firstOfWeek(..)` must be a function"),this.propType=spec.propType||localePropType,this.formats=spec.formats,this.format=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _format.apply(void 0,[_this,spec.format].concat(args))},this.startOfWeek=spec.firstOfWeek,this.merge=spec.merge||dates.h1,this.inRange=spec.inRange||dates.r4,this.lt=spec.lt||dates.lt,this.lte=spec.lte||dates.wJ,this.gt=spec.gt||dates.gt,this.gte=spec.gte||dates.RO,this.eq=spec.eq||dates.eq,this.neq=spec.neq||dates.t7,this.startOf=spec.startOf||dates.GH,this.endOf=spec.endOf||dates.pJ,this.add=spec.add||dates.WQ,this.range=spec.range||dates.y1,this.diff=spec.diff||dates.Ui,this.ceil=spec.ceil||dates.mk,this.min=spec.min||dates.jk,this.max=spec.max||dates.T9,this.minutes=spec.minutes||dates.Gx,this.daySpan=spec.daySpan||daySpan,this.firstVisibleDay=spec.firstVisibleDay||dates.tk,this.lastVisibleDay=spec.lastVisibleDay||dates.Jo,this.visibleDays=spec.visibleDays||dates.IC,this.getSlotDate=spec.getSlotDate||getSlotDate,this.getTimezoneOffset=spec.getTimezoneOffset||function(value){return value.getTimezoneOffset()},this.getDstOffset=spec.getDstOffset||getDstOffset,this.getTotalMin=spec.getTotalMin||getTotalMin,this.getMinutesFromMidnight=spec.getMinutesFromMidnight||getMinutesFromMidnight,this.continuesPrior=spec.continuesPrior||continuesPrior,this.continuesAfter=spec.continuesAfter||continuesAfter,this.sortEvents=spec.sortEvents||sortEvents,this.inEventRange=spec.inEventRange||inEventRange,this.isSameDate=spec.isSameDate||isSameDate,this.startAndEndAreDateOnly=spec.startAndEndAreDateOnly||startAndEndAreDateOnly,this.segmentOffset=spec.browserTZOffset?spec.browserTZOffset():0}));function mergeWithDefaults(localizer,culture,formatOverrides,messages){var formats=Object.assign({},localizer.formats,formatOverrides);return Object.assign({},localizer,{messages:messages,startOfWeek:function startOfWeek(){return localizer.startOfWeek(culture)},format:function format(value,_format2){return localizer.format(value,formats[_format2]||_format2,culture)}})}__webpack_require__("./node_modules/core-js/modules/es.array.map.js");var constants=__webpack_require__("./src/utils/constants.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Toolbar=function(_React$Component){function Toolbar(){var _this;(0,classCallCheck.default)(this,Toolbar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,Toolbar,[].concat(args))).navigate=function(action){_this.props.onNavigate(action)},_this.view=function(view){_this.props.onView(view)},_this}return(0,inherits.default)(Toolbar,_React$Component),(0,createClass.default)(Toolbar,[{key:"render",value:function render(){var _this$props=this.props,messages=_this$props.localizer.messages,label=_this$props.label;return(0,jsx_runtime.jsxs)("div",{className:"rbc-toolbar",children:[(0,jsx_runtime.jsxs)("span",{className:"rbc-btn-group",children:[(0,jsx_runtime.jsx)("button",{type:"button",onClick:this.navigate.bind(null,constants.o.TODAY),children:messages.today}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:this.navigate.bind(null,constants.o.PREVIOUS),children:messages.previous}),(0,jsx_runtime.jsx)("button",{type:"button",onClick:this.navigate.bind(null,constants.o.NEXT),children:messages.next})]}),(0,jsx_runtime.jsx)("span",{className:"rbc-toolbar-label",children:label}),(0,jsx_runtime.jsx)("span",{className:"rbc-btn-group",children:this.viewNamesGroup(messages)})]})}},{key:"viewNamesGroup",value:function viewNamesGroup(messages){var _this2=this,viewNames=this.props.views,view=this.props.view;if(viewNames.length>1)return viewNames.map((function(name){return(0,jsx_runtime.jsx)("button",{type:"button",className:(0,clsx_m.A)({"rbc-active":view===name}),onClick:_this2.view.bind(null,name),children:messages[name]},name)}))}}])}(react.Component);Toolbar.__docgenInfo={description:"",methods:[{name:"navigate",docblock:null,modifiers:[],params:[{name:"action",type:null}],returns:null},{name:"view",docblock:null,modifiers:[],params:[{name:"view",type:null}],returns:null},{name:"viewNamesGroup",docblock:null,modifiers:[],params:[{name:"messages",type:null}],returns:null}],displayName:"Toolbar",props:{view:{description:"",type:{name:"string"},required:!0},views:{description:"",type:{name:"arrayOf",value:{name:"string"}},required:!0},label:{description:"",type:{name:"node"},required:!0},localizer:{description:"",type:{name:"object"},required:!1},onNavigate:{description:"",type:{name:"func"},required:!0},onView:{description:"",type:{name:"func"},required:!0}}};var src_Toolbar=Toolbar;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Toolbar.js"]={name:"Toolbar",docgenInfo:Toolbar.__docgenInfo,path:"src/Toolbar.js"});var helpers=__webpack_require__("./src/utils/helpers.js"),defaultMessages={date:"Date",time:"Time",event:"Event",allDay:"All Day",week:"Week",work_week:"Work Week",day:"Day",month:"Month",previous:"Back",next:"Next",yesterday:"Yesterday",tomorrow:"Tomorrow",today:"Today",agenda:"Agenda",noEventsInRange:"There are no events in this range.",showMore:function showMore(total){return"+".concat(total," more")}};var defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),chunk=(__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.array.sort.js"),__webpack_require__("./node_modules/lodash/chunk.js")),chunk_default=__webpack_require__.n(chunk),esm_position=__webpack_require__("./node_modules/dom-helpers/esm/position.js"),animationFrame=__webpack_require__("./node_modules/dom-helpers/esm/animationFrame.js"),PopOverlay=__webpack_require__("./src/PopOverlay.js"),DateContentRow=__webpack_require__("./src/DateContentRow.js"),Header=__webpack_require__("./src/Header.js"),DateHeader=function DateHeader(_ref){var label=_ref.label,drilldownView=_ref.drilldownView,onDrillDown=_ref.onDrillDown;return drilldownView?(0,jsx_runtime.jsx)("button",{type:"button",className:"rbc-button-link",onClick:onDrillDown,children:label}):(0,jsx_runtime.jsx)("span",{children:label})};DateHeader.displayName="DateHeader",DateHeader.__docgenInfo={description:"",methods:[],displayName:"DateHeader",props:{label:{description:"",type:{name:"node"},required:!1},date:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},drilldownView:{description:"",type:{name:"string"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},isOffRange:{description:"",type:{name:"bool"},required:!1}}};var src_DateHeader=DateHeader;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/DateHeader.js"]={name:"DateHeader",docgenInfo:DateHeader.__docgenInfo,path:"src/DateHeader.js"});var eventLevels=__webpack_require__("./src/utils/eventLevels.js"),_excluded=["date","className"],MonthView=function(_React$Component){function MonthView(){var _this;(0,classCallCheck.default)(this,MonthView);for(var _len=arguments.length,_args=new Array(_len),_key=0;_key<_len;_key++)_args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,MonthView,[].concat(_args))).getContainer=function(){return _this.containerRef.current},_this.renderWeek=function(week,weekIdx){var _this$props=_this.props,events=_this$props.events,components=_this$props.components,selectable=_this$props.selectable,getNow=_this$props.getNow,selected=_this$props.selected,date=_this$props.date,localizer=_this$props.localizer,longPressThreshold=_this$props.longPressThreshold,accessors=_this$props.accessors,getters=_this$props.getters,showAllEvents=_this$props.showAllEvents,_this$state=_this.state,needLimitMeasure=_this$state.needLimitMeasure,rowLimit=_this$state.rowLimit,weeksEvents=function eventsForWeek(evts,start,end,accessors,localizer){return evts.filter((function(e){return(0,eventLevels.r4)(e,start,end,accessors,localizer)}))}((0,toConsumableArray.A)(events),week[0],week[week.length-1],accessors,localizer),sorted=(0,eventLevels.SY)(weeksEvents,accessors,localizer);return(0,jsx_runtime.jsx)(DateContentRow.A,{ref:0===weekIdx?_this.slotRowRef:void 0,container:_this.getContainer,className:"rbc-month-row",getNow:getNow,date:date,range:week,events:sorted,maxRows:showAllEvents?1/0:rowLimit,selected:selected,selectable:selectable,components:components,accessors:accessors,getters:getters,localizer:localizer,renderHeader:_this.readerDateHeading,renderForMeasure:needLimitMeasure,onShowMore:_this.handleShowMore,onSelect:_this.handleSelectEvent,onDoubleClick:_this.handleDoubleClickEvent,onKeyPress:_this.handleKeyPressEvent,onSelectSlot:_this.handleSelectSlot,longPressThreshold:longPressThreshold,rtl:_this.props.rtl,resizable:_this.props.resizable,showAllEvents:showAllEvents},weekIdx)},_this.readerDateHeading=function(_ref){var date=_ref.date,className=_ref.className,props=(0,objectWithoutProperties.A)(_ref,_excluded),_this$props2=_this.props,currentDate=_this$props2.date,getDrilldownView=_this$props2.getDrilldownView,localizer=_this$props2.localizer,isOffRange=localizer.neq(date,currentDate,"month"),isCurrent=localizer.isSameDate(date,currentDate),drilldownView=getDrilldownView(date),label=localizer.format(date,"dateFormat"),DateHeaderComponent=_this.props.components.dateHeader||src_DateHeader;return(0,jsx_runtime.jsx)("div",Object.assign({},props,{className:(0,clsx_m.A)(className,isOffRange&&"rbc-off-range",isCurrent&&"rbc-current"),role:"cell",children:(0,jsx_runtime.jsx)(DateHeaderComponent,{label:label,date:date,drilldownView:drilldownView,isOffRange:isOffRange,onDrillDown:function onDrillDown(e){return _this.handleHeadingClick(date,drilldownView,e)}})}))},_this.handleSelectSlot=function(range,slotInfo){_this._pendingSelection=_this._pendingSelection.concat(range),clearTimeout(_this._selectTimer),_this._selectTimer=setTimeout((function(){return _this.selectDates(slotInfo)}))},_this.handleHeadingClick=function(date,view,e){e.preventDefault(),_this.clearSelection(),(0,helpers.me)(_this.props.onDrillDown,[date,view])},_this.handleSelectEvent=function(){_this.clearSelection();for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];(0,helpers.me)(_this.props.onSelectEvent,args)},_this.handleDoubleClickEvent=function(){_this.clearSelection();for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++)args[_key3]=arguments[_key3];(0,helpers.me)(_this.props.onDoubleClickEvent,args)},_this.handleKeyPressEvent=function(){_this.clearSelection();for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++)args[_key4]=arguments[_key4];(0,helpers.me)(_this.props.onKeyPressEvent,args)},_this.handleShowMore=function(events,date,cell,slot,target){var _this$props3=_this.props,popup=_this$props3.popup,onDrillDown=_this$props3.onDrillDown,onShowMore=_this$props3.onShowMore,getDrilldownView=_this$props3.getDrilldownView,doShowMoreDrillDown=_this$props3.doShowMoreDrillDown;if(_this.clearSelection(),popup){var position=(0,esm_position.A)(cell,_this.containerRef.current);_this.setState({overlay:{date:date,events:events,position:position,target:target}})}else doShowMoreDrillDown&&(0,helpers.me)(onDrillDown,[date,getDrilldownView(date)||constants.l.DAY]);(0,helpers.me)(onShowMore,[events,date,slot])},_this.overlayDisplay=function(){_this.setState({overlay:null})},_this.state={rowLimit:5,needLimitMeasure:!0,date:null},_this.containerRef=(0,react.createRef)(),_this.slotRowRef=(0,react.createRef)(),_this._bgRows=[],_this._pendingSelection=[],_this}return(0,inherits.default)(MonthView,_React$Component),(0,createClass.default)(MonthView,[{key:"componentDidMount",value:function componentDidMount(){var running,_this2=this;this.state.needLimitMeasure&&this.measureRowLimit(this.props),window.addEventListener("resize",this._resizeListener=function(){running||animationFrame.E((function(){running=!1,_this2.setState({needLimitMeasure:!0})}))},!1)}},{key:"componentDidUpdate",value:function componentDidUpdate(){this.state.needLimitMeasure&&this.measureRowLimit(this.props)}},{key:"componentWillUnmount",value:function componentWillUnmount(){window.removeEventListener("resize",this._resizeListener,!1)}},{key:"render",value:function render(){var _this$props4=this.props,date=_this$props4.date,localizer=_this$props4.localizer,className=_this$props4.className,month=localizer.visibleDays(date,localizer),weeks=chunk_default()(month,7);return this._weekCount=weeks.length,(0,jsx_runtime.jsxs)("div",{className:(0,clsx_m.A)("rbc-month-view",className),role:"table","aria-label":"Month View",ref:this.containerRef,children:[(0,jsx_runtime.jsx)("div",{className:"rbc-row rbc-month-header",role:"row",children:this.renderHeaders(weeks[0])}),weeks.map(this.renderWeek),this.props.popup&&this.renderOverlay()]})}},{key:"renderHeaders",value:function renderHeaders(row){var _this$props5=this.props,localizer=_this$props5.localizer,components=_this$props5.components,first=row[0],last=row[row.length-1],HeaderComponent=components.header||Header.A;return localizer.range(first,last,"day").map((function(day,idx){return(0,jsx_runtime.jsx)("div",{className:"rbc-header",children:(0,jsx_runtime.jsx)(HeaderComponent,{date:day,localizer:localizer,label:localizer.format(day,"weekdayFormat")})},"header_"+idx)}))}},{key:"renderOverlay",value:function renderOverlay(){var _this$state$overlay,_this$state2,_this3=this,overlay=null!==(_this$state$overlay=null===(_this$state2=this.state)||void 0===_this$state2?void 0:_this$state2.overlay)&&void 0!==_this$state$overlay?_this$state$overlay:{},_this$props6=this.props,accessors=_this$props6.accessors,localizer=_this$props6.localizer,components=_this$props6.components,getters=_this$props6.getters,selected=_this$props6.selected,popupOffset=_this$props6.popupOffset,handleDragStart=_this$props6.handleDragStart;return(0,jsx_runtime.jsx)(PopOverlay.A,{overlay:overlay,accessors:accessors,localizer:localizer,components:components,getters:getters,selected:selected,popupOffset:popupOffset,ref:this.containerRef,handleKeyPressEvent:this.handleKeyPressEvent,handleSelectEvent:this.handleSelectEvent,handleDoubleClickEvent:this.handleDoubleClickEvent,handleDragStart:handleDragStart,show:!!overlay.position,overlayDisplay:this.overlayDisplay,onHide:function onHide(){return _this3.setState({overlay:null})}})}},{key:"measureRowLimit",value:function measureRowLimit(){this.setState({needLimitMeasure:!1,rowLimit:this.slotRowRef.current.getRowLimit()})}},{key:"selectDates",value:function selectDates(slotInfo){var slots=this._pendingSelection.slice();this._pendingSelection=[],slots.sort((function(a,b){return+a-+b}));var start=new Date(slots[0]),end=new Date(slots[slots.length-1]);end.setDate(slots[slots.length-1].getDate()+1),(0,helpers.me)(this.props.onSelectSlot,{slots:slots,start:start,end:end,action:slotInfo.action,bounds:slotInfo.bounds,box:slotInfo.box})}},{key:"clearSelection",value:function clearSelection(){clearTimeout(this._selectTimer),this._pendingSelection=[]}}],[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(_ref2,state){var date=_ref2.date;return{date:date,needLimitMeasure:_ref2.localizer.neq(date,state.date,"month")}}}])}(react.Component);MonthView.range=function(date,_ref3){var localizer=_ref3.localizer;return{start:localizer.firstVisibleDay(date,localizer),end:localizer.lastVisibleDay(date,localizer)}},MonthView.navigate=function(date,action,_ref4){var localizer=_ref4.localizer;switch(action){case constants.o.PREVIOUS:return localizer.add(date,-1,"month");case constants.o.NEXT:return localizer.add(date,1,"month");default:return date}},MonthView.title=function(date,_ref5){return _ref5.localizer.format(date,"monthHeaderFormat")},MonthView.__docgenInfo={description:"",methods:[{name:"getContainer",docblock:null,modifiers:[],params:[],returns:null},{name:"renderWeek",docblock:null,modifiers:[],params:[{name:"week",type:null},{name:"weekIdx",type:null}],returns:null},{name:"readerDateHeading",docblock:null,modifiers:[],params:[{name:"{ date, className, ...props }",type:null}],returns:null},{name:"renderHeaders",docblock:null,modifiers:[],params:[{name:"row",type:null}],returns:null},{name:"renderOverlay",docblock:null,modifiers:[],params:[],returns:null},{name:"measureRowLimit",docblock:null,modifiers:[],params:[],returns:null},{name:"handleSelectSlot",docblock:null,modifiers:[],params:[{name:"range",type:null},{name:"slotInfo",type:null}],returns:null},{name:"handleHeadingClick",docblock:null,modifiers:[],params:[{name:"date",type:null},{name:"view",type:null},{name:"e",type:null}],returns:null},{name:"handleSelectEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleDoubleClickEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleKeyPressEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleShowMore",docblock:null,modifiers:[],params:[{name:"events",type:null},{name:"date",type:null},{name:"cell",type:null},{name:"slot",type:null},{name:"target",type:null}],returns:null},{name:"overlayDisplay",docblock:null,modifiers:[],params:[],returns:null},{name:"selectDates",docblock:null,modifiers:[],params:[{name:"slotInfo",type:null}],returns:null},{name:"clearSelection",docblock:null,modifiers:[],params:[],returns:null},{name:"range",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null},{name:"navigate",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"action",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null},{name:"title",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null}],displayName:"MonthView",props:{events:{description:"",type:{name:"array"},required:!0},date:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},min:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},max:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},step:{description:"",type:{name:"number"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},scrollToTime:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},enableAutoScroll:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},width:{description:"",type:{name:"number"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onNavigate:{description:"",type:{name:"func"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelectEvent:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},showAllEvents:{description:"",type:{name:"bool"},required:!1},doShowMoreDrillDown:{description:"",type:{name:"bool"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},getDrilldownView:{description:"",type:{name:"func"},required:!0},popup:{description:"",type:{name:"bool"},required:!1},handleDragStart:{description:"",type:{name:"func"},required:!1},popupOffset:{description:"",type:{name:"union",value:[{name:"number"},{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}}]},required:!1}}};var Month=MonthView;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Month.js"]={name:"MonthView",docgenInfo:MonthView.__docgenInfo,path:"src/Month.js"});var TimeGrid=__webpack_require__("./src/TimeGrid.js"),Day_excluded=["date","localizer","min","max","scrollToTime","enableAutoScroll"],Day=function(_React$Component){function Day(){return(0,classCallCheck.default)(this,Day),(0,callSuper.default)(this,Day,arguments)}return(0,inherits.default)(Day,_React$Component),(0,createClass.default)(Day,[{key:"render",value:function render(){var _this$props=this.props,date=_this$props.date,localizer=_this$props.localizer,_this$props$min=_this$props.min,min=void 0===_this$props$min?localizer.startOf(new Date,"day"):_this$props$min,_this$props$max=_this$props.max,max=void 0===_this$props$max?localizer.endOf(new Date,"day"):_this$props$max,_this$props$scrollToT=_this$props.scrollToTime,scrollToTime=void 0===_this$props$scrollToT?localizer.startOf(new Date,"day"):_this$props$scrollToT,_this$props$enableAut=_this$props.enableAutoScroll,enableAutoScroll=void 0===_this$props$enableAut||_this$props$enableAut,props=(0,objectWithoutProperties.A)(_this$props,Day_excluded),range=Day.range(date,{localizer:localizer});return(0,jsx_runtime.jsx)(TimeGrid.A,Object.assign({},props,{range:range,eventOffset:10,localizer:localizer,min:min,max:max,scrollToTime:scrollToTime,enableAutoScroll:enableAutoScroll}))}}])}(react.Component);Day.range=function(date,_ref){return[_ref.localizer.startOf(date,"day")]},Day.navigate=function(date,action,_ref2){var localizer=_ref2.localizer;switch(action){case constants.o.PREVIOUS:return localizer.add(date,-1,"day");case constants.o.NEXT:return localizer.add(date,1,"day");default:return date}},Day.title=function(date,_ref3){return _ref3.localizer.format(date,"dayHeaderFormat")},Day.__docgenInfo={description:"",methods:[{name:"range",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null},{name:"navigate",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"action",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null},{name:"title",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null}],displayName:"Day",props:{date:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},events:{description:"",type:{name:"array"},required:!0},backgroundEvents:{description:"",type:{name:"array"},required:!0},resources:{description:"",type:{name:"array"},required:!1},step:{description:"",type:{name:"number"},required:!1},timeslots:{description:"",type:{name:"number"},required:!1},range:{description:"",type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1},min:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},max:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},scrollToTime:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},enableAutoScroll:{description:"",type:{name:"bool"},required:!1},showMultiDayTimes:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},width:{description:"",type:{name:"number"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},allDayMaxRows:{description:"",type:{name:"number"},required:!1},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onNavigate:{description:"",type:{name:"func"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelectEnd:{description:"",type:{name:"func"},required:!1},onSelectStart:{description:"",type:{name:"func"},required:!1},onSelectEvent:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},getDrilldownView:{description:"",type:{name:"func"},required:!0},dayLayoutAlgorithm:{description:"",type:{name:"custom",raw:"DayLayoutAlgorithmPropType"},required:!1},showAllEvents:{description:"",type:{name:"bool"},required:!1},doShowMoreDrillDown:{description:"",type:{name:"bool"},required:!1},popup:{description:"",type:{name:"bool"},required:!1},handleDragStart:{description:"",type:{name:"func"},required:!1},popupOffset:{description:"",type:{name:"union",value:[{name:"number"},{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}}]},required:!1}}};var src_Day=Day;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Day.js"]={name:"Day",docgenInfo:Day.__docgenInfo,path:"src/Day.js"});var toArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toArray.js"),Week_excluded=["date","localizer","min","max","scrollToTime","enableAutoScroll"],Week=function(_React$Component){function Week(){return(0,classCallCheck.default)(this,Week),(0,callSuper.default)(this,Week,arguments)}return(0,inherits.default)(Week,_React$Component),(0,createClass.default)(Week,[{key:"render",value:function render(){var _this$props=this.props,date=_this$props.date,localizer=_this$props.localizer,_this$props$min=_this$props.min,min=void 0===_this$props$min?localizer.startOf(new Date,"day"):_this$props$min,_this$props$max=_this$props.max,max=void 0===_this$props$max?localizer.endOf(new Date,"day"):_this$props$max,_this$props$scrollToT=_this$props.scrollToTime,scrollToTime=void 0===_this$props$scrollToT?localizer.startOf(new Date,"day"):_this$props$scrollToT,_this$props$enableAut=_this$props.enableAutoScroll,enableAutoScroll=void 0===_this$props$enableAut||_this$props$enableAut,props=(0,objectWithoutProperties.A)(_this$props,Week_excluded),range=Week.range(date,this.props);return(0,jsx_runtime.jsx)(TimeGrid.A,Object.assign({},props,{range:range,eventOffset:15,localizer:localizer,min:min,max:max,scrollToTime:scrollToTime,enableAutoScroll:enableAutoScroll}))}}])}(react.Component);Week.defaultProps=TimeGrid.A.defaultProps,Week.navigate=function(date,action,_ref){var localizer=_ref.localizer;switch(action){case constants.o.PREVIOUS:return localizer.add(date,-1,"week");case constants.o.NEXT:return localizer.add(date,1,"week");default:return date}},Week.range=function(date,_ref2){var localizer=_ref2.localizer,firstOfWeek=localizer.startOfWeek(),start=localizer.startOf(date,"week",firstOfWeek),end=localizer.endOf(date,"week",firstOfWeek);return localizer.range(start,end)},Week.title=function(date,_ref3){var localizer=_ref3.localizer,_Week$range=Week.range(date,{localizer:localizer}),_Week$range2=(0,toArray.A)(_Week$range),start=_Week$range2[0],rest=_Week$range2.slice(1);return localizer.format({start:start,end:rest.pop()},"dayRangeHeaderFormat")},Week.__docgenInfo={description:"",methods:[{name:"navigate",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"action",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null},{name:"range",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null},{name:"title",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null}],displayName:"Week",props:{date:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},events:{description:"",type:{name:"array"},required:!0},backgroundEvents:{description:"",type:{name:"array"},required:!0},resources:{description:"",type:{name:"array"},required:!1},step:{description:"",type:{name:"number"},required:!1},timeslots:{description:"",type:{name:"number"},required:!1},range:{description:"",type:{name:"arrayOf",value:{name:"instanceOf",value:"Date"}},required:!1},min:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},max:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},getNow:{description:"",type:{name:"func"},required:!0},scrollToTime:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},enableAutoScroll:{description:"",type:{name:"bool"},required:!1},showMultiDayTimes:{description:"",type:{name:"bool"},required:!1},rtl:{description:"",type:{name:"bool"},required:!1},resizable:{description:"",type:{name:"bool"},required:!1},width:{description:"",type:{name:"number"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},allDayMaxRows:{description:"",type:{name:"number"},required:!1},selected:{description:"",type:{name:"object"},required:!1},selectable:{description:"",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},longPressThreshold:{description:"",type:{name:"number"},required:!1},onNavigate:{description:"",type:{name:"func"},required:!1},onSelectSlot:{description:"",type:{name:"func"},required:!1},onSelectEnd:{description:"",type:{name:"func"},required:!1},onSelectStart:{description:"",type:{name:"func"},required:!1},onSelectEvent:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},onKeyPressEvent:{description:"",type:{name:"func"},required:!1},onShowMore:{description:"",type:{name:"func"},required:!1},onDrillDown:{description:"",type:{name:"func"},required:!1},getDrilldownView:{description:"",type:{name:"func"},required:!0},dayLayoutAlgorithm:{description:"",type:{name:"custom",raw:"DayLayoutAlgorithmPropType"},required:!1},showAllEvents:{description:"",type:{name:"bool"},required:!1},doShowMoreDrillDown:{description:"",type:{name:"bool"},required:!1},popup:{description:"",type:{name:"bool"},required:!1},handleDragStart:{description:"",type:{name:"func"},required:!1},popupOffset:{description:"",type:{name:"union",value:[{name:"number"},{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}}]},required:!1}}};var src_Week=Week;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Week.js"]={name:"Week",docgenInfo:Week.__docgenInfo,path:"src/Week.js"});var WorkWeek_excluded=["date","localizer","min","max","scrollToTime","enableAutoScroll"];function workWeekRange(date,options){return src_Week.range(date,options).filter((function(d){return-1===[6,0].indexOf(d.getDay())}))}var WorkWeek=function(_React$Component){function WorkWeek(){return(0,classCallCheck.default)(this,WorkWeek),(0,callSuper.default)(this,WorkWeek,arguments)}return(0,inherits.default)(WorkWeek,_React$Component),(0,createClass.default)(WorkWeek,[{key:"render",value:function render(){var _this$props=this.props,date=_this$props.date,localizer=_this$props.localizer,_this$props$min=_this$props.min,min=void 0===_this$props$min?localizer.startOf(new Date,"day"):_this$props$min,_this$props$max=_this$props.max,max=void 0===_this$props$max?localizer.endOf(new Date,"day"):_this$props$max,_this$props$scrollToT=_this$props.scrollToTime,scrollToTime=void 0===_this$props$scrollToT?localizer.startOf(new Date,"day"):_this$props$scrollToT,_this$props$enableAut=_this$props.enableAutoScroll,enableAutoScroll=void 0===_this$props$enableAut||_this$props$enableAut,props=(0,objectWithoutProperties.A)(_this$props,WorkWeek_excluded),range=workWeekRange(date,this.props);return(0,jsx_runtime.jsx)(TimeGrid.A,Object.assign({},props,{range:range,eventOffset:15,localizer:localizer,min:min,max:max,scrollToTime:scrollToTime,enableAutoScroll:enableAutoScroll}))}}])}(react.Component);WorkWeek.defaultProps=TimeGrid.A.defaultProps,WorkWeek.range=workWeekRange,WorkWeek.navigate=src_Week.navigate,WorkWeek.title=function(date,_ref){var localizer=_ref.localizer,_workWeekRange=workWeekRange(date,{localizer:localizer}),_workWeekRange2=(0,toArray.A)(_workWeekRange),start=_workWeekRange2[0],rest=_workWeekRange2.slice(1);return localizer.format({start:start,end:rest.pop()},"dayRangeHeaderFormat")},WorkWeek.__docgenInfo={description:"",methods:[{name:"title",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"{ localizer }",type:null}],returns:null}],displayName:"WorkWeek",props:{date:{description:"",type:{name:"instanceOf",value:"Date"},required:!0},localizer:{description:"",type:{name:"any"},required:!1},min:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},max:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},scrollToTime:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},enableAutoScroll:{description:"",type:{name:"bool"},required:!1}}};var src_WorkWeek=WorkWeek;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/WorkWeek.js"]={name:"WorkWeek",docgenInfo:WorkWeek.__docgenInfo,path:"src/WorkWeek.js"});__webpack_require__("./node_modules/core-js/modules/es.string.trim.js");var addClass=__webpack_require__("./node_modules/dom-helpers/esm/addClass.js"),removeClass=__webpack_require__("./node_modules/dom-helpers/esm/removeClass.js"),width=__webpack_require__("./node_modules/dom-helpers/esm/width.js"),scrollbarSize=__webpack_require__("./node_modules/dom-helpers/esm/scrollbarSize.js"),selection=__webpack_require__("./src/utils/selection.js");function Agenda(_ref){var accessors=_ref.accessors,components=_ref.components,date=_ref.date,events=_ref.events,getters=_ref.getters,_ref$length=_ref.length,length=void 0===_ref$length?30:_ref$length,localizer=_ref.localizer,onDoubleClickEvent=_ref.onDoubleClickEvent,onSelectEvent=_ref.onSelectEvent,selected=_ref.selected,headerRef=(0,react.useRef)(null),dateColRef=(0,react.useRef)(null),timeColRef=(0,react.useRef)(null),contentRef=(0,react.useRef)(null),tbodyRef=(0,react.useRef)(null);(0,react.useEffect)((function(){_adjustHeader()}));var timeRangeLabel=function timeRangeLabel(day,event){var labelClass="",TimeComponent=components.time,label=localizer.messages.allDay,end=accessors.end(event),start=accessors.start(event);return accessors.allDay(event)||(localizer.eq(start,end)?label=localizer.format(start,"agendaTimeFormat"):localizer.isSameDate(start,end)?label=localizer.format({start:start,end:end},"agendaTimeRangeFormat"):localizer.isSameDate(day,start)?label=localizer.format(start,"agendaTimeFormat"):localizer.isSameDate(day,end)&&(label=localizer.format(end,"agendaTimeFormat"))),localizer.gt(day,start,"day")&&(labelClass="rbc-continues-prior"),localizer.lt(day,end,"day")&&(labelClass+=" rbc-continues-after"),(0,jsx_runtime.jsx)("span",{className:labelClass.trim(),children:TimeComponent?(0,jsx_runtime.jsx)(TimeComponent,{event:event,day:day,label:label}):label})},_adjustHeader=function _adjustHeader(){if(tbodyRef.current){var header=headerRef.current,firstRow=tbodyRef.current.firstChild;if(firstRow){var isOverflowing=contentRef.current.scrollHeight>contentRef.current.clientHeight,_widths=[],widths=_widths;_widths=[(0,width.A)(firstRow.children[0]),(0,width.A)(firstRow.children[1])],widths[0]===_widths[0]&&widths[1]===_widths[1]||(dateColRef.current.style.width=_widths[0]+"px",timeColRef.current.style.width=_widths[1]+"px"),isOverflowing?((0,addClass.A)(header,"rbc-header-overflowing"),header.style.marginRight=(0,scrollbarSize.A)()+"px"):(0,removeClass.A)(header,"rbc-header-overflowing")}}},messages=localizer.messages,end=localizer.add(date,length,"day"),range=localizer.range(date,end,"day");return(events=events.filter((function(event){return(0,eventLevels.r4)(event,localizer.startOf(date,"day"),localizer.endOf(end,"day"),accessors,localizer)}))).sort((function(a,b){return+accessors.start(a)-+accessors.start(b)})),(0,jsx_runtime.jsx)("div",{className:"rbc-agenda-view",children:0!==events.length?(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)("table",{ref:headerRef,className:"rbc-agenda-table",children:(0,jsx_runtime.jsx)("thead",{children:(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("th",{className:"rbc-header",ref:dateColRef,children:messages.date}),(0,jsx_runtime.jsx)("th",{className:"rbc-header",ref:timeColRef,children:messages.time}),(0,jsx_runtime.jsx)("th",{className:"rbc-header",children:messages.event})]})})}),(0,jsx_runtime.jsx)("div",{className:"rbc-agenda-content",ref:contentRef,children:(0,jsx_runtime.jsx)("table",{className:"rbc-agenda-table",children:(0,jsx_runtime.jsx)("tbody",{ref:tbodyRef,children:range.map((function(day,idx){return function renderDay(day,events,dayKey){var Event=components.event,AgendaDate=components.date;return(events=events.filter((function(e){return(0,eventLevels.r4)(e,localizer.startOf(day,"day"),localizer.endOf(day,"day"),accessors,localizer)}))).map((function(event,idx){var title=accessors.title(event),end=accessors.end(event),start=accessors.start(event),userProps=getters.eventProp(event,start,end,(0,selection.sp)(event,selected)),dateLabel=0===idx&&localizer.format(day,"agendaDateFormat"),first=0===idx&&(0,jsx_runtime.jsx)("td",{rowSpan:events.length,className:"rbc-agenda-date-cell",children:AgendaDate?(0,jsx_runtime.jsx)(AgendaDate,{day:day,label:dateLabel}):dateLabel});return(0,jsx_runtime.jsxs)("tr",{className:userProps.className,style:userProps.style,children:[first,(0,jsx_runtime.jsx)("td",{className:"rbc-agenda-time-cell",children:timeRangeLabel(day,event)}),(0,jsx_runtime.jsx)("td",{className:"rbc-agenda-event-cell",onClick:function onClick(e){return onSelectEvent&&onSelectEvent(event,e)},onDoubleClick:function onDoubleClick(e){return onDoubleClickEvent&&onDoubleClickEvent(event,e)},children:Event?(0,jsx_runtime.jsx)(Event,{event:event,title:title}):title})]},dayKey+"_"+idx)}),[])}(day,events,idx)}))})})})]}):(0,jsx_runtime.jsx)("span",{className:"rbc-agenda-empty",children:messages.noEventsInRange})})}Agenda.displayName="Agenda",Agenda.range=function(start,_ref2){var _ref2$length=_ref2.length,length=void 0===_ref2$length?30:_ref2$length;return{start:start,end:_ref2.localizer.add(start,length,"day")}},Agenda.navigate=function(date,action,_ref3){var _ref3$length=_ref3.length,length=void 0===_ref3$length?30:_ref3$length,localizer=_ref3.localizer;switch(action){case constants.o.PREVIOUS:return localizer.add(date,-length,"day");case constants.o.NEXT:return localizer.add(date,length,"day");default:return date}},Agenda.title=function(start,_ref4){var _ref4$length=_ref4.length,length=void 0===_ref4$length?30:_ref4$length,localizer=_ref4.localizer,end=localizer.add(start,length,"day");return localizer.format({start:start,end:end},"agendaHeaderFormat")},Agenda.__docgenInfo={description:"",methods:[{name:"range",docblock:null,modifiers:["static"],params:[{name:"start",optional:!1,type:null},{name:"{ length = DEFAULT_LENGTH, localizer }",type:null}],returns:null},{name:"navigate",docblock:null,modifiers:["static"],params:[{name:"date",optional:!1,type:null},{name:"action",optional:!1,type:null},{name:"{ length = DEFAULT_LENGTH, localizer }",type:null}],returns:null},{name:"title",docblock:null,modifiers:["static"],params:[{name:"start",optional:!1,type:null},{name:"{ length = DEFAULT_LENGTH, localizer }",type:null}],returns:null}],displayName:"Agenda",props:{length:{defaultValue:{value:"30",computed:!1},description:"",type:{name:"number"},required:!1},accessors:{description:"",type:{name:"object"},required:!0},components:{description:"",type:{name:"object"},required:!0},date:{description:"",type:{name:"instanceOf",value:"Date"},required:!1},events:{description:"",type:{name:"array"},required:!1},getters:{description:"",type:{name:"object"},required:!0},localizer:{description:"",type:{name:"object"},required:!0},onSelectEvent:{description:"",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"",type:{name:"func"},required:!1},selected:{description:"",type:{name:"object"},required:!1}}};var src_Agenda=Agenda;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Agenda.js"]={name:"Agenda",docgenInfo:Agenda.__docgenInfo,path:"src/Agenda.js"});var Views=(0,defineProperty.A)((0,defineProperty.A)((0,defineProperty.A)((0,defineProperty.A)((0,defineProperty.A)({},constants.l.MONTH,Month),constants.l.WEEK,src_Week),constants.l.WORK_WEEK,src_WorkWeek),constants.l.DAY,src_Day),constants.l.AGENDA,src_Agenda),move_excluded=["action","date","today"];var defaults=__webpack_require__("./node_modules/lodash/defaults.js"),defaults_default=__webpack_require__.n(defaults),mapValues=__webpack_require__("./node_modules/lodash/mapValues.js"),mapValues_default=__webpack_require__.n(mapValues),omit=__webpack_require__("./node_modules/lodash/omit.js"),omit_default=__webpack_require__.n(omit),transform=__webpack_require__("./node_modules/lodash/transform.js"),transform_default=__webpack_require__.n(transform),accessors=__webpack_require__("./src/utils/accessors.js"),Calendar_excluded=["view","date","getNow","onNavigate"],_excluded2=["view","toolbar","events","backgroundEvents","resourceGroupingLayout","style","className","elementProps","date","getNow","length","showMultiDayTimes","onShowMore","doShowMoreDrillDown","components","formats","messages","culture"];function viewNames(_views){if(Array.isArray(_views))return _views;for(var views=[],_i=0,_Object$entries=Object.entries(_views);_i<_Object$entries.length;_i++){var _ref=_Object$entries[_i],_ref2=(0,slicedToArray.A)(_ref,2),key=_ref2[0];_ref2[1]&&views.push(key)}return views}var Calendar=function(_React$Component){function Calendar(){var _this;(0,classCallCheck.default)(this,Calendar);for(var _len=arguments.length,_args=new Array(_len),_key=0;_key<_len;_key++)_args[_key]=arguments[_key];return(_this=(0,callSuper.default)(this,Calendar,[].concat(_args))).getViews=function(){var views=_this.props.views;return Array.isArray(views)?transform_default()(views,(function(obj,name){return obj[name]=Views[name]}),{}):"object"==typeof views?mapValues_default()(views,(function(value,key){return!0===value?Views[key]:value})):Views},_this.getView=function(){return _this.getViews()[_this.props.view]},_this.getDrilldownView=function(date){var _this$props=_this.props,view=_this$props.view,drilldownView=_this$props.drilldownView,getDrilldownView=_this$props.getDrilldownView;return getDrilldownView?getDrilldownView(date,view,Object.keys(_this.getViews())):drilldownView},_this.handleRangeChange=function(date,viewComponent,view){var _this$props2=_this.props,onRangeChange=_this$props2.onRangeChange,localizer=_this$props2.localizer;onRangeChange&&viewComponent.range&&onRangeChange(viewComponent.range(date,{localizer:localizer}),view)},_this.handleNavigate=function(action,newDate){var _this$props3=_this.props,view=_this$props3.view,date=_this$props3.date,getNow=_this$props3.getNow,onNavigate=_this$props3.onNavigate,props=(0,objectWithoutProperties.A)(_this$props3,Calendar_excluded),ViewComponent=_this.getView(),today=getNow();date=function moveDate(View,_ref){var action=_ref.action,date=_ref.date,today=_ref.today,props=(0,objectWithoutProperties.A)(_ref,move_excluded);switch(View="string"==typeof View?Views[View]:View,action){case constants.o.TODAY:date=today||new Date;break;case constants.o.DATE:break;default:browser_default()(View&&"function"==typeof View.navigate,"Calendar View components must implement a static `.navigate(date, action)` method.s"),date=View.navigate(date,action,props)}return date}(ViewComponent,Object.assign({},props,{action:action,date:newDate||date||today,today:today})),onNavigate(date,view,action),_this.handleRangeChange(date,ViewComponent)},_this.handleViewChange=function(view){view!==_this.props.view&&function isValidView(view,_ref3){return-1!==viewNames(_ref3.views).indexOf(view)}(view,_this.props)&&_this.props.onView(view);var views=_this.getViews();_this.handleRangeChange(_this.props.date||_this.props.getNow(),views[view],view)},_this.handleSelectEvent=function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];(0,helpers.me)(_this.props.onSelectEvent,args)},_this.handleDoubleClickEvent=function(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++)args[_key3]=arguments[_key3];(0,helpers.me)(_this.props.onDoubleClickEvent,args)},_this.handleKeyPressEvent=function(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++)args[_key4]=arguments[_key4];(0,helpers.me)(_this.props.onKeyPressEvent,args)},_this.handleSelectSlot=function(slotInfo){(0,helpers.me)(_this.props.onSelectSlot,slotInfo)},_this.handleDrillDown=function(date,view){var onDrillDown=_this.props.onDrillDown;onDrillDown?onDrillDown(date,view,_this.drilldownView):(view&&_this.handleViewChange(view),_this.handleNavigate(constants.o.DATE,date))},_this.state={context:Calendar.getContext(_this.props)},_this}return(0,inherits.default)(Calendar,_React$Component),(0,createClass.default)(Calendar,[{key:"render",value:function render(){var _this$props4=this.props,view=_this$props4.view,toolbar=_this$props4.toolbar,events=_this$props4.events,backgroundEvents=_this$props4.backgroundEvents,resourceGroupingLayout=_this$props4.resourceGroupingLayout,style=_this$props4.style,className=_this$props4.className,elementProps=_this$props4.elementProps,current=_this$props4.date,getNow=_this$props4.getNow,length=_this$props4.length,showMultiDayTimes=_this$props4.showMultiDayTimes,onShowMore=_this$props4.onShowMore,doShowMoreDrillDown=_this$props4.doShowMoreDrillDown,props=(_this$props4.components,_this$props4.formats,_this$props4.messages,_this$props4.culture,(0,objectWithoutProperties.A)(_this$props4,_excluded2));current=current||getNow();var View=this.getView(),_this$state$context=this.state.context,accessors=_this$state$context.accessors,components=_this$state$context.components,getters=_this$state$context.getters,localizer=_this$state$context.localizer,viewNames=_this$state$context.viewNames,CalToolbar=components.toolbar||src_Toolbar,label=View.title(current,{localizer:localizer,length:length});return(0,jsx_runtime.jsxs)("div",Object.assign({},elementProps,{className:(0,clsx_m.A)(className,"rbc-calendar",props.rtl&&"rbc-rtl"),style:style,children:[toolbar&&(0,jsx_runtime.jsx)(CalToolbar,{date:current,view:view,views:viewNames,label:label,onView:this.handleViewChange,onNavigate:this.handleNavigate,localizer:localizer}),(0,jsx_runtime.jsx)(View,Object.assign({},props,{events:events,backgroundEvents:backgroundEvents,date:current,getNow:getNow,length:length,localizer:localizer,getters:getters,components:components,accessors:accessors,showMultiDayTimes:showMultiDayTimes,getDrilldownView:this.getDrilldownView,onNavigate:this.handleNavigate,onDrillDown:this.handleDrillDown,onSelectEvent:this.handleSelectEvent,onDoubleClickEvent:this.handleDoubleClickEvent,onKeyPressEvent:this.handleKeyPressEvent,onSelectSlot:this.handleSelectSlot,onShowMore:onShowMore,doShowMoreDrillDown:doShowMoreDrillDown,resourceGroupingLayout:resourceGroupingLayout}))]}))}}],[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(nextProps){return{context:Calendar.getContext(nextProps)}}},{key:"getContext",value:function getContext(_ref4){var startAccessor=_ref4.startAccessor,endAccessor=_ref4.endAccessor,allDayAccessor=_ref4.allDayAccessor,tooltipAccessor=_ref4.tooltipAccessor,titleAccessor=_ref4.titleAccessor,resourceAccessor=_ref4.resourceAccessor,resourceIdAccessor=_ref4.resourceIdAccessor,resourceTitleAccessor=_ref4.resourceTitleAccessor,eventIdAccessor=_ref4.eventIdAccessor,eventPropGetter=_ref4.eventPropGetter,backgroundEventPropGetter=_ref4.backgroundEventPropGetter,slotPropGetter=_ref4.slotPropGetter,slotGroupPropGetter=_ref4.slotGroupPropGetter,dayPropGetter=_ref4.dayPropGetter,view=_ref4.view,views=_ref4.views,localizer=_ref4.localizer,culture=_ref4.culture,_ref4$messages=_ref4.messages,messages=void 0===_ref4$messages?{}:_ref4$messages,_ref4$components=_ref4.components,components=void 0===_ref4$components?{}:_ref4$components,_ref4$formats=_ref4.formats,formats=void 0===_ref4$formats?{}:_ref4$formats,names=viewNames(views);return{viewNames:names,localizer:mergeWithDefaults(localizer,culture,formats,function messages_messages(msgs){return Object.assign({},defaultMessages,msgs)}(messages)),getters:{eventProp:function eventProp(){return eventPropGetter&&eventPropGetter.apply(void 0,arguments)||{}},backgroundEventProp:function backgroundEventProp(){return backgroundEventPropGetter&&backgroundEventPropGetter.apply(void 0,arguments)||{}},slotProp:function slotProp(){return slotPropGetter&&slotPropGetter.apply(void 0,arguments)||{}},slotGroupProp:function slotGroupProp(){return slotGroupPropGetter&&slotGroupPropGetter.apply(void 0,arguments)||{}},dayProp:function dayProp(){return dayPropGetter&&dayPropGetter.apply(void 0,arguments)||{}}},components:defaults_default()(components[view]||{},omit_default()(components,names),{eventWrapper:NoopWrapper.A,backgroundEventWrapper:NoopWrapper.A,eventContainerWrapper:NoopWrapper.A,dateCellWrapper:NoopWrapper.A,weekWrapper:NoopWrapper.A,timeSlotWrapper:NoopWrapper.A,timeGutterWrapper:NoopWrapper.A}),accessors:{start:(0,accessors.C)(startAccessor),end:(0,accessors.C)(endAccessor),allDay:(0,accessors.C)(allDayAccessor),tooltip:(0,accessors.C)(tooltipAccessor),title:(0,accessors.C)(titleAccessor),resource:(0,accessors.C)(resourceAccessor),resourceId:(0,accessors.C)(resourceIdAccessor),resourceTitle:(0,accessors.C)(resourceTitleAccessor),eventId:(0,accessors.C)(eventIdAccessor)}}}}])}(react.Component);Calendar.defaultProps={events:[],backgroundEvents:[],elementProps:{},popup:!1,toolbar:!0,view:constants.l.MONTH,views:[constants.l.MONTH,constants.l.WEEK,constants.l.DAY,constants.l.AGENDA],step:30,length:30,allDayMaxRows:1/0,doShowMoreDrillDown:!0,drilldownView:constants.l.DAY,titleAccessor:"title",tooltipAccessor:"title",allDayAccessor:"allDay",startAccessor:"start",endAccessor:"end",resourceAccessor:"resourceId",resourceIdAccessor:"id",resourceTitleAccessor:"title",eventIdAccessor:"id",longPressThreshold:250,getNow:function getNow(){return new Date},dayLayoutAlgorithm:"overlap"},Calendar.__docgenInfo={description:"",methods:[{name:"getContext",docblock:null,modifiers:["static"],params:[{name:"{\n  startAccessor,\n  endAccessor,\n  allDayAccessor,\n  tooltipAccessor,\n  titleAccessor,\n  resourceAccessor,\n  resourceIdAccessor,\n  resourceTitleAccessor,\n  eventIdAccessor,\n  eventPropGetter,\n  backgroundEventPropGetter,\n  slotPropGetter,\n  slotGroupPropGetter,\n  dayPropGetter,\n  view,\n  views,\n  localizer,\n  culture,\n  messages = {},\n  components = {},\n  formats = {},\n}",type:null}],returns:null},{name:"getViews",docblock:null,modifiers:[],params:[],returns:null},{name:"getView",docblock:null,modifiers:[],params:[],returns:null},{name:"getDrilldownView",docblock:null,modifiers:[],params:[{name:"date",type:null}],returns:null},{name:"handleRangeChange",docblock:"@param date\n@param viewComponent\n@param {'month'|'week'|'work_week'|'day'|'agenda'} [view] - optional\nparameter. It appears when range change on view changing. It could be handy\nwhen you need to have both: range and view type at once, i.e. for manage rbc\nstate via url",modifiers:[],params:[{name:"date",description:null,type:null,optional:!1},{name:"viewComponent",description:null,type:null,optional:!1},{name:"view"}],returns:null,description:null},{name:"handleNavigate",docblock:null,modifiers:[],params:[{name:"action",type:null},{name:"newDate",type:null}],returns:null},{name:"handleViewChange",docblock:null,modifiers:[],params:[{name:"view",type:null}],returns:null},{name:"handleSelectEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleDoubleClickEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleKeyPressEvent",docblock:null,modifiers:[],params:[{name:"...args",type:null}],returns:null},{name:"handleSelectSlot",docblock:null,modifiers:[],params:[{name:"slotInfo",type:null}],returns:null},{name:"handleDrillDown",docblock:null,modifiers:[],params:[{name:"date",type:null},{name:"view",type:null}],returns:null}],displayName:"Calendar",props:{events:{defaultValue:{value:"[]",computed:!1},description:'An array of event objects to display on the calendar. Events objects\ncan be any shape, as long as the Calendar knows how to retrieve the\nfollowing details of the event:\n\n - start time\n - end time\n - title\n - whether its an "all day" event or not\n - any resource the event may be related to\n\nEach of these properties can be customized or generated dynamically by\nsetting the various "accessor" props. Without any configuration the default\nevent should look like:\n\n```js\nEvent {\n  title: string,\n  start: Date,\n  end: Date,\n  allDay?: boolean\n  resource?: any,\n}\n```',type:{name:"arrayOf",value:{name:"object"}},required:!1},backgroundEvents:{defaultValue:{value:"[]",computed:!1},description:'An array of background event objects to display on the calendar. Background\nEvents behave similarly to Events but are not factored into Event overlap logic,\nallowing them to sit behind any Events that may occur during the same period.\nBackground Events objects can be any shape, as long as the Calendar knows how to\nretrieve the following details of the event:\n\n - start time\n - end time\n\nEach of these properties can be customized or generated dynamically by\nsetting the various "accessor" props. Without any configuration the default\nevent should look like:\n\n```js\nBackgroundEvent {\n  start: Date,\n  end: Date,\n}\n```',type:{name:"arrayOf",value:{name:"object"}},required:!1},elementProps:{defaultValue:{value:"{}",computed:!1},description:"Props passed to main calendar `<div>`.",type:{name:"object"},required:!1},popup:{defaultValue:{value:"false",computed:!1},description:'Show truncated events in an overlay when you click the "+_x_ more" link.',type:{name:"bool"},required:!1},toolbar:{defaultValue:{value:"true",computed:!1},description:"Determines whether the toolbar is displayed",type:{name:"bool"},required:!1},view:{defaultValue:{value:"views.MONTH",computed:!0},description:"The current view of the calendar.\n\n@default 'month'\n@controllable onView",type:{name:"string"},required:!1},views:{defaultValue:{value:"[views.MONTH, views.WEEK, views.DAY, views.AGENDA]",computed:!1},description:"An array of built-in view names to allow the calendar to display.\naccepts either an array of builtin view names,\n\n```jsx\nviews={['month', 'day', 'agenda']}\n```\nor an object hash of the view name and the component (or boolean for builtin).\n\n```jsx\nviews={{\n  month: true,\n  week: false,\n  myweek: WorkWeekViewComponent,\n}}\n```\n\nCustom views can be any React component, that implements the following\ninterface:\n\n```js\ninterface View {\n  static title(date: Date, { formats: DateFormat[], culture: string?, ...props }): string\n  static navigate(date: Date, action: 'PREV' | 'NEXT' | 'DATE'): Date\n}\n```\n\n@type Views ('month'|'week'|'work_week'|'day'|'agenda')\n@View\n     ['month', 'week', 'day', 'agenda']",type:{name:"custom",raw:"componentViews"},required:!1},step:{defaultValue:{value:"30",computed:!1},description:"Determines the selectable time increments in week and day views, in minutes.",type:{name:"number"},required:!1},length:{defaultValue:{value:"30",computed:!1},description:"Determines the end date from date prop in the agenda view\ndate prop + length (in number of days) = end date",type:{name:"number"},required:!1},allDayMaxRows:{defaultValue:{value:"Infinity",computed:!0},description:"Determines a maximum amount of rows of events to display in the all day\nsection for Week and Day views, will display `showMore` button if\nevents excede this number.\n\nDefaults to `Infinity`",type:{name:"number"},required:!1},doShowMoreDrillDown:{defaultValue:{value:"true",computed:!1},description:'Determines whether the drill down should occur when clicking on the "+_x_ more" link.\nIf `popup` is false, and `doShowMoreDrillDown` is true, the drill down will occur as usual.\nIf `popup` is false, and `doShowMoreDrillDown` is false, the drill down will not occur and the `onShowMore` function will trigger.',type:{name:"bool"},required:!1},drilldownView:{defaultValue:{value:"views.DAY",computed:!0},description:'The string name of the destination view for drill-down actions, such\nas clicking a date header, or the truncated events links. If\n`getDrilldownView` is also specified it will be used instead.\n\nSet to `null` to disable drill-down actions.\n\n```js\n<Calendar\n  drilldownView="agenda"\n/>\n```',type:{name:"string"},required:!1},titleAccessor:{defaultValue:{value:"'title'",computed:!1},description:"Accessor for the event title, used to display event information. Should\nresolve to a `renderable` value.\n\n```js\nstring | (event: Object) => string\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},tooltipAccessor:{defaultValue:{value:"'title'",computed:!1},description:"Accessor for the event tooltip. Should\nresolve to a `renderable` value. Removes the tooltip if null.\n\n```js\nstring | (event: Object) => string\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},allDayAccessor:{defaultValue:{value:"'allDay'",computed:!1},description:'Determines whether the event should be considered an "all day" event and ignore time.\nMust resolve to a `boolean` value.\n\n```js\nstring | (event: Object) => boolean\n```\n\n@type {(func|string)}',type:{name:"custom",raw:"accessor"},required:!1},startAccessor:{defaultValue:{value:"'start'",computed:!1},description:"The start date/time of the event. Must resolve to a JavaScript `Date` object.\n\n```js\nstring | (event: Object) => Date\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},endAccessor:{defaultValue:{value:"'end'",computed:!1},description:"The end date/time of the event. Must resolve to a JavaScript `Date` object.\n\n```js\nstring | (event: Object) => Date\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},resourceAccessor:{defaultValue:{value:"'resourceId'",computed:!1},description:"Returns the id of the `resource` that the event is a member of. This\nid should match at least one resource in the `resources` array.\n\n```js\nstring | (event: Object) => Date\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},resourceIdAccessor:{defaultValue:{value:"'id'",computed:!1},description:"Provides a unique identifier, or an array of unique identifiers, for each resource in the `resources` array\n\n```js\nstring | (resource: Object) => any\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},resourceTitleAccessor:{defaultValue:{value:"'title'",computed:!1},description:"Provides a human readable name for the resource object, used in headers.\n\n```js\nstring | (resource: Object) => any\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},eventIdAccessor:{defaultValue:{value:"'id'",computed:!1},description:"The id of the event. Must resolve to a string or number. Used as the key for the event in the DOM. If not provided, the event will be given a key of 'evt\\_{index}'.\n\n```js\nstring | number | (event: Object) => string | number\n```\n\n@type {(func|string)}",type:{name:"custom",raw:"accessor"},required:!1},longPressThreshold:{defaultValue:{value:"250",computed:!1},description:'Specifies the number of milliseconds the user must press and hold on the screen for a touch\nto be considered a "long press." Long presses are used for time slot selection on touch\ndevices.\n\n@type {number}\n@default 250',type:{name:"number"},required:!1},getNow:{defaultValue:{value:"() => new Date()",computed:!1},description:"Determines the current date/time which is highlighted in the views.\n\nThe value affects which day is shaded and which time is shown as\nthe current time. It also affects the date used by the Today button in\nthe toolbar.\n\nProviding a value here can be useful when you are implementing time zones\nusing the `startAccessor` and `endAccessor` properties.\n\n@type {func}\n@default () => new Date()",type:{name:"func"},required:!1},dayLayoutAlgorithm:{defaultValue:{value:"'overlap'",computed:!1},description:"A day event layout(arrangement) algorithm.\n\n`overlap` allows events to be overlapped.\n\n`no-overlap` resizes events to avoid overlap.\n\nor custom `Function(events, minimumStartDifference, slotMetrics, accessors)`",type:{name:"custom",raw:"DayLayoutAlgorithmPropType"},required:!1},localizer:{description:"The localizer used for formatting dates and times according to the `format` and `culture`\n\nglobalize\n```js\nimport {globalizeLocalizer} from 'react-big-calendar'\nimport globalize from 'globalize'\n\nconst localizer = globalizeLocalizer(globalize)\n```\nmoment\n``js\nimport {momentLocalizer} from 'react-big-calendar'\nimport moment from 'moment'\n// and, for optional time zone support\nimport 'moment-timezone'\n\nmoment.tz.setDefault('America/Los_Angeles')\n// end optional time zone support\n\nconst localizer = momentLocalizer(moment)\n```\n\nLuxon\n```js\nimport {luxonLocalizer} from 'react-big-calendar'\nimport {DateTime, Settings} from 'luxon'\n// only use `Settings` if you require optional time zone support\nSettings.defaultZone = 'America/Los_Angeles'\n// end optional time zone support\n\n// Luxon uses the Intl API, which currently does not contain `weekInfo`\n// to determine which weekday is the start of the week by `culture`.\n// The `luxonLocalizer` defaults this to Sunday, which differs from\n// the Luxon default of Monday. The localizer requires this option\n// to change the display, and the date math for determining the\n// start of a week. Luxon uses non-zero based values for `weekday`.\nconst localizer = luxonLocalizer(DateTime, {firstDayOfWeek: 7})\n```",type:{name:"object"},required:!0},date:{description:"The current date value of the calendar. Determines the visible view range.\nIf `date` is omitted then the result of `getNow` is used; otherwise the\ncurrent date is used.\n\n@controllable onNavigate",type:{name:"instanceOf",value:"Date"},required:!1},defaultView:{description:"The initial view set for the Calendar.\n@type Calendar.Views ('month'|'week'|'work_week'|'day'|'agenda')\n@default 'month'",type:{name:"string"},required:!1},resources:{description:'An array of resource objects that map events to a specific resource.\nResource objects, like events, can be any shape or have any properties,\nbut should be uniquly identifiable via the `resourceIdAccessor`, as\nwell as a "title" or name as provided by the `resourceTitleAccessor` prop.',type:{name:"arrayOf",value:{name:"object"}},required:!1},onNavigate:{description:"Callback fired when the `date` value changes.\n\n@controllable date",type:{name:"func"},required:!1},onView:{description:"Callback fired when the `view` value changes.\n\n@controllable view",type:{name:"func"},required:!1},onDrillDown:{description:"Callback fired when date header, or the truncated events links are clicked",type:{name:"func"},required:!1},onRangeChange:{description:"```js\n(dates: Date[] | { start: Date; end: Date }, view: 'month'|'week'|'work_week'|'day'|'agenda'|undefined) => void\n```\n\nCallback fired when the visible date range changes. Returns an Array of dates\nor an object with start and end dates for BUILTIN views. Optionally new `view`\nwill be returned when callback called after view change.\n\nCustom views may return something different.",type:{name:"func"},required:!1},onSelectSlot:{description:'A callback fired when a date selection is made. Only fires when `selectable` is `true`.\n\n```js\n(\n  slotInfo: {\n    start: Date,\n    end: Date,\n    resourceId:  (number|string),\n    slots: Array<Date>,\n    action: "select" | "click" | "doubleClick",\n    bounds: ?{ // For "select" action\n      x: number,\n      y: number,\n      top: number,\n      right: number,\n      left: number,\n      bottom: number,\n    },\n    box: ?{ // For "click" or "doubleClick" actions\n      clientX: number,\n      clientY: number,\n      x: number,\n      y: number,\n    },\n  }\n) => any\n```',type:{name:"func"},required:!1},onSelectEvent:{description:"Callback fired when a calendar event is selected.\n\n```js\n(event: Object, e: SyntheticEvent) => any\n```\n\n@controllable selected",type:{name:"func"},required:!1},onDoubleClickEvent:{description:"Callback fired when a calendar event is clicked twice.\n\n```js\n(event: Object, e: SyntheticEvent) => void\n```",type:{name:"func"},required:!1},onKeyPressEvent:{description:"Callback fired when a focused calendar event receives a key press.\n\n```js\n(event: Object, e: SyntheticEvent) => void\n```",type:{name:"func"},required:!1},onSelecting:{description:"Callback fired when dragging a selection in the Time views.\n\nReturning `false` from the handler will prevent a selection.\n\n```js\n(range: { start: Date, end: Date, resourceId: (number|string) }) => ?boolean\n```",type:{name:"func"},required:!1},onShowMore:{description:"Callback fired when a +{count} more is clicked\n\n```js\n(events: Object, date: Date) => any\n```",type:{name:"func"},required:!1},showAllEvents:{description:"Displays all events on the month view instead of\nhaving some hidden behind +{count} more. This will\ncause the rows in the month view to be scrollable if\nthe number of events exceed the height of the row.",type:{name:"bool"},required:!1},selected:{description:"The selected event, if any.",type:{name:"object"},required:!1},getDrilldownView:{description:"Functionally equivalent to `drilldownView`, but accepts a function\nthat can return a view name. It's useful for customizing the drill-down\nactions depending on the target date and triggering view.\n\nReturn `null` to disable drill-down actions.\n\n```js\n<Calendar\n  getDrilldownView={(targetDate, currentViewName, configuredViewNames) =>\n    if (currentViewName === 'month' && configuredViewNames.includes('week'))\n      return 'week'\n\n    return null;\n  }}\n/>\n```",type:{name:"func"},required:!1},popupOffset:{description:'Distance in pixels, from the edges of the viewport, the "show more" overlay should be positioned.\n\n```jsx\n<Calendar popupOffset={30}/>\n<Calendar popupOffset={{x: 30, y: 20}}/>\n```',type:{name:"union",value:[{name:"number"},{name:"shape",value:{x:{name:"number",required:!1},y:{name:"number",required:!1}}}]},required:!1},selectable:{description:"Allows mouse selection of ranges of dates/times.\n\nThe 'ignoreEvents' option prevents selection code from running when a\ndrag begins over an event. Useful when you want custom event click or drag\nlogic",type:{name:"enum",value:[{value:"true",computed:!1},{value:"false",computed:!1},{value:"'ignoreEvents'",computed:!1}]},required:!1},timeslots:{description:'The number of slots per "section" in the time grid views. Adjust with `step`\nto change the default of 1 hour long groups, with 30 minute slots.',type:{name:"number"},required:!1},rtl:{description:"Switch the calendar to a `right-to-left` read direction.",type:{name:"bool"},required:!1},eventPropGetter:{description:"Optionally provide a function that returns an object of className or style props\nto be applied to the the event node.\n\n```js\n(\n\tevent: Object,\n\tstart: Date,\n\tend: Date,\n\tisSelected: boolean\n) => { className?: string, style?: Object }\n```",type:{name:"func"},required:!1},slotPropGetter:{description:"Optionally provide a function that returns an object of className or style props\nto be applied to the time-slot node. Caution! Styles that change layout or\nposition may break the calendar in unexpected ways.\n\n```js\n(date: Date, resourceId: (number|string)) => { className?: string, style?: Object }\n```",type:{name:"func"},required:!1},slotGroupPropGetter:{description:"Optionally provide a function that returns an object of props to be applied\nto the time-slot group node. Useful to dynamically change the sizing of time nodes.\n```js\n(group: Date[]) => { style?: Object }\n```",type:{name:"func"},required:!1},dayPropGetter:{description:"Optionally provide a function that returns an object of className or style props\nto be applied to the the day background. Caution! Styles that change layout or\nposition may break the calendar in unexpected ways.\n\n```js\n(date: Date) => { className?: string, style?: Object }\n```",type:{name:"func"},required:!1},showMultiDayTimes:{description:"Support to show multi-day events with specific start and end times in the\nmain time grid (rather than in the all day header).\n\n**Note: This may cause calendars with several events to look very busy in\nthe week and day views.**",type:{name:"bool"},required:!1},min:{description:"Constrains the minimum _time_ of the Day and Week views.",type:{name:"instanceOf",value:"Date"},required:!1},max:{description:"Constrains the maximum _time_ of the Day and Week views.",type:{name:"instanceOf",value:"Date"},required:!1},scrollToTime:{description:"Determines how far down the scroll pane is initially scrolled down.",type:{name:"instanceOf",value:"Date"},required:!1},enableAutoScroll:{description:"Determines whether the scroll pane is automatically scrolled down or not.",type:{name:"bool"},required:!1},resourceGroupingLayout:{description:"Determines the layout of resource groups in the calendar.\nWhen `true`, resources will be grouped by date in the week view.\nWhen `false`, resources will be grouped by week.",type:{name:"bool"},required:!1},culture:{description:"Specify a specific culture code for the Calendar.\n\n**Note: it's generally better to handle this globally via your i18n library.**",type:{name:"string"},required:!1},formats:{description:"Localizer specific formats, tell the Calendar how to format and display dates.\n\n`format` types are dependent on the configured localizer; Moment, Luxon and Globalize\naccept strings of tokens according to their own specification, such as: `'DD mm yyyy'`.\n\n```jsx\nlet formats = {\n  dateFormat: 'dd',\n\n  dayFormat: (date, , localizer) =>\n    localizer.format(date, 'DDD', culture),\n\n  dayRangeHeaderFormat: ({ start, end }, culture, localizer) =>\n    localizer.format(start, { date: 'short' }, culture) + ' – ' +\n    localizer.format(end, { date: 'short' }, culture)\n}\n\n<Calendar formats={formats} />\n```\n\nAll localizers accept a function of\nthe form `(date: Date, culture: ?string, localizer: Localizer) -> string`",type:{name:"shape",value:{dateFormat:{name:"custom",raw:"dateFormat",description:'Format for the day of the month heading in the Month view.\ne.g. "01", "02", "03", etc',required:!1},dayFormat:{name:"custom",raw:"dateFormat",description:'A day of the week format for Week and Day headings,\ne.g. "Wed 01/04"',required:!1},weekdayFormat:{name:"custom",raw:"dateFormat",description:'Week day name format for the Month week day headings,\ne.g: "Sun", "Mon", "Tue", etc',required:!1},timeGutterFormat:{name:"custom",raw:"dateFormat",description:'The timestamp cell formats in Week and Time views, e.g. "4:00 AM"',required:!1},monthHeaderFormat:{name:"custom",raw:"dateFormat",description:'Toolbar header format for the Month view, e.g "2015 April"',required:!1},dayRangeHeaderFormat:{name:"custom",raw:"dateRangeFormat",description:'Toolbar header format for the Week views, e.g. "Mar 29 - Apr 04"',required:!1},dayHeaderFormat:{name:"custom",raw:"dateFormat",description:'Toolbar header format for the Day view, e.g. "Wednesday Apr 01"',required:!1},agendaHeaderFormat:{name:"custom",raw:"dateRangeFormat",description:'Toolbar header format for the Agenda view, e.g. "4/1/2015 – 5/1/2015"',required:!1},selectRangeFormat:{name:"custom",raw:"dateRangeFormat",description:'A time range format for selecting time slots, e.g "8:00am – 2:00pm"',required:!1},agendaDateFormat:{name:"custom",raw:"dateFormat",required:!1},agendaTimeFormat:{name:"custom",raw:"dateFormat",required:!1},agendaTimeRangeFormat:{name:"custom",raw:"dateRangeFormat",required:!1},eventTimeRangeFormat:{name:"custom",raw:"dateRangeFormat",description:"Time range displayed on events.",required:!1},eventTimeRangeStartFormat:{name:"custom",raw:"dateFormat",description:"An optional event time range for events that continue onto another day",required:!1},eventTimeRangeEndFormat:{name:"custom",raw:"dateFormat",description:"An optional event time range for events that continue from another day",required:!1}}},required:!1},components:{description:"Customize how different sections of the calendar render by providing custom Components.\nIn particular the `Event` component can be specified for the entire calendar, or you can\nprovide an individual component for each view type.\n\n```jsx\nlet components = {\n  event: MyEvent, // used by each view (Month, Day, Week)\n  eventWrapper: MyEventWrapper,\n  eventContainerWrapper: MyEventContainerWrapper,\n  dateCellWrapper: MyDateCellWrapper,\n  timeSlotWrapper: MyTimeSlotWrapper,\n  timeGutterHeader: MyTimeGutterWrapper,\n  timeGutterWrapper: MyTimeGutterWrapper,\n  resourceHeader: MyResourceHeader,\n  showMore: MyShowMoreEvent,\n  toolbar: MyToolbar,\n  agenda: {\n  \t event: MyAgendaEvent, // with the agenda view use a different component to render events\n    time: MyAgendaTime,\n    date: MyAgendaDate,\n  },\n  day: {\n    header: MyDayHeader,\n    event: MyDayEvent,\n  },\n  week: {\n    header: MyWeekHeader,\n    event: MyWeekEvent,\n  },\n  month: {\n    header: MyMonthHeader,\n    dateHeader: MyMonthDateHeader,\n    event: MyMonthEvent,\n  }\n}\n<Calendar components={components} />\n```",type:{name:"shape",value:{event:{name:"elementType",required:!1},eventWrapper:{name:"elementType",required:!1},eventContainerWrapper:{name:"elementType",required:!1},dateCellWrapper:{name:"elementType",required:!1},dayColumnWrapper:{name:"elementType",required:!1},timeSlotWrapper:{name:"elementType",required:!1},timeGutterHeader:{name:"elementType",required:!1},timeGutterWrapper:{name:"elementType",required:!1},resourceHeader:{name:"elementType",required:!1},showMore:{name:"elementType",required:!1},toolbar:{name:"elementType",required:!1},agenda:{name:"shape",value:{date:{name:"elementType",required:!1},time:{name:"elementType",required:!1},event:{name:"elementType",required:!1}},required:!1},day:{name:"shape",value:{header:{name:"elementType",required:!1},event:{name:"elementType",required:!1}},required:!1},week:{name:"shape",value:{header:{name:"elementType",required:!1},event:{name:"elementType",required:!1}},required:!1},month:{name:"shape",value:{header:{name:"elementType",required:!1},dateHeader:{name:"elementType",required:!1},event:{name:"elementType",required:!1}},required:!1}}},required:!1},messages:{description:"String messages used throughout the component, override to provide localizations\n\n```jsx\nconst messages = {\n  date: 'Date',\n  time: 'Time',\n  event: 'Event',\n  allDay: 'All Day',\n  week: 'Week',\n  work_week: 'Work Week',\n  day: 'Day',\n  month: 'Month',\n  previous: 'Back',\n  next: 'Next',\n  yesterday: 'Yesterday',\n  tomorrow: 'Tomorrow',\n  today: 'Today',\n  agenda: 'Agenda',\n\n  noEventsInRange: 'There are no events in this range.',\n\n  showMore: total => `+ ${total} more`,\n}\n\n<Calendar messages={messages} />\n```",type:{name:"shape",value:{allDay:{name:"node",required:!1},previous:{name:"node",required:!1},next:{name:"node",required:!1},today:{name:"node",required:!1},month:{name:"node",required:!1},week:{name:"node",required:!1},day:{name:"node",required:!1},agenda:{name:"node",required:!1},date:{name:"node",required:!1},time:{name:"node",required:!1},event:{name:"node",required:!1},noEventsInRange:{name:"node",required:!1},showMore:{name:"func",required:!1}}},required:!1}}};var src_Calendar=(0,esm.Pd)(Calendar,{view:"onView",date:"onNavigate",selected:"onSelectEvent"});"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Calendar.js"]={name:"Calendar",docgenInfo:Calendar.__docgenInfo,path:"src/Calendar.js"});__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js");var timeRangeFormat=function timeRangeFormat(_ref3,culture,local){var start=_ref3.start,end=_ref3.end;return local.format(start,"LT",culture)+" – "+local.format(end,"LT",culture)},formats={dateFormat:"DD",dayFormat:"DD ddd",weekdayFormat:"ddd",selectRangeFormat:timeRangeFormat,eventTimeRangeFormat:timeRangeFormat,eventTimeRangeStartFormat:function timeRangeStartFormat(_ref4,culture,local){var start=_ref4.start;return local.format(start,"LT",culture)+" – "},eventTimeRangeEndFormat:function timeRangeEndFormat(_ref5,culture,local){var end=_ref5.end;return" – "+local.format(end,"LT",culture)},timeGutterFormat:"LT",monthHeaderFormat:"MMMM YYYY",dayHeaderFormat:"dddd MMM DD",dayRangeHeaderFormat:function weekRangeFormat(_ref,culture,local){var start=_ref.start,end=_ref.end;return local.format(start,"MMMM DD",culture)+" – "+local.format(end,local.eq(start,end,"month")?"DD":"MMMM DD",culture)},agendaHeaderFormat:function dateRangeFormat(_ref2,culture,local){var start=_ref2.start,end=_ref2.end;return local.format(start,"L",culture)+" – "+local.format(end,"L",culture)},agendaDateFormat:"ddd MMM DD",agendaTimeFormat:"LT",agendaTimeRangeFormat:timeRangeFormat};function fixUnit(unit){var datePart=unit?unit.toLowerCase():unit;return"FullYear"===datePart?datePart="year":datePart||(datePart=void 0),datePart}function moment(moment){function getDstOffset(start,end){var _st$_z$name,_st$_z,st=moment(start).local(),ed=moment(end).local();if(!moment.tz)return st.toDate().getTimezoneOffset()-ed.toDate().getTimezoneOffset();var tzName=null!==(_st$_z$name=null==st||null===(_st$_z=st._z)||void 0===_st$_z?void 0:_st$_z.name)&&void 0!==_st$_z$name?_st$_z$name:moment.tz.guess();return moment.tz.zone(tzName).utcOffset(+st)-moment.tz.zone(tzName).utcOffset(+ed)}function defineComparators(a,b,unit){var datePart=fixUnit(unit);return[datePart?moment(a).startOf(datePart):moment(a),datePart?moment(b).startOf(datePart):moment(b),datePart]}function startOf(){var date=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,datePart=fixUnit(arguments.length>1?arguments[1]:void 0);return datePart?moment(date).startOf(datePart).toDate():moment(date).toDate()}function eq(a,b,unit){var _defineComparators=defineComparators(a,b,unit),_defineComparators2=(0,slicedToArray.A)(_defineComparators,3),dtA=_defineComparators2[0],dtB=_defineComparators2[1],datePart=_defineComparators2[2];return dtA.isSame(dtB,datePart)}function lte(a,b,unit){var _defineComparators9=defineComparators(a,b,unit),_defineComparators10=(0,slicedToArray.A)(_defineComparators9,3),dtA=_defineComparators10[0],dtB=_defineComparators10[1],datePart=_defineComparators10[2];return dtA.isSameOrBefore(dtB,datePart)}function add(date,adder,unit){var datePart=fixUnit(unit);return moment(date).add(adder,datePart).toDate()}function diff(a,b){var datePart=fixUnit(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day"),dtA=moment(a);return moment(b).diff(dtA,datePart)}function firstVisibleDay(date){return moment(date).startOf("month").startOf("week").toDate()}function lastVisibleDay(date){return moment(date).endOf("month").endOf("week").toDate()}function daySpan(start,end){var mStart=moment(start),mEnd=moment(end);return moment.duration(mEnd.diff(mStart)).days()}return new localizer_DateLocalizer({formats:formats,firstOfWeek:function firstOfWeek(culture){var data=culture?moment.localeData(culture):moment.localeData();return data?data.firstDayOfWeek():0},firstVisibleDay:firstVisibleDay,lastVisibleDay:lastVisibleDay,visibleDays:function visibleDays(date){for(var current=firstVisibleDay(date),last=lastVisibleDay(date),days=[];lte(current,last);)days.push(current),current=add(current,1,"d");return days},format:function format(value,_format,culture){return function locale(m,c){return c?m.locale(c):m}(moment(value),culture).format(_format)},lt:function lt(a,b,unit){var _defineComparators5=defineComparators(a,b,unit),_defineComparators6=(0,slicedToArray.A)(_defineComparators5,3),dtA=_defineComparators6[0],dtB=_defineComparators6[1],datePart=_defineComparators6[2];return dtA.isBefore(dtB,datePart)},lte:lte,gt:function gt(a,b,unit){var _defineComparators3=defineComparators(a,b,unit),_defineComparators4=(0,slicedToArray.A)(_defineComparators3,3),dtA=_defineComparators4[0],dtB=_defineComparators4[1],datePart=_defineComparators4[2];return dtA.isAfter(dtB,datePart)},gte:function gte(a,b,unit){var _defineComparators7=defineComparators(a,b,unit),_defineComparators8=(0,slicedToArray.A)(_defineComparators7,3),dtA=_defineComparators8[0],dtB=_defineComparators8[1],datePart=_defineComparators8[2];return dtA.isSameOrBefore(dtB,datePart)},eq:eq,neq:function neq(a,b,unit){return!eq(a,b,unit)},merge:function merge(date,time){if(!date&&!time)return null;var tm=moment(time).format("HH:mm:ss"),dt=moment(date).startOf("day").format("MM/DD/YYYY");return moment("".concat(dt," ").concat(tm),"MM/DD/YYYY HH:mm:ss").toDate()},inRange:function inRange(day,min,max){var datePart=fixUnit(arguments.length>3&&void 0!==arguments[3]?arguments[3]:"day"),mDay=moment(day),mMin=moment(min),mMax=moment(max);return mDay.isBetween(mMin,mMax,datePart,"[]")},startOf:startOf,endOf:function endOf(){var date=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,datePart=fixUnit(arguments.length>1?arguments[1]:void 0);return datePart?moment(date).endOf(datePart).toDate():moment(date).toDate()},range:function range(start,end){for(var datePart=fixUnit(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day"),current=moment(start).toDate(),days=[];lte(current,end);)days.push(current),current=add(current,1,datePart);return days},add:add,diff:diff,ceil:function ceil(date,unit){var datePart=fixUnit(unit),floor=startOf(date,datePart);return eq(floor,date)?floor:add(floor,1,datePart)},min:function min(dateA,dateB){var dtA=moment(dateA),dtB=moment(dateB);return moment.min(dtA,dtB).toDate()},max:function max(dateA,dateB){var dtA=moment(dateA),dtB=moment(dateB);return moment.max(dtA,dtB).toDate()},minutes:function minutes(date){return moment(date).minutes()},getSlotDate:function getSlotDate(dt,minutesFromMidnight,offset){return moment(dt).startOf("day").minute(minutesFromMidnight+offset).toDate()},getTimezoneOffset:function getTimezoneOffset(date){return moment(date).toDate().getTimezoneOffset()},getDstOffset:getDstOffset,getTotalMin:function getTotalMin(start,end){return diff(start,end,"minutes")},getMinutesFromMidnight:function getMinutesFromMidnight(start){var dayStart=moment(start).startOf("day");return moment(start).diff(dayStart,"minutes")+function getDayStartDstOffset(start){return getDstOffset(moment(start).startOf("day"),start)}(start)},continuesPrior:function continuesPrior(start,first){var mStart=moment(start),mFirst=moment(first);return mStart.isBefore(mFirst,"day")},continuesAfter:function continuesAfter(start,end,last){var mEnd=moment(end),mLast=moment(last);return mEnd.isSameOrAfter(mLast,"minutes")},sortEvents:function sortEvents(_ref6){var _ref6$evtA=_ref6.evtA,aStart=_ref6$evtA.start,aEnd=_ref6$evtA.end,aAllDay=_ref6$evtA.allDay,_ref6$evtB=_ref6.evtB,bStart=_ref6$evtB.start,bEnd=_ref6$evtB.end,bAllDay=_ref6$evtB.allDay,startSort=+startOf(aStart,"day")-+startOf(bStart,"day"),durA=daySpan(aStart,aEnd),durB=daySpan(bStart,bEnd);return startSort||durB-durA||!!bAllDay-!!aAllDay||+aStart-+bStart||+aEnd-+bEnd},inEventRange:function inEventRange(_ref7){var _ref7$event=_ref7.event,start=_ref7$event.start,end=_ref7$event.end,_ref7$range=_ref7.range,rangeStart=_ref7$range.start,rangeEnd=_ref7$range.end,startOfDay=moment(start).startOf("day"),eEnd=moment(end),rStart=moment(rangeStart),rEnd=moment(rangeEnd),startsBeforeEnd=startOfDay.isSameOrBefore(rEnd,"day"),endsAfterStart=!startOfDay.isSame(eEnd,"minutes")?eEnd.isAfter(rStart,"minutes"):eEnd.isSameOrAfter(rStart,"minutes");return startsBeforeEnd&&endsAfterStart},isSameDate:function isSameDate(date1,date2){var dt=moment(date1),dt2=moment(date2);return dt.isSame(dt2,"day")},daySpan:daySpan,browserTZOffset:function browserTZOffset(){var dt=new Date,neg=/-/.test(dt.toString())?"-":"",dtOffset=dt.getTimezoneOffset(),comparator=Number("".concat(neg).concat(Math.abs(dtOffset)));return moment().utcOffset()>comparator?1:0}})}__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js");var luxon_timeRangeFormat=function timeRangeFormat(_ref3,culture,local){var start=_ref3.start,end=_ref3.end;return local.format(start,"t",culture)+" – "+local.format(end,"t",culture)},luxon_formats={dateFormat:"dd",dayFormat:"dd EEE",weekdayFormat:"EEE",selectRangeFormat:luxon_timeRangeFormat,eventTimeRangeFormat:luxon_timeRangeFormat,eventTimeRangeStartFormat:function timeRangeStartFormat(_ref4,culture,local){var start=_ref4.start;return local.format(start,"t",culture)+" – "},eventTimeRangeEndFormat:function timeRangeEndFormat(_ref5,culture,local){var end=_ref5.end;return" – "+local.format(end,"t",culture)},timeGutterFormat:"t",monthHeaderFormat:"MMMM yyyy",dayHeaderFormat:"EEEE MMM dd",dayRangeHeaderFormat:function weekRangeFormat(_ref,culture,local){var start=_ref.start,end=_ref.end;return local.format(start,"MMMM dd",culture)+" – "+local.format(end,local.eq(start,end,"month")?"dd":"MMMM dd",culture)},agendaHeaderFormat:function dateRangeFormat(_ref2,culture,local){var start=_ref2.start,end=_ref2.end;return local.format(start,"D",culture)+" – "+local.format(end,"D",culture)},agendaDateFormat:"EEE MMM dd",agendaTimeFormat:"t",agendaTimeRangeFormat:luxon_timeRangeFormat};function luxon_fixUnit(unit){var datePart=unit?function pluralizeUnit(unit){return/s$/.test(unit)?unit:unit+"s"}(unit.toLowerCase()):unit;return"FullYear"===datePart?datePart="year":datePart||(datePart=void 0),datePart}function luxon(DateTime){var _ref6$firstDayOfWeek=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).firstDayOfWeek,firstDayOfWeek=void 0===_ref6$firstDayOfWeek?7:_ref6$firstDayOfWeek;function defineComparators(a,b,unit){var datePart=luxon_fixUnit(unit);return[datePart?DateTime.fromJSDate(a).startOf(datePart):DateTime.fromJSDate(a),datePart?DateTime.fromJSDate(b).startOf(datePart):DateTime.fromJSDate(b),datePart]}function startOfDTWeek(dtObj){var weekday=dtObj.weekday;if(weekday===firstDayOfWeek)return dtObj.startOf("day");if(1===firstDayOfWeek)return dtObj.startOf("week");var diff=7===firstDayOfWeek?weekday:weekday+(7-firstDayOfWeek);return dtObj.minus({day:diff}).startOf("day")}function endOfDTWeek(dtObj){var weekday=dtObj.weekday,eow=1===firstDayOfWeek?7:firstDayOfWeek-1;return weekday===eow?dtObj.endOf("day"):1===firstDayOfWeek?dtObj.endOf("week"):(firstDayOfWeek>eow?dtObj.plus({day:firstDayOfWeek-eow}):dtObj).set({weekday:eow}).endOf("day")}function startOfDT(){var date=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date,datePart=luxon_fixUnit(arguments.length>1?arguments[1]:void 0);if(datePart){var dt=DateTime.fromJSDate(date);return datePart.includes("week")?startOfDTWeek(dt):dt.startOf(datePart)}return DateTime.fromJSDate(date)}function startOf(){return startOfDT(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date,arguments.length>1?arguments[1]:void 0).toJSDate()}function endOfDT(){var date=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date,datePart=luxon_fixUnit(arguments.length>1?arguments[1]:void 0);if(datePart){var dt=DateTime.fromJSDate(date);return datePart.includes("week")?endOfDTWeek(dt):dt.endOf(datePart)}return DateTime.fromJSDate(date)}function eq(a,b,unit){var _defineComparators=defineComparators(a,b,unit),_defineComparators2=(0,slicedToArray.A)(_defineComparators,2);return+_defineComparators2[0]==+_defineComparators2[1]}function neq(a,b,unit){return!eq(a,b,unit)}function gt(a,b,unit){var _defineComparators3=defineComparators(a,b,unit),_defineComparators4=(0,slicedToArray.A)(_defineComparators3,2);return+_defineComparators4[0]>+_defineComparators4[1]}function lt(a,b,unit){var _defineComparators5=defineComparators(a,b,unit),_defineComparators6=(0,slicedToArray.A)(_defineComparators5,2);return+_defineComparators6[0]<+_defineComparators6[1]}function gte(a,b,unit){var _defineComparators7=defineComparators(a,b,unit),_defineComparators8=(0,slicedToArray.A)(_defineComparators7,2);return+_defineComparators8[0]>=+_defineComparators8[1]}function lte(a,b,unit){var _defineComparators9=defineComparators(a,b,unit),_defineComparators10=(0,slicedToArray.A)(_defineComparators9,2);return+_defineComparators10[0]<=+_defineComparators10[1]}function add(date,adder,unit){var datePart=luxon_fixUnit(unit);return DateTime.fromJSDate(date).plus((0,defineProperty.A)({},datePart,adder)).toJSDate()}function diff(a,b){var datePart=luxon_fixUnit(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day"),dtA=DateTime.fromJSDate(a),dtB=DateTime.fromJSDate(b);return Math.floor(dtB.diff(dtA,datePart,{conversionAccuracy:"longterm"}).toObject()[datePart])}function firstVisibleDay(date){return startOfDTWeek(startOfDT(date,"month")).toJSDate()}function lastVisibleDay(date){return endOfDTWeek(endOfDT(date,"month")).toJSDate()}function daySpan(start,end){var dtStart=DateTime.fromJSDate(start);return DateTime.fromJSDate(end).diff(dtStart).as("days")}return new localizer_DateLocalizer({format:function format(value,_format,culture){return culture?function formatDateWithCulture(value,culture,format){return DateTime.fromJSDate(value).setLocale(culture).toFormat(format)}(value,culture,_format):function formatDate(value,format){return DateTime.fromJSDate(value).toFormat(format)}(value,_format)},formats:luxon_formats,firstOfWeek:function firstOfWeek(){return firstDayOfWeek},firstVisibleDay:firstVisibleDay,lastVisibleDay:lastVisibleDay,visibleDays:function visibleDays(date){for(var current=firstVisibleDay(date),last=lastVisibleDay(date),days=[];lte(current,last);)days.push(current),current=add(current,1,"day");return days},lt:lt,lte:lte,gt:gt,gte:gte,eq:eq,neq:neq,merge:function merge(date,time){if(!date&&!time)return null;var tm=DateTime.fromJSDate(time);return startOfDT(date,"day").set({hour:tm.hour,minute:tm.minute,second:tm.second,millisecond:tm.millisecond}).toJSDate()},inRange:function inRange(day,min,max){var datePart=luxon_fixUnit(arguments.length>3&&void 0!==arguments[3]?arguments[3]:"day"),mDay=startOfDT(day,datePart),mMin=startOfDT(min,datePart),mMax=startOfDT(max,datePart);return+mDay>=+mMin&&+mDay<=+mMax},startOf:startOf,endOf:function endOf(){return endOfDT(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date,arguments.length>1?arguments[1]:void 0).toJSDate()},range:function range(start,end){for(var datePart=luxon_fixUnit(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day"),current=DateTime.fromJSDate(start).toJSDate(),days=[];lte(current,end);)days.push(current),current=add(current,1,datePart);return days},add:add,diff:diff,ceil:function ceil(date,unit){var datePart=luxon_fixUnit(unit),floor=startOf(date,datePart);return eq(floor,date)?floor:add(floor,1,datePart)},min:function min(dateA,dateB){var dtA=DateTime.fromJSDate(dateA),dtB=DateTime.fromJSDate(dateB);return DateTime.min(dtA,dtB).toJSDate()},max:function max(dateA,dateB){var dtA=DateTime.fromJSDate(dateA),dtB=DateTime.fromJSDate(dateB);return DateTime.max(dtA,dtB).toJSDate()},getSlotDate:function getSlotDate(dt,minutesFromMidnight,offset){return startOfDT(dt,"day").set({minutes:minutesFromMidnight+offset}).toJSDate()},getTotalMin:function getTotalMin(start,end){return diff(start,end,"minutes")},getMinutesFromMidnight:function getMinutesFromMidnight(start){var dayStart=startOfDT(start,"day"),day=DateTime.fromJSDate(start);return Math.round(day.diff(dayStart,"minutes",{conversionAccuracy:"longterm"}).toObject().minutes)},continuesPrior:function continuesPrior(start,first){return lt(start,first)},continuesAfter:function continuesAfter(start,end,last){return gte(end,last)},sortEvents:function sortEvents(_ref7){var _ref7$evtA=_ref7.evtA,aStart=_ref7$evtA.start,aEnd=_ref7$evtA.end,aAllDay=_ref7$evtA.allDay,_ref7$evtB=_ref7.evtB,bStart=_ref7$evtB.start,bEnd=_ref7$evtB.end,bAllDay=_ref7$evtB.allDay,startSort=+startOf(aStart,"day")-+startOf(bStart,"day"),durA=daySpan(aStart,aEnd),durB=daySpan(bStart,bEnd);return startSort||durB-durA||!!bAllDay-!!aAllDay||+aStart-+bStart||+aEnd-+bEnd},inEventRange:function inEventRange(_ref8){var _ref8$event=_ref8.event,start=_ref8$event.start,end=_ref8$event.end,_ref8$range=_ref8.range,rangeStart=_ref8$range.start,rangeEnd=_ref8$range.end,eStart=startOf(start,"day"),startsBeforeEnd=lte(eStart,rangeEnd,"day"),endsAfterStart=neq(eStart,end,"minutes")?gt(end,rangeStart,"minutes"):gte(end,rangeStart,"minutes");return startsBeforeEnd&&endsAfterStart},isSameDate:function isSameDate(date1,date2){var dt=DateTime.fromJSDate(date1),dt2=DateTime.fromJSDate(date2);return dt.hasSame(dt2,"day")},daySpan:daySpan,browserTZOffset:function browserTZOffset(){var dt=new Date,neg=/-/.test(dt.toString())?"-":"",dtOffset=dt.getTimezoneOffset(),comparator=Number("".concat(neg).concat(Math.abs(dtOffset)));return DateTime.local().offset>comparator?1:0}})}var oldGlobalize_timeRangeFormat=function timeRangeFormat(_ref2,culture,local){var start=_ref2.start,end=_ref2.end;return local.format(start,"t",culture)+" – "+local.format(end,"t",culture)},oldGlobalize_formats={dateFormat:"dd",dayFormat:"ddd dd/MM",weekdayFormat:"ddd",selectRangeFormat:oldGlobalize_timeRangeFormat,eventTimeRangeFormat:oldGlobalize_timeRangeFormat,eventTimeRangeStartFormat:function timeRangeStartFormat(_ref3,culture,local){var start=_ref3.start;return local.format(start,"t",culture)+" – "},eventTimeRangeEndFormat:function timeRangeEndFormat(_ref4,culture,local){var end=_ref4.end;return" – "+local.format(end,"t",culture)},timeGutterFormat:"t",monthHeaderFormat:"Y",dayHeaderFormat:"dddd MMM dd",dayRangeHeaderFormat:function weekRangeFormat(_ref5,culture,local){var start=_ref5.start,end=_ref5.end;return local.format(start,"MMM dd",culture)+" – "+local.format(end,dates.eq(start,end,"month")?"dd":"MMM dd",culture)},agendaHeaderFormat:function dateRangeFormat(_ref,culture,local){var start=_ref.start,end=_ref.end;return local.format(start,"d",culture)+" – "+local.format(end,"d",culture)},agendaDateFormat:"ddd MMM dd",agendaTimeFormat:"t",agendaTimeRangeFormat:oldGlobalize_timeRangeFormat};function oldGlobalize(globalize){return new localizer_DateLocalizer({firstOfWeek:function firstOfWeek(culture){return(culture=function getCulture(culture){return culture?globalize.findClosestCulture(culture):globalize.culture()}(culture))&&culture.calendar.firstDay||0},formats:oldGlobalize_formats,format:function format(value,_format,culture){return globalize.format(value,_format,culture)}})}var globalize_timeRangeFormat=function timeRangeFormat(_ref2,culture,local){var start=_ref2.start,end=_ref2.end;return local.format(start,{time:"short"},culture)+" – "+local.format(end,{time:"short"},culture)},globalize_formats={dateFormat:"dd",dayFormat:"eee dd/MM",weekdayFormat:"eee",selectRangeFormat:globalize_timeRangeFormat,eventTimeRangeFormat:globalize_timeRangeFormat,eventTimeRangeStartFormat:function timeRangeStartFormat(_ref3,culture,local){var start=_ref3.start;return local.format(start,{time:"short"},culture)+" – "},eventTimeRangeEndFormat:function timeRangeEndFormat(_ref4,culture,local){var end=_ref4.end;return" – "+local.format(end,{time:"short"},culture)},timeGutterFormat:{time:"short"},monthHeaderFormat:"MMMM yyyy",dayHeaderFormat:"eeee MMM dd",dayRangeHeaderFormat:function weekRangeFormat(_ref5,culture,local){var start=_ref5.start,end=_ref5.end;return local.format(start,"MMM dd",culture)+" – "+local.format(end,dates.eq(start,end,"month")?"dd":"MMM dd",culture)},agendaHeaderFormat:function dateRangeFormat(_ref,culture,local){var start=_ref.start,end=_ref.end;return local.format(start,{date:"short"},culture)+" – "+local.format(end,{date:"short"},culture)},agendaDateFormat:"eee MMM dd",agendaTimeFormat:{time:"short"},agendaTimeRangeFormat:globalize_timeRangeFormat};function globalize(globalize){var locale=function locale(culture){return culture?globalize(culture):globalize};return globalize.load?new localizer_DateLocalizer({firstOfWeek:function firstOfWeek(culture){try{var cldr=locale(culture).cldr,territory=cldr.attributes.territory,firstDay=cldr.get("supplemental").weekData.firstDay[territory||"001"];return["sun","mon","tue","wed","thu","fri","sat"].indexOf(firstDay)}catch(e){0;var date=new Date,localeDay=Math.max(parseInt(locale(culture).formatDate(date,{raw:"e"}),10)-1,0);return Math.abs(date.getDay()-localeDay)}},formats:globalize_formats,format:function format(value,_format,culture){return _format="string"==typeof _format?{raw:_format}:_format,locale(culture).formatDate(value,_format)}}):oldGlobalize(globalize)}var isBetween=__webpack_require__("./node_modules/dayjs/plugin/isBetween.js"),isBetween_default=__webpack_require__.n(isBetween),isSameOrAfter=__webpack_require__("./node_modules/dayjs/plugin/isSameOrAfter.js"),isSameOrAfter_default=__webpack_require__.n(isSameOrAfter),isSameOrBefore=__webpack_require__("./node_modules/dayjs/plugin/isSameOrBefore.js"),isSameOrBefore_default=__webpack_require__.n(isSameOrBefore),localeData=__webpack_require__("./node_modules/dayjs/plugin/localeData.js"),localeData_default=__webpack_require__.n(localeData),localizedFormat=__webpack_require__("./node_modules/dayjs/plugin/localizedFormat.js"),localizedFormat_default=__webpack_require__.n(localizedFormat),minMax=__webpack_require__("./node_modules/dayjs/plugin/minMax.js"),minMax_default=__webpack_require__.n(minMax),utc=__webpack_require__("./node_modules/dayjs/plugin/utc.js"),utc_default=__webpack_require__.n(utc),dayjs_timeRangeFormat=function timeRangeFormat(_ref3,culture,local){var start=_ref3.start,end=_ref3.end;return local.format(start,"LT",culture)+" – "+local.format(end,"LT",culture)},dayjs_formats={dateFormat:"DD",dayFormat:"DD ddd",weekdayFormat:"ddd",selectRangeFormat:dayjs_timeRangeFormat,eventTimeRangeFormat:dayjs_timeRangeFormat,eventTimeRangeStartFormat:function timeRangeStartFormat(_ref4,culture,local){var start=_ref4.start;return local.format(start,"LT",culture)+" – "},eventTimeRangeEndFormat:function timeRangeEndFormat(_ref5,culture,local){var end=_ref5.end;return" – "+local.format(end,"LT",culture)},timeGutterFormat:"LT",monthHeaderFormat:"MMMM YYYY",dayHeaderFormat:"dddd MMM DD",dayRangeHeaderFormat:function weekRangeFormat(_ref,culture,local){var start=_ref.start,end=_ref.end;return local.format(start,"MMMM DD",culture)+" – "+local.format(end,local.eq(start,end,"month")?"DD":"MMMM DD",culture)},agendaHeaderFormat:function dateRangeFormat(_ref2,culture,local){var start=_ref2.start,end=_ref2.end;return local.format(start,"L",culture)+" – "+local.format(end,"L",culture)},agendaDateFormat:"ddd MMM DD",agendaTimeFormat:"LT",agendaTimeRangeFormat:dayjs_timeRangeFormat};function dayjs_fixUnit(unit){var datePart=unit?unit.toLowerCase():unit;return"FullYear"===datePart?datePart="year":datePart||(datePart=void 0),datePart}function dayjs(dayjsLib){dayjsLib.extend(isBetween_default()),dayjsLib.extend(isSameOrAfter_default()),dayjsLib.extend(isSameOrBefore_default()),dayjsLib.extend(localeData_default()),dayjsLib.extend(localizedFormat_default()),dayjsLib.extend(minMax_default()),dayjsLib.extend(utc_default());var dayjs=dayjsLib.tz?dayjsLib.tz:dayjsLib;function getDstOffset(start,end){var _st$tz$$x$$timezone,st=dayjs(start),ed=dayjs(end);if(!dayjs.tz)return st.toDate().getTimezoneOffset()-ed.toDate().getTimezoneOffset();var tzName=null!==(_st$tz$$x$$timezone=st.tz().$x.$timezone)&&void 0!==_st$tz$$x$$timezone?_st$tz$$x$$timezone:dayjsLib.tz.guess();return-dayjs.tz(+st,tzName).utcOffset()- -dayjs.tz(+ed,tzName).utcOffset()}function defineComparators(a,b,unit){var datePart=dayjs_fixUnit(unit);return[datePart?dayjs(a).startOf(datePart):dayjs(a),datePart?dayjs(b).startOf(datePart):dayjs(b),datePart]}function startOf(){var date=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,datePart=dayjs_fixUnit(arguments.length>1?arguments[1]:void 0);return datePart?dayjs(date).startOf(datePart).toDate():dayjs(date).toDate()}function eq(a,b,unit){var _defineComparators=defineComparators(a,b,unit),_defineComparators2=(0,slicedToArray.A)(_defineComparators,3),dtA=_defineComparators2[0],dtB=_defineComparators2[1],datePart=_defineComparators2[2];return dtA.isSame(dtB,datePart)}function lte(a,b,unit){var _defineComparators9=defineComparators(a,b,unit),_defineComparators10=(0,slicedToArray.A)(_defineComparators9,3),dtA=_defineComparators10[0],dtB=_defineComparators10[1],datePart=_defineComparators10[2];return dtA.isSameOrBefore(dtB,datePart)}function add(date,adder,unit){var datePart=dayjs_fixUnit(unit);return dayjs(date).add(adder,datePart).toDate()}function diff(a,b){var datePart=dayjs_fixUnit(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day"),dtA=dayjs(a);return dayjs(b).diff(dtA,datePart)}function firstVisibleDay(date){return dayjs(date).startOf("month").startOf("week").toDate()}function lastVisibleDay(date){return dayjs(date).endOf("month").endOf("week").toDate()}function daySpan(start,end){var startDay=dayjs(start);return dayjs(end).diff(startDay,"day")}return new localizer_DateLocalizer({formats:dayjs_formats,firstOfWeek:function firstOfWeek(culture){var data=culture?dayjsLib.localeData(culture):dayjsLib.localeData();return data?data.firstDayOfWeek():0},firstVisibleDay:firstVisibleDay,lastVisibleDay:lastVisibleDay,visibleDays:function visibleDays(date){for(var current=firstVisibleDay(date),last=lastVisibleDay(date),days=[];lte(current,last);)days.push(current),current=add(current,1,"d");return days},format:function format(value,_format,culture){return function locale(dj,c){return c?dj.locale(c):dj}(dayjs(value),culture).format(_format)},lt:function lt(a,b,unit){var _defineComparators5=defineComparators(a,b,unit),_defineComparators6=(0,slicedToArray.A)(_defineComparators5,3),dtA=_defineComparators6[0],dtB=_defineComparators6[1],datePart=_defineComparators6[2];return dtA.isBefore(dtB,datePart)},lte:lte,gt:function gt(a,b,unit){var _defineComparators3=defineComparators(a,b,unit),_defineComparators4=(0,slicedToArray.A)(_defineComparators3,3),dtA=_defineComparators4[0],dtB=_defineComparators4[1],datePart=_defineComparators4[2];return dtA.isAfter(dtB,datePart)},gte:function gte(a,b,unit){var _defineComparators7=defineComparators(a,b,unit),_defineComparators8=(0,slicedToArray.A)(_defineComparators7,3),dtA=_defineComparators8[0],dtB=_defineComparators8[1],datePart=_defineComparators8[2];return dtA.isSameOrBefore(dtB,datePart)},eq:eq,neq:function neq(a,b,unit){return!eq(a,b,unit)},merge:function merge(date,time){if(!date&&!time)return null;var tm=dayjs(time).format("HH:mm:ss"),dt=dayjs(date).startOf("day").format("MM/DD/YYYY");return dayjsLib("".concat(dt," ").concat(tm),"MM/DD/YYYY HH:mm:ss").toDate()},inRange:function inRange(day,min,max){var datePart=dayjs_fixUnit(arguments.length>3&&void 0!==arguments[3]?arguments[3]:"day"),djDay=dayjs(day),djMin=dayjs(min),djMax=dayjs(max);return djDay.isBetween(djMin,djMax,datePart,"[]")},startOf:startOf,endOf:function endOf(){var date=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,datePart=dayjs_fixUnit(arguments.length>1?arguments[1]:void 0);return datePart?dayjs(date).endOf(datePart).toDate():dayjs(date).toDate()},range:function range(start,end){for(var datePart=dayjs_fixUnit(arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day"),current=dayjs(start).toDate(),days=[];lte(current,end);)days.push(current),current=add(current,1,datePart);return days},add:add,diff:diff,ceil:function ceil(date,unit){var datePart=dayjs_fixUnit(unit),floor=startOf(date,datePart);return eq(floor,date)?floor:add(floor,1,datePart)},min:function min(dateA,dateB){var dtA=dayjs(dateA),dtB=dayjs(dateB);return dayjsLib.min(dtA,dtB).toDate()},max:function max(dateA,dateB){var dtA=dayjs(dateA),dtB=dayjs(dateB);return dayjsLib.max(dtA,dtB).toDate()},minutes:function minutes(date){return dayjs(date).minutes()},getSlotDate:function getSlotDate(dt,minutesFromMidnight,offset){return dayjs(dt).startOf("day").minute(minutesFromMidnight+offset).toDate()},getTimezoneOffset:function getTimezoneOffset(date){return dayjs(date).toDate().getTimezoneOffset()},getDstOffset:getDstOffset,getTotalMin:function getTotalMin(start,end){return diff(start,end,"minutes")},getMinutesFromMidnight:function getMinutesFromMidnight(start){var dayStart=dayjs(start).startOf("day");return dayjs(start).diff(dayStart,"minutes")+function getDayStartDstOffset(start){return getDstOffset(dayjs(start).startOf("day"),start)}(start)},continuesPrior:function continuesPrior(start,first){var djStart=dayjs(start),djFirst=dayjs(first);return djStart.isBefore(djFirst,"day")},continuesAfter:function continuesAfter(start,end,last){var djEnd=dayjs(end),djLast=dayjs(last);return djEnd.isSameOrAfter(djLast,"minutes")},sortEvents:function sortEvents(_ref6){var _ref6$evtA=_ref6.evtA,aStart=_ref6$evtA.start,aEnd=_ref6$evtA.end,aAllDay=_ref6$evtA.allDay,_ref6$evtB=_ref6.evtB,bStart=_ref6$evtB.start,bEnd=_ref6$evtB.end,bAllDay=_ref6$evtB.allDay,startSort=+startOf(aStart,"day")-+startOf(bStart,"day"),durA=daySpan(aStart,aEnd),durB=daySpan(bStart,bEnd);return startSort||durB-durA||!!bAllDay-!!aAllDay||+aStart-+bStart||+aEnd-+bEnd},inEventRange:function inEventRange(_ref7){var _ref7$event=_ref7.event,start=_ref7$event.start,end=_ref7$event.end,_ref7$range=_ref7.range,rangeStart=_ref7$range.start,rangeEnd=_ref7$range.end,startOfDay=dayjs(start).startOf("day"),eEnd=dayjs(end),rStart=dayjs(rangeStart),rEnd=dayjs(rangeEnd),startsBeforeEnd=startOfDay.isSameOrBefore(rEnd,"day"),endsAfterStart=!startOfDay.isSame(eEnd,"minutes")?eEnd.isAfter(rStart,"minutes"):eEnd.isSameOrAfter(rStart,"minutes");return startsBeforeEnd&&endsAfterStart},isSameDate:function isSameDate(date1,date2){var dt=dayjs(date1),dt2=dayjs(date2);return dt.isSame(dt2,"day")},browserTZOffset:function browserTZOffset(){var dt=new Date,neg=/-/.test(dt.toString())?"-":"",dtOffset=dt.getTimezoneOffset(),comparator=Number("".concat(neg).concat(Math.abs(dtOffset)));return dayjs().utcOffset()>comparator?1:0}})}BackgroundWrapper.A,BackgroundWrapper.A},"./src/utils/accessors.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function accessor(data,field){var value=null;return"function"==typeof field?value=field(data):"string"==typeof field&&"object"==typeof data&&null!=data&&field in data&&(value=data[field]),value}__webpack_require__.d(__webpack_exports__,{C:function(){return wrapAccessor},s:function(){return accessor}});var wrapAccessor=function wrapAccessor(acc){return function(data){return accessor(data,acc)}}},"./src/utils/constants.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{l:function(){return views},o:function(){return navigate}});var navigate={PREVIOUS:"PREV",NEXT:"NEXT",TODAY:"TODAY",DATE:"DATE"},views={MONTH:"month",WEEK:"week",WORK_WEEK:"work_week",DAY:"day",AGENDA:"agenda"}},"./src/utils/dates.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{GH:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf},Gx:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.minutes},IC:function(){return visibleDays},Jo:function(){return lastVisibleDay},RO:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.gte},T9:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.max},Ui:function(){return diff},WQ:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.add},eq:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.eq},gt:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.gt},h1:function(){return merge},jk:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.min},lt:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.lt},mk:function(){return ceil},p0:function(){return duration},pJ:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.endOf},pR:function(){return isJustDate},r4:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.inRange},t7:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.neq},tk:function(){return firstVisibleDay},wJ:function(){return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.lte},y1:function(){return range}});__webpack_require__("./node_modules/core-js/modules/es.array.map.js");var date_arithmetic__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/date-arithmetic/index.js"),MILLI={seconds:1e3,minutes:6e4,hours:36e5,day:864e5};function firstVisibleDay(date,localizer){var firstOfMonth=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf(date,"month");return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf(firstOfMonth,"week",localizer.startOfWeek())}function lastVisibleDay(date,localizer){var endOfMonth=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.endOf(date,"month");return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.endOf(endOfMonth,"week",localizer.startOfWeek())}function visibleDays(date,localizer){for(var current=firstVisibleDay(date,localizer),last=lastVisibleDay(date,localizer),days=[];date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.lte(current,last,"day");)days.push(current),current=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.add(current,1,"day");return days}function ceil(date,unit){var floor=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf(date,unit);return date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.eq(floor,date)?floor:date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.add(floor,1,unit)}function range(start,end){for(var unit=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"day",current=start,days=[];date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.lte(current,end,unit);)days.push(current),current=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.add(current,1,unit);return days}function merge(date,time){return null==time&&null==date?null:(null==time&&(time=new Date),null==date&&(date=new Date),date=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf(date,"day"),date=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.hours(date,date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.hours(time)),date=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.minutes(date,date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.minutes(time)),date=date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.seconds(date,date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.seconds(time)),date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.milliseconds(date,date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.milliseconds(time)))}function isJustDate(date){return 0===date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.hours(date)&&0===date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.minutes(date)&&0===date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.seconds(date)&&0===date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.milliseconds(date)}function duration(start,end,unit,firstOfWeek){return"day"===unit&&(unit="date"),Math.abs(date_arithmetic__WEBPACK_IMPORTED_MODULE_1__[unit](start,void 0,firstOfWeek)-date_arithmetic__WEBPACK_IMPORTED_MODULE_1__[unit](end,void 0,firstOfWeek))}function diff(dateA,dateB,unit){return unit&&"milliseconds"!==unit?Math.round(Math.abs(+date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf(dateA,unit)/MILLI[unit]-+date_arithmetic__WEBPACK_IMPORTED_MODULE_1__.startOf(dateB,unit)/MILLI[unit])):Math.abs(+dateA-+dateB)}},"./src/utils/eventLevels.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{FA:function(){return eventSegments},O_:function(){return eventLevels},SY:function(){return sortWeekEvents},kD:function(){return sortEvents},qO:function(){return endOfRange},r4:function(){return inRange}});var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),lodash_findIndex__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__("./node_modules/core-js/modules/es.array.sort.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/lodash/findIndex.js")),lodash_findIndex__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(lodash_findIndex__WEBPACK_IMPORTED_MODULE_3__);function endOfRange(_ref){var dateRange=_ref.dateRange,_ref$unit=_ref.unit,unit=void 0===_ref$unit?"day":_ref$unit,localizer=_ref.localizer;return{first:dateRange[0],last:localizer.add(dateRange[dateRange.length-1],1,unit)}}function eventSegments(event,range,accessors,localizer){var _endOfRange=endOfRange({dateRange:range,localizer:localizer}),first=_endOfRange.first,last=_endOfRange.last,slots=localizer.diff(first,last,"day"),start=localizer.max(localizer.startOf(accessors.start(event),"day"),first),end=localizer.min(localizer.ceil(accessors.end(event),"day"),last),padding=lodash_findIndex__WEBPACK_IMPORTED_MODULE_3___default()(range,(function(x){return localizer.isSameDate(x,start)})),span=localizer.diff(start,end,"day");return span=Math.min(span,slots),{event:event,span:span=Math.max(span-localizer.segmentOffset,1),left:padding+1,right:Math.max(padding+span,1)}}function eventLevels(rowSegments){var i,j,seg,limit=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0,levels=[],extra=[];for(i=0;i<rowSegments.length;i++){for(seg=rowSegments[i],j=0;j<levels.length&&segsOverlap(seg,levels[j]);j++);j>=limit?extra.push(seg):(levels[j]||(levels[j]=[])).push(seg)}for(i=0;i<levels.length;i++)levels[i].sort((function(a,b){return a.left-b.left}));return{levels:levels,extra:extra}}function inRange(e,start,end,accessors,localizer){var event={start:accessors.start(e),end:accessors.end(e)},range={start:start,end:end};return localizer.inEventRange({event:event,range:range})}function segsOverlap(seg,otherSegs){return otherSegs.some((function(otherSeg){return otherSeg.left<=seg.right&&otherSeg.right>=seg.left}))}function sortWeekEvents(events,accessors,localizer){var base=(0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__.A)(events),multiDayEvents=[],standardEvents=[];base.forEach((function(event){var startCheck=accessors.start(event),endCheck=accessors.end(event);localizer.daySpan(startCheck,endCheck)>1?multiDayEvents.push(event):standardEvents.push(event)}));var multiSorted=multiDayEvents.sort((function(a,b){return sortEvents(a,b,accessors,localizer)})),standardSorted=standardEvents.sort((function(a,b){return sortEvents(a,b,accessors,localizer)}));return[].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__.A)(multiSorted),(0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__.A)(standardSorted))}function sortEvents(eventA,eventB,accessors,localizer){var evtA={start:accessors.start(eventA),end:accessors.end(eventA),allDay:accessors.allDay(eventA)},evtB={start:accessors.start(eventB),end:accessors.end(eventB),allDay:accessors.allDay(eventB)};return localizer.sortEvents({evtA:evtA,evtB:evtB})}},"./src/utils/helpers.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{me:function(){return notify}});__webpack_require__("./node_modules/core-js/modules/es.array.concat.js");function notify(handler,args){handler&&handler.apply(null,[].concat(args))}},"./src/utils/propTypes.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js");var prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),_constants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/constants.js"),viewNames=Object.keys(_constants__WEBPACK_IMPORTED_MODULE_3__.l).map((function(k){return _constants__WEBPACK_IMPORTED_MODULE_3__.l[k]}));prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_4___default().string,prop_types__WEBPACK_IMPORTED_MODULE_4___default().func]),prop_types__WEBPACK_IMPORTED_MODULE_4___default().any,prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_4___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf(viewNames)),prop_types__WEBPACK_IMPORTED_MODULE_4___default().objectOf((function(prop,key){if(-1!==viewNames.indexOf(key)&&"boolean"==typeof prop[key])return null;for(var _len=arguments.length,args=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++)args[_key-2]=arguments[_key];return prop_types__WEBPACK_IMPORTED_MODULE_4___default().elementType.apply(prop_types__WEBPACK_IMPORTED_MODULE_4___default(),[prop,key].concat(args))}))]),prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf(["overlap","no-overlap"]),prop_types__WEBPACK_IMPORTED_MODULE_4___default().func])},"./src/utils/selection.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{bY:function(){return pointInBox},bx:function(){return dateCellSelection},sU:function(){return getSlotAtX},sp:function(){return isSelected}});var lodash_isEqual__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash/isEqual.js"),lodash_isEqual__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_0__);function isSelected(event,selected){return!(!event||null==selected)&&lodash_isEqual__WEBPACK_IMPORTED_MODULE_0___default()(event,selected)}function slotWidth(rowBox,slots){return(rowBox.right-rowBox.left)/slots}function getSlotAtX(rowBox,x,rtl,slots){var cellWidth=slotWidth(rowBox,slots);return rtl?slots-1-Math.floor((x-rowBox.left)/cellWidth):Math.floor((x-rowBox.left)/cellWidth)}function pointInBox(box,_ref){var x=_ref.x,y=_ref.y;return y>=box.top&&y<=box.bottom&&x>=box.left&&x<=box.right}function dateCellSelection(start,rowBox,box,slots,rtl){var startIdx=-1,endIdx=-1,lastSlotIdx=slots-1,cellWidth=slotWidth(rowBox,slots),currentSlot=getSlotAtX(rowBox,box.x,rtl,slots),isCurrentRow=rowBox.top<box.y&&rowBox.bottom>box.y,isStartRow=rowBox.top<start.y&&rowBox.bottom>start.y,isAboveStart=start.y>rowBox.bottom,isBelowStart=rowBox.top>start.y;return box.top<rowBox.top&&box.bottom>rowBox.bottom&&(startIdx=0,endIdx=lastSlotIdx),isCurrentRow&&(isBelowStart?(startIdx=0,endIdx=currentSlot):isAboveStart&&(startIdx=currentSlot,endIdx=lastSlotIdx)),isStartRow&&(startIdx=endIdx=rtl?lastSlotIdx-Math.floor((start.x-rowBox.left)/cellWidth):Math.floor((start.x-rowBox.left)/cellWidth),isCurrentRow?currentSlot<startIdx?startIdx=currentSlot:endIdx=currentSlot:start.y<box.y?endIdx=lastSlotIdx:startIdx=0),{startIdx:startIdx,endIdx:endIdx}}},"./stories/DemoLink.component.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return DemoLink}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),linkBase="https://github.com/jquense/react-big-calendar/blob/master/stories/demos/exampleCode/";function DemoLink(_ref){var fileName=_ref.fileName,children=_ref.children;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{marginBottom:10},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("a",{target:"_blank",href:"".concat(linkBase).concat(fileName,".js"),children:"<\\> View Example Source Code"})}),children?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{style:{marginBottom:10},children:children}):null]})}DemoLink.displayName="DemoLink",DemoLink.__docgenInfo={description:"",methods:[],displayName:"DemoLink"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/DemoLink.component.js"]={name:"DemoLink",docgenInfo:DemoLink.__docgenInfo,path:"stories/DemoLink.component.js"})},"./stories/demos/TimezoneSelect.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return TimezoneSelect}});__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/react/index.js");var react_tackle_box_Layout__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-tackle-box/Layout.js"),react_tackle_box_Layout__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react_tackle_box_Layout__WEBPACK_IMPORTED_MODULE_2__),moment__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=(__webpack_require__("./node_modules/moment-timezone/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js")),allZones=moment__WEBPACK_IMPORTED_MODULE_3___default().tz.names();function TimezoneSelect(_ref){var title=_ref.title,_ref$defaultTZ=_ref.defaultTZ,defaultTZ=void 0===_ref$defaultTZ?moment__WEBPACK_IMPORTED_MODULE_3___default().tz.guess():_ref$defaultTZ,timezone=_ref.timezone,setTimezone=_ref.setTimezone;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_tackle_box_Layout__WEBPACK_IMPORTED_MODULE_2___default(),{direction:"column",align:"center",children:[title?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("strong",{style:{marginBottom:10},children:title}):null,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("label",{children:"Select a Timezone"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("select",{className:"form-control",style:{width:200,display:"inline-block"},value:timezone,onChange:function onChange(_ref2){var value=_ref2.target.value;return setTimezone(value||defaultTZ)},children:allZones.map((function(c,idx){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("option",{value:"clear"!==c?c:"",children:c},idx)}))})]})})}allZones.unshift("clear"),TimezoneSelect.displayName="TimezoneSelect",TimezoneSelect.__docgenInfo={description:"",methods:[],displayName:"TimezoneSelect",props:{defaultTZ:{defaultValue:{value:"moment.tz.guess()",computed:!0},description:"",type:{name:"string"},required:!1},title:{description:"",type:{name:"string"},required:!1},timezone:{description:"",type:{name:"string"},required:!1},setTimezone:{description:"",type:{name:"func"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/TimezoneSelect.js"]={name:"TimezoneSelect",docgenInfo:TimezoneSelect.__docgenInfo,path:"stories/demos/TimezoneSelect.js"})},"./stories/demos/exampleCode/basic.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return Basic}});var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js")),moment__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__),react_big_calendar__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/index.js"),_DemoLink_component__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./stories/DemoLink.component.js"),_resources_events__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./stories/resources/events.js"),_src_utils_dates__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/utils/dates.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["localizer","showDemoLink"],mLocalizer=(0,react_big_calendar__WEBPACK_IMPORTED_MODULE_5__.ye)(moment__WEBPACK_IMPORTED_MODULE_4___default()),ColoredDateCellWrapper=function ColoredDateCellWrapper(_ref){var children=_ref.children;return react__WEBPACK_IMPORTED_MODULE_3__.cloneElement(react__WEBPACK_IMPORTED_MODULE_3__.Children.only(children),{style:{backgroundColor:"lightblue"}})};function Basic(_ref2){var _ref2$localizer=_ref2.localizer,localizer=void 0===_ref2$localizer?mLocalizer:_ref2$localizer,_ref2$showDemoLink=_ref2.showDemoLink,showDemoLink=void 0===_ref2$showDemoLink||_ref2$showDemoLink,props=(0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_10__.A)(_ref2,_excluded),_useMemo=(0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)((function(){return{components:{timeSlotWrapper:ColoredDateCellWrapper},defaultDate:new Date(2015,3,1),max:_src_utils_dates__WEBPACK_IMPORTED_MODULE_8__.WQ(_src_utils_dates__WEBPACK_IMPORTED_MODULE_8__.pJ(new Date(2015,17,1),"day"),-1,"hours"),views:Object.keys(react_big_calendar__WEBPACK_IMPORTED_MODULE_5__.Pp).map((function(k){return react_big_calendar__WEBPACK_IMPORTED_MODULE_5__.Pp[k]}))}}),[]),components=_useMemo.components,defaultDate=_useMemo.defaultDate,max=_useMemo.max,views=_useMemo.views;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(react__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[showDemoLink?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_DemoLink_component__WEBPACK_IMPORTED_MODULE_6__.A,{fileName:"basic"}):null,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",Object.assign({className:"height600"},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(react_big_calendar__WEBPACK_IMPORTED_MODULE_5__.Vv,{components:components,defaultDate:defaultDate,events:_resources_events__WEBPACK_IMPORTED_MODULE_7__.A,localizer:localizer,max:max,showMultiDayTimes:!0,step:60,views:views})}))]})}Basic.displayName="Basic",Basic.__docgenInfo={description:"We are defaulting the localizer here because we are using this same\nexample on the main 'About' page in Storybook",methods:[],displayName:"Basic",props:{localizer:{defaultValue:{value:"momentLocalizer(moment)",computed:!0},description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1},showDemoLink:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/basic.js"]={name:"Basic",docgenInfo:Basic.__docgenInfo,path:"stories/demos/exampleCode/basic.js"})},"./stories/demos/exampleCode/dndOutsideSource.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return DnDOutsideResource}});var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_7__=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.entries.js"),__webpack_require__("./node_modules/react/index.js")),_resources_events__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./stories/resources/events.js"),react_big_calendar__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/index.js"),_resources_Card__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./stories/resources/Card.js"),_DemoLink_component__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./stories/DemoLink.component.js"),_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./src/addons/dragAndDrop/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__=(__webpack_require__("./src/addons/dragAndDrop/styles.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js")),DragAndDropCalendar=(0,_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_12__.A)(react_big_calendar__WEBPACK_IMPORTED_MODULE_9__.Vv),adjEvents=_resources_events__WEBPACK_IMPORTED_MODULE_8__.A.map((function(it,ind){return Object.assign({},it,{isDraggable:ind%2==0})})),formatName=function formatName(name,count){return"".concat(name," ID ").concat(count)};function DnDOutsideResource(_ref){var localizer=_ref.localizer,_useState=(0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(adjEvents),_useState2=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_15__.A)(_useState,2),myEvents=_useState2[0],setMyEvents=_useState2[1],_useState3=(0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(),_useState4=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_15__.A)(_useState3,2),draggedEvent=_useState4[0],setDraggedEvent=_useState4[1],_useState5=(0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(!0),_useState6=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_15__.A)(_useState5,2),displayDragItemInCell=_useState6[0],setDisplayDragItemInCell=_useState6[1],_useState7=(0,react__WEBPACK_IMPORTED_MODULE_7__.useState)({item1:0,item2:0}),_useState8=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_15__.A)(_useState7,2),counters=_useState8[0],setCounters=_useState8[1],eventPropGetter=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(event){return Object.assign({},event.isDraggable?{className:"isDraggable"}:{className:"nonDraggable"})}),[]),handleDragStart=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(event){return setDraggedEvent(event)}),[]),dragFromOutsideItem=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(){return"undroppable"===draggedEvent?null:draggedEvent}),[draggedEvent]),customOnDragOverFromOutside=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(dragEvent){"undroppable"!==draggedEvent&&(console.log("preventDefault"),dragEvent.preventDefault())}),[draggedEvent]),handleDisplayDragItemInCell=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(){return setDisplayDragItemInCell((function(prev){return!prev}))}),[]),moveEvent=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(_ref2){var event=_ref2.event,start=_ref2.start,end=_ref2.end,_ref2$isAllDay=_ref2.isAllDay,droppedOnAllDaySlot=void 0!==_ref2$isAllDay&&_ref2$isAllDay,allDay=event.allDay;!allDay&&droppedOnAllDaySlot&&(event.allDay=!0),setMyEvents((function(prev){var _prev$find,existing=null!==(_prev$find=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find?_prev$find:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__.A)(filtered),[Object.assign({},existing,{start:start,end:end,allDay:allDay})])}))}),[setMyEvents]),newEvent=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(event){setMyEvents((function(prev){var idList=prev.map((function(item){return item.id})),newId=Math.max.apply(Math,(0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__.A)(idList))+1;return[].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__.A)(prev),[Object.assign({},event,{id:newId})])}))}),[setMyEvents]),onDropFromOutside=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(_ref3){var start=_ref3.start,end=_ref3.end,isAllDay=_ref3.allDay;if("undroppable"!==draggedEvent){var name=draggedEvent.name,event={title:formatName(name,counters[name]),start:start,end:end,isAllDay:isAllDay};setDraggedEvent(null),setCounters((function(prev){var count=prev[name];return Object.assign({},prev,(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_17__.A)({},name,count+1))})),newEvent(event)}else setDraggedEvent(null)}),[draggedEvent,counters,setDraggedEvent,setCounters,newEvent]),resizeEvent=(0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((function(_ref4){var event=_ref4.event,start=_ref4.start,end=_ref4.end;setMyEvents((function(prev){var _prev$find2,existing=null!==(_prev$find2=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find2?_prev$find2:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_16__.A)(filtered),[Object.assign({},existing,{start:start,end:end})])}))}),[setMyEvents]),defaultDate=(0,react__WEBPACK_IMPORTED_MODULE_7__.useMemo)((function(){return new Date(2015,3,12)}),[]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxs)(react__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(_DemoLink_component__WEBPACK_IMPORTED_MODULE_11__.A,{fileName:"dndOutsideSource",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxs)(_resources_Card__WEBPACK_IMPORTED_MODULE_10__.A,{className:"dndOutsideSourceExample",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxs)("div",{className:"inner",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("h4",{children:"Outside Drag Sources"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("p",{children:"Lighter colored events, in the Calendar, have an `isDraggable` key of `false`."}),Object.entries(counters).map((function(_ref5){var _ref6=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_15__.A)(_ref5,2),name=_ref6[0],count=_ref6[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("div",{draggable:"true",onDragStart:function onDragStart(){return handleDragStart({title:formatName(name,count),name:name})},children:formatName(name,count)},name)})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("div",{draggable:"true",onDragStart:function onDragStart(){return handleDragStart("undroppable")},children:"Draggable but not for calendar."})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsxs)("label",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("input",{type:"checkbox",checked:displayDragItemInCell,onChange:handleDisplayDragItemInCell}),"Display dragged item in cell while dragging over"]})})]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_14__.jsx)(DragAndDropCalendar,{defaultDate:defaultDate,defaultView:react_big_calendar__WEBPACK_IMPORTED_MODULE_9__.Pp.MONTH,dragFromOutsideItem:displayDragItemInCell?dragFromOutsideItem:null,draggableAccessor:"isDraggable",eventPropGetter:eventPropGetter,events:myEvents,localizer:localizer,onDropFromOutside:onDropFromOutside,onDragOverFromOutside:customOnDragOverFromOutside,onEventDrop:moveEvent,onEventResize:resizeEvent,onSelectSlot:newEvent,resizable:!0,selectable:!0})})]})}DnDOutsideResource.displayName="DnDOutsideResource",DnDOutsideResource.__docgenInfo={description:"",methods:[],displayName:"DnDOutsideResource",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/dndOutsideSource.js"]={name:"DnDOutsideResource",docgenInfo:DnDOutsideResource.__docgenInfo,path:"stories/demos/exampleCode/dndOutsideSource.js"})},"./stories/demos/exampleCode/resizable.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return Resizable}});var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_5__=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/react/index.js")),_resources_events__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./stories/resources/events.js"),react_big_calendar__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/index.js"),_resources_Card__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./stories/resources/Card.js"),_DemoLink_component__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./stories/DemoLink.component.js"),_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./src/addons/dragAndDrop/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__=(__webpack_require__("./src/addons/dragAndDrop/styles.scss"),__webpack_require__("./node_modules/react/jsx-runtime.js")),DragAndDropCalendar=(0,_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_10__.A)(react_big_calendar__WEBPACK_IMPORTED_MODULE_7__.Vv),adjEvents=_resources_events__WEBPACK_IMPORTED_MODULE_6__.A.map((function(it,ind){return Object.assign({},it,{isResizable:ind%2==0,isDraggable:ind%2==0})}));function Resizable(_ref){var localizer=_ref.localizer,_useState=(0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(adjEvents),_useState2=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_13__.A)(_useState,2),myEvents=_useState2[0],setMyEvents=_useState2[1],_useState3=(0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(!0),_useState4=(0,_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_13__.A)(_useState3,2),resizable=_useState4[0],setResizable=_useState4[1],eventPropGetter=(0,react__WEBPACK_IMPORTED_MODULE_5__.useCallback)((function(event){return Object.assign({},(!resizable||!event.isResizable)&&{className:"nonResizable"})}),[resizable]),toggleResizing=(0,react__WEBPACK_IMPORTED_MODULE_5__.useCallback)((function(){return setResizable((function(prev){return!prev}))}),[]),resizeEvent=(0,react__WEBPACK_IMPORTED_MODULE_5__.useCallback)((function(_ref2){var event=_ref2.event,start=_ref2.start,end=_ref2.end;setMyEvents((function(prev){var _prev$find,existing=null!==(_prev$find=prev.find((function(ev){return ev.id===event.id})))&&void 0!==_prev$find?_prev$find:{},filtered=prev.filter((function(ev){return ev.id!==event.id}));return[].concat((0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_14__.A)(filtered),[Object.assign({},existing,{start:start,end:end})])}))}),[setMyEvents]),defaultDate=(0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)((function(){return new Date(2015,3,12)}),[]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(react__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_DemoLink_component__WEBPACK_IMPORTED_MODULE_9__.A,{fileName:"dndOutsideSource",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_resources_Card__WEBPACK_IMPORTED_MODULE_8__.A,{className:"dndOutsideSourceExample",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)("div",{className:"inner",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("h4",{children:"Resizing"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)("p",{children:["Events allowing resizing will show drag handles when you mouse over them.",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),"In this example, lighter colored events are not resizable.",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("br",{}),"Toggling the checkbox to the right will turn off/on resizing all together."]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)("label",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("input",{type:"checkbox",checked:resizable,onChange:toggleResizing}),"Allow Event Resizing"]})})]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("div",{className:"height600",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(DragAndDropCalendar,{defaultDate:defaultDate,defaultView:react_big_calendar__WEBPACK_IMPORTED_MODULE_7__.Pp.MONTH,draggableAccessor:"isDraggable",eventPropGetter:eventPropGetter,events:myEvents,localizer:localizer,onEventResize:resizeEvent,resizable:resizable,resizableAccessor:resizable?"isResizable":"fakeKey"})})]})}Resizable.displayName="Resizable",Resizable.__docgenInfo={description:"",methods:[],displayName:"Resizable",props:{localizer:{description:"",type:{name:"instanceOf",value:"DateLocalizer"},required:!1}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/demos/exampleCode/resizable.js"]={name:"Resizable",docgenInfo:Resizable.__docgenInfo,path:"stories/demos/exampleCode/resizable.js"})},"./stories/helpers/createEvents.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";function createEvents(){var idx=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,date=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Date,y=date.getFullYear(),m=date.getMonth(),d=date.getDate();return[[{title:"Event 1",start:new Date(y,m,d,10,30,0,0),end:new Date(y,m,d,13,30,0,0)},{title:"Event 2",start:new Date(y,m,d,10,30,0,0),end:new Date(y,m,d,13,30,0,0)},{title:"Event 3",start:new Date(y,m,d,10,30,0,0),end:new Date(y,m,d,12,30,0,0)},{title:"Event 4",start:new Date(y,m,d,8,30,0,0),end:new Date(y,m,d,18,0,0,0)},{title:"Event 5",start:new Date(y,m,d,15,30,0,0),end:new Date(y,m,d,16,0,0,0)},{title:"Event 6",start:new Date(y,m,d,11,0,0,0),end:new Date(y,m,d,12,0,0,0)},{title:"Event 7",start:new Date(y,m,d,1,0,0,0),end:new Date(y,m,d,2,0,0,0)}],[{title:"Event 1",start:new Date(y,m,d,9,30,0,0),end:new Date(y,m,d,15,30,0,0)},{title:"Event 2",start:new Date(y,m,d,11,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 3",start:new Date(y,m,d,9,30,0,0),end:new Date(y,m,d,11,30,0,0)},{title:"Event 4",start:new Date(y,m,d,9,30,0,0),end:new Date(y,m,d,10,30,0,0)},{title:"Event 5",start:new Date(y,m,d,10,0,0,0),end:new Date(y,m,d,11,0,0,0)},{title:"Event 6",start:new Date(y,m,d,10,0,0,0),end:new Date(y,m,d,11,0,0,0)},{title:"Event 7",start:new Date(y,m,d,9,30,0,0),end:new Date(y,m,d,10,30,0,0)},{title:"Event 8",start:new Date(y,m,d,9,30,0,0),end:new Date(y,m,d,10,30,0,0)},{title:"Event 9",start:new Date(y,m,d,9,30,0,0),end:new Date(y,m,d,10,30,0,0)},{title:"Event 10",start:new Date(y,m,d,10,30,0,0),end:new Date(y,m,d,12,30,0,0)},{title:"Event 11",start:new Date(y,m,d,12,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 12",start:new Date(y,m,d,12,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 13",start:new Date(y,m,d,12,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 14",start:new Date(y,m,d,12,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 15",start:new Date(y,m,d,6,30,0,0),end:new Date(y,m,d,8,0,0,0)},{title:"Event 16",start:new Date(y,m,d,16,0,0,0),end:new Date(y,m,d,17,30,0,0)}],[{title:"Event 1",start:new Date(y,m,d,2,30,0,0),end:new Date(y,m,d,4,30,0,0)},{title:"Event 2",start:new Date(y,m,d,2,30,0,0),end:new Date(y,m,d,3,30,0,0)},{title:"Event 3",start:new Date(y,m,d,3,0,0,0),end:new Date(y,m,d,4,0,0,0)}],[{title:"Event 1",start:new Date(y,m,d,6,30,0,0),end:new Date(y,m,d,7,0,0,0)},{title:"Event 2",start:new Date(y,m,d,8,0,0,0),end:new Date(y,m,d,17,0,0,0)},{title:"Event 3",start:new Date(y,m,d,8,0,0,0),end:new Date(y,m,d,11,0,0,0)},{title:"Event 4",start:new Date(y,m,d,8,0,0,0),end:new Date(y,m,d,12,0,0,0)},{title:"Event 5",start:new Date(y,m,d,10,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 6",start:new Date(y,m,d,10,0,0,0),end:new Date(y,m,d,13,0,0,0)},{title:"Event 7",start:new Date(y,m,d,10,0,0,0),end:new Date(y,m,d,13,0,0,0)}],[{title:"Event 1",start:new Date(y,m,d,19,0,0,0),end:new Date(y,m,d,20,55,0,0)},{title:"Event 2",start:new Date(y,m,d,19,15,0,0),end:new Date(y,m,d,20,15,0,0)},{title:"Event 3",start:new Date(y,m,d,19,45,0,0),end:new Date(y,m,d,22,30,0,0)},{title:"Event 4",start:new Date(y,m,d,20,45,0,0),end:new Date(y,m,d,22,5,0,0)},{title:"Event 5",start:new Date(y,m,d,10,0,0,0),end:new Date(y,m,d,11,0,0,0)},{title:"Event 6",start:new Date(y,m,d,10,30,0,0),end:new Date(y,m,d,11,30,0,0)}]][idx]}__webpack_require__.d(__webpack_exports__,{A:function(){return createEvents}})},"./stories/helpers/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{AZ:function(){return events},ES:function(){return resources},GI:function(){return resourceEvents},Mf:function(){return backgroundEvents},Pp:function(){return _src__WEBPACK_IMPORTED_MODULE_5__.Pp},Vv:function(){return Calendar},zm:function(){return DragAndDropCalendar}});__webpack_require__("./node_modules/core-js/modules/es.object.assign.js");var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),moment__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/moment/moment.js"),moment__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__),_src__WEBPACK_IMPORTED_MODULE_5__=(__webpack_require__("./node_modules/moment-timezone/index.js"),__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/index.js")),_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__("./src/sass/styles.scss"),__webpack_require__("./src/addons/dragAndDrop/styles.scss"),__webpack_require__("./src/addons/dragAndDrop/index.js")),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/react/jsx-runtime.js"),localizer=(0,_src__WEBPACK_IMPORTED_MODULE_5__.ye)(moment__WEBPACK_IMPORTED_MODULE_2___default()),Calendar=function Calendar(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)("div",{style:{height:650},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_src__WEBPACK_IMPORTED_MODULE_5__.Vv,Object.assign({localizer:localizer},props))})};Calendar.displayName="Calendar";var DragAndDropCalendar=(0,_src_addons_dragAndDrop__WEBPACK_IMPORTED_MODULE_8__.A)(Calendar),DragableCalendar=function DragableCalendar(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(DragAndDropCalendar,Object.assign({popup:!0,selectable:!0,localizer:localizer,onEventDrop:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("event dropped"),onSelectEvent:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("event selected"),onSelectSlot:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("slot selected")},props))};DragableCalendar.displayName="DragableCalendar";var events=[{title:"example 1",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(2,"hours").toDate(),allDay:!1},{title:"example 2",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(2,"hours").toDate(),allDay:!1},{title:"example 3",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(2,"hours").toDate(),allDay:!1},{title:"example 4",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(2,"hours").toDate(),allDay:!1},{title:"example 5",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("month").add(2,"hours").toDate(),allDay:!1},{title:"test",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().add(1,"days").subtract(5,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().add(1,"days").subtract(4,"hours").toDate(),allDay:!1},{title:"test larger",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(5,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(10,"hours").toDate(),allDay:!1},{title:"test larger",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(15,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(23,"hours").toDate(),allDay:!1},{title:"test all day",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(1,"day").toDate(),allDay:!0},{title:"test 2 days",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(2,"days").toDate(),allDay:!0},{title:"test multi-day",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().add(3,"days").toDate(),allDay:!1}],backgroundEvents=[{title:"test background event",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(2,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(12,"hours").toDate(),allDay:!1}],resourceEvents=[{title:"event 1",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(2,"hours").toDate(),allDay:!1,resourceId:1},{title:"event 2",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(3,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(4,"hours").toDate(),allDay:!1,resourceId:[1,2]},{title:"event 3",start:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(1,"hours").toDate(),end:moment__WEBPACK_IMPORTED_MODULE_2___default()().startOf("day").add(3,"hours").toDate(),allDay:!1,resourceId:3}],resources=[{id:1,name:"Resource One"},{id:2,name:"Resource Two"},{id:3,name:"Resource Three"}];Calendar.__docgenInfo={description:"",methods:[],displayName:"Calendar"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/helpers/index.js"]={name:"Calendar",docgenInfo:Calendar.__docgenInfo,path:"stories/helpers/index.js"}),DragableCalendar.__docgenInfo={description:"",methods:[],displayName:"DragableCalendar"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/helpers/index.js"]={name:"DragableCalendar",docgenInfo:DragableCalendar.__docgenInfo,path:"stories/helpers/index.js"})},"./stories/props/storyDefaults.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{_:function(){return resourceAccessorStoryArgs},o:function(){return accessorStoryArgs}});var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),moment__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/moment/moment.js")),moment__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__),_src__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/index.js"),_resources_events__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./stories/resources/events.js"),_resources_resourceEvents__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./stories/resources/resourceEvents.js"),_excluded=["start","end","title","allDay"],resourceEvents=_resources_resourceEvents__WEBPACK_IMPORTED_MODULE_5__.A.events,resources=_resources_resourceEvents__WEBPACK_IMPORTED_MODULE_5__.A.list,mLocalizer=(0,_src__WEBPACK_IMPORTED_MODULE_3__.ye)(moment__WEBPACK_IMPORTED_MODULE_2___default()),adjusted=_resources_events__WEBPACK_IMPORTED_MODULE_4__.A.map((function(event){var startDate=event.start,endDate=event.end,label=event.title,allDayEvent=event.allDay,other=(0,_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_6__.A)(event,_excluded);return Object.assign({},other,{startDate:startDate,endDate:endDate,label:label,allDayEvent:allDayEvent})})),accessorStoryArgs={allDayAccessor:"allDayEvent",defaultDate:new Date(2015,3,13),endAccessor:"endDate",events:adjusted,localizer:mLocalizer,titleAccessor:"label",tooltipAccessor:"label",startAccessor:"startDate",idAccessor:"id"},adjustedResources=resources.map((function(_ref){return{Id:_ref.id,Title:_ref.title}})),resourceAccessorStoryArgs={defaultDate:new Date(2015,3,4),defaultView:_src__WEBPACK_IMPORTED_MODULE_3__.Pp.DAY,events:resourceEvents,localizer:mLocalizer,resourceIdAccessor:"Id",resources:adjustedResources,resourceTitleAccessor:"Title"}},"./stories/resources/Card.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function Card(_ref){var children=_ref.children,className=_ref.className,style=_ref.style;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:"".concat(className||""," card"),style:style,children:children})}Card.displayName="Card",Card.__docgenInfo={description:"",methods:[],displayName:"Card"},__webpack_exports__.A=Card,"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/resources/Card.js"]={name:"Card",docgenInfo:Card.__docgenInfo,path:"stories/resources/Card.js"})},"./stories/resources/customComponents.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{A:function(){return resources_customComponents}});var defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),react=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/react/index.js")),esm=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),jsx_runtime=(__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/jsx-runtime.js")),DayColumnWrapper=function DayColumnWrapper(_ref){var children=_ref.children,className=_ref.className,style=_ref.style,innerRef=_ref.innerRef;return(0,jsx_runtime.jsx)("div",{className:className,style:style,ref:innerRef,children:children})};DayColumnWrapper.displayName="DayColumnWrapper";var CustomDayColumnWrapper=react.forwardRef((function(dayColumnWrapperProps,ref){var style={borderColor:dayColumnWrapperProps.resource%2==0?"red":"#fff",borderStyle:"solid",borderWidth:"1px"};return(0,jsx_runtime.jsx)(DayColumnWrapper,Object.assign({},dayColumnWrapperProps,{style:style,innerRef:ref}))})),resources_customComponents=(0,defineProperty.A)((0,defineProperty.A)((0,defineProperty.A)({dateCellWrapper:function dateCellWrapper(dateCellWrapperProps){var hasAlert=!!dateCellWrapperProps.range&&dateCellWrapperProps.range.some((function(date){return date.getDate()%12==0})),style={display:"flex",flex:1,borderLeft:"1px solid #DDD",backgroundColor:hasAlert?"#f5f5dc":"#fff"};return(0,jsx_runtime.jsxs)("div",{style:style,children:[hasAlert&&(0,jsx_runtime.jsx)("a",{onClick:(0,esm.action)("custom dateCellWrapper component clicked"),children:"Click me"}),dateCellWrapperProps.children]})},dayColumnWrapper:CustomDayColumnWrapper,timeSlotWrapper:function timeSlotWrapper(timeSlotWrapperProps){var hasCustomInfo=!!timeSlotWrapperProps.value&&4===timeSlotWrapperProps.value.getHours(),style={display:"flex",flex:1,backgroundColor:hasCustomInfo?"#f5f5dc":"#fff"};return(0,jsx_runtime.jsxs)("div",{style:style,children:[hasCustomInfo&&"Custom Day Wrapper",timeSlotWrapperProps.children]})},eventWrapper:function eventWrapper(eventWrapperProps){var style={border:"4px solid",borderColor:eventWrapperProps.event.start.getHours()%2==0?"green":"red",padding:"5px"};return(0,jsx_runtime.jsx)("div",{style:style,children:eventWrapperProps.children})}},"timeSlotWrapper",(function timeSlotWrapper(timeSlotWrapperProps){var style=null===timeSlotWrapperProps.resource||0!==timeSlotWrapperProps.value.getMinutes()?{}:{border:"4px solid",backgroundColor:timeSlotWrapperProps.value.getHours()>=8&&timeSlotWrapperProps.value.getHours()<=17?"green":"red",padding:"5px"};return(0,jsx_runtime.jsx)("div",{style:style,children:timeSlotWrapperProps.children})})),"timeGutterWrapper",(function timeGutterWrapper(timeGutterWrapperProps){return(0,jsx_runtime.jsx)("div",{id:"my-custom-time-gutter-wrapper",style:{backgroundColor:"gray"},children:timeGutterWrapperProps.children})})),"showMore",(function showMore(showMoreProps){return(0,jsx_runtime.jsxs)("button",{id:"my-custom-show-more",style:{border:"4px solid red",cursor:"pointer"},onClick:function onClick(){console.log("showMoreProps",showMoreProps),window.alert("\n            Clicked ".concat(showMoreProps.slotDate.toISOString().substr(0,10)," with ").concat(showMoreProps.remainingEvents.length," remaining events.\n            Open the console for the full set of props.\n          "))},children:[showMoreProps.count," more!"]})}))},"./stories/resources/events.js":function(__unused_webpack_module,__webpack_exports__){"use strict";var now=new Date;__webpack_exports__.A=[{id:1,title:"Long Event",start:new Date(2015,3,7),end:new Date(2015,3,10)},{id:2,title:"DTS STARTS",start:new Date(2016,2,13,0,0,0),end:new Date(2016,2,20,0,0,0)},{id:3,title:"DTS ENDS",start:new Date(2016,10,6,0,0,0),end:new Date(2016,10,13,0,0,0)},{id:4,title:"Some Event",start:new Date(2015,3,9,0,0,0),end:new Date(2015,3,9,0,0,0),allDay:!0},{id:92,title:"Some Other Event",start:new Date(2015,3,9,8,0,0),end:new Date(2015,3,10,11,30,0)},{id:5,title:"Conference",start:new Date(2015,3,11),end:new Date(2015,3,13),desc:"Big conference for important people"},{id:6,title:"Meeting",start:new Date(2015,3,12,10,30,0,0),end:new Date(2015,3,12,12,30,0,0),desc:"Pre-meeting meeting, to prepare for the meeting"},{id:7,title:"Lunch",start:new Date(2015,3,12,12,0,0,0),end:new Date(2015,3,12,13,0,0,0),desc:"Power lunch"},{id:8,title:"Meeting",start:new Date(2015,3,12,14,0,0,0),end:new Date(2015,3,12,15,0,0,0)},{id:9,title:"Happy Hour",start:new Date(2015,3,12,17,0,0,0),end:new Date(2015,3,12,17,30,0,0),desc:"Most important meal of the day"},{id:10,title:"Dinner",start:new Date(2015,3,12,20,0,0,0),end:new Date(2015,3,12,21,0,0,0)},{id:11,title:"Planning Meeting with Paige",start:new Date(2015,3,13,8,0,0),end:new Date(2015,3,13,10,30,0)},{id:11.1,title:"Inconvenient Conference Call",start:new Date(2015,3,13,9,30,0),end:new Date(2015,3,13,12,0,0)},{id:11.2,title:"Project Kickoff - Lou's Shoes",start:new Date(2015,3,13,11,30,0),end:new Date(2015,3,13,14,0,0)},{id:11.3,title:"Quote Follow-up - Tea by Tina",start:new Date(2015,3,13,15,30,0),end:new Date(2015,3,13,16,0,0)},{id:12,title:"Late Night Event",start:new Date(2015,3,17,19,30,0),end:new Date(2015,3,18,2,0,0)},{id:12.5,title:"Late Same Night Event",start:new Date(2015,3,17,19,30,0),end:new Date(2015,3,17,23,30,0)},{id:13,title:"Multi-day Event",start:new Date(2015,3,20,19,30,0),end:new Date(2015,3,22,2,0,0)},{id:14,title:"Today",start:new Date((new Date).setHours((new Date).getHours()-3)),end:new Date((new Date).setHours((new Date).getHours()+3))},{id:15,title:"Point in Time Event",start:now,end:now},{id:16,title:"Video Record",start:new Date(2015,3,14,15,30,0),end:new Date(2015,3,14,19,0,0)},{id:17,title:"Dutch Song Producing",start:new Date(2015,3,14,16,30,0),end:new Date(2015,3,14,20,0,0)},{id:18,title:"Itaewon Meeting",start:new Date(2015,3,14,16,30,0),end:new Date(2015,3,14,17,30,0)},{id:19,title:"Online Coding Test",start:new Date(2015,3,14,17,30,0),end:new Date(2015,3,14,20,30,0)},{id:20,title:"An overlapped Event",start:new Date(2015,3,14,17,0,0),end:new Date(2015,3,14,18,30,0)},{id:21,title:"Phone Interview",start:new Date(2015,3,14,17,0,0),end:new Date(2015,3,14,18,30,0)},{id:22,title:"Cooking Class",start:new Date(2015,3,14,17,30,0),end:new Date(2015,3,14,19,0,0)},{id:23,title:"Go to the gym",start:new Date(2015,3,14,18,30,0),end:new Date(2015,3,14,20,0,0)},{id:24,title:"DST ends on this day (Europe)",start:new Date(2022,9,30,0,0,0),end:new Date(2022,9,30,4,30,0)},{id:25,title:"DST ends on this day (America)",start:new Date(2022,10,6,0,0,0),end:new Date(2022,10,6,4,30,0)},{id:26,title:"DST starts on this day (America)",start:new Date(2023,2,12,0,0,0),end:new Date(2023,2,12,4,30,0)},{id:27,title:"DST starts on this day (Europe)",start:new Date(2023,2,26,0,0,0),end:new Date(2023,2,26,4,30,0)}]},"./stories/resources/resourceEvents.js":function(__unused_webpack_module,__webpack_exports__){"use strict";__webpack_exports__.A={events:[{title:"Rencontre",resourceId:"a",start:new Date(2015,3,2,5,30,0,0),end:new Date(2015,3,2,10,30,0,0)},{title:"Another Meeting",resourceId:"b",start:new Date(2015,3,1,2,30,0,0),end:new Date(2015,3,1,4,30,0,0)},{title:"A",resourceId:"a",start:new Date(2015,3,4,5,30,0,0),end:new Date(2015,3,4,10,30,0,0)},{title:"B",resourceId:"b",start:new Date(2015,3,4,5,30,0,0),end:new Date(2015,3,4,10,30,0,0)},{title:"C",resourceId:"c",start:new Date(2015,3,4,5,30,0,0),end:new Date(2015,3,4,10,30,0,0)}],list:[{id:"a",title:"Room A"},{id:"b",title:"Room B"},{id:"c",title:"Room C"}]}},"./storybook-init-framework-entry.js":function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},"./stories/AboutBigCalendar.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_demos_exampleCode_basic_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./stories/demos/exampleCode/basic.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"About Big Calendar",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"big-calendar"},"Big Calendar"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_demos_exampleCode_basic_js__WEBPACK_IMPORTED_MODULE_6__.A,{showDemoLink:!1,style:{marginBottom:15},mdxType:"Basic"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h2",{id:"introduction"},"Introduction"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Big Calendar is a full featured Calendar component for managing events and dates. It uses modern ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"flexbox")," for layout, making it super responsive and performant. Leaving most of the layout heavy lifting to the browser."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Here you will find all of the documentation you need for implementing Big Calendar. We explain the basics of implementation, give you clear details and examples of the various props needed, and try to answer your questions on how you can use Big Calendar to implement custom scheduling solutions."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h2",{id:"getting-started"},"Getting Started"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"You can install Big Calendar via ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://yarnpkg.com/en/",target:"_blank",rel:"nofollow noopener noreferrer"},"yarn")," or ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://www.npmjs.com/",target:"_blank",rel:"nofollow noopener noreferrer"},"npm"),":"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"yarn:")," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"yarn add react-big-calendar")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"npm:")," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"npm install --save react-big-calendar")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"Note"),": Requires Node >= 18"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"When you include Big Calendar in your interface, you will need the core styles. We provide a precompiled style sheet (",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"react-big-calendar/lib/css/react-big-calendar.css"),") for you, or you can directly import the SASS into your implementation. For more information on this, see the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"guides-custom-styling",mdxType:"LinkTo"},"Custom Styling")," guide for more details."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Also make sure that your calendar's container element has a height, or the calendar won't be visible (see why below)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Date internationalization and localization is ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"hard")," and Big Calendar doesn't even attempt to\nsolve that problem. Instead you can use one of the many excellent solutions already\nout there, via adapters called ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"localizers"),". Big Calendar comes with three localizers for use\nwith ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://github.com/jquery/globalize",target:"_blank",rel:"nofollow noopener noreferrer"},"Globalize.js"),", ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"http://momentjs.com/",target:"_blank",rel:"nofollow noopener noreferrer"},"Moment.js")," or ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://moment.github.io/luxon",target:"_blank",rel:"nofollow noopener noreferrer"},"Luxon"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Choose the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"localizer")," that best suits your needs, or write your own. Whatever you do, you'll need to set it up before you can use the calendar (you only need to set it up once)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-jsx"},'import { Calendar, momentLocalizer } from \'react-big-calendar\'\nimport moment from \'moment\'\n\n// Setup the localizer by providing the moment (or globalize, or Luxon) Object\n// to the correct localizer.\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\n\nconst MyCalendar = (props) => (\n  <div className="myCustomHeight">\n    <Calendar\n      localizer={localizer}\n      events={myEventsList}\n      startAccessor="start"\n      endAccessor="end"\n    />\n  </div>\n)\n')),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Once you've configured a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"localizer"),", the Calendar is ready to accept ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"dateFormat")," props. These props determine how dates will be displayed throughout the component and are specific to the localizer of your choice. For instance if you are using the Moment localizer, then any ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"http://momentjs.com/docs/#/displaying/format/",target:"_blank",rel:"nofollow noopener noreferrer"},"Moment format pattern")," is valid!"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"One thing to note is that, Big Calendar treats event start/end dates as an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"exclusive")," range which means that the event spans up to, but not including, the end date. In the case of displaying events on whole days, end dates are rounded ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"up")," to the next day. So an event ending on ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Apr 8th 12:00:00 am")," will not appear on the 8th, whereas one ending\non ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Apr 8th 12:01:00 am")," will. If you want ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"inclusive")," ranges consider providing a function ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"end-accessor",mdxType:"LinkTo"},"endAccessor")," that returns the end date + 1 day for those events that end at midnight."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h2",{id:"next-steps"},"Next Steps"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"We have provided a number of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"about-our-examples",mdxType:"LinkTo"},"Examples")," within this documentation, including individual examples of each and every ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props-full-prop-list",mdxType:"LinkTo"},"prop"),", as well as the Drag and Drop ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-introduction",mdxType:"LinkTo"},"Addon"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The documentation 'Canvas' tab, at the top of the page, will show you the component example for that specific piece of documentation. While in the 'Canvas' you may also have interactive controls in the 'Controls' panel, allowing you to play with a prop's different values."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The 'Docs' tab will contain additional information, special case scenarios, and the rendered example. Most of these examples contain a 'Show code' button (bottom right), or even a special link at the top to 'View Example Source Code'."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h2",{id:"join-the-community"},"Join the Community"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Help us improve Big Calendar! Join us on ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://join.slack.com/t/bigcalendar/shared_invite/zt-1ml1j99af-qIvqOfosMog1W7WxM0~j2Q",target:"_blank",rel:"nofollow noopener noreferrer"},"Slack"),"."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"About Big Calendar",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/AboutExamples.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"About Our Examples",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"about-our-examples"},"About Our Examples"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"We have attempted to provide best practice code examples for using Big Calendar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Big Calendar is... well, "big". It has dozens of props, and can be configured in a lot of different ways to meet a wide number of use cases. It also has quite a number of subcomponents, and provides the ability to override most all of them.'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Because of this, it's important to think about how you initialize your properties as you pass them to Big Calendar. Let's look at a small example:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// don't do this\n<Calendar defaultDate={new Date(2015, 3, 13)} {...otherProps} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// do this\nconst {defaultDate} = useMemo(() => ({\n  defaultDate: new Date(2015, 3, 13)\n}), [])\n//...\n<Calendar defaultDate={defaultDate} {...otherProps} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Instantiating a new JS ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Date")," creates a new object. React will see this 'new' prop and re-render every subcomponent that relies upon ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"defaultDate"),", even if (technically) it did not change."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// don't do this\n<Calendar onView={(newView) => setView(newView)} {...otherProps} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// and don't do this\nconst onView = (newView) => setView(newView)\n<Calendar onView={onView} {...otherProps} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// do this\nconst onView = useCallback((newView) => setView(newView), [setView])\n<Calendar onView={onView} {...otherProps} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"If a prop takes an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Object"),", an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Array"),", a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Date"),", a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Function"),", or any other non-simple variable type, it is always a good idea to memoize those values prior to passing them as props. Chances are that some prop or state change will trigger a re-render of your Calendar. How well you manage your props will affect overall render performance."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"About Our Examples",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/addons/addOns.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Addons/Introduction",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"addons"},"Addons"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'An "Addon" is some bit of code to enhance and expand the functionality of Big Calendar. These are typically provided by someone within the Big Calendar developer community.'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"In this section we document those Addons that we have included directly in the Big Calendar codebase. If you have additional Add-ons that you have created for Big Calendar please let us know and we may link it here in the documentation."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-introduction",mdxType:"LinkTo"},"Drag and Drop"))))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Addons/Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/addons/dragAndDrop/Introduction.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Addons/Drag and Drop/Introduction",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"drag-and-drop"},"Drag and Drop"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Creates a higher-order component (HOC) supporting drag & drop for moving and/or resizing of events:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"import { Calendar } from 'react-big-calendar'\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css'\n\nconst DnDCalendar = withDragAndDrop(Calendar)\n\n/* ... */\n\nreturn (\n  <DnDCalendar\n    localizer={myLocalizer}\n    events={events}\n    draggableAccessor={(event) => true}\n  />\n)\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Set ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"resizable",mdxType:"LinkTo"},"resizable")," to false in your calendar if you don't want events to be resizable.\n",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"resizable")," is set to true by default."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The HOC adds ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-event-drop",mdxType:"LinkTo"},"onEventDrop"),", ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-event-resize",mdxType:"LinkTo"},"onEventResize"),", and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drag-start",mdxType:"LinkTo"},"onDragStart")," callback properties if the events are\nmoved or resized. These callbacks are called with these signatures:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"function onEventDrop({event, start, end, allDay}) {...}\nfunction onEventResize({event, start, end, allDay}) {...}\nfunction onDragStart({event}) {...}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Moving and resizing of events has some subtlety which one should be aware of:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",{parentName:"li"},'In some situations, non-allDay events are displayed in "row" format where they\nare rendered horizontally. This is the case for ALL events in a month view. It\nis also occurs with multi-day events in a day or week view (unless ',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"show-multi-day-times",mdxType:"LinkTo"},"showMultiDayTimes"),"\nis set).")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",{parentName:"li"},"When dropping or resizing non-allDay events into a the header area or when\nresizing them horizontally because they are displayed in row format, their\ntimes are preserved, only their date is changed.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",{parentName:"li"},"If you care about these corner cases, you can examine the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"allDay")," param supplied\nin the callback to determine how the user dropped or resized the event."))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Additionally, this HOC adds the callback props ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drop-from-outside",mdxType:"LinkTo"},"onDropFromOutside")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drag-over",mdxType:"LinkTo"},"onDragOver"),":"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",{parentName:"li"},"By default, the calendar will not respond to outside draggable items being dropped\nonto it. However, if ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drop-from-outside",mdxType:"LinkTo"},"onDropFromOutside")," callback is passed, then when draggable\nDOM elements are dropped on the calendar, the callback will fire, receiving an\nobject with start and end times, and an allDay boolean.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",{parentName:"li"},"If ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drop-from-outside",mdxType:"LinkTo"},"onDropFromOutside")," is passed, but ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drag-over",mdxType:"LinkTo"},"onDragOver")," is not, any draggable event will be\ndroppable onto the calendar by default. On the other hand, if an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDragOver")," callback\n",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"is")," passed, then it can discriminate as to whether a draggable item is droppable on the\ncalendar. To designate a draggable item as droppable, call ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"event.preventDefault"),"\ninside ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDragOver"),". If ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"event.preventDefault")," is not called in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDragOver"),"\ncallback, then the draggable item will not be droppable on the calendar."))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"function onDropFromOutside({ start, end, allDay }) {...}\nfunction onDragOver(DragEvent: SyntheticEvent) {...}\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Addons/Drag and Drop/Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/addons/dragAndDrop/props/API.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Addons/Drag and Drop/props/Full Prop List",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"all-drag-and-drops-props"},"All Drag and Drops Props"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"oneventdrop"},"onEventDrop"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function ({ event, start, end, allDay }) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-event-drop",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A callback fired when user drops an item from one slot to another from within the Calendar. Developers will typically use this method to update an item's ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"start")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"end")," in ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"ondragstart"},"onDragStart"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function ({ event, action, direction }) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drag-start",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A callback fired when user begins to drag an event."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"ondropfromoutside"},"onDropFromOutside"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function ({ start, end, allDay, resource }) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drop-from-outside",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A callback fired when user drops an item onto the Calendar from outside of the Calendar. Developers will typically use this method to add new items to the Calendar's ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Important:")," The callback does ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"not")," receive the element being dropped. It only receives the details of the slot an element was dropped on."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"dragfromoutsideitem"},"dragFromOutsideItem"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function () => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"drag-from-outside-item",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A callback to get a temporary ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"event")," to display in a slot in the process of dragging from outside. This is not required for Drag and Drop to function, but provides a nice visual cue to the user when dragging in an item from outside of the Calendar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Tip: Toggle the checkbox, in the example, and drag an outside item in. Do this from both checkbox states to see the difference in effect."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"ondragover"},"onDragOver"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (dragEvent: SyntheticEvent) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-drag-over",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"If an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDragOver")," callback ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"is")," passed, then it can discriminate as to whether a draggable item is droppable on the calendar. To designate a draggable item as droppable, call ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"event.preventDefault")," inside ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDragOver"),". If ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"event.preventDefault")," is not called in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDragOver")," callback, then the draggable item will not be droppable on the calendar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"draggableaccessor"},"draggableAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string|function (event) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"() => true")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"When used, can determine whether an 'event' is draggable"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"resizable"},"resizable"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"true")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"resizable",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines if events may be resized on the Calendar. Used in conjunction with ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-event-resize",mdxType:"LinkTo"},"onEventResize"),". When used with the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"resizable-accessor",mdxType:"LinkTo"},"resizableAccessor")," the developer has even greater control."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"resizable")," events must also be draggable. You cannot resize an event with a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"draggableAccessor")," prop of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"oneventresize"},"onEventResize"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function ({ event, start, end }) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"on-event-resize",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A callback fired when user resizes an event. Developers will typically use this method to update an item's ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"start")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"end")," in ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"resizable",mdxType:"LinkTo"},"resizable")," prop must be ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"true")," (the default) to use the method."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"resizable")," events must also be draggable. You cannot resize an event with a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"draggableAccessor")," prop of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"resizableaccessor"},"resizableAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string|function (event) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"() => true")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"resizable-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines if an event is resizable."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"resizable")," events must also be draggable. You cannot resize an event with a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-props",story:"draggable-accessor",mdxType:"LinkTo"},"draggableAccessor")," prop of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"false"),"."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Addons/Drag and Drop/props/Full Prop List",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/demos/dragAndDrop.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Examples/Drag and Drop",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"drag-and-drop"},"Drag and Drop"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-drag-and-drop-introduction",mdxType:"LinkTo"},"Drag and Drop Examples")," have been moved into the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"addons-introduction",mdxType:"LinkTo"},"AddOns")," section of the documentation"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Examples/Drag and Drop",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/guides/CustomStyling.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=(__webpack_require__("./node_modules/@storybook/addon-links/react.js"),["components"]);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Guides/Custom Styling",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"custom-styling"},"Custom Styling"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Out of the box, you can include the compiled CSS files and be up and running. But, sometimes, you may want to style Big Calendar to match your application styling. For this reason, SASS files are included with Big Calendar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-sass"},"@import 'react-big-calendar/lib/sass/styles';\n@import 'react-big-calendar/lib/addons/dragAndDrop/styles'; // if using DnD\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"SASS implementation provides a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"variables")," file containing color and sizing variables that you can update to fit your application. Note: Changing and/or overriding styles can cause rendering issues with your Big Calendar. Carefully test each change accordingly."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Guides/Custom Styling",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/guides/CustomView.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Guides/Creating Custom Views",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"creating-a-custom-view"},"Creating A Custom View"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"It is possible to override an existing Calendar ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view"),", or even create a new ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")," all together, by adhering to a specific interface."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"examples",story:"example-9",mdxType:"LinkTo"},"View An Example"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"First build your custom ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")," component. This could be based off an existing component, or something completely custom."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"import React, {useMemo} from 'react'\nimport PropTypes from 'prop-types'\nimport { Navigate } from 'react-big-calendar'\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid'\n\nexport default function CustomWeekView({\n  date,\n  localizer,\n  max = localizer.endOf(new Date(), 'day'),\n  min = localizer.startOf(new Date(), 'day'),\n  scrollToTime = localizer.startOf(new Date(), 'day'),\n  ...props\n}) {\n  const currRange = useMemo(\n    () => CustomWeekView.range(date, { localizer }),\n    [date, localizer]\n  )\n\n  return (\n    <TimeGrid\n      date={date}\n      eventOffset={15}\n      localizer={localizer}\n      max={max}\n      min={min}\n      range={currRange}\n      scrollToTime={scrollToTime}\n      {...props}\n    />\n  )\n}\n\nCustomWeekView.propTypes = {\n  date: PropTypes.instanceOf(Date).isRequired,\n  localizer: PropTypes.object,\n  max: PropTypes.instanceOf(Date),\n  min: PropTypes.instanceOf(Date),\n  scrollToTime: PropTypes.instanceOf(Date),\n}\n\nCustomWeekView.range = (date, { localizer }) => {\n  const start = date\n  const end = localizer.add(start, 2, 'day')\n\n  let current = start\n  const range = []\n\n  while (localizer.lte(current, end, 'day')) {\n    range.push(current)\n    current = localizer.add(current, 1, 'day')\n  }\n\n  return range\n}\n\nCustomWeekView.navigate = (date, action, { localizer }) => {\n  switch (action) {\n    case Navigate.PREVIOUS:\n      return localizer.add(date, -3, 'day')\n\n    case Navigate.NEXT:\n      return localizer.add(date, 3, 'day')\n\n    default:\n      return date\n  }\n}\n\nCustomWeekView.title = (date, { localizer }) => {\n  const [start, ...rest] = CustomWeekView.range(date, { localizer })\n  return localizer.format({ start, end: rest.pop() }, 'dayRangeHeaderFormat')\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Pay special attention to the additional static methods attached to your component. As static methods, they have no concept of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"this"),", and have specific arguments that will be passed into them."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"interface View {\n  static title(date: Date, { formats: DateFormat[], culture: string?, ...props }): string\n  static navigate(date: Date, action: 'PREV' | 'NEXT' | 'DATE'): Date\n  static range?(date: Date, { localizer: DateLocalizer, ...props }): array\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"To implement your custom ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view"),", include it in your ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"views",mdxType:"LinkTo"},"views")," prop."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"import CustomWeekView from './CustomWeekView'\n//...\nconst {views, ...otherProps} = useMemo(() => ({\n  views: {\n    month: true,\n    week: CustomWeekView,\n    day: true\n  },\n  // ... other props\n}), [])\n//...\n<Calendar views={views} {...otherProps} />\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Guides/Creating Custom Views",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/guides/Dates.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Guides/Understanding Dates",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"understanding-dates"},"Understanding Dates"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Big Calendar is all about dates and times. Probably one of the easiest things that beginners miss, when first implementing Big Calendar, is that we ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"require")," true JS ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",target:"_blank",rel:"nofollow noopener noreferrer"},"Date")," objects in our ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"Full Prop List",mdxType:"LinkTo"},"props")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"event")," definitions."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"It is ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"up to the developer")," to handle translating date/time values ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"to and from JS ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"strong"},"Date")," format"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"What does this mean?"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// will cause errors\nconst defaultDate = useMemo(() => '2015-04-12T13:45:00-05:00', [])\n\n// will work as expected\nconst defaultDate = useMemo(() => new Date('2015-04-12T13:45:00-05:00'), [])\n\n// will never display in the Calendar\nconst events = [\n  {\n    title: 'My Event'\n    start: '2015-04-12T13:45:00-05:00',\n    end: '2015-04-12T14:00:00-05:00'\n  }\n]\n\n// what you must have is this\nconst events = [\n  {\n    title: 'My Event'\n    start: new Date('2015-04-12T13:45:00-05:00'),\n    end: new Date('2015-04-12T14:00:00-05:00')\n  }\n]\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The other thing to remember is that the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Date"),"s you provide to the Calendar will, by default, be displayed in the browser's native local timezone and culture, regardless of any offsets. This is how JS ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Date"),"s work in browsers today. If you need to display dates and times in a specific timezone, other than the browser native, then you should review our ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"guides-timezones",mdxType:"LinkTo"},"Timezones Guide")," on using a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localiizer",mdxType:"LinkTo"},"localizer")," that supports timezone conversions."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Side Note:")," Storing your date/time values in UTC (Zulu) date format (YYYY-MM-DDTHH:mm:ssZ) will make these types of transformations much easier to work with."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Guides/Understanding Dates",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/guides/Timezones.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Guides/Timezones",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"dealing-with-time-zones"},"Dealing With Time Zones"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Time Zones are... ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"hard"),", and while changing the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"culture")," will help with internationalization and localization, it does not adjust the dates for a specific time zone. Javascript Date objects don't really support time zone switching natively, and date math gets ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"very")," complicated. Thankfully Big Calendar does support ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"moment")," as a localizer, so if you use ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://momentjs.com/timezone/",target:"_blank",rel:"nofollow noopener noreferrer"},"moment-timezone")," you can get your events to display relevant to a time zone other than the browser native."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"To change your events to display as a specific time zone, you must ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://momentjs.com/timezone/docs/#/using-timezones/default-timezone/",target:"_blank",rel:"nofollow noopener noreferrer"},"change moment's default timezone")," for all dates, ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"using an IANA time zone"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-jsx"},"import { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'moment-timezone' // or 'moment-timezone/builds/moment-timezone-with-data[-datarange].js'. See their docs\n\n// Set the IANA time zone you want to use\nmoment.tz.setDefault('Europe/Paris')\n\n// Setup the localizer by providing the moment Object\n// to the correct localizer.\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\n\nconst MyCalendar = (props) => (\n  <div className=\"myCustomHeight\">\n    <Calendar\n      localizer={localizer}\n      events={myEventsList}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n    />\n  </div>\n)\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"momentLocalizer")," will now handle all dates and date math as if the date is in the timezone you specified. It is important to note that ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://momentjs.com/timezone/docs/#/using-timezones/default-timezone/",target:"_blank",rel:"nofollow noopener noreferrer"},"changing moment's default timezone")," affects all dates, created by moment, from that point forward, so you may want to reset the default when your component unmounts. And, if switching timezones 'on-the-fly', you want to update your ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer")," and any Date based props (min, max, getNow, etc) at the same time."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"luxonLocalizer")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"dayjsLocalizer")," operate in a similar fashion. View their respective demos and source for examples of their usage."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Guides/Timezones",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/guides/localizer.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"Guides/Localizers",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"what-is-a-localizer"},"What is a Localizer?"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"You have probably noticed that your Big Calendar implementations require a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"localizer")," prop. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer")," is needed for applying formatting and culture (i18n) to your date displays throughout the Calendar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Now the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer")," also handles all internal date math, utilizing the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer")," you provide. This is how the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://momentjs.com/",target:"_blank",rel:"nofollow noopener noreferrer"},"moment")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://moment.github.io/luxon/#/",target:"_blank",rel:"nofollow noopener noreferrer"},"Luxon")," localizers handle timezones, and how all of them handle things like Daylight Savings Time. Most components receive the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer")," as a prop, meaning that your override components can also take advantage of these features.\nEach ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer"),", when created, creates an instance of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"DateLocalizer")," class, and each one has a normalized group of functions and props available for manipulating dates."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"add(date:Date, adder:number, unit:string) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"ceil(date:Date, unit:string) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"continuesAfter(start:Date, end:Date, last:Date) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"continuesPrior(start:Date, first:Date) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"diff(a:Date, b:Date, unit:string) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"endOf(date:Date, unit:string) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"eq(a:Date, b:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"firstVisibleDay(date:Date) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"format(value:Date, format:string) => string"),","),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"formats:object")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"getDstOffset(start:Date, end:Date) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"getMinutesFromMidnight(start:Date) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"getSlotDate(dt:Date, minutesFromMidnight:number, offset:number) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"getTimezoneOffset(date:Date) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"getTotalMin(start:Date, end:Date) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"gt(a:Date, b:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"gte(a:Date, b:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"inEventRange({event: {start:Date, end:Date}, range: {start:Date, end:Date}}) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"inRange(day:Date, start:Date, end:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"isSameDate(date1:Date, date2:Date) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"lastVisibleDay(date:Date) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"lt(a:Date, b:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"lte(a:Date, b:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"max(dateA:Date, dateB:Date) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"merge(date:Date, time:Date) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"min(dateA:Date, dateB:Date) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"minutes(date:Date) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"neq(a:Date, b:Date, unit:string) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"range(start:Date, end:Date, unit:string) => Array[Date]")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"sortEvents({evtA: {start:Date, end:Date, allDay:boolean}, evtB: {start:Date, end:Date, allDay:boolean}}) => number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"startAndEndAreDateOnly(start:Date, end:Date) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"startOf(date:Date, unit:string) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"startOfWeek(culture) => number")," (alias of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"firstOfWeek()"),")"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"visibleDays(date:Date) => Array[Date]"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Many of these methods are used by Big Calendar in the background for determining layout. You can create your own custom ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer"),", to utilize some other library, as long as they implement these methods. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"DateLocalizer")," class defaults these methods to methods from the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/date-arithmetic",target:"_blank",rel:"nofollow noopener noreferrer"},"date-arithmetic")," package."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"For examples of building your own custom ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer")," take a look at the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://github.com/jquense/react-big-calendar/blob/master/src/localizers",target:"_blank",rel:"nofollow noopener noreferrer"},"currently implemented localizers"),". If you do build your own ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"localizer"),", please consider publishing it to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("a",{parentName:"p",href:"https://npmjs.org",target:"_blank",rel:"nofollow noopener noreferrer"},"npm"),". We suggest a common naming convention like ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"rbc-addon-mylocalizername"),"."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Guides/Localizers",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./stories/props/API.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:function(){return __namedExportsOrder},__page:function(){return __page}});__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@storybook/addon-links/react.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.indexOf(n)>=0)continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.W8,{title:"props/Full Prop List",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h1",{id:"all-props"},"All Props"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"localizer"},"localizer"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"instanceOf(DateLocalizer)")," ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"li"},"required")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The localizer used for formatting dates and times according to the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"format")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"culture")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// When using `Globalize`\nimport { globalizeLocalizer } from 'react-big-calendar'\nimport globalize from 'globalize'\n\nconst localizer = globalizeLocalizer(globalize)\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// When using `moment`\nimport { momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n// and, for optional time zone support\nimport 'moment-timezone'\n\nmoment.tz.setDefault('America/Los_Angeles')\n// end optional time zone support\n\nconst localizer = momentLocalizer(moment)\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"// When using `Luxon`\nimport { luxonLocalizer } from 'react-big-calendar'\nimport { DateTime, Settings } from 'luxon'\n// only use `Settings` if you require optional time zone support\nSettings.defaultZone = 'America/Los_Angeles'\n// end optional time zone support\n\n// Luxon uses the Intl API, which currently does not contain `weekInfo`\n// to determine which weekday is the start of the week by `culture`.\n// The `luxonLocalizer` defaults this to Sunday, which differs from\n// the Luxon default of Monday. The localizer requires this option\n// to change the display, and the date math for determining the\n// start of a week. Luxon uses non-zero based values for `weekday`.\nconst localizer = luxonLocalizer(DateTime, { firstDayOfWeek: 7 })\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"elementprops"},"elementProps"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"object")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"element-props",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Props passed to main calendar ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"<div>"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," Will not pass down ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"className"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"getnow"},"getNow"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function () => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"() => new Date()")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"get-now",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines the current date/time which is highlighted in the views."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The value affects which day is shaded and which time is shown as the current time. It also affects the date used by the Today button in the toolbar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Providing a value here can be useful when you are implementing time zones using the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"start-accessor",mdxType:"LinkTo"},"startAccessor")," and ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"end-accessor",mdxType:"LinkTo"},"endAccessor")," properties."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"defaultdate"},"defaultDate"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"new Date()")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"default-date",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Sets the initial ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"date")," value in your calendar when you don't want it to be 'today', when not using ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"get-now",mdxType:"LinkTo"},"getNow"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"date"},"date"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"new Date()")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"controlled by: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-navigate",mdxType:"LinkTo"},"onNavigate")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"date",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The current date value of the calendar. Determines the visible view range.\nIf ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"date")," is omitted then the result of ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"get-now",mdxType:"LinkTo"},"getNow")," is used; otherwise the\ncurrent date is used."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"This is a controllable prop, when using ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-navigate",mdxType:"LinkTo"},"onNavigate")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onnavigate"},"onNavigate"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"controls: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"date",mdxType:"LinkTo"},"date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"example: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"(newDate) => setDate(newDate)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-navigate",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"date")," value changes. When included it is used to 'control' the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"date",mdxType:"LinkTo"},"date")," prop value."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"defaultview"},"defaultView"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Views.MONTH (month|week|work_week|day|agenda)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"default-view",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The initial ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")," set for your calendar when you don't want it to be the default ('month')."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"view"},"view"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Views.MONTH (month|week|work_week|day|agenda)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"controlled by: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-view",mdxType:"LinkTo"},"onView")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"view",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The current view value of the calendar. Determines the visible 'view'.\nIf ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")," is omitted then it is defaulted to 'month'."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"This is a controllable prop, when using ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-view",mdxType:"LinkTo"},"onView")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onview"},"onView"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: 'function'"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"controls: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"view",mdxType:"LinkTo"},"view")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"example: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"(newView) => setView(newView)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-view",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")," value changes. When included it is used to 'control' the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"view",mdxType:"LinkTo"},"view")," prop value."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"events"},"events"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"arrayOf(Event)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"[]")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"events",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"An array of event objects to display on the calendar. Event objects can be any shape, as long as the Calendar knows how to retrieve the following details of the event:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"start time"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"end time"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"title"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},'whether its an "all day" event or not'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"any resource the event may be related to")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Each of these properties can be customized or generated dynamically by setting the various "accessor" props. Without any configuration the default event should look like:'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"Event {\n  title: string,\n  start: Date,\n  end: Date,\n  allDay?: boolean\n  resource?: any,\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"backgroundevents"},"backgroundEvents"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"arrayOf(BackgroundEvent)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"[]")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"background-events",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"An array of background event objects to display on the calendar. Background Events behave similarly to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events")," but are not factored into Event overlap logic, allowing them to sit behind any Events that may occur during the same period. Background Events objects can be any shape, as long as the Calendar knows how to retrieve the following details of the event:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"start time"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"end time")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Each of these properties can be customized or generated dynamically by setting the various "accessor" props. Without any configuration the default event should look like:'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"BackgroundEvent {\n  start: Date,\n  end: Date,\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"titleaccessor"},"titleAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: 'title'"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"title-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Accessor for the event title, used to display event information. Should resolve to a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"renderable")," value."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"tooltipaccessor"},"tooltipAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: 'title'"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"tooltip-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Accessor for the event tooltip, used to display event information. Should resolve to a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"renderable")," value. Removes the tooltip if null."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"startaccessor"},"startAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: 'start'"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"start-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The start date/time of the event. Must resolve to a JavaScript ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Date")," object."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"endaccessor"},"endAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => Date")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: 'end'"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"end-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The end date/time of the event. Must resolve to a JavaScript ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Date")," object."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"alldayaccessor"},"allDayAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (event: Object) => boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: 'allDay'"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"all-day-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Determines whether the event should be considered an "all day" event and ignore time. Must resolve to a ',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"boolean")," value."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"alldaymaxrows"},"allDayMaxRows"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Infinity")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"all-day-max-rows",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines a maximum amount of rows of events to display in the all day section for Week and Day views, will display ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"showMore")," button if events excede this number."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"resources"},"resources"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"arrayOf(Resource)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"resources",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"An array of resource objects that map events to a specific resource. Resource objects, like events, can be any shape or have any properties, but should be uniquly identifiable via the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"resource-id-accessor",mdxType:"LinkTo"},"resourceIdAccessor"),', as well as a "title" or name as provided by the ',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"resource-title-accessor",mdxType:"LinkTo"},"resourceTitleAccessor")," prop."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"Resource {\n  id: string | number, // must be unique\n  title: string\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"resourceidaccessor"},"resourceIdAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (resource: Object) => string | number // must be unique")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"resource-id-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Provides a unique identifier, or an array of unique identifiers, for each resource in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"resources",mdxType:"LinkTo"},"resources")," array"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"resourcetitleaccessor"},"resourceTitleAccessor"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | function (resource: Object) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"resource-title-accessor",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Provides a human readable name for the resource object, used in headers."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"ondrilldown"},"onDrillDown"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date) => // do something")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-drill-down",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when date header, or the truncated events links are clicked. When included, it will override the default drilldown behavior."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onrangechange"},"onRangeChange"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (range: Array [1|7] | Object {start: Date, end: Date}) => // do something")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-range-change",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when the visible date range changes. Returns an Array of dates or an object with start and end dates for BUILTIN views."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Custom views may return something different."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"Note:")," This method is not fired on initial render. Only as the user navigates through Big Calendar."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"selectable"},"selectable"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean | 'ignoreEvents'")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Allows mouse selection of ranges of dates/times."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The 'ignoreEvents' option prevents selection code from running when a drag begins over an event. Useful when you want custom event click or drag logic."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"Things To Know:")," When you 'doubleClick', both 'click' and 'doubleClick' will fire. Click on the 'showCode' button, at the bottom of the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-select-slot",mdxType:"LinkTo"},"example"),", to see how you can get around this issue."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h2",{id:"onselectslot"},"onSelectSlot"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (Object: slotInfo) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"requires: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-select-slot",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A callback fired when a date selection is made. Only fires when ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," is true."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"Things To Know:")," When you 'doubleClick', both 'click' and 'doubleClick' will fire. Click on the 'showCode' button, at the bottom of the example below, to see how you can get around this issue."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},";(slotInfo: {\n  start: Date,\n  end: Date,\n  slots: Array<Date>,\n  action: 'select' | 'click' | 'doubleClick',\n  bounds: ?{\n    // For \"select\" action\n    x: number,\n    y: number,\n    top: number,\n    right: number,\n    left: number,\n    bottom: number,\n  },\n  box: ?{\n    // For \"click\" or \"doubleClick\" actions\n    clientX: number,\n    clientY: number,\n    x: number,\n    y: number,\n  },\n}) => any\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h4",{id:"whats-the-difference-from-onselecting"},"What's The Difference from onSelecting?"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"How is this different from ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-selecting",mdxType:"LinkTo"},"onSelecting"),"? That is a very good question. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelecting")," method is only available in the Time views (",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"week"),", ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"work week"),", ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"day"),"), whereas ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," is also available in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"month")," view. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelecting")," method allows you to 'cancel' your selection by returning ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"false"),". The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," method returns a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"slotInfo")," object, containing a lot of additional information about your selection."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onselectevent"},"onSelectEvent"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (event: Object) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-select-event",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when a calendar event is selected (i.e.: an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onClick")," handler)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," prop is ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"not")," required for this prop to function."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Important:")," The event passed into the function is the Calendar Event, not the SyntheticEvent expected by most click handlers."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"ondoubleclickevent"},"onDoubleClickEvent"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (event: Object) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-double-click-event",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when a calendar event is clicked twice. (i.e.: an ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onDoubleClick")," handler)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note:")," The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," prop is ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"not")," required for this prop to function."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Important:")," The event passed into the function is the Calendar Event, not the SyntheticEvent expected by most click handlers."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onselecting"},"onSelecting"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"(range: Object { start: Date, end: Date, resourceId: null|string|number }) => ?boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"requires: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-selecting",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when dragging a selection in the Time views. Only fires when ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selectable",mdxType:"LinkTo"},"selectable")," is true."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Returning ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"false")," from the handler will prevent a selection."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h4",{id:"whats-the-difference-from-onselectslot"},"What's The Difference from onSelectSlot?"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"How is this different from ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-select-slot",mdxType:"LinkTo"},"onSelectSlot"),"? That is a very good question. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelecting")," method is only available in the Time views (",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"week"),", ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"work week"),", ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"day"),"), whereas ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," is also available in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"month")," view. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelecting")," method allows you to 'cancel' your selection by returning ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"false"),". The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"onSelectSlot")," method returns a ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"slotInfo")," object, containing a lot of additional information about your selection."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onshowmore"},"onShowMore"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (events: Array[event: Object], date: Date) => any")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-show-more",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when a +{count} more is clicked. Receives ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"all")," of the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"events")," for the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"date")," on which it was selected."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"onkeypressevent"},"onKeyPressEvent"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (event: Object, e: SyntheticEvent) => void")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-key-press-event",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Callback fired when a focused calendar event receives a key press."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"showallevents"},"showAllEvents"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"false")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"show-all-events",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Displays all events on the month view instead of having some hidden behind +{count} more. This will cause the rows in the month view to be scrollable if the number of events exceed the height of the row."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h4",{id:"selected"},"selected"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Event: Object")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"selected",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The selected event, if any. By default, Big Calendar 'controls' the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"selected")," (highlighted) event in the display. You can use this prop to control which event is highlighted. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"selected")," event must be a object reference to the event within the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"events",mdxType:"LinkTo"},"events")," array."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Often used in conjunction with ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-select-event",mdxType:"LinkTo"},"OnSelectEvent")," and/or ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-double-click-event",mdxType:"LinkTo"},"onDoubleClickEvent"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"views"},"views"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Views ('month'|'week'|'work_week'|'day'|'agenda')")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"[views.MONTH, views.WEEK, views.DAY, views.AGENDA]")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"cal-views",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"An array of built-in view names to allow the calendar to display. accepts either an array of builtin view names,"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"views={['month', 'day', 'agenda']}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"or an object hash of the view name and the component (or boolean for builtin)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"views={{\n  month: true,\n  week: false,\n  myweek: WorkWeekViewComponent,\n}}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Custom views can be any React component, that implements the following interface:"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"interface View {\n  static title(date: Date, { formats: DateFormat[], culture: string?, ...props }): string\n  static navigate(date: Date, action: 'PREV' | 'NEXT' | 'DATE'): Date\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"drilldownview"},"drilldownView"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Views.DAY")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"drilldown-view",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The string name of the destination ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")," for drill-down actions, such as clicking a date header, or the truncated events links. If ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"getDrilldownView")," is also specified it will be used instead."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Set to ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"null")," to disable drill-down actions."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"getdrilldownview"},"getDrilldownView"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (targetDate: Date, currentViewName: string, configuredViewNames: Views[]) => string|null")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"get-drilldown-view",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Functionally equivalent to drilldownView, but accepts a function that can return a view name. It's useful for customizing the drill-down actions depending on the target date and triggering view."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Return null to disable drill-down actions."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"length"},"length"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"30")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"length",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines the end date from date prop in the agenda view date prop + length (in number of days) = end date."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"toolbar"},"toolbar"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"true")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"toolbar",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines whether the toolbar is displayed"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"popup"},"popup"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"true")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"popup",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Show truncated events in an overlay when you click the "+',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("em",{parentName:"p"},"x"),' more" link.'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"popupoffset"},"popupOffset"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"number|shape {x: number, y: number}")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"popup-offset",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Distance in pixels, from the edges of the viewport, the "show more" overlay should be positioned.'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"longpressthreshold"},"longPressThreshold"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"250")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"long-press-threshold",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Specifies the number of miliseconds the user must press and hold on the screen for a touch to be considered a "long press." Long presses are used for time slot selection on touch devices.'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"step"},"step"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"30")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"step",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines the selectable time increments in week and day views"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"timeslots"},"timeslots"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"number")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"timeslots",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'The number of slots per "section" in the time grid views. Adjust with ',(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"step",mdxType:"LinkTo"},"step")," to change the default of 1 hour long groups, with 30 minute slots."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"rtl"},"rtl"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"false")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"right-to-left",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Switch the calendar to a right-to-left read direction."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"eventpropgetter"},"eventPropGetter"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (event: Object, start: Date, end: Date, isSelected: boolean) => {className?: string, style?: Object}")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"event-prop-getter",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the the event node."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"slotpropgetter"},"slotPropGetter"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date) => {className?: string, style?: Object}")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"on-slot-prop-getter",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the the time-slot node."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Caution!")," Styles that change layout or position may break the calendar in unexpected ways."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"slotgrouppropgetter"},"slotGroupPropGetter"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (group: Date[]) => { style?: Object }")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"slot-group-prop-getter",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the time-slot node."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Caution! Styles that change layout or position may break the calendar in unexpected ways.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"daypropgetter"},"dayPropGetter"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date) => {className?: string, style?: Object}")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"day-prop-getter",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Optionally provide a function that returns an object of className or style props to be applied to the the day background."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Caution!")," Styles that change layout or position may break the calendar in unexpected ways."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"showmultidaytimes"},"showMultiDayTimes"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"boolean")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"false")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"show-multi-day-times",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Support to show multi-day events with specific start and end times in the main time grid (rather than in the all day header)."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note: This may cause calendars with several events to look very busy in the week and day views.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"min"},"min"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"new Date(1972, 0, 1, 0, 0, 0)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"min",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Constrains the minimum time of the Day and Week views."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"max"},"max"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"new Date(1972, 0, 1, 23, 59, 59)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"max",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Constrains the maximum time of the Day and Week views."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"scrolltotime"},"scrollToTime"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"instanceOf(Date)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"new Date()")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"scroll-to-time",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Determines how far down the scroll pane is initially scrolled down."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"culture"},"culture"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"none (browser default)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"culture",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Specify a specific culture code for the Calendar. The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"culture")," is used by ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"formats")," with your ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"localizer")," to 'format' date/time information on the Calendar. To localize messaging, use the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"messages")," prop."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("strong",{parentName:"p"},"Note: it's generally better to handle this globally via your i18n library.")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formats"},"formats"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Object")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"localizer",mdxType:"LinkTo"},"Localizer")," specific formats, tell the Calendar how to format and display dates and times.",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"The ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"format")," types are dependent on the configured localizer; both Moment and Globalize accept strings of tokens according to their own specification, such as: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"'DD mm yyyy'"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"const formats = useMemo(() => ({\n  dateFormat: 'dd',\n\n  dayFormat: (date, , localizer) =>\n    localizer.format(date, 'DDD', culture),\n\n  dayRangeHeaderFormat: ({ start, end }, culture, localizer) =>\n    localizer.format(start, { date: 'short' }, culture) + ' — ' +\n    localizer.format(end, { date: 'short' }, culture)\n}), [])\n\n<Calendar formats={formats} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsdateformat"},"formats.dateFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-date-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Format for the day of the month heading in the Month view. e.g. "01", "02", "03", etc'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsdayformat"},"formats.dayFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-day-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'A day of the week format for Week and Day headings, e.g. "Wed 01/04"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsweekdayformat"},"formats.weekdayFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-weekday-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Week day name format for the Month week day headings, e.g: "Sun", "Mon", "Tue", etc'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatstimegutterformat"},"formats.timeGutterFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-time-gutter-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'The timestamp cell formats in Week and Time views, e.g. "4:00 AM"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsmonthheaderformat"},"formats.monthHeaderFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-month-header-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Toolbar header format for the Month view, e.g "2015 April"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsdayrangeheaderformat"},"formats.dayRangeHeaderFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-day-range-header-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Toolbar header format for the Week views, e.g. "Mar 29 - Apr 04"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsdayheaderformat"},"formats.dayHeaderFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-day-header-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Toolbar header format for the Day view, e.g. "Wednesday Apr 01"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsagendaheaderformat"},"formats.agendaHeaderFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-agenda-header-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'Toolbar header format for the Agenda view, e.g. "4/1/2015 — 5/1/2015"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsselectrangeformat"},"formats.selectRangeFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-select-range-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,'A time range format shown in the highlighted area when selecting time slots, e.g "08:00 am — 12:00 pm"'),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsagendadateformat"},"formats.agendaDateFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-agenda-date-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Dates displayed in the gutter of the Agenda ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsagendatimeformat"},"formats.agendaTimeFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-agenda-time-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Time only (not range) displayed in the gutter of the Agenda ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatsagendatimerangeformat"},"formats.agendaTimeRangeFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-agenda-time-range-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Time range displayed in the gutter of the Agenda ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"view")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatseventtimerangeformat"},"formats.eventTimeRangeFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-event-time-range-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Time range displayed on events in Time Grid views."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatseventtimerangestartformat"},"formats.eventTimeRangeStartFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-event-time-range-start-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"An optional event time range for events that continue onto another day. Used with ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"show-multi-day-times",mdxType:"LinkTo"},"showMultiDayTimes"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"formatseventtimerangeendformat"},"formats.eventTimeRangeEndFormat"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"function (date: Date, culture: ?string, localizer: DateLocalizer) => string")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"formats-event-time-range-end-format",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"An optional event time range for events that continue onto another day. Used with ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"show-multi-day-times",mdxType:"LinkTo"},"showMultiDayTimes"),"."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"components"},"components"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"object")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"components",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"Customize how different sections of the calendar render by providing custom Components. In particular the Event component can be specified for the entire calendar, or you can provide an individual component for each view type."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"let components = useMemo({\n  event: MyEvent, // used by each view (Month, Day, Week)\n  toolbar: MyToolbar,\n  agenda: {\n       event: MyAgendaEvent // with the agenda view use a different component to render events\n  }\n}, [])\n<Calendar components={components} />\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"messages"},"messages"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"Object")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"messages",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"String messages used throughout the component, override to provide localizations for button text, ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"title")," attributes and more."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"defaults"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("pre",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("code",{parentName:"pre",className:"language-js"},"{\n  date: 'Date',\n  time: 'Time',\n  event: 'Event',\n  allDay: 'All Day',\n  week: 'Week',\n  work_week: 'Work Week',\n  day: 'Day',\n  month: 'Month',\n  previous: 'Back',\n  next: 'Next',\n  yesterday: 'Yesterday',\n  tomorrow: 'Tomorrow',\n  today: 'Today',\n  agenda: 'Agenda',\n\n  noEventsInRange: 'There are no events in this range.',\n\n  showMore: total => `+${total} more`,\n}\n")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("h3",{id:"daylayoutalgorithm"},"dayLayoutAlgorithm"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("ul",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"type: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"string | Function(events, minimumStartDifference, slotMetrics, accessors)")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},"default: ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"li"},"overlap")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("li",{parentName:"ul"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_5__.A,{kind:"props",story:"day-layout-algorithm",mdxType:"LinkTo"},"Example"))),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"A day event layout(arrangement) algorithm."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"overlap")," allows events to be overlapped."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"no-overlap")," resizes events to avoid overlap."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("p",null,"or custom ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)("inlineCode",{parentName:"p"},"Function(events, minimumStartDifference, slotMetrics, accessors)")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"props/Full Prop List",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_4__.hT,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__.yg)(MDXContent,null))}}),__webpack_exports__.default=componentMeta;var __namedExportsOrder=["__page"]},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/addons/dragAndDrop/styles.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.id,".rbc-addons-dnd .rbc-addons-dnd-row-body{position:relative}.rbc-addons-dnd .rbc-addons-dnd-drag-row{position:absolute;top:0;left:0;right:0}.rbc-addons-dnd .rbc-addons-dnd-over{background-color:rgba(0,0,0,.3)}.rbc-addons-dnd .rbc-event{transition:opacity 150ms}.rbc-addons-dnd .rbc-event:hover .rbc-addons-dnd-resize-ns-icon,.rbc-addons-dnd .rbc-event:hover .rbc-addons-dnd-resize-ew-icon{display:block}.rbc-addons-dnd .rbc-addons-dnd-dragged-event{opacity:0}.rbc-addons-dnd.rbc-addons-dnd-is-dragging .rbc-event:not(.rbc-addons-dnd-dragged-event):not(.rbc-addons-dnd-drag-preview){opacity:.5}.rbc-addons-dnd .rbc-addons-dnd-resizable{position:relative;width:100%;height:100%}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor{width:100%;text-align:center;position:absolute}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor:first-child{top:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor:last-child{bottom:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor .rbc-addons-dnd-resize-ns-icon{display:none;border-top:3px double;margin:0 auto;width:10px;cursor:ns-resize}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor{position:absolute;top:4px;bottom:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor:first-child{left:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor:last-child{right:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor .rbc-addons-dnd-resize-ew-icon{display:none;border-left:3px double;margin-top:auto;margin-bottom:auto;height:10px;cursor:ew-resize}",""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/styles.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.id,'.rbc-btn{color:inherit;font:inherit;margin:0}button.rbc-btn{overflow:visible;text-transform:none;appearance:button;cursor:pointer}button[disabled].rbc-btn{cursor:not-allowed}button.rbc-input::-moz-focus-inner{border:0;padding:0}.rbc-calendar{box-sizing:border-box;height:100%;display:flex;flex-direction:column;align-items:stretch}.rbc-m-b-negative-3{margin-bottom:-3px}.rbc-h-full{height:100%}.rbc-calendar *,.rbc-calendar *:before,.rbc-calendar *:after{box-sizing:inherit}.rbc-abs-full,.rbc-row-bg{overflow:hidden;position:absolute;top:0;left:0;right:0;bottom:0}.rbc-ellipsis,.rbc-show-more,.rbc-row-segment .rbc-event-content,.rbc-event-label{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.rbc-rtl{direction:rtl}.rbc-off-range{color:#999}.rbc-off-range-bg{background:#e6e6e6}.rbc-header{overflow:hidden;flex:1 0 0%;text-overflow:ellipsis;white-space:nowrap;padding:0 3px;text-align:center;vertical-align:middle;font-weight:bold;font-size:90%;min-height:0;border-bottom:1px solid #ddd}.rbc-header+.rbc-header{border-left:1px solid #ddd}.rbc-rtl .rbc-header+.rbc-header{border-left-width:0;border-right:1px solid #ddd}.rbc-header>a,.rbc-header>a:active,.rbc-header>a:visited{color:inherit;text-decoration:none}.rbc-button-link{color:inherit;background:none;margin:0;padding:0;border:none;cursor:pointer;user-select:text}.rbc-row-content{position:relative;user-select:none;-webkit-user-select:none;z-index:4}.rbc-row-content-scrollable{display:flex;flex-direction:column;height:100%}.rbc-row-content-scrollable .rbc-row-content-scroll-container{height:100%;overflow-y:scroll;-ms-overflow-style:none;scrollbar-width:none;-ms-overflow-style:none;scrollbar-width:none}.rbc-row-content-scrollable .rbc-row-content-scroll-container::-webkit-scrollbar{display:none}.rbc-today{background-color:#eaf6ff}.rbc-overlay{position:absolute;z-index:5;border:1px solid #e5e5e5;background-color:#fff;box-shadow:0 5px 15px rgba(0,0,0,.25);padding:10px}.rbc-overlay>*+*{margin-top:1px}.rbc-overlay-header{border-bottom:1px solid #e5e5e5;margin:-10px -10px 5px -10px;padding:2px 10px}.rbc-toolbar{display:flex;flex-wrap:wrap;justify-content:center;align-items:center;margin-bottom:10px;font-size:16px}.rbc-toolbar .rbc-toolbar-label{flex-grow:1;padding:0 10px;text-align:center}.rbc-toolbar button{color:#373a3c;display:inline-block;margin:0;text-align:center;vertical-align:middle;background:none;background-image:none;border:1px solid #ccc;padding:.375rem 1rem;border-radius:4px;line-height:normal;white-space:nowrap}.rbc-toolbar button:active,.rbc-toolbar button.rbc-active{background-image:none;box-shadow:inset 0 3px 5px rgba(0,0,0,.125);background-color:#e6e6e6;border-color:#adadad}.rbc-toolbar button:active:hover,.rbc-toolbar button:active:focus,.rbc-toolbar button.rbc-active:hover,.rbc-toolbar button.rbc-active:focus{color:#373a3c;background-color:#d4d4d4;border-color:#8c8c8c}.rbc-toolbar button:focus{color:#373a3c;background-color:#e6e6e6;border-color:#adadad}.rbc-toolbar button:hover{color:#373a3c;cursor:pointer;background-color:#e6e6e6;border-color:#adadad}.rbc-btn-group{display:inline-block;white-space:nowrap}.rbc-btn-group>button:first-child:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.rbc-btn-group>button:last-child:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.rbc-rtl .rbc-btn-group>button:first-child:not(:last-child){border-radius:4px;border-top-left-radius:0;border-bottom-left-radius:0}.rbc-rtl .rbc-btn-group>button:last-child:not(:first-child){border-radius:4px;border-top-right-radius:0;border-bottom-right-radius:0}.rbc-btn-group>button:not(:first-child):not(:last-child){border-radius:0}.rbc-btn-group button+button{margin-left:-1px}.rbc-rtl .rbc-btn-group button+button{margin-left:0;margin-right:-1px}.rbc-btn-group+.rbc-btn-group,.rbc-btn-group+button{margin-left:10px}@media(max-width: 767px){.rbc-toolbar{flex-direction:column}}.rbc-event,.rbc-day-slot .rbc-background-event{border:none;box-sizing:border-box;box-shadow:none;margin:0;padding:2px 5px;background-color:#3174ad;border-radius:5px;color:#fff;cursor:pointer;width:100%;text-align:left}.rbc-slot-selecting .rbc-event,.rbc-slot-selecting .rbc-day-slot .rbc-background-event,.rbc-day-slot .rbc-slot-selecting .rbc-background-event{cursor:inherit;pointer-events:none}.rbc-event.rbc-selected,.rbc-day-slot .rbc-selected.rbc-background-event{background-color:#265985}.rbc-event:focus,.rbc-day-slot .rbc-background-event:focus{outline:5px auto #3b99fc}.rbc-event-label{font-size:80%}.rbc-event-overlaps{box-shadow:-1px 1px 5px 0px rgba(51,51,51,.5)}.rbc-event-continues-prior{border-top-left-radius:0;border-bottom-left-radius:0}.rbc-event-continues-after{border-top-right-radius:0;border-bottom-right-radius:0}.rbc-event-continues-earlier{border-top-left-radius:0;border-top-right-radius:0}.rbc-event-continues-later{border-bottom-left-radius:0;border-bottom-right-radius:0}.rbc-row{display:flex;flex-direction:row}.rbc-row-segment{padding:0 1px 1px 1px}.rbc-selected-cell{background-color:rgba(0,0,0,.1)}.rbc-show-more{background-color:rgba(255,255,255,.3);z-index:4;font-weight:bold;font-size:85%;height:auto;line-height:normal;color:#3174ad}.rbc-show-more:hover,.rbc-show-more:focus{color:#265985}.rbc-month-view{position:relative;border:1px solid #ddd;display:flex;flex-direction:column;flex:1 0 0;width:100%;user-select:none;-webkit-user-select:none;height:100%}.rbc-month-header{display:flex;flex-direction:row}.rbc-month-row{display:flex;position:relative;flex-direction:column;flex:1 0 0;flex-basis:0px;overflow:hidden;height:100%}.rbc-month-row+.rbc-month-row{border-top:1px solid #ddd}.rbc-date-cell{flex:1 1 0;min-width:0;padding-right:5px;text-align:right}.rbc-date-cell.rbc-now{font-weight:bold}.rbc-date-cell>a,.rbc-date-cell>a:active,.rbc-date-cell>a:visited{color:inherit;text-decoration:none}.rbc-row-bg{display:flex;flex-direction:row;flex:1 0 0;overflow:hidden;right:1px}.rbc-day-bg{flex:1 0 0%}.rbc-day-bg+.rbc-day-bg{border-left:1px solid #ddd}.rbc-rtl .rbc-day-bg+.rbc-day-bg{border-left-width:0;border-right:1px solid #ddd}.rbc-agenda-view{display:flex;flex-direction:column;flex:1 0 0;overflow:auto}.rbc-agenda-view table.rbc-agenda-table{width:100%;border:1px solid #ddd;border-spacing:0;border-collapse:collapse}.rbc-agenda-view table.rbc-agenda-table tbody>tr>td{padding:5px 10px;vertical-align:top}.rbc-agenda-view table.rbc-agenda-table .rbc-agenda-time-cell{padding-left:15px;padding-right:15px;text-transform:lowercase}.rbc-agenda-view table.rbc-agenda-table tbody>tr>td+td{border-left:1px solid #ddd}.rbc-rtl .rbc-agenda-view table.rbc-agenda-table tbody>tr>td+td{border-left-width:0;border-right:1px solid #ddd}.rbc-agenda-view table.rbc-agenda-table tbody>tr+tr{border-top:1px solid #ddd}.rbc-agenda-view table.rbc-agenda-table thead>tr>th{padding:3px 5px;text-align:left;border-bottom:1px solid #ddd}.rbc-rtl .rbc-agenda-view table.rbc-agenda-table thead>tr>th{text-align:right}.rbc-agenda-time-cell{text-transform:lowercase}.rbc-agenda-time-cell .rbc-continues-after:after{content:" »"}.rbc-agenda-time-cell .rbc-continues-prior:before{content:"« "}.rbc-agenda-date-cell,.rbc-agenda-time-cell{white-space:nowrap}.rbc-agenda-event-cell{width:100%}.rbc-time-column{display:flex;flex-direction:column;min-height:100%}.rbc-time-column .rbc-timeslot-group{flex:1}.rbc-timeslot-group{border-bottom:1px solid #ddd;min-height:40px;display:flex;flex-flow:column nowrap}.rbc-time-gutter,.rbc-header-gutter{flex:none}.rbc-label{padding:0 5px}.rbc-day-slot{position:relative}.rbc-day-slot .rbc-events-container{bottom:0;left:0;position:absolute;right:0;margin-right:10px;top:0}.rbc-day-slot .rbc-events-container.rbc-rtl{left:10px;right:0}.rbc-day-slot .rbc-event,.rbc-day-slot .rbc-background-event{border:1px solid #265985;display:flex;max-height:100%;min-height:20px;flex-flow:column wrap;align-items:flex-start;overflow:hidden;position:absolute}.rbc-day-slot .rbc-background-event{opacity:.75}.rbc-day-slot .rbc-event-label{flex:none;padding-right:5px;width:auto}.rbc-day-slot .rbc-event-content{width:100%;flex:1 1 0;word-wrap:break-word;line-height:1;height:100%;min-height:1em}.rbc-day-slot .rbc-time-slot{border-top:1px solid #f7f7f7}.rbc-time-view-resources .rbc-time-gutter,.rbc-time-view-resources .rbc-time-header-gutter{position:sticky;left:0;background-color:#fff;border-right:1px solid #ddd;z-index:10;margin-right:-1px}.rbc-time-view-resources .rbc-time-header{overflow:hidden}.rbc-time-view-resources .rbc-time-header-content{min-width:auto;flex:1 0 0;flex-basis:0px}.rbc-time-view-resources .rbc-time-header-cell-single-day{display:none}.rbc-time-view-resources .rbc-day-slot{min-width:140px}.rbc-time-view-resources .rbc-header,.rbc-time-view-resources .rbc-day-bg{width:140px;flex:1 1 0;flex-basis:0 px}.rbc-time-header-content+.rbc-time-header-content{margin-left:-1px}.rbc-time-slot{flex:1 0 0}.rbc-time-slot.rbc-now{font-weight:bold}.rbc-day-header{text-align:center}.rbc-slot-selection{z-index:10;position:absolute;background-color:rgba(0,0,0,.5);color:#fff;font-size:75%;width:100%;padding:3px}.rbc-slot-selecting{cursor:move}.rbc-time-view{display:flex;flex-direction:column;flex:1;width:100%;border:1px solid #ddd;min-height:0}.rbc-time-view .rbc-time-gutter{white-space:nowrap;text-align:right}.rbc-time-view .rbc-allday-cell{box-sizing:content-box;width:100%;height:100%;position:relative}.rbc-time-view .rbc-allday-cell+.rbc-allday-cell{border-left:1px solid #ddd}.rbc-time-view .rbc-allday-events{position:relative;z-index:4}.rbc-time-view .rbc-row{box-sizing:border-box;min-height:20px}.rbc-time-header{display:flex;flex:0 0 auto;flex-direction:row}.rbc-time-header.rbc-overflowing{border-right:1px solid #ddd}.rbc-rtl .rbc-time-header.rbc-overflowing{border-right-width:0;border-left:1px solid #ddd}.rbc-time-header>.rbc-row:first-child{border-bottom:1px solid #ddd}.rbc-time-header>.rbc-row.rbc-row-resource{border-bottom:1px solid #ddd}.rbc-time-header-cell-single-day{display:none}.rbc-time-header-content{flex:1;display:flex;min-width:0;flex-direction:column;border-left:1px solid #ddd}.rbc-rtl .rbc-time-header-content{border-left-width:0;border-right:1px solid #ddd}.rbc-time-header-content>.rbc-row.rbc-row-resource{border-bottom:1px solid #ddd;flex-shrink:0}.rbc-time-content{display:flex;flex:1 0 0%;align-items:flex-start;width:100%;border-top:2px solid #ddd;overflow-y:auto;position:relative}.rbc-time-content>.rbc-time-gutter{flex:none}.rbc-time-content>*+*>*{border-left:1px solid #ddd}.rbc-rtl .rbc-time-content>*+*>*{border-left-width:0;border-right:1px solid #ddd}.rbc-time-content>.rbc-day-slot{width:100%;user-select:none;-webkit-user-select:none}.rbc-current-time-indicator{position:absolute;z-index:3;left:0;right:0;height:1px;background-color:#74ad31;pointer-events:none}.rbc-resource-grouping.rbc-time-header-content{display:flex;flex-direction:column}.rbc-resource-grouping .rbc-row .rbc-header{width:141px}',""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/resources/customToolbar.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.id,".examples--custom-toolbar button{font-weight:600;font-size:1rem}",""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/resources/main.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.id,'.rbc-btn{color:inherit;font:inherit;margin:0}button.rbc-btn{overflow:visible;text-transform:none;appearance:button;cursor:pointer}button[disabled].rbc-btn{cursor:not-allowed}button.rbc-input::-moz-focus-inner{border:0;padding:0}.rbc-calendar{box-sizing:border-box;height:100%;display:flex;flex-direction:column;align-items:stretch}.rbc-m-b-negative-3{margin-bottom:-3px}.rbc-h-full{height:100%}.rbc-calendar *,.rbc-calendar *:before,.rbc-calendar *:after{box-sizing:inherit}.rbc-abs-full,.rbc-row-bg{overflow:hidden;position:absolute;top:0;left:0;right:0;bottom:0}.rbc-ellipsis,.rbc-show-more,.rbc-row-segment .rbc-event-content,.rbc-event-label{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.rbc-rtl{direction:rtl}.rbc-off-range{color:#999}.rbc-off-range-bg{background:#e6e6e6}.rbc-header{overflow:hidden;flex:1 0 0%;text-overflow:ellipsis;white-space:nowrap;padding:0 3px;text-align:center;vertical-align:middle;font-weight:bold;font-size:90%;min-height:0;border-bottom:1px solid #ddd}.rbc-header+.rbc-header{border-left:1px solid #ddd}.rbc-rtl .rbc-header+.rbc-header{border-left-width:0;border-right:1px solid #ddd}.rbc-header>a,.rbc-header>a:active,.rbc-header>a:visited{color:inherit;text-decoration:none}.rbc-button-link{color:inherit;background:none;margin:0;padding:0;border:none;cursor:pointer;user-select:text}.rbc-row-content{position:relative;user-select:none;-webkit-user-select:none;z-index:4}.rbc-row-content-scrollable{display:flex;flex-direction:column;height:100%}.rbc-row-content-scrollable .rbc-row-content-scroll-container{height:100%;overflow-y:scroll;-ms-overflow-style:none;scrollbar-width:none;-ms-overflow-style:none;scrollbar-width:none}.rbc-row-content-scrollable .rbc-row-content-scroll-container::-webkit-scrollbar{display:none}.rbc-today{background-color:#eaf6ff}.rbc-overlay{position:absolute;z-index:5;border:1px solid #e5e5e5;background-color:#fff;box-shadow:0 5px 15px rgba(0,0,0,.25);padding:10px}.rbc-overlay>*+*{margin-top:1px}.rbc-overlay-header{border-bottom:1px solid #e5e5e5;margin:-10px -10px 5px -10px;padding:2px 10px}.rbc-toolbar{display:flex;flex-wrap:wrap;justify-content:center;align-items:center;margin-bottom:10px;font-size:16px}.rbc-toolbar .rbc-toolbar-label{flex-grow:1;padding:0 10px;text-align:center}.rbc-toolbar button{color:#373a3c;display:inline-block;margin:0;text-align:center;vertical-align:middle;background:none;background-image:none;border:1px solid #ccc;padding:.375rem 1rem;border-radius:4px;line-height:normal;white-space:nowrap}.rbc-toolbar button:active,.rbc-toolbar button.rbc-active{background-image:none;box-shadow:inset 0 3px 5px rgba(0,0,0,.125);background-color:#e6e6e6;border-color:#adadad}.rbc-toolbar button:active:hover,.rbc-toolbar button:active:focus,.rbc-toolbar button.rbc-active:hover,.rbc-toolbar button.rbc-active:focus{color:#373a3c;background-color:#d4d4d4;border-color:#8c8c8c}.rbc-toolbar button:focus{color:#373a3c;background-color:#e6e6e6;border-color:#adadad}.rbc-toolbar button:hover{color:#373a3c;cursor:pointer;background-color:#e6e6e6;border-color:#adadad}.rbc-btn-group{display:inline-block;white-space:nowrap}.rbc-btn-group>button:first-child:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.rbc-btn-group>button:last-child:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.rbc-rtl .rbc-btn-group>button:first-child:not(:last-child){border-radius:4px;border-top-left-radius:0;border-bottom-left-radius:0}.rbc-rtl .rbc-btn-group>button:last-child:not(:first-child){border-radius:4px;border-top-right-radius:0;border-bottom-right-radius:0}.rbc-btn-group>button:not(:first-child):not(:last-child){border-radius:0}.rbc-btn-group button+button{margin-left:-1px}.rbc-rtl .rbc-btn-group button+button{margin-left:0;margin-right:-1px}.rbc-btn-group+.rbc-btn-group,.rbc-btn-group+button{margin-left:10px}@media(max-width: 767px){.rbc-toolbar{flex-direction:column}}.rbc-event,.rbc-day-slot .rbc-background-event{border:none;box-sizing:border-box;box-shadow:none;margin:0;padding:2px 5px;background-color:#3174ad;border-radius:5px;color:#fff;cursor:pointer;width:100%;text-align:left}.rbc-slot-selecting .rbc-event,.rbc-slot-selecting .rbc-day-slot .rbc-background-event,.rbc-day-slot .rbc-slot-selecting .rbc-background-event{cursor:inherit;pointer-events:none}.rbc-event.rbc-selected,.rbc-day-slot .rbc-selected.rbc-background-event{background-color:#265985}.rbc-event:focus,.rbc-day-slot .rbc-background-event:focus{outline:5px auto #3b99fc}.rbc-event-label{font-size:80%}.rbc-event-overlaps{box-shadow:-1px 1px 5px 0px rgba(51,51,51,.5)}.rbc-event-continues-prior{border-top-left-radius:0;border-bottom-left-radius:0}.rbc-event-continues-after{border-top-right-radius:0;border-bottom-right-radius:0}.rbc-event-continues-earlier{border-top-left-radius:0;border-top-right-radius:0}.rbc-event-continues-later{border-bottom-left-radius:0;border-bottom-right-radius:0}.rbc-row{display:flex;flex-direction:row}.rbc-row-segment{padding:0 1px 1px 1px}.rbc-selected-cell{background-color:rgba(0,0,0,.1)}.rbc-show-more{background-color:rgba(255,255,255,.3);z-index:4;font-weight:bold;font-size:85%;height:auto;line-height:normal;color:#3174ad}.rbc-show-more:hover,.rbc-show-more:focus{color:#265985}.rbc-month-view{position:relative;border:1px solid #ddd;display:flex;flex-direction:column;flex:1 0 0;width:100%;user-select:none;-webkit-user-select:none;height:100%}.rbc-month-header{display:flex;flex-direction:row}.rbc-month-row{display:flex;position:relative;flex-direction:column;flex:1 0 0;flex-basis:0px;overflow:hidden;height:100%}.rbc-month-row+.rbc-month-row{border-top:1px solid #ddd}.rbc-date-cell{flex:1 1 0;min-width:0;padding-right:5px;text-align:right}.rbc-date-cell.rbc-now{font-weight:bold}.rbc-date-cell>a,.rbc-date-cell>a:active,.rbc-date-cell>a:visited{color:inherit;text-decoration:none}.rbc-row-bg{display:flex;flex-direction:row;flex:1 0 0;overflow:hidden;right:1px}.rbc-day-bg{flex:1 0 0%}.rbc-day-bg+.rbc-day-bg{border-left:1px solid #ddd}.rbc-rtl .rbc-day-bg+.rbc-day-bg{border-left-width:0;border-right:1px solid #ddd}.rbc-agenda-view{display:flex;flex-direction:column;flex:1 0 0;overflow:auto}.rbc-agenda-view table.rbc-agenda-table{width:100%;border:1px solid #ddd;border-spacing:0;border-collapse:collapse}.rbc-agenda-view table.rbc-agenda-table tbody>tr>td{padding:5px 10px;vertical-align:top}.rbc-agenda-view table.rbc-agenda-table .rbc-agenda-time-cell{padding-left:15px;padding-right:15px;text-transform:lowercase}.rbc-agenda-view table.rbc-agenda-table tbody>tr>td+td{border-left:1px solid #ddd}.rbc-rtl .rbc-agenda-view table.rbc-agenda-table tbody>tr>td+td{border-left-width:0;border-right:1px solid #ddd}.rbc-agenda-view table.rbc-agenda-table tbody>tr+tr{border-top:1px solid #ddd}.rbc-agenda-view table.rbc-agenda-table thead>tr>th{padding:3px 5px;text-align:left;border-bottom:1px solid #ddd}.rbc-rtl .rbc-agenda-view table.rbc-agenda-table thead>tr>th{text-align:right}.rbc-agenda-time-cell{text-transform:lowercase}.rbc-agenda-time-cell .rbc-continues-after:after{content:" »"}.rbc-agenda-time-cell .rbc-continues-prior:before{content:"« "}.rbc-agenda-date-cell,.rbc-agenda-time-cell{white-space:nowrap}.rbc-agenda-event-cell{width:100%}.rbc-time-column{display:flex;flex-direction:column;min-height:100%}.rbc-time-column .rbc-timeslot-group{flex:1}.rbc-timeslot-group{border-bottom:1px solid #ddd;min-height:40px;display:flex;flex-flow:column nowrap}.rbc-time-gutter,.rbc-header-gutter{flex:none}.rbc-label{padding:0 5px}.rbc-day-slot{position:relative}.rbc-day-slot .rbc-events-container{bottom:0;left:0;position:absolute;right:0;margin-right:10px;top:0}.rbc-day-slot .rbc-events-container.rbc-rtl{left:10px;right:0}.rbc-day-slot .rbc-event,.rbc-day-slot .rbc-background-event{border:1px solid #265985;display:flex;max-height:100%;min-height:20px;flex-flow:column wrap;align-items:flex-start;overflow:hidden;position:absolute}.rbc-day-slot .rbc-background-event{opacity:.75}.rbc-day-slot .rbc-event-label{flex:none;padding-right:5px;width:auto}.rbc-day-slot .rbc-event-content{width:100%;flex:1 1 0;word-wrap:break-word;line-height:1;height:100%;min-height:1em}.rbc-day-slot .rbc-time-slot{border-top:1px solid #f7f7f7}.rbc-time-view-resources .rbc-time-gutter,.rbc-time-view-resources .rbc-time-header-gutter{position:sticky;left:0;background-color:#fff;border-right:1px solid #ddd;z-index:10;margin-right:-1px}.rbc-time-view-resources .rbc-time-header{overflow:hidden}.rbc-time-view-resources .rbc-time-header-content{min-width:auto;flex:1 0 0;flex-basis:0px}.rbc-time-view-resources .rbc-time-header-cell-single-day{display:none}.rbc-time-view-resources .rbc-day-slot{min-width:140px}.rbc-time-view-resources .rbc-header,.rbc-time-view-resources .rbc-day-bg{width:140px;flex:1 1 0;flex-basis:0 px}.rbc-time-header-content+.rbc-time-header-content{margin-left:-1px}.rbc-time-slot{flex:1 0 0}.rbc-time-slot.rbc-now{font-weight:bold}.rbc-day-header{text-align:center}.rbc-slot-selection{z-index:10;position:absolute;background-color:rgba(0,0,0,.5);color:#fff;font-size:75%;width:100%;padding:3px}.rbc-slot-selecting{cursor:move}.rbc-time-view{display:flex;flex-direction:column;flex:1;width:100%;border:1px solid #ddd;min-height:0}.rbc-time-view .rbc-time-gutter{white-space:nowrap;text-align:right}.rbc-time-view .rbc-allday-cell{box-sizing:content-box;width:100%;height:100%;position:relative}.rbc-time-view .rbc-allday-cell+.rbc-allday-cell{border-left:1px solid #ddd}.rbc-time-view .rbc-allday-events{position:relative;z-index:4}.rbc-time-view .rbc-row{box-sizing:border-box;min-height:20px}.rbc-time-header{display:flex;flex:0 0 auto;flex-direction:row}.rbc-time-header.rbc-overflowing{border-right:1px solid #ddd}.rbc-rtl .rbc-time-header.rbc-overflowing{border-right-width:0;border-left:1px solid #ddd}.rbc-time-header>.rbc-row:first-child{border-bottom:1px solid #ddd}.rbc-time-header>.rbc-row.rbc-row-resource{border-bottom:1px solid #ddd}.rbc-time-header-cell-single-day{display:none}.rbc-time-header-content{flex:1;display:flex;min-width:0;flex-direction:column;border-left:1px solid #ddd}.rbc-rtl .rbc-time-header-content{border-left-width:0;border-right:1px solid #ddd}.rbc-time-header-content>.rbc-row.rbc-row-resource{border-bottom:1px solid #ddd;flex-shrink:0}.rbc-time-content{display:flex;flex:1 0 0%;align-items:flex-start;width:100%;border-top:2px solid #ddd;overflow-y:auto;position:relative}.rbc-time-content>.rbc-time-gutter{flex:none}.rbc-time-content>*+*>*{border-left:1px solid #ddd}.rbc-rtl .rbc-time-content>*+*>*{border-left-width:0;border-right:1px solid #ddd}.rbc-time-content>.rbc-day-slot{width:100%;user-select:none;-webkit-user-select:none}.rbc-current-time-indicator{position:absolute;z-index:3;left:0;right:0;height:1px;background-color:#74ad31;pointer-events:none}.rbc-resource-grouping.rbc-time-header-content{display:flex;flex-direction:column}.rbc-resource-grouping .rbc-row .rbc-header{width:141px}.rbc-addons-dnd .rbc-addons-dnd-row-body{position:relative}.rbc-addons-dnd .rbc-addons-dnd-drag-row{position:absolute;top:0;left:0;right:0}.rbc-addons-dnd .rbc-addons-dnd-over{background-color:rgba(0,0,0,.3)}.rbc-addons-dnd .rbc-event,.rbc-addons-dnd .rbc-day-slot .rbc-background-event,.rbc-day-slot .rbc-addons-dnd .rbc-background-event{transition:opacity 150ms}.rbc-addons-dnd .rbc-event:hover .rbc-addons-dnd-resize-ns-icon,.rbc-addons-dnd .rbc-day-slot .rbc-background-event:hover .rbc-addons-dnd-resize-ns-icon,.rbc-day-slot .rbc-addons-dnd .rbc-background-event:hover .rbc-addons-dnd-resize-ns-icon,.rbc-addons-dnd .rbc-event:hover .rbc-addons-dnd-resize-ew-icon,.rbc-addons-dnd .rbc-day-slot .rbc-background-event:hover .rbc-addons-dnd-resize-ew-icon,.rbc-day-slot .rbc-addons-dnd .rbc-background-event:hover .rbc-addons-dnd-resize-ew-icon{display:block}.rbc-addons-dnd .rbc-addons-dnd-dragged-event{opacity:0}.rbc-addons-dnd.rbc-addons-dnd-is-dragging .rbc-event:not(.rbc-addons-dnd-dragged-event):not(.rbc-addons-dnd-drag-preview),.rbc-addons-dnd.rbc-addons-dnd-is-dragging .rbc-day-slot .rbc-background-event:not(.rbc-addons-dnd-dragged-event):not(.rbc-addons-dnd-drag-preview),.rbc-day-slot .rbc-addons-dnd.rbc-addons-dnd-is-dragging .rbc-background-event:not(.rbc-addons-dnd-dragged-event):not(.rbc-addons-dnd-drag-preview){opacity:.5}.rbc-addons-dnd .rbc-addons-dnd-resizable{position:relative;width:100%;height:100%}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor{width:100%;text-align:center;position:absolute}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor:first-child{top:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor:last-child{bottom:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ns-anchor .rbc-addons-dnd-resize-ns-icon{display:none;border-top:3px double;margin:0 auto;width:10px;cursor:ns-resize}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor{position:absolute;top:4px;bottom:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor:first-child{left:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor:last-child{right:0}.rbc-addons-dnd .rbc-addons-dnd-resize-ew-anchor .rbc-addons-dnd-resize-ew-icon{display:none;border-left:3px double;margin-top:auto;margin-bottom:auto;height:10px;cursor:ew-resize}.height600{position:relative;height:600px}.examples--header,.dndOutsideSourceExample{margin:0 40px;text-align:center}.dndOutsideSourceExample{display:flex}.dndOutsideSourceExample>.inner{display:flex;flex:1;justify-content:center;flex-wrap:wrap}.dndOutsideSourceExample>.inner h4{color:gray;width:100%}.dndOutsideSourceExample>.inner div[draggable]{display:flex;align-items:center;justify-content:center;border:2px solid gray;border-radius:4px;width:100px;margin:10px;cursor:grab}.dndOutsideSourceExample>.inner input[type=checkbox]{margin-right:5px}.card{background-color:#fff;border:0;padding:24px;border-radius:2px;margin-bottom:20px;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)}.isDraggable{cursor:grab !important}.nonDraggable,.nonResizable{background-color:#bed7ec !important;color:#000 !important}',""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/resources/propGetter.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.id,'.powderBlue,#my_scheduler,.tuesday{background-color:#b0e0e6;color:#000}.darkGreen{background-color:#006400;color:#fff}.slotDefault{background-color:"#FAF0E6";color:"black"}#my_scheduler{padding:.5em;border:1px solid blue}',""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./node_modules/sass-loader/dist/cjs.js!./stories/demos/exampleCode/rendering.module.scss":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.id,".rendering-module__specialDay--3nNWi{background-color:#fec}",""]),exports.locals={specialDay:"rendering-module__specialDay--3nNWi"},module.exports=exports},"./node_modules/moment/locale sync recursive ^\\.\\/.*$":function(module,__unused_webpack_exports,__webpack_require__){var map={"./af":"./node_modules/moment/locale/af.js","./af.js":"./node_modules/moment/locale/af.js","./ar":"./node_modules/moment/locale/ar.js","./ar-dz":"./node_modules/moment/locale/ar-dz.js","./ar-dz.js":"./node_modules/moment/locale/ar-dz.js","./ar-kw":"./node_modules/moment/locale/ar-kw.js","./ar-kw.js":"./node_modules/moment/locale/ar-kw.js","./ar-ly":"./node_modules/moment/locale/ar-ly.js","./ar-ly.js":"./node_modules/moment/locale/ar-ly.js","./ar-ma":"./node_modules/moment/locale/ar-ma.js","./ar-ma.js":"./node_modules/moment/locale/ar-ma.js","./ar-ps":"./node_modules/moment/locale/ar-ps.js","./ar-ps.js":"./node_modules/moment/locale/ar-ps.js","./ar-sa":"./node_modules/moment/locale/ar-sa.js","./ar-sa.js":"./node_modules/moment/locale/ar-sa.js","./ar-tn":"./node_modules/moment/locale/ar-tn.js","./ar-tn.js":"./node_modules/moment/locale/ar-tn.js","./ar.js":"./node_modules/moment/locale/ar.js","./az":"./node_modules/moment/locale/az.js","./az.js":"./node_modules/moment/locale/az.js","./be":"./node_modules/moment/locale/be.js","./be.js":"./node_modules/moment/locale/be.js","./bg":"./node_modules/moment/locale/bg.js","./bg.js":"./node_modules/moment/locale/bg.js","./bm":"./node_modules/moment/locale/bm.js","./bm.js":"./node_modules/moment/locale/bm.js","./bn":"./node_modules/moment/locale/bn.js","./bn-bd":"./node_modules/moment/locale/bn-bd.js","./bn-bd.js":"./node_modules/moment/locale/bn-bd.js","./bn.js":"./node_modules/moment/locale/bn.js","./bo":"./node_modules/moment/locale/bo.js","./bo.js":"./node_modules/moment/locale/bo.js","./br":"./node_modules/moment/locale/br.js","./br.js":"./node_modules/moment/locale/br.js","./bs":"./node_modules/moment/locale/bs.js","./bs.js":"./node_modules/moment/locale/bs.js","./ca":"./node_modules/moment/locale/ca.js","./ca.js":"./node_modules/moment/locale/ca.js","./cs":"./node_modules/moment/locale/cs.js","./cs.js":"./node_modules/moment/locale/cs.js","./cv":"./node_modules/moment/locale/cv.js","./cv.js":"./node_modules/moment/locale/cv.js","./cy":"./node_modules/moment/locale/cy.js","./cy.js":"./node_modules/moment/locale/cy.js","./da":"./node_modules/moment/locale/da.js","./da.js":"./node_modules/moment/locale/da.js","./de":"./node_modules/moment/locale/de.js","./de-at":"./node_modules/moment/locale/de-at.js","./de-at.js":"./node_modules/moment/locale/de-at.js","./de-ch":"./node_modules/moment/locale/de-ch.js","./de-ch.js":"./node_modules/moment/locale/de-ch.js","./de.js":"./node_modules/moment/locale/de.js","./dv":"./node_modules/moment/locale/dv.js","./dv.js":"./node_modules/moment/locale/dv.js","./el":"./node_modules/moment/locale/el.js","./el.js":"./node_modules/moment/locale/el.js","./en-au":"./node_modules/moment/locale/en-au.js","./en-au.js":"./node_modules/moment/locale/en-au.js","./en-ca":"./node_modules/moment/locale/en-ca.js","./en-ca.js":"./node_modules/moment/locale/en-ca.js","./en-gb":"./node_modules/moment/locale/en-gb.js","./en-gb.js":"./node_modules/moment/locale/en-gb.js","./en-ie":"./node_modules/moment/locale/en-ie.js","./en-ie.js":"./node_modules/moment/locale/en-ie.js","./en-il":"./node_modules/moment/locale/en-il.js","./en-il.js":"./node_modules/moment/locale/en-il.js","./en-in":"./node_modules/moment/locale/en-in.js","./en-in.js":"./node_modules/moment/locale/en-in.js","./en-nz":"./node_modules/moment/locale/en-nz.js","./en-nz.js":"./node_modules/moment/locale/en-nz.js","./en-sg":"./node_modules/moment/locale/en-sg.js","./en-sg.js":"./node_modules/moment/locale/en-sg.js","./eo":"./node_modules/moment/locale/eo.js","./eo.js":"./node_modules/moment/locale/eo.js","./es":"./node_modules/moment/locale/es.js","./es-do":"./node_modules/moment/locale/es-do.js","./es-do.js":"./node_modules/moment/locale/es-do.js","./es-mx":"./node_modules/moment/locale/es-mx.js","./es-mx.js":"./node_modules/moment/locale/es-mx.js","./es-us":"./node_modules/moment/locale/es-us.js","./es-us.js":"./node_modules/moment/locale/es-us.js","./es.js":"./node_modules/moment/locale/es.js","./et":"./node_modules/moment/locale/et.js","./et.js":"./node_modules/moment/locale/et.js","./eu":"./node_modules/moment/locale/eu.js","./eu.js":"./node_modules/moment/locale/eu.js","./fa":"./node_modules/moment/locale/fa.js","./fa.js":"./node_modules/moment/locale/fa.js","./fi":"./node_modules/moment/locale/fi.js","./fi.js":"./node_modules/moment/locale/fi.js","./fil":"./node_modules/moment/locale/fil.js","./fil.js":"./node_modules/moment/locale/fil.js","./fo":"./node_modules/moment/locale/fo.js","./fo.js":"./node_modules/moment/locale/fo.js","./fr":"./node_modules/moment/locale/fr.js","./fr-ca":"./node_modules/moment/locale/fr-ca.js","./fr-ca.js":"./node_modules/moment/locale/fr-ca.js","./fr-ch":"./node_modules/moment/locale/fr-ch.js","./fr-ch.js":"./node_modules/moment/locale/fr-ch.js","./fr.js":"./node_modules/moment/locale/fr.js","./fy":"./node_modules/moment/locale/fy.js","./fy.js":"./node_modules/moment/locale/fy.js","./ga":"./node_modules/moment/locale/ga.js","./ga.js":"./node_modules/moment/locale/ga.js","./gd":"./node_modules/moment/locale/gd.js","./gd.js":"./node_modules/moment/locale/gd.js","./gl":"./node_modules/moment/locale/gl.js","./gl.js":"./node_modules/moment/locale/gl.js","./gom-deva":"./node_modules/moment/locale/gom-deva.js","./gom-deva.js":"./node_modules/moment/locale/gom-deva.js","./gom-latn":"./node_modules/moment/locale/gom-latn.js","./gom-latn.js":"./node_modules/moment/locale/gom-latn.js","./gu":"./node_modules/moment/locale/gu.js","./gu.js":"./node_modules/moment/locale/gu.js","./he":"./node_modules/moment/locale/he.js","./he.js":"./node_modules/moment/locale/he.js","./hi":"./node_modules/moment/locale/hi.js","./hi.js":"./node_modules/moment/locale/hi.js","./hr":"./node_modules/moment/locale/hr.js","./hr.js":"./node_modules/moment/locale/hr.js","./hu":"./node_modules/moment/locale/hu.js","./hu.js":"./node_modules/moment/locale/hu.js","./hy-am":"./node_modules/moment/locale/hy-am.js","./hy-am.js":"./node_modules/moment/locale/hy-am.js","./id":"./node_modules/moment/locale/id.js","./id.js":"./node_modules/moment/locale/id.js","./is":"./node_modules/moment/locale/is.js","./is.js":"./node_modules/moment/locale/is.js","./it":"./node_modules/moment/locale/it.js","./it-ch":"./node_modules/moment/locale/it-ch.js","./it-ch.js":"./node_modules/moment/locale/it-ch.js","./it.js":"./node_modules/moment/locale/it.js","./ja":"./node_modules/moment/locale/ja.js","./ja.js":"./node_modules/moment/locale/ja.js","./jv":"./node_modules/moment/locale/jv.js","./jv.js":"./node_modules/moment/locale/jv.js","./ka":"./node_modules/moment/locale/ka.js","./ka.js":"./node_modules/moment/locale/ka.js","./kk":"./node_modules/moment/locale/kk.js","./kk.js":"./node_modules/moment/locale/kk.js","./km":"./node_modules/moment/locale/km.js","./km.js":"./node_modules/moment/locale/km.js","./kn":"./node_modules/moment/locale/kn.js","./kn.js":"./node_modules/moment/locale/kn.js","./ko":"./node_modules/moment/locale/ko.js","./ko.js":"./node_modules/moment/locale/ko.js","./ku":"./node_modules/moment/locale/ku.js","./ku-kmr":"./node_modules/moment/locale/ku-kmr.js","./ku-kmr.js":"./node_modules/moment/locale/ku-kmr.js","./ku.js":"./node_modules/moment/locale/ku.js","./ky":"./node_modules/moment/locale/ky.js","./ky.js":"./node_modules/moment/locale/ky.js","./lb":"./node_modules/moment/locale/lb.js","./lb.js":"./node_modules/moment/locale/lb.js","./lo":"./node_modules/moment/locale/lo.js","./lo.js":"./node_modules/moment/locale/lo.js","./lt":"./node_modules/moment/locale/lt.js","./lt.js":"./node_modules/moment/locale/lt.js","./lv":"./node_modules/moment/locale/lv.js","./lv.js":"./node_modules/moment/locale/lv.js","./me":"./node_modules/moment/locale/me.js","./me.js":"./node_modules/moment/locale/me.js","./mi":"./node_modules/moment/locale/mi.js","./mi.js":"./node_modules/moment/locale/mi.js","./mk":"./node_modules/moment/locale/mk.js","./mk.js":"./node_modules/moment/locale/mk.js","./ml":"./node_modules/moment/locale/ml.js","./ml.js":"./node_modules/moment/locale/ml.js","./mn":"./node_modules/moment/locale/mn.js","./mn.js":"./node_modules/moment/locale/mn.js","./mr":"./node_modules/moment/locale/mr.js","./mr.js":"./node_modules/moment/locale/mr.js","./ms":"./node_modules/moment/locale/ms.js","./ms-my":"./node_modules/moment/locale/ms-my.js","./ms-my.js":"./node_modules/moment/locale/ms-my.js","./ms.js":"./node_modules/moment/locale/ms.js","./mt":"./node_modules/moment/locale/mt.js","./mt.js":"./node_modules/moment/locale/mt.js","./my":"./node_modules/moment/locale/my.js","./my.js":"./node_modules/moment/locale/my.js","./nb":"./node_modules/moment/locale/nb.js","./nb.js":"./node_modules/moment/locale/nb.js","./ne":"./node_modules/moment/locale/ne.js","./ne.js":"./node_modules/moment/locale/ne.js","./nl":"./node_modules/moment/locale/nl.js","./nl-be":"./node_modules/moment/locale/nl-be.js","./nl-be.js":"./node_modules/moment/locale/nl-be.js","./nl.js":"./node_modules/moment/locale/nl.js","./nn":"./node_modules/moment/locale/nn.js","./nn.js":"./node_modules/moment/locale/nn.js","./oc-lnc":"./node_modules/moment/locale/oc-lnc.js","./oc-lnc.js":"./node_modules/moment/locale/oc-lnc.js","./pa-in":"./node_modules/moment/locale/pa-in.js","./pa-in.js":"./node_modules/moment/locale/pa-in.js","./pl":"./node_modules/moment/locale/pl.js","./pl.js":"./node_modules/moment/locale/pl.js","./pt":"./node_modules/moment/locale/pt.js","./pt-br":"./node_modules/moment/locale/pt-br.js","./pt-br.js":"./node_modules/moment/locale/pt-br.js","./pt.js":"./node_modules/moment/locale/pt.js","./ro":"./node_modules/moment/locale/ro.js","./ro.js":"./node_modules/moment/locale/ro.js","./ru":"./node_modules/moment/locale/ru.js","./ru.js":"./node_modules/moment/locale/ru.js","./sd":"./node_modules/moment/locale/sd.js","./sd.js":"./node_modules/moment/locale/sd.js","./se":"./node_modules/moment/locale/se.js","./se.js":"./node_modules/moment/locale/se.js","./si":"./node_modules/moment/locale/si.js","./si.js":"./node_modules/moment/locale/si.js","./sk":"./node_modules/moment/locale/sk.js","./sk.js":"./node_modules/moment/locale/sk.js","./sl":"./node_modules/moment/locale/sl.js","./sl.js":"./node_modules/moment/locale/sl.js","./sq":"./node_modules/moment/locale/sq.js","./sq.js":"./node_modules/moment/locale/sq.js","./sr":"./node_modules/moment/locale/sr.js","./sr-cyrl":"./node_modules/moment/locale/sr-cyrl.js","./sr-cyrl.js":"./node_modules/moment/locale/sr-cyrl.js","./sr.js":"./node_modules/moment/locale/sr.js","./ss":"./node_modules/moment/locale/ss.js","./ss.js":"./node_modules/moment/locale/ss.js","./sv":"./node_modules/moment/locale/sv.js","./sv.js":"./node_modules/moment/locale/sv.js","./sw":"./node_modules/moment/locale/sw.js","./sw.js":"./node_modules/moment/locale/sw.js","./ta":"./node_modules/moment/locale/ta.js","./ta.js":"./node_modules/moment/locale/ta.js","./te":"./node_modules/moment/locale/te.js","./te.js":"./node_modules/moment/locale/te.js","./tet":"./node_modules/moment/locale/tet.js","./tet.js":"./node_modules/moment/locale/tet.js","./tg":"./node_modules/moment/locale/tg.js","./tg.js":"./node_modules/moment/locale/tg.js","./th":"./node_modules/moment/locale/th.js","./th.js":"./node_modules/moment/locale/th.js","./tk":"./node_modules/moment/locale/tk.js","./tk.js":"./node_modules/moment/locale/tk.js","./tl-ph":"./node_modules/moment/locale/tl-ph.js","./tl-ph.js":"./node_modules/moment/locale/tl-ph.js","./tlh":"./node_modules/moment/locale/tlh.js","./tlh.js":"./node_modules/moment/locale/tlh.js","./tr":"./node_modules/moment/locale/tr.js","./tr.js":"./node_modules/moment/locale/tr.js","./tzl":"./node_modules/moment/locale/tzl.js","./tzl.js":"./node_modules/moment/locale/tzl.js","./tzm":"./node_modules/moment/locale/tzm.js","./tzm-latn":"./node_modules/moment/locale/tzm-latn.js","./tzm-latn.js":"./node_modules/moment/locale/tzm-latn.js","./tzm.js":"./node_modules/moment/locale/tzm.js","./ug-cn":"./node_modules/moment/locale/ug-cn.js","./ug-cn.js":"./node_modules/moment/locale/ug-cn.js","./uk":"./node_modules/moment/locale/uk.js","./uk.js":"./node_modules/moment/locale/uk.js","./ur":"./node_modules/moment/locale/ur.js","./ur.js":"./node_modules/moment/locale/ur.js","./uz":"./node_modules/moment/locale/uz.js","./uz-latn":"./node_modules/moment/locale/uz-latn.js","./uz-latn.js":"./node_modules/moment/locale/uz-latn.js","./uz.js":"./node_modules/moment/locale/uz.js","./vi":"./node_modules/moment/locale/vi.js","./vi.js":"./node_modules/moment/locale/vi.js","./x-pseudo":"./node_modules/moment/locale/x-pseudo.js","./x-pseudo.js":"./node_modules/moment/locale/x-pseudo.js","./yo":"./node_modules/moment/locale/yo.js","./yo.js":"./node_modules/moment/locale/yo.js","./zh-cn":"./node_modules/moment/locale/zh-cn.js","./zh-cn.js":"./node_modules/moment/locale/zh-cn.js","./zh-hk":"./node_modules/moment/locale/zh-hk.js","./zh-hk.js":"./node_modules/moment/locale/zh-hk.js","./zh-mo":"./node_modules/moment/locale/zh-mo.js","./zh-mo.js":"./node_modules/moment/locale/zh-mo.js","./zh-tw":"./node_modules/moment/locale/zh-tw.js","./zh-tw.js":"./node_modules/moment/locale/zh-tw.js"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./node_modules/moment/locale sync recursive ^\\.\\/.*$"},"./src/addons/dragAndDrop/styles.scss":function(module,__unused_webpack_exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/addons/dragAndDrop/styles.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.id,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./src/sass/styles.scss":function(module,__unused_webpack_exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/styles.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.id,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./stories/resources/customToolbar.scss":function(module,__unused_webpack_exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/resources/customToolbar.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.id,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./stories/resources/main.scss":function(module,__unused_webpack_exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/resources/main.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.id,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./stories/resources/propGetter.scss":function(module,__unused_webpack_exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./stories/resources/propGetter.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.id,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./stories/demos/exampleCode/rendering.module.scss":function(module,__unused_webpack_exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./node_modules/sass-loader/dist/cjs.js!./stories/demos/exampleCode/rendering.module.scss");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.id,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":function(module,__unused_webpack_exports,__webpack_require__){var map={"./Calendar.stories.js":"./stories/Calendar.stories.js","./DragAndDrop.stories.js":"./stories/DragAndDrop.stories.js","./Durations.stories.js":"./stories/Durations.stories.js","./Layout.stories.js":"./stories/Layout.stories.js","./Timeslots.stories.js":"./stories/Timeslots.stories.js","./addons/dragAndDrop/basic.stories.js":"./stories/addons/dragAndDrop/basic.stories.js","./addons/dragAndDrop/outside.stories.js":"./stories/addons/dragAndDrop/outside.stories.js","./addons/dragAndDrop/props/dragFromOutsideItem.stories.js":"./stories/addons/dragAndDrop/props/dragFromOutsideItem.stories.js","./addons/dragAndDrop/props/draggableAccessor.stories.js":"./stories/addons/dragAndDrop/props/draggableAccessor.stories.js","./addons/dragAndDrop/props/onDragOver.stories.js":"./stories/addons/dragAndDrop/props/onDragOver.stories.js","./addons/dragAndDrop/props/onDragStart.stories.js":"./stories/addons/dragAndDrop/props/onDragStart.stories.js","./addons/dragAndDrop/props/onDropFromOutside.stories.js":"./stories/addons/dragAndDrop/props/onDropFromOutside.stories.js","./addons/dragAndDrop/props/onEventDrop.stories.js":"./stories/addons/dragAndDrop/props/onEventDrop.stories.js","./addons/dragAndDrop/props/onEventResize.stories.js":"./stories/addons/dragAndDrop/props/onEventResize.stories.js","./addons/dragAndDrop/props/resizable.stories.js":"./stories/addons/dragAndDrop/props/resizable.stories.js","./addons/dragAndDrop/props/resizableAccessor.stories.js":"./stories/addons/dragAndDrop/props/resizableAccessor.stories.js","./addons/dragAndDrop/resource.stories.js":"./stories/addons/dragAndDrop/resource.stories.js","./demos/backgroundEvents.stories.js":"./stories/demos/backgroundEvents.stories.js","./demos/basic.stories.js":"./stories/demos/basic.stories.js","./demos/cultures.stories.js":"./stories/demos/cultures.stories.js","./demos/customView.stories.js":"./stories/demos/customView.stories.js","./demos/dayjs.stories.js":"./stories/demos/dayjs.stories.js","./demos/luxon.stories.js":"./stories/demos/luxon.stories.js","./demos/noOverlap.stories.js":"./stories/demos/noOverlap.stories.js","./demos/popup.stories.js":"./stories/demos/popup.stories.js","./demos/rendering.stories.js":"./stories/demos/rendering.stories.js","./demos/resource.stories.js":"./stories/demos/resource.stories.js","./demos/selectable.stories.js":"./stories/demos/selectable.stories.js","./demos/timeslots.stories.js":"./stories/demos/timeslots.stories.js","./demos/timezones.stories.js":"./stories/demos/timezones.stories.js","./props/allDayAccessor.stories.js":"./stories/props/allDayAccessor.stories.js","./props/allDayMaxRows.stories.js":"./stories/props/allDayMaxRows.stories.js","./props/backgroundEvents.stories.js":"./stories/props/backgroundEvents.stories.js","./props/components.stories.js":"./stories/props/components.stories.js","./props/culture.stories.js":"./stories/props/culture.stories.js","./props/date.stories.js":"./stories/props/date.stories.js","./props/dayLayoutAlgorithm.stories.js":"./stories/props/dayLayoutAlgorithm.stories.js","./props/dayPropGetter.stories.js":"./stories/props/dayPropGetter.stories.js","./props/defaultDate.stories.js":"./stories/props/defaultDate.stories.js","./props/defaultView.stories.js":"./stories/props/defaultView.stories.js","./props/drilldownView.stories.js":"./stories/props/drilldownView.stories.js","./props/elementProps.stories.js":"./stories/props/elementProps.stories.js","./props/endAccessor.stories.js":"./stories/props/endAccessor.stories.js","./props/eventIdAccessor.stories.js":"./stories/props/eventIdAccessor.stories.js","./props/eventPropGetter.stories.js":"./stories/props/eventPropGetter.stories.js","./props/events.stories.js":"./stories/props/events.stories.js","./props/formats.stories.js":"./stories/props/formats.stories.js","./props/formatsAgendaDateFormat.stories.js":"./stories/props/formatsAgendaDateFormat.stories.js","./props/formatsAgendaHeaderFormat.stories.js":"./stories/props/formatsAgendaHeaderFormat.stories.js","./props/formatsAgendaTimeFormat.stories.js":"./stories/props/formatsAgendaTimeFormat.stories.js","./props/formatsAgendaTimeRangeFormat.stories.js":"./stories/props/formatsAgendaTimeRangeFormat.stories.js","./props/formatsDateFormat.stories.js":"./stories/props/formatsDateFormat.stories.js","./props/formatsDayFormat.stories.js":"./stories/props/formatsDayFormat.stories.js","./props/formatsDayHeaderFormat.stories.js":"./stories/props/formatsDayHeaderFormat.stories.js","./props/formatsDayRangeHeaderFormat.stories.js":"./stories/props/formatsDayRangeHeaderFormat.stories.js","./props/formatsEventTimeRangeEndFormat.stories.js":"./stories/props/formatsEventTimeRangeEndFormat.stories.js","./props/formatsEventTimeRangeFormat.stories.js":"./stories/props/formatsEventTimeRangeFormat.stories.js","./props/formatsEventTimeRangeStartFormat.stories.js":"./stories/props/formatsEventTimeRangeStartFormat.stories.js","./props/formatsMonthHeaderFormat.stories.js":"./stories/props/formatsMonthHeaderFormat.stories.js","./props/formatsSelectRangeFormat.stories.js":"./stories/props/formatsSelectRangeFormat.stories.js","./props/formatsTimeGutterFormat.stories.js":"./stories/props/formatsTimeGutterFormat.stories.js","./props/formatsWeekdayFormat.stories.js":"./stories/props/formatsWeekdayFormat.stories.js","./props/getDrilldownView.stories.js":"./stories/props/getDrilldownView.stories.js","./props/getNow.stories.js":"./stories/props/getNow.stories.js","./props/length.stories.js":"./stories/props/length.stories.js","./props/localizer.stories.js":"./stories/props/localizer.stories.js","./props/longPressThreshold.stories.js":"./stories/props/longPressThreshold.stories.js","./props/max.stories.js":"./stories/props/max.stories.js","./props/messages.stories.js":"./stories/props/messages.stories.js","./props/min.stories.js":"./stories/props/min.stories.js","./props/onDoubleClickEvent.stories.js":"./stories/props/onDoubleClickEvent.stories.js","./props/onDrillDown.stories.js":"./stories/props/onDrillDown.stories.js","./props/onKeyPressEvent.stories.js":"./stories/props/onKeyPressEvent.stories.js","./props/onNavigate.stories.js":"./stories/props/onNavigate.stories.js","./props/onRangeChange.stories.js":"./stories/props/onRangeChange.stories.js","./props/onSelectEvent.stories.js":"./stories/props/onSelectEvent.stories.js","./props/onSelectSlot.stories.js":"./stories/props/onSelectSlot.stories.js","./props/onSelecting.stories.js":"./stories/props/onSelecting.stories.js","./props/onShowMore.stories.js":"./stories/props/onShowMore.stories.js","./props/onView.stories.js":"./stories/props/onView.stories.js","./props/popup.stories.js":"./stories/props/popup.stories.js","./props/popupOffset.stories.js":"./stories/props/popupOffset.stories.js","./props/resourceGroupingLayout.stories.js":"./stories/props/resourceGroupingLayout.stories.js","./props/resourceIdAccessor.stories.js":"./stories/props/resourceIdAccessor.stories.js","./props/resourceTitleAccessor.stories.js":"./stories/props/resourceTitleAccessor.stories.js","./props/resources.stories.js":"./stories/props/resources.stories.js","./props/rtl.stories.js":"./stories/props/rtl.stories.js","./props/scrollToTime.stories.js":"./stories/props/scrollToTime.stories.js","./props/selectable.stories.js":"./stories/props/selectable.stories.js","./props/selected.stories.js":"./stories/props/selected.stories.js","./props/showAllEvents.stories.js":"./stories/props/showAllEvents.stories.js","./props/showMultiDayTimes.stories.js":"./stories/props/showMultiDayTimes.stories.js","./props/slotGroupPropGetter.stories.js":"./stories/props/slotGroupPropGetter.stories.js","./props/slotPropGetter.stories.js":"./stories/props/slotPropGetter.stories.js","./props/startAccessor.stories.js":"./stories/props/startAccessor.stories.js","./props/step.stories.js":"./stories/props/step.stories.js","./props/timeslots.stories.js":"./stories/props/timeslots.stories.js","./props/titleAccessor.stories.js":"./stories/props/titleAccessor.stories.js","./props/toolbar.stories.js":"./stories/props/toolbar.stories.js","./props/tooltipAccessor.stories.js":"./stories/props/tooltipAccessor.stories.js","./props/view.stories.js":"./stories/props/view.stories.js","./props/views.stories.js":"./stories/props/views.stories.js"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$"},"./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":function(module,__unused_webpack_exports,__webpack_require__){var map={"./AboutBigCalendar.stories.mdx":"./stories/AboutBigCalendar.stories.mdx","./AboutExamples.stories.mdx":"./stories/AboutExamples.stories.mdx","./addons/addOns.stories.mdx":"./stories/addons/addOns.stories.mdx","./addons/dragAndDrop/Introduction.stories.mdx":"./stories/addons/dragAndDrop/Introduction.stories.mdx","./addons/dragAndDrop/props/API.stories.mdx":"./stories/addons/dragAndDrop/props/API.stories.mdx","./demos/dragAndDrop.stories.mdx":"./stories/demos/dragAndDrop.stories.mdx","./guides/CustomStyling.stories.mdx":"./stories/guides/CustomStyling.stories.mdx","./guides/CustomView.stories.mdx":"./stories/guides/CustomView.stories.mdx","./guides/Dates.stories.mdx":"./stories/guides/Dates.stories.mdx","./guides/Timezones.stories.mdx":"./stories/guides/Timezones.stories.mdx","./guides/localizer.stories.mdx":"./stories/guides/localizer.stories.mdx","./props/API.stories.mdx":"./stories/props/API.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"?4f7e":function(){},"./generated-stories-entry.cjs":function(module,__unused_webpack_exports,__webpack_require__){"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)}},function(__webpack_require__){var __webpack_exec__=function(moduleId){return __webpack_require__(__webpack_require__.s=moduleId)};__webpack_require__.O(0,[882],(function(){return __webpack_exec__("./stories/resources/main.scss"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/react/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.cjs")}));__webpack_require__.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUVsMUMsSUFBSyswQyxLQUFNLENBQ3BDLElBQUlsOUIsRUFBSSxJQUFJczhCLE1BQU0sdUJBQXlCWSxJQUFNLEtBRWpELE1BREFsOUIsRUFBRXM5QixLQUFPLG1CQUNIdDlCLENBQ1AsQ0FDQSxPQUFPN1gsSUFBSSswQyxJQUNaLENBQ0FELGVBQWV4a0QsS0FBTyxTQUFTOGtELHFCQUM5QixPQUFPN2tELE9BQU9ELEtBQUswUCxJQUNwQixFQUNBODBDLGVBQWVPLFFBQVVMLHNCQUN6QkosT0FBT0YsUUFBVUksZUFDakJBLGVBQWUxNkMsR0FBSyx3SCwwS0M1QnBCLEVBSDJCLG9CQUFRLDREQUdWcTdDLFdBQVcsQ0FBQyw4SUFBa0gsaUtBQWdJYixRQUFRLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uLy5zdG9yeWJvb2svcHJldmlldy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uLy5zdG9yeWJvb2svcHJldmlldy5qcy1nZW5lcmF0ZWQtY29uZmlnLWVudHJ5LmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9DYWxlbmRhci5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9EcmFnQW5kRHJvcC5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9EdXJhdGlvbnMuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvTGF5b3V0LnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL1RpbWVzbG90cy5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9kZW1vcy9leGFtcGxlQ29kZS9kbmQuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9iYXNpYy5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3Avb3V0c2lkZS5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvZHJhZ0Zyb21PdXRzaWRlSXRlbS5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9kcmFnRnJvbU91dHNpZGVJdGVtLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9kcmFnZ2FibGVBY2Nlc3Nvci5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9kcmFnZ2FibGVBY2Nlc3Nvci5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvb25EcmFnT3Zlci5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9vbkRyYWdPdmVyLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9vbkRyYWdTdGFydC5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9vbkRyYWdTdGFydC5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvb25Ecm9wRnJvbU91dHNpZGUubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvb25Ecm9wRnJvbU91dHNpZGUuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvYWRkb25zL2RyYWdBbmREcm9wL3Byb3BzL29uRXZlbnREcm9wLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvYWRkb25zL2RyYWdBbmREcm9wL3Byb3BzL29uRXZlbnREcm9wLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9vbkV2ZW50UmVzaXplLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvYWRkb25zL2RyYWdBbmREcm9wL3Byb3BzL29uRXZlbnRSZXNpemUuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvYWRkb25zL2RyYWdBbmREcm9wL3Byb3BzL3Jlc2l6YWJsZS5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9yZXNpemFibGUuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvYWRkb25zL2RyYWdBbmREcm9wL3Byb3BzL3Jlc2l6YWJsZUFjY2Vzc29yLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvYWRkb25zL2RyYWdBbmREcm9wL3Byb3BzL3Jlc2l6YWJsZUFjY2Vzc29yLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL2V4YW1wbGVDb2RlL2RuZHJlc291cmNlLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvcmVzb3VyY2Uuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcmVzb3VyY2VzL2JhY2tncm91bmRFdmVudHMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL2V4YW1wbGVDb2RlL2JhY2tncm91bmRFdmVudHMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL2JhY2tncm91bmRFdmVudHMuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvZGVtb3MvYmFzaWMuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvZGVtb3MvZXhhbXBsZUNvZGUvY3VsdHVyZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL2N1bHR1cmVzLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL2V4YW1wbGVDb2RlL2N1c3RvbVZpZXcuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL2N1c3RvbVZpZXcuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvZGVtb3MvZXhhbXBsZUNvZGUvZGF5anMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL2RheWpzLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL2V4YW1wbGVDb2RlL2x1eG9uLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9kZW1vcy9sdXhvbi5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9kZW1vcy9leGFtcGxlQ29kZS9jcmVhdGVFdmVudFdpdGhOb092ZXJsYXAuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL25vT3ZlcmxhcC5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9kZW1vcy9leGFtcGxlQ29kZS9wb3B1cC5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvZGVtb3MvcG9wdXAuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvZGVtb3MvZXhhbXBsZUNvZGUvcmVuZGVyaW5nLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9kZW1vcy9yZW5kZXJpbmcuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvZGVtb3MvZXhhbXBsZUNvZGUvcmVzb3VyY2UuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL3Jlc291cmNlLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL2V4YW1wbGVDb2RlL3NlbGVjdGFibGUuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL3NlbGVjdGFibGUuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvZGVtb3MvZXhhbXBsZUNvZGUvdGltZXNsb3RzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9kZW1vcy90aW1lc2xvdHMuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvZGVtb3MvZXhhbXBsZUNvZGUvdGltZXpvbmVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9kZW1vcy90aW1lem9uZXMuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvYWxsRGF5QWNjZXNzb3IubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9hbGxEYXlBY2Nlc3Nvci5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9yZXNvdXJjZXMvYWxsRGF5RXZlbnRzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9hbGxEYXlNYXhSb3dzLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvYWxsRGF5TWF4Um93cy5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9iYWNrZ3JvdW5kRXZlbnRzLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvYmFja2dyb3VuZEV2ZW50cy5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9jb21wb25lbnRzLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvY3VzdG9tQ29tcG9uZW50cy9DdXN0b21Ub29sYmFyLmNvbXBvbmVudC5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvY29tcG9uZW50cy5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9jdWx0dXJlLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvY3VsdHVyZS5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9kYXRlLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZGF0ZS5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9kYXlMYXlvdXRBbGdvcml0aG0ubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9kYXlMYXlvdXRBbGdvcml0aG0uc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZGF5UHJvcEdldHRlci5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2RheVByb3BHZXR0ZXIuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZGVmYXVsdERhdGUubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9kZWZhdWx0RGF0ZS5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9kZWZhdWx0Vmlldy5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2RlZmF1bHRWaWV3LnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2RyaWxsZG93blZpZXcubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9kcmlsbGRvd25WaWV3LnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2VsZW1lbnRQcm9wcy5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2VsZW1lbnRQcm9wcy5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9lbmRBY2Nlc3Nvci5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2VuZEFjY2Vzc29yLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2V2ZW50SWRBY2Nlc3Nvci5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2V2ZW50SWRBY2Nlc3Nvci5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9ldmVudFByb3BHZXR0ZXIubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9ldmVudFByb3BHZXR0ZXIuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZXZlbnRzLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZXZlbnRzLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHMubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNBZ2VuZGFEYXRlRm9ybWF0Lm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZm9ybWF0c0FnZW5kYURhdGVGb3JtYXQuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZm9ybWF0c0FnZW5kYUhlYWRlckZvcm1hdC5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNBZ2VuZGFIZWFkZXJGb3JtYXQuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZm9ybWF0c0FnZW5kYVRpbWVGb3JtYXQubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzQWdlbmRhVGltZUZvcm1hdC5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzQWdlbmRhVGltZVJhbmdlRm9ybWF0Lm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZm9ybWF0c0FnZW5kYVRpbWVSYW5nZUZvcm1hdC5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzRGF0ZUZvcm1hdC5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNEYXRlRm9ybWF0LnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNEYXlGb3JtYXQubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzRGF5Rm9ybWF0LnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNEYXlIZWFkZXJGb3JtYXQubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzRGF5SGVhZGVyRm9ybWF0LnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNEYXlSYW5nZUhlYWRlckZvcm1hdC5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNEYXlSYW5nZUhlYWRlckZvcm1hdC5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzRXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXQubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzRXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXQuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZm9ybWF0c0V2ZW50VGltZVJhbmdlRm9ybWF0Lm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZm9ybWF0c0V2ZW50VGltZVJhbmdlRm9ybWF0LnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNFdmVudFRpbWVSYW5nZVN0YXJ0Rm9ybWF0Lm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZm9ybWF0c0V2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZm9ybWF0c01vbnRoSGVhZGVyRm9ybWF0Lm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZm9ybWF0c01vbnRoSGVhZGVyRm9ybWF0LnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNTZWxlY3RSYW5nZUZvcm1hdC5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNTZWxlY3RSYW5nZUZvcm1hdC5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzVGltZUd1dHRlckZvcm1hdC5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNUaW1lR3V0dGVyRm9ybWF0LnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNXZWVrZGF5Rm9ybWF0Lm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZm9ybWF0c1dlZWtkYXlGb3JtYXQuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZ2V0RHJpbGxkb3duVmlldy5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2dldERyaWxsZG93blZpZXcuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZ2V0Tm93Lm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvZ2V0Tm93LnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2xlbmd0aC5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL2xlbmd0aC5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9sb2NhbGl6ZXIubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9sb2NhbGl6ZXIuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvbG9uZ1ByZXNzVGhyZXNob2xkLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvbG9uZ1ByZXNzVGhyZXNob2xkLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL21heC5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL21heC5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9tZXNzYWdlcy5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL21lc3NhZ2VzLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL21pbi5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL21pbi5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9vbkRvdWJsZUNsaWNrRXZlbnQubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9vbkRvdWJsZUNsaWNrRXZlbnQuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvb25EcmlsbERvd24ubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9vbkRyaWxsRG93bi5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9vbktleVByZXNzRXZlbnQubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9vbktleVByZXNzRXZlbnQuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvb25OYXZpZ2F0ZS5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL29uTmF2aWdhdGUuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvb25SYW5nZUNoYW5nZS5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL29uUmFuZ2VDaGFuZ2Uuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvb25TZWxlY3RFdmVudC5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL29uU2VsZWN0RXZlbnQuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvb25TZWxlY3RTbG90Lm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvb25TZWxlY3RTbG90LnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL29uU2VsZWN0aW5nLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvb25TZWxlY3Rpbmcuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvb25TaG93TW9yZS5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL29uU2hvd01vcmUuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvb25WaWV3Lm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvb25WaWV3LnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL3BvcHVwLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvcG9wdXAuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvcG9wdXBPZmZzZXQubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9wb3B1cE9mZnNldC5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9yZXNvdXJjZUdyb3VwaW5nTGF5b3V0Lm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvcmVzb3VyY2VHcm91cGluZ0xheW91dC5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9yZXNvdXJjZUlkQWNjZXNzb3IubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9yZXNvdXJjZUlkQWNjZXNzb3Iuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvcmVzb3VyY2VUaXRsZUFjY2Vzc29yLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvcmVzb3VyY2VUaXRsZUFjY2Vzc29yLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL3Jlc291cmNlcy5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL3Jlc291cmNlcy5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9ydGwubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9ydGwuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvc2Nyb2xsVG9UaW1lLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvc2Nyb2xsVG9UaW1lLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL3NlbGVjdGFibGUubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9zZWxlY3RhYmxlLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL3NlbGVjdGVkLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvc2VsZWN0ZWQuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvc2hvd0FsbEV2ZW50cy5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL3Nob3dBbGxFdmVudHMuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvc2hvd011bHRpRGF5VGltZXMubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9zaG93TXVsdGlEYXlUaW1lcy5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9zbG90R3JvdXBQcm9wR2V0dGVyLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvc2xvdEdyb3VwUHJvcEdldHRlci5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9zbG90UHJvcEdldHRlci5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL3Nsb3RQcm9wR2V0dGVyLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL3N0YXJ0QWNjZXNzb3IubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9zdGFydEFjY2Vzc29yLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL3N0ZXAubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy9zdGVwLnN0b3JpZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL3RpbWVzbG90cy5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL3RpbWVzbG90cy5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy90aXRsZUFjY2Vzc29yLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvdGl0bGVBY2Nlc3Nvci5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy90b29sYmFyLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvdG9vbGJhci5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy90b29sdGlwQWNjZXNzb3IubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy90b29sdGlwQWNjZXNzb3Iuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvdmlldy5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL3ZpZXcuc3Rvcmllcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvdmlld3MubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9wcm9wcy92aWV3cy5zdG9yaWVzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL0JhY2tncm91bmRXcmFwcGVyLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL0JhY2tncm91bmRDZWxscy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9FdmVudEVuZGluZ1Jvdy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9TY3JvbGxhYmxlV2Vla1dyYXBwZXIuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvdXRpbHMvRGF0ZVNsb3RNZXRyaWNzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL0RhdGVDb250ZW50Um93LmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL0V2ZW50Q2VsbC5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9FdmVudFJvdy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9FdmVudFJvd01peGluLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL0hlYWRlci5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9Ob29wV3JhcHBlci5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9ob29rcy91c2VDbGlja091dHNpZGUuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvUG9wT3ZlcmxheS5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9TZWxlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvdXRpbHMvVGltZVNsb3RzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL3V0aWxzL2xheW91dC1hbGdvcml0aG1zL292ZXJsYXAuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvdXRpbHMvbGF5b3V0LWFsZ29yaXRobXMvbm8tb3ZlcmxhcC5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy91dGlscy9EYXlFdmVudExheW91dC5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9UaW1lU2xvdEdyb3VwLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL0RheUNvbHVtbldyYXBwZXIuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvRGF5Q29sdW1uLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL1Jlc291cmNlSGVhZGVyLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL1RpbWVHcmlkSGVhZGVyLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL1RpbWVHcmlkSGVhZGVyUmVzb3VyY2VzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL1RpbWVHdXR0ZXIuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvdXRpbHMvUmVzb3VyY2VzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL1RpbWVHcmlkLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL1RpbWVHcmlkRXZlbnQuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvYWRkb25zL2RyYWdBbmREcm9wL0RuRENvbnRleHQuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvYWRkb25zL2RyYWdBbmREcm9wL0V2ZW50V3JhcHBlci5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9hZGRvbnMvZHJhZ0FuZERyb3AvY29tbW9uLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL2FkZG9ucy9kcmFnQW5kRHJvcC9FdmVudENvbnRhaW5lcldyYXBwZXIuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvYWRkb25zL2RyYWdBbmREcm9wL1dlZWtXcmFwcGVyLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL2FkZG9ucy9kcmFnQW5kRHJvcC9pbmRleC5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9hZGRvbnMvZHJhZ0FuZERyb3Avd2l0aERyYWdBbmREcm9wLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL0V2ZW50V3JhcHBlci5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9sb2NhbGl6ZXIuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvVG9vbGJhci5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy91dGlscy9tZXNzYWdlcy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9EYXRlSGVhZGVyLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL01vbnRoLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL0RheS5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9XZWVrLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL1dvcmtXZWVrLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL0FnZW5kYS5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9WaWV3cy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9DYWxlbmRhci5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy91dGlscy9tb3ZlLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL2xvY2FsaXplcnMvbW9tZW50LmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL2xvY2FsaXplcnMvbHV4b24uanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvbG9jYWxpemVycy9vbGRHbG9iYWxpemUuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvbG9jYWxpemVycy9nbG9iYWxpemUuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvbG9jYWxpemVycy9kYXRlLWZucy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9sb2NhbGl6ZXJzL2RheWpzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3JjL3V0aWxzL2FjY2Vzc29ycy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvdXRpbHMvZGF0ZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvdXRpbHMvZXZlbnRMZXZlbHMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvdXRpbHMvaGVscGVycy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy91dGlscy9wcm9wVHlwZXMuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvdXRpbHMvc2VsZWN0aW9uLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9EZW1vTGluay5jb21wb25lbnQuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL1RpbWV6b25lU2VsZWN0LmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9kZW1vcy9leGFtcGxlQ29kZS9iYXNpYy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvZGVtb3MvZXhhbXBsZUNvZGUvZG5kT3V0c2lkZVNvdXJjZS5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvZGVtb3MvZXhhbXBsZUNvZGUvcmVzaXphYmxlLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9oZWxwZXJzL2NyZWF0ZUV2ZW50cy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvaGVscGVycy9pbmRleC5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcHJvcHMvc3RvcnlEZWZhdWx0cy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcmVzb3VyY2VzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Jlc291cmNlcy9DdXN0b21EYXlDb2x1bW5XcmFwcGVyLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9yZXNvdXJjZXMvY3VzdG9tQ29tcG9uZW50cy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcmVzb3VyY2VzL2V2ZW50cy5qcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcmVzb3VyY2VzL3Jlc291cmNlRXZlbnRzLmpzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9BYm91dEJpZ0NhbGVuZGFyLnN0b3JpZXMubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9BYm91dEV4YW1wbGVzLnN0b3JpZXMubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9hZGRvbnMvYWRkT25zLnN0b3JpZXMubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvSW50cm9kdWN0aW9uLnN0b3JpZXMubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvQVBJLnN0b3JpZXMubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9kZW1vcy9kcmFnQW5kRHJvcC5zdG9yaWVzLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvZ3VpZGVzL0N1c3RvbVN0eWxpbmcuc3Rvcmllcy5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2d1aWRlcy9DdXN0b21WaWV3LnN0b3JpZXMubWR4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9ndWlkZXMvRGF0ZXMuc3Rvcmllcy5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2d1aWRlcy9UaW1lem9uZXMuc3Rvcmllcy5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2d1aWRlcy9sb2NhbGl6ZXIuc3Rvcmllcy5tZHgiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Byb3BzL0FQSS5zdG9yaWVzLm1keCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9hZGRvbnMvZHJhZ0FuZERyb3Avc3R5bGVzLnNjc3MiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zcmMvc2Fzcy9zdHlsZXMuc2NzcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcmVzb3VyY2VzL2N1c3RvbVRvb2xiYXIuc2NzcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcmVzb3VyY2VzL21haW4uc2NzcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcmVzb3VyY2VzL3Byb3BHZXR0ZXIuc2NzcyIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvZGVtb3MvZXhhbXBsZUNvZGUvcmVuZGVyaW5nLm1vZHVsZS5zY3NzIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvIHN5bmMgXlxcLlxcLy4qJCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9hZGRvbnMvZHJhZ0FuZERyb3Avc3R5bGVzLnNjc3M/N2NmMCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3NyYy9zYXNzL3N0eWxlcy5zY3NzPzE4ZmUiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL3Jlc291cmNlcy9jdXN0b21Ub29sYmFyLnNjc3M/YTU0ZSIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL3N0b3JpZXMvcmVzb3VyY2VzL21haW4uc2Nzcz84MjQ4Iiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy9yZXNvdXJjZXMvcHJvcEdldHRlci5zY3NzP2YyNzkiLCJ3ZWJwYWNrOi8vQGFkcmlhbi5pbnN1YS9yZWFjdC1iaWctY2FsZW5kYXIvLi9zdG9yaWVzL2RlbW9zL2V4YW1wbGVDb2RlL3JlbmRlcmluZy5tb2R1bGUuc2Nzcz8yZjQwIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy8gc3luYyBeXFwuKD84YzljIiwid2VicGFjazovL0BhZHJpYW4uaW5zdWEvcmVhY3QtYmlnLWNhbGVuZGFyLy4vc3Rvcmllcy8gc3luYyBeXFwuKCIsIndlYnBhY2s6Ly9AYWRyaWFuLmluc3VhL3JlYWN0LWJpZy1jYWxlbmRhci8uL2dlbmVyYXRlZC1zdG9yaWVzLWVudHJ5LmNqcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcGFyYW1ldGVycyA9IHtcbiAgYWN0aW9uczogeyBhcmdUeXBlc1JlZ2V4OiAnXm9uW0EtWl0uKicgfSxcbiAgY29udHJvbHM6IHtcbiAgICAvLyBUT0RPOiByZWZhY3RvciBqc0RvY3MgaW4gQ2FsZW5kYXIgY29udHJvbFxuICAgIC8vZXhwYW5kZWQ6IHRydWUsXG4gICAgbWF0Y2hlcnM6IHtcbiAgICAgIGNvbG9yOiAvKGJhY2tncm91bmR8Y29sb3IpJC9pLFxuICAgICAgZGF0ZTogL0RhdGUkLyxcbiAgICB9LFxuICB9LFxuICBzdG9yeVNvcnQ6IHtcbiAgICBvcmRlcjogW1xuICAgICAgJ0Fib3V0IEJpZyBDYWxlbmRhcicsXG4gICAgICAnQWJvdXQgT3VyIEV4YW1wbGVzJyxcbiAgICAgICdwcm9wcycsXG4gICAgICAnRXhhbXBsZXMnLFxuICAgICAgJ0d1aWRlcycsXG4gICAgICAnQWRkb25zJyxcbiAgICAgIFsnSW50cm9kdWN0aW9uJywgJ3Byb3BzJ10sXG4gICAgXSxcbiAgfSxcbiAgdmlld01vZGU6ICdkb2NzJyxcbn1cbiIsImZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9uby11bnJlc29sdmVkICovXG5pbXBvcnQgeyBhZGREZWNvcmF0b3IsIGFkZFBhcmFtZXRlcnMsIGFkZExvYWRlciwgYWRkQXJncywgYWRkQXJnVHlwZXMsIGFkZEFyZ3NFbmhhbmNlciwgYWRkQXJnVHlwZXNFbmhhbmNlciwgc2V0R2xvYmFsUmVuZGVyIH0gZnJvbSAnL2hvbWUvcnVubmVyL3dvcmsvcmVhY3QtYmlnLWNhbGVuZGFyL3JlYWN0LWJpZy1jYWxlbmRhci9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9jbGllbnQtYXBpJztcbmltcG9ydCAqIGFzIGNvbmZpZyBmcm9tICcvaG9tZS9ydW5uZXIvd29yay9yZWFjdC1iaWctY2FsZW5kYXIvcmVhY3QtYmlnLWNhbGVuZGFyLy5zdG9yeWJvb2svcHJldmlldy5qcyc7XG5PYmplY3Qua2V5cyhjb25maWcpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICB2YXIgdmFsdWUgPSBjb25maWdba2V5XTtcblxuICBzd2l0Y2ggKGtleSkge1xuICAgIGNhc2UgJ2FyZ3MnOlxuICAgICAge1xuICAgICAgICByZXR1cm4gYWRkQXJncyh2YWx1ZSk7XG4gICAgICB9XG5cbiAgICBjYXNlICdhcmdUeXBlcyc6XG4gICAgICB7XG4gICAgICAgIHJldHVybiBhZGRBcmdUeXBlcyh2YWx1ZSk7XG4gICAgICB9XG5cbiAgICBjYXNlICdkZWNvcmF0b3JzJzpcbiAgICAgIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLmZvckVhY2goZnVuY3Rpb24gKGRlY29yYXRvcikge1xuICAgICAgICAgIHJldHVybiBhZGREZWNvcmF0b3IoZGVjb3JhdG9yLCBmYWxzZSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgY2FzZSAnbG9hZGVycyc6XG4gICAgICB7XG4gICAgICAgIHJldHVybiB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uIChsb2FkZXIpIHtcbiAgICAgICAgICByZXR1cm4gYWRkTG9hZGVyKGxvYWRlciwgZmFsc2UpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgIGNhc2UgJ3BhcmFtZXRlcnMnOlxuICAgICAge1xuICAgICAgICByZXR1cm4gYWRkUGFyYW1ldGVycyhfb2JqZWN0U3ByZWFkKHt9LCB2YWx1ZSksIGZhbHNlKTtcbiAgICAgIH1cblxuICAgIGNhc2UgJ2FyZ1R5cGVzRW5oYW5jZXJzJzpcbiAgICAgIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLmZvckVhY2goZnVuY3Rpb24gKGVuaGFuY2VyKSB7XG4gICAgICAgICAgcmV0dXJuIGFkZEFyZ1R5cGVzRW5oYW5jZXIoZW5oYW5jZXIpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgIGNhc2UgJ2FyZ3NFbmhhbmNlcnMnOlxuICAgICAge1xuICAgICAgICByZXR1cm4gdmFsdWUuZm9yRWFjaChmdW5jdGlvbiAoZW5oYW5jZXIpIHtcbiAgICAgICAgICByZXR1cm4gYWRkQXJnc0VuaGFuY2VyKGVuaGFuY2VyKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICBjYXNlICdyZW5kZXInOlxuICAgICAge1xuICAgICAgICByZXR1cm4gc2V0R2xvYmFsUmVuZGVyKHZhbHVlKTtcbiAgICAgIH1cblxuICAgIGNhc2UgJ2dsb2JhbHMnOlxuICAgIGNhc2UgJ2dsb2JhbFR5cGVzJzpcbiAgICAgIHtcbiAgICAgICAgdmFyIHYgPSB7fTtcbiAgICAgICAgdltrZXldID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBhZGRQYXJhbWV0ZXJzKHYsIGZhbHNlKTtcbiAgICAgIH1cblxuICAgIGNhc2UgJ19fbmFtZWRFeHBvcnRzT3JkZXInOlxuICAgIGNhc2UgJ2RlY29yYXRlU3RvcnknOlxuICAgIGNhc2UgJ3JlbmRlclRvRE9NJzpcbiAgICAgIHtcbiAgICAgICAgcmV0dXJuIG51bGw7IC8vIFRoaXMga2V5IGlzIG5vdCBoYW5kbGVkIGRpcmVjdGx5IGluIHY2IG1vZGUuXG4gICAgICB9XG5cbiAgICBkZWZhdWx0OlxuICAgICAge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLXRlbXBsYXRlXG4gICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhrZXkgKyAnIHdhcyBub3Qgc3VwcG9ydGVkIDooICEnKTtcbiAgICAgIH1cbiAgfVxufSk7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IHsgYWN0aW9uIH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1hY3Rpb25zJ1xcblxcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4vcmVzb3VyY2VzL2V2ZW50cydcXG5pbXBvcnQgeyBDYWxlbmRhciB9IGZyb20gJy4uL3NyYydcXG5cXG5pbXBvcnQge1xcbiAgZXZlbnRzLFxcbiAgQ2FsZW5kYXIgYXMgQmFzZUNhbGVuZGFyLFxcbiAgVmlld3MsXFxuICByZXNvdXJjZUV2ZW50cyxcXG4gIHJlc291cmNlcyxcXG59IGZyb20gJy4vaGVscGVycydcXG5cXG5pbXBvcnQgY3JlYXRlRXZlbnRzIGZyb20gJy4vaGVscGVycy9jcmVhdGVFdmVudHMnXFxuaW1wb3J0IGN1c3RvbUNvbXBvbmVudHMgZnJvbSAnLi9yZXNvdXJjZXMvY3VzdG9tQ29tcG9uZW50cydcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0FkZGl0aW9uYWwgRXhhbXBsZXMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGRlY29yYXRvcnM6IFtcXG4gICAgKFN0b3J5KSA9PiAoXFxuICAgICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgICA8U3RvcnkgLz5cXG4gICAgICA8L2Rpdj5cXG4gICAgKSxcXG4gIF0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IDxCYXNlQ2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuXFxuZXhwb3J0IGNvbnN0IENvbXBsZXhEYXlWaWV3TGF5b3V0ID0gVGVtcGxhdGUuYmluZCh7fSlcXG5Db21wbGV4RGF5Vmlld0xheW91dC5zdG9yeU5hbWUgPSAnY29tcGxleCBkYXkgdmlldyBsYXlvdXQnXFxuQ29tcGxleERheVZpZXdMYXlvdXQuYXJncyA9IHtcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoKSxcXG4gIGV2ZW50czogY3JlYXRlRXZlbnRzKDEpLFxcbiAgc3RlcDogMzAsXFxufVxcblxcbmNvbnN0IFRpbWVHdXR0ZXIgPSAoKSA9PiA8cD5DdXN0b20gZ3V0dGVyIHRleHQ8L3A+XFxuXFxuZXhwb3J0IGNvbnN0IEN1c3RvbVRpbWVHdXR0ZXJIZWFkZXIgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcbkN1c3RvbVRpbWVHdXR0ZXJIZWFkZXIuc3RvcnlOYW1lID0gJ2N1c3RvbSBUaW1lR3V0dGVyIGhlYWRlcidcXG5DdXN0b21UaW1lR3V0dGVySGVhZGVyLmFyZ3MgPSB7XFxuICBwb3B1cDogdHJ1ZSxcXG4gIGV2ZW50czogZGVtb0V2ZW50cyxcXG4gIG9uU2VsZWN0RXZlbnQ6IGFjdGlvbignZXZlbnQgc2VsZWN0ZWQnKSxcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxcbiAgdmlld3M6IFtWaWV3cy5XRUVLLCBWaWV3cy5EQVldLFxcbiAgY29tcG9uZW50czoge1xcbiAgICB0aW1lR3V0dGVySGVhZGVyOiBUaW1lR3V0dGVyLFxcbiAgfSxcXG59XFxuXFxuZXhwb3J0IGNvbnN0IEN1c3RvbVRpbWVHdXR0ZXJXcmFwcGVyID0gVGVtcGxhdGUuYmluZCh7fSlcXG5DdXN0b21UaW1lR3V0dGVyV3JhcHBlci5zdG9yeU5hbWUgPSAnY3VzdG9tIFRpbWVHdXR0ZXIgd3JhcHBlcidcXG5DdXN0b21UaW1lR3V0dGVyV3JhcHBlci5hcmdzID0ge1xcbiAgcG9wdXA6IHRydWUsXFxuICBldmVudHM6IGRlbW9FdmVudHMsXFxuICBvblNlbGVjdEV2ZW50OiBhY3Rpb24oJ2V2ZW50IHNlbGVjdGVkJyksXFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMSksXFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcXG4gIHZpZXdzOiBbVmlld3MuV0VFSywgVmlld3MuREFZXSxcXG4gIGNvbXBvbmVudHM6IHtcXG4gICAgdGltZUd1dHRlcldyYXBwZXI6IGN1c3RvbUNvbXBvbmVudHMudGltZUd1dHRlcldyYXBwZXIsXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgY29uc3QgQ3VzdG9tRGF0ZUNlbGxXcmFwcGVyID0gVGVtcGxhdGUuYmluZCh7fSlcXG5DdXN0b21EYXRlQ2VsbFdyYXBwZXIuc3RvcnlOYW1lID0gJ2FkZCBjdXN0b20gZGF0ZUNlbGxXcmFwcGVyJ1xcbkN1c3RvbURhdGVDZWxsV3JhcHBlci5hcmdzID0ge1xcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLk1PTlRILFxcbiAgZXZlbnRzLFxcbiAgY29tcG9uZW50czoge1xcbiAgICBkYXRlQ2VsbFdyYXBwZXI6IGN1c3RvbUNvbXBvbmVudHMuZGF0ZUNlbGxXcmFwcGVyLFxcbiAgfSxcXG59XFxuXFxuZXhwb3J0IGNvbnN0IEN1c3RvbVRpbWVTbG90V3JhcHBlciA9IFRlbXBsYXRlLmJpbmQoe30pXFxuQ3VzdG9tVGltZVNsb3RXcmFwcGVyLnN0b3J5TmFtZSA9ICdhZGQgY3VzdG9tIHRpbWVTbG90V3JhcHBlcidcXG5DdXN0b21UaW1lU2xvdFdyYXBwZXIuYXJncyA9IHtcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXFxuICBldmVudHMsXFxuICBjb21wb25lbnRzOiB7XFxuICAgIHRpbWVTbG90V3JhcHBlcjogY3VzdG9tQ29tcG9uZW50cy50aW1lU2xvdFdyYXBwZXIsXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgY29uc3QgQ3VzdG9tRXZlbnRXcmFwcGVyID0gVGVtcGxhdGUuYmluZCh7fSlcXG5DdXN0b21FdmVudFdyYXBwZXIuc3RvcnlOYW1lID0gJ2FkZCBjdXN0b20gZXZlbnRXcmFwcGVyJ1xcbkN1c3RvbUV2ZW50V3JhcHBlci5hcmdzID0ge1xcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLkRBWSxcXG4gIGV2ZW50cyxcXG4gIGNvbXBvbmVudHM6IHtcXG4gICAgZXZlbnRXcmFwcGVyOiBjdXN0b21Db21wb25lbnRzLmV2ZW50V3JhcHBlcixcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBjb25zdCBDdXN0b21Ob0FnZW5kYUV2ZW50c0xhYmVsID0gVGVtcGxhdGUuYmluZCh7fSlcXG5DdXN0b21Ob0FnZW5kYUV2ZW50c0xhYmVsLnN0b3J5TmFtZSA9ICdhZGQgY3VzdG9tIG5vIGFnZW5kYSBldmVudHMgbGFiZWwnXFxuQ3VzdG9tTm9BZ2VuZGFFdmVudHNMYWJlbC5hcmdzID0ge1xcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLkFHRU5EQSxcXG4gIGV2ZW50cyxcXG4gIG1lc3NhZ2VzOiB7XFxuICAgIG5vRXZlbnRzSW5SYW5nZTogJ1RoZXJlIGFyZSBubyBzcGVjaWFsIGV2ZW50cyBpbiB0aGlzIHJhbmdlIFt0ZXN0IG1lc3NhZ2VdJyxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBjb25zdCBDdXN0b21EYXlDb2x1bW5XcmFwcGVyID0gVGVtcGxhdGUuYmluZCh7fSlcXG5DdXN0b21EYXlDb2x1bW5XcmFwcGVyLnN0b3J5TmFtZSA9ICdhZGQgY3VzdG9tIGRheUNvbHVtbldyYXBwZXInXFxuQ3VzdG9tRGF5Q29sdW1uV3JhcHBlci5hcmdzID0ge1xcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLkRBWSxcXG4gIGV2ZW50czogcmVzb3VyY2VFdmVudHMsXFxuICByZXNvdXJjZXM6IHJlc291cmNlcyxcXG4gIHJlc291cmNlQWNjZXNzb3I6ICdyZXNvdXJjZUlkJyxcXG4gIHJlc291cmNlSWRBY2Nlc3NvcjogJ2lkJyxcXG4gIHJlc291cmNlVGl0bGVBY2Nlc3NvcjogJ25hbWUnLFxcbiAgY29tcG9uZW50czoge1xcbiAgICBkYXlDb2x1bW5XcmFwcGVyOiBjdXN0b21Db21wb25lbnRzLmRheUNvbHVtbldyYXBwZXIsXFxuICB9LFxcbn1cXG5DdXN0b21EYXlDb2x1bW5XcmFwcGVyLnBhcmFtZXRlcnMgPSB7XFxuICBkb2NzOiB7XFxuICAgIGRlc2NyaXB0aW9uOiB7XFxuICAgICAgc3Rvcnk6XFxuICAgICAgICAnVGhlIGN1c3RvbSBEYXlDb2x1bW5XcmFwcGVyIGFsbG93cyB5b3UgdG8gYWRkIHlvdXIgb3duIGN1c3RvbSBsb2dpYyB3aGVuIHJlbmRlcmluZyBhIERheSBDb2x1bW4uJyxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBjb25zdCBDdXN0b21TaG93TW9yZSA9IFRlbXBsYXRlLmJpbmQoe30pXFxuQ3VzdG9tU2hvd01vcmUuc3RvcnlOYW1lID0gJ2FkZCBjdXN0b20gc2hvd01vcmUnXFxuQ3VzdG9tU2hvd01vcmUuYXJncyA9IHtcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5NT05USCxcXG4gIGV2ZW50cyxcXG4gIGNvbXBvbmVudHM6IHtcXG4gICAgc2hvd01vcmU6IGN1c3RvbUNvbXBvbmVudHMuc2hvd01vcmUsXFxuICB9LFxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiQ29tcGxleERheVZpZXdMYXlvdXRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjMwfSxcImVuZExvY1wiOntcImNvbFwiOjUzLFwibGluZVwiOjMwfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjMwfSxcImVuZEJvZHlcIjp7XCJjb2xcIjo1MyxcImxpbmVcIjozMH19LFwiQ3VzdG9tVGltZUd1dHRlckhlYWRlclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzB9LFwiZW5kTG9jXCI6e1wiY29sXCI6NTMsXCJsaW5lXCI6MzB9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzB9LFwiZW5kQm9keVwiOntcImNvbFwiOjUzLFwibGluZVwiOjMwfX0sXCJDdXN0b21UaW1lR3V0dGVyV3JhcHBlclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzB9LFwiZW5kTG9jXCI6e1wiY29sXCI6NTMsXCJsaW5lXCI6MzB9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzB9LFwiZW5kQm9keVwiOntcImNvbFwiOjUzLFwibGluZVwiOjMwfX0sXCJDdXN0b21EYXRlQ2VsbFdyYXBwZXJcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjMwfSxcImVuZExvY1wiOntcImNvbFwiOjUzLFwibGluZVwiOjMwfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjMwfSxcImVuZEJvZHlcIjp7XCJjb2xcIjo1MyxcImxpbmVcIjozMH19LFwiQ3VzdG9tVGltZVNsb3RXcmFwcGVyXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjozMH0sXCJlbmRMb2NcIjp7XCJjb2xcIjo1MyxcImxpbmVcIjozMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjozMH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6NTMsXCJsaW5lXCI6MzB9fSxcIkN1c3RvbUV2ZW50V3JhcHBlclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzB9LFwiZW5kTG9jXCI6e1wiY29sXCI6NTMsXCJsaW5lXCI6MzB9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzB9LFwiZW5kQm9keVwiOntcImNvbFwiOjUzLFwibGluZVwiOjMwfX0sXCJDdXN0b21Ob0FnZW5kYUV2ZW50c0xhYmVsXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjozMH0sXCJlbmRMb2NcIjp7XCJjb2xcIjo1MyxcImxpbmVcIjozMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjozMH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6NTMsXCJsaW5lXCI6MzB9fSxcIkN1c3RvbURheUNvbHVtbldyYXBwZXJcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjMwfSxcImVuZExvY1wiOntcImNvbFwiOjUzLFwibGluZVwiOjMwfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjMwfSxcImVuZEJvZHlcIjp7XCJjb2xcIjo1MyxcImxpbmVcIjozMH19LFwiQ3VzdG9tU2hvd01vcmVcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjMwfSxcImVuZExvY1wiOntcImNvbFwiOjUzLFwibGluZVwiOjMwfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjMwfSxcImVuZEJvZHlcIjp7XCJjb2xcIjo1MyxcImxpbmVcIjozMH19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IGFjdGlvbiB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tYWN0aW9ucydcblxuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IHsgQ2FsZW5kYXIgfSBmcm9tICcuLi9zcmMnXG5cbmltcG9ydCB7XG4gIGV2ZW50cyxcbiAgQ2FsZW5kYXIgYXMgQmFzZUNhbGVuZGFyLFxuICBWaWV3cyxcbiAgcmVzb3VyY2VFdmVudHMsXG4gIHJlc291cmNlcyxcbn0gZnJvbSAnLi9oZWxwZXJzJ1xuXG5pbXBvcnQgY3JlYXRlRXZlbnRzIGZyb20gJy4vaGVscGVycy9jcmVhdGVFdmVudHMnXG5pbXBvcnQgY3VzdG9tQ29tcG9uZW50cyBmcm9tICcuL3Jlc291cmNlcy9jdXN0b21Db21wb25lbnRzJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnQWRkaXRpb25hbCBFeGFtcGxlcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIGRlY29yYXRvcnM6IFtcbiAgICAoU3RvcnkpID0+IChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICAgIDxTdG9yeSAvPlxuICAgICAgPC9kaXY+XG4gICAgKSxcbiAgXSxcbn1cblxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gPEJhc2VDYWxlbmRhciB7Li4uYXJnc30gLz5cblxuZXhwb3J0IGNvbnN0IENvbXBsZXhEYXlWaWV3TGF5b3V0ID0gVGVtcGxhdGUuYmluZCh7fSk7XG5Db21wbGV4RGF5Vmlld0xheW91dC5zdG9yeU5hbWUgPSAnY29tcGxleCBkYXkgdmlldyBsYXlvdXQnXG5Db21wbGV4RGF5Vmlld0xheW91dC5hcmdzID0ge1xuICBkZWZhdWx0VmlldzogVmlld3MuREFZLFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoKSxcbiAgZXZlbnRzOiBjcmVhdGVFdmVudHMoMSksXG4gIHN0ZXA6IDMwLFxufVxuXG5jb25zdCBUaW1lR3V0dGVyID0gKCkgPT4gPHA+Q3VzdG9tIGd1dHRlciB0ZXh0PC9wPlxuXG5leHBvcnQgY29uc3QgQ3VzdG9tVGltZUd1dHRlckhlYWRlciA9IFRlbXBsYXRlLmJpbmQoe30pO1xuQ3VzdG9tVGltZUd1dHRlckhlYWRlci5zdG9yeU5hbWUgPSAnY3VzdG9tIFRpbWVHdXR0ZXIgaGVhZGVyJ1xuQ3VzdG9tVGltZUd1dHRlckhlYWRlci5hcmdzID0ge1xuICBwb3B1cDogdHJ1ZSxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxuICBvblNlbGVjdEV2ZW50OiBhY3Rpb24oJ2V2ZW50IHNlbGVjdGVkJyksXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXG4gIHZpZXdzOiBbVmlld3MuV0VFSywgVmlld3MuREFZXSxcbiAgY29tcG9uZW50czoge1xuICAgIHRpbWVHdXR0ZXJIZWFkZXI6IFRpbWVHdXR0ZXIsXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBDdXN0b21UaW1lR3V0dGVyV3JhcHBlciA9IFRlbXBsYXRlLmJpbmQoe30pO1xuQ3VzdG9tVGltZUd1dHRlcldyYXBwZXIuc3RvcnlOYW1lID0gJ2N1c3RvbSBUaW1lR3V0dGVyIHdyYXBwZXInXG5DdXN0b21UaW1lR3V0dGVyV3JhcHBlci5hcmdzID0ge1xuICBwb3B1cDogdHJ1ZSxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxuICBvblNlbGVjdEV2ZW50OiBhY3Rpb24oJ2V2ZW50IHNlbGVjdGVkJyksXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXG4gIHZpZXdzOiBbVmlld3MuV0VFSywgVmlld3MuREFZXSxcbiAgY29tcG9uZW50czoge1xuICAgIHRpbWVHdXR0ZXJXcmFwcGVyOiBjdXN0b21Db21wb25lbnRzLnRpbWVHdXR0ZXJXcmFwcGVyLFxuICB9LFxufVxuXG5leHBvcnQgY29uc3QgQ3VzdG9tRGF0ZUNlbGxXcmFwcGVyID0gVGVtcGxhdGUuYmluZCh7fSk7XG5DdXN0b21EYXRlQ2VsbFdyYXBwZXIuc3RvcnlOYW1lID0gJ2FkZCBjdXN0b20gZGF0ZUNlbGxXcmFwcGVyJ1xuQ3VzdG9tRGF0ZUNlbGxXcmFwcGVyLmFyZ3MgPSB7XG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5NT05USCxcbiAgZXZlbnRzLFxuICBjb21wb25lbnRzOiB7XG4gICAgZGF0ZUNlbGxXcmFwcGVyOiBjdXN0b21Db21wb25lbnRzLmRhdGVDZWxsV3JhcHBlcixcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IEN1c3RvbVRpbWVTbG90V3JhcHBlciA9IFRlbXBsYXRlLmJpbmQoe30pO1xuQ3VzdG9tVGltZVNsb3RXcmFwcGVyLnN0b3J5TmFtZSA9ICdhZGQgY3VzdG9tIHRpbWVTbG90V3JhcHBlcidcbkN1c3RvbVRpbWVTbG90V3JhcHBlci5hcmdzID0ge1xuICBkZWZhdWx0VmlldzogVmlld3MuREFZLFxuICBldmVudHMsXG4gIGNvbXBvbmVudHM6IHtcbiAgICB0aW1lU2xvdFdyYXBwZXI6IGN1c3RvbUNvbXBvbmVudHMudGltZVNsb3RXcmFwcGVyLFxuICB9LFxufVxuXG5leHBvcnQgY29uc3QgQ3VzdG9tRXZlbnRXcmFwcGVyID0gVGVtcGxhdGUuYmluZCh7fSk7XG5DdXN0b21FdmVudFdyYXBwZXIuc3RvcnlOYW1lID0gJ2FkZCBjdXN0b20gZXZlbnRXcmFwcGVyJ1xuQ3VzdG9tRXZlbnRXcmFwcGVyLmFyZ3MgPSB7XG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXG4gIGV2ZW50cyxcbiAgY29tcG9uZW50czoge1xuICAgIGV2ZW50V3JhcHBlcjogY3VzdG9tQ29tcG9uZW50cy5ldmVudFdyYXBwZXIsXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBDdXN0b21Ob0FnZW5kYUV2ZW50c0xhYmVsID0gVGVtcGxhdGUuYmluZCh7fSk7XG5DdXN0b21Ob0FnZW5kYUV2ZW50c0xhYmVsLnN0b3J5TmFtZSA9ICdhZGQgY3VzdG9tIG5vIGFnZW5kYSBldmVudHMgbGFiZWwnXG5DdXN0b21Ob0FnZW5kYUV2ZW50c0xhYmVsLmFyZ3MgPSB7XG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5BR0VOREEsXG4gIGV2ZW50cyxcbiAgbWVzc2FnZXM6IHtcbiAgICBub0V2ZW50c0luUmFuZ2U6ICdUaGVyZSBhcmUgbm8gc3BlY2lhbCBldmVudHMgaW4gdGhpcyByYW5nZSBbdGVzdCBtZXNzYWdlXScsXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBDdXN0b21EYXlDb2x1bW5XcmFwcGVyID0gVGVtcGxhdGUuYmluZCh7fSk7XG5DdXN0b21EYXlDb2x1bW5XcmFwcGVyLnN0b3J5TmFtZSA9ICdhZGQgY3VzdG9tIGRheUNvbHVtbldyYXBwZXInXG5DdXN0b21EYXlDb2x1bW5XcmFwcGVyLmFyZ3MgPSB7XG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXG4gIGV2ZW50czogcmVzb3VyY2VFdmVudHMsXG4gIHJlc291cmNlczogcmVzb3VyY2VzLFxuICByZXNvdXJjZUFjY2Vzc29yOiAncmVzb3VyY2VJZCcsXG4gIHJlc291cmNlSWRBY2Nlc3NvcjogJ2lkJyxcbiAgcmVzb3VyY2VUaXRsZUFjY2Vzc29yOiAnbmFtZScsXG4gIGNvbXBvbmVudHM6IHtcbiAgICBkYXlDb2x1bW5XcmFwcGVyOiBjdXN0b21Db21wb25lbnRzLmRheUNvbHVtbldyYXBwZXIsXG4gIH0sXG59XG5DdXN0b21EYXlDb2x1bW5XcmFwcGVyLnBhcmFtZXRlcnMgPSB7XG4gIGRvY3M6IHtcbiAgICBkZXNjcmlwdGlvbjoge1xuICAgICAgc3Rvcnk6XG4gICAgICAgICdUaGUgY3VzdG9tIERheUNvbHVtbldyYXBwZXIgYWxsb3dzIHlvdSB0byBhZGQgeW91ciBvd24gY3VzdG9tIGxvZ2ljIHdoZW4gcmVuZGVyaW5nIGEgRGF5IENvbHVtbi4nLFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBDdXN0b21TaG93TW9yZSA9IFRlbXBsYXRlLmJpbmQoe30pO0N1c3RvbVNob3dNb3JlLnN0b3J5TmFtZSA9ICdhZGQgY3VzdG9tIHNob3dNb3JlJ1xuQ3VzdG9tU2hvd01vcmUuYXJncyA9IHtcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLk1PTlRILFxuICBldmVudHMsXG4gIGNvbXBvbmVudHM6IHtcbiAgICBzaG93TW9yZTogY3VzdG9tQ29tcG9uZW50cy5zaG93TW9yZSxcbiAgfSxcbn1cblxuXG5cbkNvbXBsZXhEYXlWaWV3TGF5b3V0LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gPEJhc2VDYWxlbmRhciB7Li4uYXJnc30gLz5cIiB9LCAuLi5Db21wbGV4RGF5Vmlld0xheW91dC5wYXJhbWV0ZXJzIH07XG5DdXN0b21UaW1lR3V0dGVySGVhZGVyLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gPEJhc2VDYWxlbmRhciB7Li4uYXJnc30gLz5cIiB9LCAuLi5DdXN0b21UaW1lR3V0dGVySGVhZGVyLnBhcmFtZXRlcnMgfTtcbkN1c3RvbVRpbWVHdXR0ZXJXcmFwcGVyLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gPEJhc2VDYWxlbmRhciB7Li4uYXJnc30gLz5cIiB9LCAuLi5DdXN0b21UaW1lR3V0dGVyV3JhcHBlci5wYXJhbWV0ZXJzIH07XG5DdXN0b21EYXRlQ2VsbFdyYXBwZXIucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiA8QmFzZUNhbGVuZGFyIHsuLi5hcmdzfSAvPlwiIH0sIC4uLkN1c3RvbURhdGVDZWxsV3JhcHBlci5wYXJhbWV0ZXJzIH07XG5DdXN0b21UaW1lU2xvdFdyYXBwZXIucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiA8QmFzZUNhbGVuZGFyIHsuLi5hcmdzfSAvPlwiIH0sIC4uLkN1c3RvbVRpbWVTbG90V3JhcHBlci5wYXJhbWV0ZXJzIH07XG5DdXN0b21FdmVudFdyYXBwZXIucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiA8QmFzZUNhbGVuZGFyIHsuLi5hcmdzfSAvPlwiIH0sIC4uLkN1c3RvbUV2ZW50V3JhcHBlci5wYXJhbWV0ZXJzIH07XG5DdXN0b21Ob0FnZW5kYUV2ZW50c0xhYmVsLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gPEJhc2VDYWxlbmRhciB7Li4uYXJnc30gLz5cIiB9LCAuLi5DdXN0b21Ob0FnZW5kYUV2ZW50c0xhYmVsLnBhcmFtZXRlcnMgfTtcbkN1c3RvbURheUNvbHVtbldyYXBwZXIucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiA8QmFzZUNhbGVuZGFyIHsuLi5hcmdzfSAvPlwiIH0sIC4uLkN1c3RvbURheUNvbHVtbldyYXBwZXIucGFyYW1ldGVycyB9O1xuQ3VzdG9tU2hvd01vcmUucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiA8QmFzZUNhbGVuZGFyIHsuLi5hcmdzfSAvPlwiIH0sIC4uLkN1c3RvbVNob3dNb3JlLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgeyBhY3Rpb24gfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWFjdGlvbnMnXFxuXFxuaW1wb3J0IHtcXG4gIGV2ZW50cyxcXG4gIHJlc291cmNlRXZlbnRzLFxcbiAgcmVzb3VyY2VzLFxcbiAgQ2FsZW5kYXIsXFxuICBWaWV3cyxcXG4gIERyYWdBbmREcm9wQ2FsZW5kYXIsXFxufSBmcm9tICcuL2hlbHBlcnMnXFxuaW1wb3J0IGN1c3RvbUNvbXBvbmVudHMgZnJvbSAnLi9yZXNvdXJjZXMvY3VzdG9tQ29tcG9uZW50cydcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0FkZGl0aW9uYWwgRXhhbXBsZXMvRHJhZyBhbmQgRHJvcCcsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgZGVjb3JhdG9yczogW1xcbiAgICAoU3RvcnkpID0+IChcXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICAgIDxTdG9yeSAvPlxcbiAgICAgIDwvZGl2PlxcbiAgICApLFxcbiAgXSxcXG59XFxuXFxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxEcmFnQW5kRHJvcENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVxcblxcbmV4cG9ydCBjb25zdCBEcmFnZ2FibGVBbmRSZXNpemFibGUgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcbkRyYWdnYWJsZUFuZFJlc2l6YWJsZS5zdG9yeU5hbWUgPSAnZHJhZ2dhYmxlIGFuZCByZXNpemFibGUnXFxuRHJhZ2dhYmxlQW5kUmVzaXphYmxlLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoKSxcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxcbiAgZXZlbnRzLFxcbiAgcmVzaXphYmxlOiB0cnVlLFxcbiAgb25FdmVudERyb3A6IGFjdGlvbignZXZlbnQgZHJvcHBlZCcpLFxcbiAgb25FdmVudFJlc2l6ZTogYWN0aW9uKCdldmVudCByZXNpemVkJyksXFxufVxcblxcbmV4cG9ydCBjb25zdCBDdXN0b21TdGVwc0FuZFRpbWVzbG90cyA9IFRlbXBsYXRlLmJpbmQoe30pXFxuQ3VzdG9tU3RlcHNBbmRUaW1lc2xvdHMuc3RvcnlOYW1lID1cXG4gICdkcmFnZ2FibGUgYW5kIHJlc2l6YWJsZSB3aXRoIG5vbi1kZWZhdWx0IHN0ZXBzIGFuZCB0aW1lc2xvdHMnXFxuQ3VzdG9tU3RlcHNBbmRUaW1lc2xvdHMuYXJncyA9IHtcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgpLFxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXFxuICBldmVudHMsXFxuICByZXNpemFibGU6IHRydWUsXFxuICBvbkV2ZW50RHJvcDogYWN0aW9uKCdldmVudCBkcm9wcGVkJyksXFxuICBvbkV2ZW50UmVzaXplOiBhY3Rpb24oJ2V2ZW50IHJlc2l6ZWQnKSxcXG4gIHN0ZXBzOiAxNSxcXG4gIHRpbWVzbG90czogNCxcXG59XFxuXFxuZXhwb3J0IGNvbnN0IFdpdGhNdWx0aURheVRpbWVzID0gVGVtcGxhdGUuYmluZCh7fSlcXG5XaXRoTXVsdGlEYXlUaW1lcy5zdG9yeU5hbWUgPSAnZHJhZ2dhYmxlIGFuZCByZXNpemFibGUgd2l0aCBzaG93TXVsdGlEYXlUaW1lcydcXG5XaXRoTXVsdGlEYXlUaW1lcy5hcmdzID0ge1xcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKCksXFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcXG4gIGV2ZW50cyxcXG4gIHJlc2l6YWJsZTogdHJ1ZSxcXG4gIHNob3dNdWx0aURheVRpbWVzOiB0cnVlLFxcbiAgb25FdmVudERyb3A6IGFjdGlvbignZXZlbnQgZHJvcHBlZCcpLFxcbiAgb25FdmVudFJlc2l6ZTogYWN0aW9uKCdldmVudCByZXNpemVkJyksXFxufVxcblxcbmV4cG9ydCBjb25zdCBXaXRoQ3VzdG9tRGF0ZUNlbGxXcmFwcGVyID0gVGVtcGxhdGUuYmluZCh7fSlcXG5XaXRoQ3VzdG9tRGF0ZUNlbGxXcmFwcGVyLnN0b3J5TmFtZSA9XFxuICAnZHJhZ2dhYmxlIGFuZCByZXNpemFibGUgd2l0aCBjdXN0b20gZGF0ZUNlbGxXcmFwcGVyJ1xcbldpdGhDdXN0b21EYXRlQ2VsbFdyYXBwZXIuYXJncyA9IHtcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgpLFxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXFxuICBldmVudHMsXFxuICByZXNpemFibGU6IHRydWUsXFxuICBzaG93TXVsdGlEYXlUaW1lczogdHJ1ZSxcXG4gIG9uRXZlbnREcm9wOiBhY3Rpb24oJ2V2ZW50IGRyb3BwZWQnKSxcXG4gIG9uRXZlbnRSZXNpemU6IGFjdGlvbignZXZlbnQgcmVzaXplZCcpLFxcbiAgY29tcG9uZW50czoge1xcbiAgICBkYXRlQ2VsbFdyYXBwZXI6IGN1c3RvbUNvbXBvbmVudHMuZGF0ZUNlbGxXcmFwcGVyLFxcbiAgfSxcXG59XFxuXFxuZXhwb3J0IGNvbnN0IFdpdGhDdXN0b21UaW1lc2xvdFdyYXBwZXIgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcbldpdGhDdXN0b21UaW1lc2xvdFdyYXBwZXIuc3RvcnlOYW1lID1cXG4gICdkcmFnZ2FibGUgYW5kIHJlc2l6YWJsZSB3aXRoIGN1c3RvbSB0aW1lU2xvdFdyYXBwZXInXFxuV2l0aEN1c3RvbVRpbWVzbG90V3JhcHBlci5hcmdzID0ge1xcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKCksXFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcXG4gIGV2ZW50cyxcXG4gIHJlc2l6YWJsZTogdHJ1ZSxcXG4gIHNob3dNdWx0aURheVRpbWVzOiB0cnVlLFxcbiAgb25FdmVudERyb3A6IGFjdGlvbignZXZlbnQgZHJvcHBlZCcpLFxcbiAgb25FdmVudFJlc2l6ZTogYWN0aW9uKCdldmVudCByZXNpemVkJyksXFxuICBjb21wb25lbnRzOiB7XFxuICAgIHRpbWVTbG90V3JhcHBlcjogY3VzdG9tQ29tcG9uZW50cy50aW1lU2xvdFdyYXBwZXIsXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgY29uc3QgV2l0aEN1c3RvbUV2ZW50V3JhcHBlciA9IFRlbXBsYXRlLmJpbmQoe30pXFxuV2l0aEN1c3RvbUV2ZW50V3JhcHBlci5zdG9yeU5hbWUgPVxcbiAgJ2RyYWdnYWJsZSBhbmQgcmVzaXphYmxlIHdpdGggY3VzdG9tIGV2ZW50V3JhcHBlcidcXG5XaXRoQ3VzdG9tRXZlbnRXcmFwcGVyLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoKSxcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxcbiAgZXZlbnRzLFxcbiAgcmVzaXphYmxlOiB0cnVlLFxcbiAgc2hvd011bHRpRGF5VGltZXM6IHRydWUsXFxuICBvbkV2ZW50RHJvcDogYWN0aW9uKCdldmVudCBkcm9wcGVkJyksXFxuICBvbkV2ZW50UmVzaXplOiBhY3Rpb24oJ2V2ZW50IHJlc2l6ZWQnKSxcXG4gIGNvbXBvbmVudHM6IHtcXG4gICAgZXZlbnRXcmFwcGVyOiBjdXN0b21Db21wb25lbnRzLmV2ZW50V3JhcHBlcixcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBjb25zdCBEcmFnZ2FibGVNdWx0aXBsZVJlc291cmNlcyA9IFRlbXBsYXRlLmJpbmQoe30pXFxuRHJhZ2dhYmxlTXVsdGlwbGVSZXNvdXJjZXMuc3RvcnlOYW1lID1cXG4gICdkcmFnZ2FibGUgYW5kIHJlc2l6YWJsZSB3aXRoIG11bHRpcGxlIHJlc291cmNlIGxhbmVzJ1xcbkRyYWdnYWJsZU11bHRpcGxlUmVzb3VyY2VzLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoKSxcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXFxuICB2aWV3czogW1ZpZXdzLkRBWSwgVmlld3MuV0VFSywgVmlld3MuQUdFTkRBXSxcXG4gIGV2ZW50czogcmVzb3VyY2VFdmVudHMsXFxuICByZXNvdXJjZXM6IHJlc291cmNlcyxcXG4gIHJlc291cmNlQWNjZXNzb3I6ICdyZXNvdXJjZUlkJyxcXG4gIHJlc291cmNlSWRBY2Nlc3NvcjogJ2lkJyxcXG4gIHJlc291cmNlVGl0bGVBY2Nlc3NvcjogJ25hbWUnLFxcbiAgcmVzaXphYmxlOiB0cnVlLFxcbiAgb25FdmVudERyb3A6IGFjdGlvbignZXZlbnQgZHJvcHBlZCcpLFxcbiAgb25FdmVudFJlc2l6ZTogYWN0aW9uKCdldmVudCByZXNpemVkJyksXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJEcmFnZ2FibGVBbmRSZXNpemFibGVcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjI2fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MzB9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjZ9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MzB9fSxcIkN1c3RvbVN0ZXBzQW5kVGltZXNsb3RzXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNn0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjMwfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjI2fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjMwfX0sXCJXaXRoTXVsdGlEYXlUaW1lc1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjZ9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjozMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNn0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozMH19LFwiV2l0aEN1c3RvbURhdGVDZWxsV3JhcHBlclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjZ9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjozMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNn0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozMH19LFwiV2l0aEN1c3RvbVRpbWVzbG90V3JhcHBlclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjZ9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjozMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNn0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozMH19LFwiV2l0aEN1c3RvbUV2ZW50V3JhcHBlclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjZ9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjozMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNn0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozMH19LFwiRHJhZ2dhYmxlTXVsdGlwbGVSZXNvdXJjZXNcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjI2fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MzB9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjZ9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MzB9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBhY3Rpb24gfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWFjdGlvbnMnXG5cbmltcG9ydCB7XG4gIGV2ZW50cyxcbiAgcmVzb3VyY2VFdmVudHMsXG4gIHJlc291cmNlcyxcbiAgQ2FsZW5kYXIsXG4gIFZpZXdzLFxuICBEcmFnQW5kRHJvcENhbGVuZGFyLFxufSBmcm9tICcuL2hlbHBlcnMnXG5pbXBvcnQgY3VzdG9tQ29tcG9uZW50cyBmcm9tICcuL3Jlc291cmNlcy9jdXN0b21Db21wb25lbnRzJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnQWRkaXRpb25hbCBFeGFtcGxlcy9EcmFnIGFuZCBEcm9wJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgZGVjb3JhdG9yczogW1xuICAgIChTdG9yeSkgPT4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgICAgPFN0b3J5IC8+XG4gICAgICA8L2Rpdj5cbiAgICApLFxuICBdLFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPERyYWdBbmREcm9wQ2FsZW5kYXIgey4uLmFyZ3N9IC8+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgY29uc3QgRHJhZ2dhYmxlQW5kUmVzaXphYmxlID0gVGVtcGxhdGUuYmluZCh7fSk7XG5EcmFnZ2FibGVBbmRSZXNpemFibGUuc3RvcnlOYW1lID0gJ2RyYWdnYWJsZSBhbmQgcmVzaXphYmxlJ1xuRHJhZ2dhYmxlQW5kUmVzaXphYmxlLmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgpLFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcbiAgZXZlbnRzLFxuICByZXNpemFibGU6IHRydWUsXG4gIG9uRXZlbnREcm9wOiBhY3Rpb24oJ2V2ZW50IGRyb3BwZWQnKSxcbiAgb25FdmVudFJlc2l6ZTogYWN0aW9uKCdldmVudCByZXNpemVkJyksXG59XG5cbmV4cG9ydCBjb25zdCBDdXN0b21TdGVwc0FuZFRpbWVzbG90cyA9IFRlbXBsYXRlLmJpbmQoe30pO1xuQ3VzdG9tU3RlcHNBbmRUaW1lc2xvdHMuc3RvcnlOYW1lID1cbiAgJ2RyYWdnYWJsZSBhbmQgcmVzaXphYmxlIHdpdGggbm9uLWRlZmF1bHQgc3RlcHMgYW5kIHRpbWVzbG90cydcbkN1c3RvbVN0ZXBzQW5kVGltZXNsb3RzLmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgpLFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcbiAgZXZlbnRzLFxuICByZXNpemFibGU6IHRydWUsXG4gIG9uRXZlbnREcm9wOiBhY3Rpb24oJ2V2ZW50IGRyb3BwZWQnKSxcbiAgb25FdmVudFJlc2l6ZTogYWN0aW9uKCdldmVudCByZXNpemVkJyksXG4gIHN0ZXBzOiAxNSxcbiAgdGltZXNsb3RzOiA0LFxufVxuXG5leHBvcnQgY29uc3QgV2l0aE11bHRpRGF5VGltZXMgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbldpdGhNdWx0aURheVRpbWVzLnN0b3J5TmFtZSA9ICdkcmFnZ2FibGUgYW5kIHJlc2l6YWJsZSB3aXRoIHNob3dNdWx0aURheVRpbWVzJ1xuV2l0aE11bHRpRGF5VGltZXMuYXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKCksXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxuICBldmVudHMsXG4gIHJlc2l6YWJsZTogdHJ1ZSxcbiAgc2hvd011bHRpRGF5VGltZXM6IHRydWUsXG4gIG9uRXZlbnREcm9wOiBhY3Rpb24oJ2V2ZW50IGRyb3BwZWQnKSxcbiAgb25FdmVudFJlc2l6ZTogYWN0aW9uKCdldmVudCByZXNpemVkJyksXG59XG5cbmV4cG9ydCBjb25zdCBXaXRoQ3VzdG9tRGF0ZUNlbGxXcmFwcGVyID0gVGVtcGxhdGUuYmluZCh7fSk7XG5XaXRoQ3VzdG9tRGF0ZUNlbGxXcmFwcGVyLnN0b3J5TmFtZSA9XG4gICdkcmFnZ2FibGUgYW5kIHJlc2l6YWJsZSB3aXRoIGN1c3RvbSBkYXRlQ2VsbFdyYXBwZXInXG5XaXRoQ3VzdG9tRGF0ZUNlbGxXcmFwcGVyLmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgpLFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcbiAgZXZlbnRzLFxuICByZXNpemFibGU6IHRydWUsXG4gIHNob3dNdWx0aURheVRpbWVzOiB0cnVlLFxuICBvbkV2ZW50RHJvcDogYWN0aW9uKCdldmVudCBkcm9wcGVkJyksXG4gIG9uRXZlbnRSZXNpemU6IGFjdGlvbignZXZlbnQgcmVzaXplZCcpLFxuICBjb21wb25lbnRzOiB7XG4gICAgZGF0ZUNlbGxXcmFwcGVyOiBjdXN0b21Db21wb25lbnRzLmRhdGVDZWxsV3JhcHBlcixcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IFdpdGhDdXN0b21UaW1lc2xvdFdyYXBwZXIgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbldpdGhDdXN0b21UaW1lc2xvdFdyYXBwZXIuc3RvcnlOYW1lID1cbiAgJ2RyYWdnYWJsZSBhbmQgcmVzaXphYmxlIHdpdGggY3VzdG9tIHRpbWVTbG90V3JhcHBlcidcbldpdGhDdXN0b21UaW1lc2xvdFdyYXBwZXIuYXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKCksXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxuICBldmVudHMsXG4gIHJlc2l6YWJsZTogdHJ1ZSxcbiAgc2hvd011bHRpRGF5VGltZXM6IHRydWUsXG4gIG9uRXZlbnREcm9wOiBhY3Rpb24oJ2V2ZW50IGRyb3BwZWQnKSxcbiAgb25FdmVudFJlc2l6ZTogYWN0aW9uKCdldmVudCByZXNpemVkJyksXG4gIGNvbXBvbmVudHM6IHtcbiAgICB0aW1lU2xvdFdyYXBwZXI6IGN1c3RvbUNvbXBvbmVudHMudGltZVNsb3RXcmFwcGVyLFxuICB9LFxufVxuXG5leHBvcnQgY29uc3QgV2l0aEN1c3RvbUV2ZW50V3JhcHBlciA9IFRlbXBsYXRlLmJpbmQoe30pO1xuV2l0aEN1c3RvbUV2ZW50V3JhcHBlci5zdG9yeU5hbWUgPVxuICAnZHJhZ2dhYmxlIGFuZCByZXNpemFibGUgd2l0aCBjdXN0b20gZXZlbnRXcmFwcGVyJ1xuV2l0aEN1c3RvbUV2ZW50V3JhcHBlci5hcmdzID0ge1xuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoKSxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXG4gIGV2ZW50cyxcbiAgcmVzaXphYmxlOiB0cnVlLFxuICBzaG93TXVsdGlEYXlUaW1lczogdHJ1ZSxcbiAgb25FdmVudERyb3A6IGFjdGlvbignZXZlbnQgZHJvcHBlZCcpLFxuICBvbkV2ZW50UmVzaXplOiBhY3Rpb24oJ2V2ZW50IHJlc2l6ZWQnKSxcbiAgY29tcG9uZW50czoge1xuICAgIGV2ZW50V3JhcHBlcjogY3VzdG9tQ29tcG9uZW50cy5ldmVudFdyYXBwZXIsXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBEcmFnZ2FibGVNdWx0aXBsZVJlc291cmNlcyA9IFRlbXBsYXRlLmJpbmQoe30pO0RyYWdnYWJsZU11bHRpcGxlUmVzb3VyY2VzLnN0b3J5TmFtZSA9XG4gICdkcmFnZ2FibGUgYW5kIHJlc2l6YWJsZSB3aXRoIG11bHRpcGxlIHJlc291cmNlIGxhbmVzJ1xuRHJhZ2dhYmxlTXVsdGlwbGVSZXNvdXJjZXMuYXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKCksXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXG4gIHZpZXdzOiBbVmlld3MuREFZLCBWaWV3cy5XRUVLLCBWaWV3cy5BR0VOREFdLFxuICBldmVudHM6IHJlc291cmNlRXZlbnRzLFxuICByZXNvdXJjZXM6IHJlc291cmNlcyxcbiAgcmVzb3VyY2VBY2Nlc3NvcjogJ3Jlc291cmNlSWQnLFxuICByZXNvdXJjZUlkQWNjZXNzb3I6ICdpZCcsXG4gIHJlc291cmNlVGl0bGVBY2Nlc3NvcjogJ25hbWUnLFxuICByZXNpemFibGU6IHRydWUsXG4gIG9uRXZlbnREcm9wOiBhY3Rpb24oJ2V2ZW50IGRyb3BwZWQnKSxcbiAgb25FdmVudFJlc2l6ZTogYWN0aW9uKCdldmVudCByZXNpemVkJyksXG59XG5cblxuXG5EcmFnZ2FibGVBbmRSZXNpemFibGUucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPERyYWdBbmREcm9wQ2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uRHJhZ2dhYmxlQW5kUmVzaXphYmxlLnBhcmFtZXRlcnMgfTtcbkN1c3RvbVN0ZXBzQW5kVGltZXNsb3RzLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxEcmFnQW5kRHJvcENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLkN1c3RvbVN0ZXBzQW5kVGltZXNsb3RzLnBhcmFtZXRlcnMgfTtcbldpdGhNdWx0aURheVRpbWVzLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxEcmFnQW5kRHJvcENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLldpdGhNdWx0aURheVRpbWVzLnBhcmFtZXRlcnMgfTtcbldpdGhDdXN0b21EYXRlQ2VsbFdyYXBwZXIucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPERyYWdBbmREcm9wQ2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uV2l0aEN1c3RvbURhdGVDZWxsV3JhcHBlci5wYXJhbWV0ZXJzIH07XG5XaXRoQ3VzdG9tVGltZXNsb3RXcmFwcGVyLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxEcmFnQW5kRHJvcENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLldpdGhDdXN0b21UaW1lc2xvdFdyYXBwZXIucGFyYW1ldGVycyB9O1xuV2l0aEN1c3RvbUV2ZW50V3JhcHBlci5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8RHJhZ0FuZERyb3BDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcIiB9LCAuLi5XaXRoQ3VzdG9tRXZlbnRXcmFwcGVyLnBhcmFtZXRlcnMgfTtcbkRyYWdnYWJsZU11bHRpcGxlUmVzb3VyY2VzLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxEcmFnQW5kRHJvcENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLkRyYWdnYWJsZU11bHRpcGxlUmVzb3VyY2VzLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQge1xcbiAgQ2FsZW5kYXIsXFxuICBWaWV3cyxcXG4gIG1vbWVudExvY2FsaXplcixcXG4gIGdsb2JhbGl6ZUxvY2FsaXplcixcXG4gIGx1eG9uTG9jYWxpemVyLFxcbn0gZnJvbSAncmVhY3QtYmlnLWNhbGVuZGFyJ1xcbmltcG9ydCB3aXRoRHJhZ0FuZERyb3AgZnJvbSAnLi4vc3JjL2FkZG9ucy9kcmFnQW5kRHJvcCdcXG5cXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgJ21vbWVudC10aW1lem9uZS9idWlsZHMvbW9tZW50LXRpbWV6b25lLXdpdGgtZGF0YS0xOTcwLTIwMzAnXFxuaW1wb3J0IGdsb2JhbGl6ZSBmcm9tICdnbG9iYWxpemUnXFxuaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tICdsdXhvbidcXG5cXG5jb25zdCBsb2NhbGl6ZXJzID0ge1xcbiAgZ2xvYmFsaXplOiBnbG9iYWxpemVMb2NhbGl6ZXIoZ2xvYmFsaXplKSxcXG4gIG1vbWVudDogbW9tZW50TG9jYWxpemVyKG1vbWVudCksXFxuICBsdXhvbjogbHV4b25Mb2NhbGl6ZXIoRGF0ZVRpbWUsIHsgZmlyc3REYXlPZldlZWs6IDcgfSksXFxufVxcblxcbmNvbnN0IERyYWdnYWJsZUNhbGVuZGFyID0gd2l0aERyYWdBbmREcm9wKENhbGVuZGFyKVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnQWRkaXRpb25hbCBFeGFtcGxlcy9FdmVudCBEdXJhdGlvbnMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGRlY29yYXRvcnM6IFtcXG4gICAgKFN0b3J5KSA9PiAoXFxuICAgICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgICA8U3RvcnkgLz5cXG4gICAgICA8L2Rpdj5cXG4gICAgKSxcXG4gIF0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKHsgbG9jYWxpemVyOiBsb2MgPSAnbW9tZW50JywgLi4uYXJncyB9KSA9PiB7XFxuICBjb25zdCBsb2NhbGl6ZXIgPSBsb2NhbGl6ZXJzW2xvY11cXG4gIHJldHVybiA8RHJhZ2dhYmxlQ2FsZW5kYXIgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IHsuLi5hcmdzfSAvPlxcbn1cXG5cXG5leHBvcnQgY29uc3QgRGF5bGlnaHRTYXZpbmdzU3RhcnRzID0gVGVtcGxhdGUuYmluZCh7fSlcXG5EYXlsaWdodFNhdmluZ3NTdGFydHMuYXJnVHlwZXMgPSB7XFxuICBsb2NhbGl6ZXI6IHtcXG4gICAgb3B0aW9uczogWydnbG9iYWxpemUnLCAnbW9tZW50JywgJ2x1eG9uJ10sXFxuICAgIGNvbnRyb2w6IHtcXG4gICAgICB0eXBlOiAnc2VsZWN0JyxcXG4gICAgfSxcXG4gIH0sXFxufVxcbkRheWxpZ2h0U2F2aW5nc1N0YXJ0cy5hcmdzID0ge1xcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLkRBWSxcXG4gIGxvY2FsaXplcjogJ21vbWVudCcsXFxuICBtaW46IG1vbWVudCgnMTI6MDBhbScsICdoOm1tYScpLnRvRGF0ZSgpLFxcbiAgbWF4OiBtb21lbnQoJzExOjU5cG0nLCAnaDptbWEnKS50b0RhdGUoKSxcXG4gIGV2ZW50czogW1xcbiAgICB7XFxuICAgICAgdGl0bGU6ICdvbiBEU1QnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDIyLCAyLCAxMywgMSksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDIyLCAyLCAxMywgMiwgMzApLFxcbiAgICAgIGFsbERheTogZmFsc2UsXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ2Nyb3NzZXMgRFNUJyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAyMiwgMiwgMTMsIDEpLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAyMiwgMiwgMTMsIDYsIDMwKSxcXG4gICAgICBhbGxEYXk6IGZhbHNlLFxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgdGl0bGU6ICdBZnRlciBEU1QnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDIyLCAyLCAxMywgNyksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDIyLCAyLCAxMywgOSwgMzApLFxcbiAgICAgIGFsbERheTogZmFsc2UsXFxuICAgIH0sXFxuICBdLFxcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMjIsIDIsIDEzKSxcXG59XFxuXFxuZXhwb3J0IGNvbnN0IERheWxpZ2h0U2F2aW5nc1N0YXJ0c0FmdGVyMkFtID0gVGVtcGxhdGUuYmluZCh7fSlcXG5EYXlsaWdodFNhdmluZ3NTdGFydHNBZnRlcjJBbS5hcmdUeXBlcyA9IHtcXG4gIGxvY2FsaXplcjoge1xcbiAgICBvcHRpb25zOiBbJ2dsb2JhbGl6ZScsICdtb21lbnQnLCAnbHV4b24nXSxcXG4gICAgY29udHJvbDoge1xcbiAgICAgIHR5cGU6ICdzZWxlY3QnLFxcbiAgICB9LFxcbiAgfSxcXG59XFxuRGF5bGlnaHRTYXZpbmdzU3RhcnRzQWZ0ZXIyQW0uYXJncyA9IHtcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXFxuICBsb2NhbGl6ZXI6ICdtb21lbnQnLFxcbiAgbWluOiBtb21lbnQoJzM6MDBhbScsICdoOm1tYScpLnRvRGF0ZSgpLFxcbiAgbWF4OiBtb21lbnQoJzExOjU5cG0nLCAnaDptbWEnKS50b0RhdGUoKSxcXG4gIGV2ZW50czogW1xcbiAgICB7XFxuICAgICAgdGl0bGU6ICdvbiBEU1QnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDIyLCAyLCAxMywgMSksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDIyLCAyLCAxMywgMiwgMzApLFxcbiAgICAgIGFsbERheTogZmFsc2UsXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ2Nyb3NzZXMgRFNUJyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAyMiwgMiwgMTMsIDEpLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAyMiwgMiwgMTMsIDYsIDMwKSxcXG4gICAgICBhbGxEYXk6IGZhbHNlLFxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgdGl0bGU6ICdBZnRlciBEU1QnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDIyLCAyLCAxMywgNyksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDIyLCAyLCAxMywgOSwgMzApLFxcbiAgICAgIGFsbERheTogZmFsc2UsXFxuICAgIH0sXFxuICBdLFxcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMjIsIDIsIDEzKSxcXG59XFxuXFxuZXhwb3J0IGNvbnN0IERheWxpZ2h0U2F2aW5nc0VuZHMgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcbkRheWxpZ2h0U2F2aW5nc0VuZHMuYXJnVHlwZXMgPSB7XFxuICBsb2NhbGl6ZXI6IHtcXG4gICAgb3B0aW9uczogWydnbG9iYWxpemUnLCAnbW9tZW50JywgJ2x1eG9uJ10sXFxuICAgIGNvbnRyb2w6IHtcXG4gICAgICB0eXBlOiAnc2VsZWN0JyxcXG4gICAgfSxcXG4gIH0sXFxufVxcbkRheWxpZ2h0U2F2aW5nc0VuZHMuYXJncyA9IHtcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXFxuICBsb2NhbGl6ZXI6ICdtb21lbnQnLFxcbiAgbWluOiBtb21lbnQoJzEyOjAwYW0nLCAnaDptbWEnKS50b0RhdGUoKSxcXG4gIG1heDogbW9tZW50KCcxMTo1OXBtJywgJ2g6bW1hJykudG9EYXRlKCksXFxuICBldmVudHM6IFtcXG4gICAge1xcbiAgICAgIHRpdGxlOiAnb24gRFNUJyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAyMiwgMTAsIDYsIDEpLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAyMiwgMTAsIDYsIDMsIDMwKSxcXG4gICAgICBhbGxEYXk6IGZhbHNlLFxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgdGl0bGU6ICdjcm9zc2VzIERTVCcsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMjIsIDEwLCA2LCAxKSxcXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMjIsIDEwLCA2LCA2LCAzMCksXFxuICAgICAgYWxsRGF5OiBmYWxzZSxcXG4gICAgfSxcXG4gICAge1xcbiAgICAgIHRpdGxlOiAnQWZ0ZXIgRFNUJyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAyMiwgMTAsIDYsIDcpLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAyMiwgMTAsIDYsIDcsIDQ1KSxcXG4gICAgICBhbGxEYXk6IGZhbHNlLFxcbiAgICB9LFxcbiAgXSxcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDIyLCAxMCwgNiksXFxufVxcblxcbmV4cG9ydCBjb25zdCBEYXlsaWdodFNhdmluZ3NFbmRzQWZ0ZXIyQW0gPSBUZW1wbGF0ZS5iaW5kKHt9KVxcbkRheWxpZ2h0U2F2aW5nc0VuZHNBZnRlcjJBbS5hcmdUeXBlcyA9IHtcXG4gIGxvY2FsaXplcjoge1xcbiAgICBvcHRpb25zOiBbJ2dsb2JhbGl6ZScsICdtb21lbnQnLCAnbHV4b24nXSxcXG4gICAgY29udHJvbDoge1xcbiAgICAgIHR5cGU6ICdzZWxlY3QnLFxcbiAgICB9LFxcbiAgfSxcXG59XFxuRGF5bGlnaHRTYXZpbmdzRW5kc0FmdGVyMkFtLmFyZ3MgPSB7XFxuICBkZWZhdWx0VmlldzogVmlld3MuREFZLFxcbiAgbG9jYWxpemVyOiAnbW9tZW50JyxcXG4gIG1pbjogbW9tZW50KCczOjAwYW0nLCAnaDptbWEnKS50b0RhdGUoKSxcXG4gIG1heDogbW9tZW50KCcxMTo1OXBtJywgJ2g6bW1hJykudG9EYXRlKCksXFxuICBldmVudHM6IFtcXG4gICAge1xcbiAgICAgIHRpdGxlOiAnQWZ0ZXIgRFNUJyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAyMiwgMTAsIDYsIDcpLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAyMiwgMTAsIDYsIDksIDMwKSxcXG4gICAgICBhbGxEYXk6IGZhbHNlLFxcbiAgICB9LFxcbiAgXSxcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDIyLCAxMCwgNiksXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJEYXlsaWdodFNhdmluZ3NTdGFydHNcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjM2fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzl9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzZ9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzl9fSxcIkRheWxpZ2h0U2F2aW5nc1N0YXJ0c0FmdGVyMkFtXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjozNn0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjM5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjM2fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjM5fX0sXCJEYXlsaWdodFNhdmluZ3NFbmRzXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjozNn0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjM5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjM2fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjM5fX0sXCJEYXlsaWdodFNhdmluZ3NFbmRzQWZ0ZXIyQW1cIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjM2fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzl9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzZ9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzl9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQge1xuICBDYWxlbmRhcixcbiAgVmlld3MsXG4gIG1vbWVudExvY2FsaXplcixcbiAgZ2xvYmFsaXplTG9jYWxpemVyLFxuICBsdXhvbkxvY2FsaXplcixcbn0gZnJvbSAncmVhY3QtYmlnLWNhbGVuZGFyJ1xuaW1wb3J0IHdpdGhEcmFnQW5kRHJvcCBmcm9tICcuLi9zcmMvYWRkb25zL2RyYWdBbmREcm9wJ1xuXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCAnbW9tZW50LXRpbWV6b25lL2J1aWxkcy9tb21lbnQtdGltZXpvbmUtd2l0aC1kYXRhLTE5NzAtMjAzMCdcbmltcG9ydCBnbG9iYWxpemUgZnJvbSAnZ2xvYmFsaXplJ1xuaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tICdsdXhvbidcblxuY29uc3QgbG9jYWxpemVycyA9IHtcbiAgZ2xvYmFsaXplOiBnbG9iYWxpemVMb2NhbGl6ZXIoZ2xvYmFsaXplKSxcbiAgbW9tZW50OiBtb21lbnRMb2NhbGl6ZXIobW9tZW50KSxcbiAgbHV4b246IGx1eG9uTG9jYWxpemVyKERhdGVUaW1lLCB7IGZpcnN0RGF5T2ZXZWVrOiA3IH0pLFxufVxuXG5jb25zdCBEcmFnZ2FibGVDYWxlbmRhciA9IHdpdGhEcmFnQW5kRHJvcChDYWxlbmRhcilcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0FkZGl0aW9uYWwgRXhhbXBsZXMvRXZlbnQgRHVyYXRpb25zJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgZGVjb3JhdG9yczogW1xuICAgIChTdG9yeSkgPT4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgICAgPFN0b3J5IC8+XG4gICAgICA8L2Rpdj5cbiAgICApLFxuICBdLFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9ICh7IGxvY2FsaXplcjogbG9jID0gJ21vbWVudCcsIC4uLmFyZ3MgfSkgPT4ge1xuICBjb25zdCBsb2NhbGl6ZXIgPSBsb2NhbGl6ZXJzW2xvY11cbiAgcmV0dXJuIDxEcmFnZ2FibGVDYWxlbmRhciBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gey4uLmFyZ3N9IC8+XG59XG5cbmV4cG9ydCBjb25zdCBEYXlsaWdodFNhdmluZ3NTdGFydHMgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbkRheWxpZ2h0U2F2aW5nc1N0YXJ0cy5hcmdUeXBlcyA9IHtcbiAgbG9jYWxpemVyOiB7XG4gICAgb3B0aW9uczogWydnbG9iYWxpemUnLCAnbW9tZW50JywgJ2x1eG9uJ10sXG4gICAgY29udHJvbDoge1xuICAgICAgdHlwZTogJ3NlbGVjdCcsXG4gICAgfSxcbiAgfSxcbn1cbkRheWxpZ2h0U2F2aW5nc1N0YXJ0cy5hcmdzID0ge1xuICBkZWZhdWx0VmlldzogVmlld3MuREFZLFxuICBsb2NhbGl6ZXI6ICdtb21lbnQnLFxuICBtaW46IG1vbWVudCgnMTI6MDBhbScsICdoOm1tYScpLnRvRGF0ZSgpLFxuICBtYXg6IG1vbWVudCgnMTE6NTlwbScsICdoOm1tYScpLnRvRGF0ZSgpLFxuICBldmVudHM6IFtcbiAgICB7XG4gICAgICB0aXRsZTogJ29uIERTVCcsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAyMiwgMiwgMTMsIDEpLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDIyLCAyLCAxMywgMiwgMzApLFxuICAgICAgYWxsRGF5OiBmYWxzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnY3Jvc3NlcyBEU1QnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMjIsIDIsIDEzLCAxKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAyMiwgMiwgMTMsIDYsIDMwKSxcbiAgICAgIGFsbERheTogZmFsc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ0FmdGVyIERTVCcsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAyMiwgMiwgMTMsIDcpLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDIyLCAyLCAxMywgOSwgMzApLFxuICAgICAgYWxsRGF5OiBmYWxzZSxcbiAgICB9LFxuICBdLFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAyMiwgMiwgMTMpLFxufVxuXG5leHBvcnQgY29uc3QgRGF5bGlnaHRTYXZpbmdzU3RhcnRzQWZ0ZXIyQW0gPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbkRheWxpZ2h0U2F2aW5nc1N0YXJ0c0FmdGVyMkFtLmFyZ1R5cGVzID0ge1xuICBsb2NhbGl6ZXI6IHtcbiAgICBvcHRpb25zOiBbJ2dsb2JhbGl6ZScsICdtb21lbnQnLCAnbHV4b24nXSxcbiAgICBjb250cm9sOiB7XG4gICAgICB0eXBlOiAnc2VsZWN0JyxcbiAgICB9LFxuICB9LFxufVxuRGF5bGlnaHRTYXZpbmdzU3RhcnRzQWZ0ZXIyQW0uYXJncyA9IHtcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLkRBWSxcbiAgbG9jYWxpemVyOiAnbW9tZW50JyxcbiAgbWluOiBtb21lbnQoJzM6MDBhbScsICdoOm1tYScpLnRvRGF0ZSgpLFxuICBtYXg6IG1vbWVudCgnMTE6NTlwbScsICdoOm1tYScpLnRvRGF0ZSgpLFxuICBldmVudHM6IFtcbiAgICB7XG4gICAgICB0aXRsZTogJ29uIERTVCcsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAyMiwgMiwgMTMsIDEpLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDIyLCAyLCAxMywgMiwgMzApLFxuICAgICAgYWxsRGF5OiBmYWxzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnY3Jvc3NlcyBEU1QnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMjIsIDIsIDEzLCAxKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAyMiwgMiwgMTMsIDYsIDMwKSxcbiAgICAgIGFsbERheTogZmFsc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ0FmdGVyIERTVCcsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAyMiwgMiwgMTMsIDcpLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDIyLCAyLCAxMywgOSwgMzApLFxuICAgICAgYWxsRGF5OiBmYWxzZSxcbiAgICB9LFxuICBdLFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAyMiwgMiwgMTMpLFxufVxuXG5leHBvcnQgY29uc3QgRGF5bGlnaHRTYXZpbmdzRW5kcyA9IFRlbXBsYXRlLmJpbmQoe30pO1xuRGF5bGlnaHRTYXZpbmdzRW5kcy5hcmdUeXBlcyA9IHtcbiAgbG9jYWxpemVyOiB7XG4gICAgb3B0aW9uczogWydnbG9iYWxpemUnLCAnbW9tZW50JywgJ2x1eG9uJ10sXG4gICAgY29udHJvbDoge1xuICAgICAgdHlwZTogJ3NlbGVjdCcsXG4gICAgfSxcbiAgfSxcbn1cbkRheWxpZ2h0U2F2aW5nc0VuZHMuYXJncyA9IHtcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLkRBWSxcbiAgbG9jYWxpemVyOiAnbW9tZW50JyxcbiAgbWluOiBtb21lbnQoJzEyOjAwYW0nLCAnaDptbWEnKS50b0RhdGUoKSxcbiAgbWF4OiBtb21lbnQoJzExOjU5cG0nLCAnaDptbWEnKS50b0RhdGUoKSxcbiAgZXZlbnRzOiBbXG4gICAge1xuICAgICAgdGl0bGU6ICdvbiBEU1QnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMjIsIDEwLCA2LCAxKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAyMiwgMTAsIDYsIDMsIDMwKSxcbiAgICAgIGFsbERheTogZmFsc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ2Nyb3NzZXMgRFNUJyxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDIyLCAxMCwgNiwgMSksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMjIsIDEwLCA2LCA2LCAzMCksXG4gICAgICBhbGxEYXk6IGZhbHNlLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdBZnRlciBEU1QnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMjIsIDEwLCA2LCA3KSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAyMiwgMTAsIDYsIDcsIDQ1KSxcbiAgICAgIGFsbERheTogZmFsc2UsXG4gICAgfSxcbiAgXSxcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMjIsIDEwLCA2KSxcbn1cblxuZXhwb3J0IGNvbnN0IERheWxpZ2h0U2F2aW5nc0VuZHNBZnRlcjJBbSA9IFRlbXBsYXRlLmJpbmQoe30pO0RheWxpZ2h0U2F2aW5nc0VuZHNBZnRlcjJBbS5hcmdUeXBlcyA9IHtcbiAgbG9jYWxpemVyOiB7XG4gICAgb3B0aW9uczogWydnbG9iYWxpemUnLCAnbW9tZW50JywgJ2x1eG9uJ10sXG4gICAgY29udHJvbDoge1xuICAgICAgdHlwZTogJ3NlbGVjdCcsXG4gICAgfSxcbiAgfSxcbn1cbkRheWxpZ2h0U2F2aW5nc0VuZHNBZnRlcjJBbS5hcmdzID0ge1xuICBkZWZhdWx0VmlldzogVmlld3MuREFZLFxuICBsb2NhbGl6ZXI6ICdtb21lbnQnLFxuICBtaW46IG1vbWVudCgnMzowMGFtJywgJ2g6bW1hJykudG9EYXRlKCksXG4gIG1heDogbW9tZW50KCcxMTo1OXBtJywgJ2g6bW1hJykudG9EYXRlKCksXG4gIGV2ZW50czogW1xuICAgIHtcbiAgICAgIHRpdGxlOiAnQWZ0ZXIgRFNUJyxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDIyLCAxMCwgNiwgNyksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMjIsIDEwLCA2LCA5LCAzMCksXG4gICAgICBhbGxEYXk6IGZhbHNlLFxuICAgIH0sXG4gIF0sXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDIyLCAxMCwgNiksXG59XG5cblxuXG5EYXlsaWdodFNhdmluZ3NTdGFydHMucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7IGxvY2FsaXplcjogbG9jID0gJ21vbWVudCcsIC4uLmFyZ3MgfSkgPT4ge1xcbiAgY29uc3QgbG9jYWxpemVyID0gbG9jYWxpemVyc1tsb2NdXFxuICByZXR1cm4gPERyYWdnYWJsZUNhbGVuZGFyIGxvY2FsaXplcj17bG9jYWxpemVyfSB7Li4uYXJnc30gLz5cXG59XCIgfSwgLi4uRGF5bGlnaHRTYXZpbmdzU3RhcnRzLnBhcmFtZXRlcnMgfTtcbkRheWxpZ2h0U2F2aW5nc1N0YXJ0c0FmdGVyMkFtLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoeyBsb2NhbGl6ZXI6IGxvYyA9ICdtb21lbnQnLCAuLi5hcmdzIH0pID0+IHtcXG4gIGNvbnN0IGxvY2FsaXplciA9IGxvY2FsaXplcnNbbG9jXVxcbiAgcmV0dXJuIDxEcmFnZ2FibGVDYWxlbmRhciBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gey4uLmFyZ3N9IC8+XFxufVwiIH0sIC4uLkRheWxpZ2h0U2F2aW5nc1N0YXJ0c0FmdGVyMkFtLnBhcmFtZXRlcnMgfTtcbkRheWxpZ2h0U2F2aW5nc0VuZHMucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7IGxvY2FsaXplcjogbG9jID0gJ21vbWVudCcsIC4uLmFyZ3MgfSkgPT4ge1xcbiAgY29uc3QgbG9jYWxpemVyID0gbG9jYWxpemVyc1tsb2NdXFxuICByZXR1cm4gPERyYWdnYWJsZUNhbGVuZGFyIGxvY2FsaXplcj17bG9jYWxpemVyfSB7Li4uYXJnc30gLz5cXG59XCIgfSwgLi4uRGF5bGlnaHRTYXZpbmdzRW5kcy5wYXJhbWV0ZXJzIH07XG5EYXlsaWdodFNhdmluZ3NFbmRzQWZ0ZXIyQW0ucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIih7IGxvY2FsaXplcjogbG9jID0gJ21vbWVudCcsIC4uLmFyZ3MgfSkgPT4ge1xcbiAgY29uc3QgbG9jYWxpemVyID0gbG9jYWxpemVyc1tsb2NdXFxuICByZXR1cm4gPERyYWdnYWJsZUNhbGVuZGFyIGxvY2FsaXplcj17bG9jYWxpemVyfSB7Li4uYXJnc30gLz5cXG59XCIgfSwgLi4uRGF5bGlnaHRTYXZpbmdzRW5kc0FmdGVyMkFtLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgeyBhY3Rpb24gfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWFjdGlvbnMnXFxuXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuXFxuaW1wb3J0IHsgZXZlbnRzLCBDYWxlbmRhciwgVmlld3MsIERyYWdBbmREcm9wQ2FsZW5kYXIgfSBmcm9tICcuL2hlbHBlcnMnXFxuaW1wb3J0IGNyZWF0ZUV2ZW50cyBmcm9tICcuL2hlbHBlcnMvY3JlYXRlRXZlbnRzJ1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnQWRkaXRpb25hbCBFeGFtcGxlcy9MYXlvdXQnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGRlY29yYXRvcnM6IFtcXG4gICAgKFN0b3J5KSA9PiAoXFxuICAgICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgICA8U3RvcnkgLz5cXG4gICAgICA8L2Rpdj5cXG4gICAgKSxcXG4gIF0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG5cXG5jb25zdCBkZWZhdWx0RGF0ZSA9IG5ldyBEYXRlKClcXG5cXG5leHBvcnQgY29uc3QgRXZlbnRMYXlvdXQgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcbkV2ZW50TGF5b3V0LmFyZ3MgPSB7XFxuICBkZWZhdWx0VmlldzogVmlld3MuREFZLFxcbiAgZGVmYXVsdERhdGUsXFxuICB0aW1lc2xvdHM6IDQsXFxuICBldmVudHM6IGNyZWF0ZUV2ZW50cygxKSxcXG59XFxuXFxuZXhwb3J0IGNvbnN0IEZpcnN0T2ZXZWVrQWxsRGF5ID0gVGVtcGxhdGUuYmluZCh7fSlcXG5GaXJzdE9mV2Vla0FsbERheS5zdG9yeU5hbWUgPSAnZmlyc3Qgb2YgdGhlIHdlZWsgYWxsLWRheSBldmVudCdcXG5GaXJzdE9mV2Vla0FsbERheS5hcmdzID0ge1xcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTYsIDExLCA0KSxcXG4gIGV2ZW50czogW1xcbiAgICB7XFxuICAgICAgYWxsRGF5OiB0cnVlLFxcbiAgICAgIHRpdGxlOiAnQWxsIERheSBFdmVudCcsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDExLCA0KSxcXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDExLCA0KSxcXG4gICAgfSxcXG4gIF0sXFxufVxcblxcbmV4cG9ydCBjb25zdCBFbmRPZldlZWtBbGxEYXkgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcbkVuZE9mV2Vla0FsbERheS5zdG9yeU5hbWUgPSAnZW5kIG9mIHRoZSB3ZWVrIGFsbC1kYXkgZXZlbnQnXFxuRW5kT2ZXZWVrQWxsRGF5LmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNiwgMTEsIDMpLFxcbiAgZXZlbnRzOiBbXFxuICAgIHtcXG4gICAgICBhbGxEYXk6IHRydWUsXFxuICAgICAgdGl0bGU6ICdBbGwgRGF5IEV2ZW50JyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTEsIDMpLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTEsIDMpLFxcbiAgICB9LFxcbiAgXSxcXG59XFxuXFxuZXhwb3J0IGNvbnN0IEV2ZW50QXRTdGFydE9mV2VlayA9IFRlbXBsYXRlLmJpbmQoe30pXFxuRXZlbnRBdFN0YXJ0T2ZXZWVrLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNiwgMTEsIDQpLFxcbiAgZXZlbnRzOiBbXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ2hhcyB0aW1lJyxcXG4gICAgICBzdGFydDogbW9tZW50KG5ldyBEYXRlKDIwMTYsIDExLCA0KSlcXG4gICAgICAgIC5hZGQoMSwgJ2RheXMnKVxcbiAgICAgICAgLnN1YnRyYWN0KDUsICdob3VycycpXFxuICAgICAgICAudG9EYXRlKCksXFxuICAgICAgZW5kOiBtb21lbnQobmV3IERhdGUoMjAxNiwgMTEsIDQpKVxcbiAgICAgICAgLmFkZCgxLCAnZGF5cycpXFxuICAgICAgICAuc3VidHJhY3QoNCwgJ2hvdXJzJylcXG4gICAgICAgIC50b0RhdGUoKSxcXG4gICAgfSxcXG4gIF0sXFxufVxcblxcbmV4cG9ydCBjb25zdCBFdmVudEF0RW5kT2ZXZWVrID0gVGVtcGxhdGUuYmluZCh7fSlcXG5FdmVudEF0RW5kT2ZXZWVrLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNiwgMTEsIDMpLFxcbiAgZXZlbnRzOiBbXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ2hhcyB0aW1lJyxcXG4gICAgICBzdGFydDogbW9tZW50KG5ldyBEYXRlKDIwMTYsIDExLCAzKSlcXG4gICAgICAgIC5hZGQoMSwgJ2RheXMnKVxcbiAgICAgICAgLnN1YnRyYWN0KDUsICdob3VycycpXFxuICAgICAgICAudG9EYXRlKCksXFxuICAgICAgZW5kOiBtb21lbnQobmV3IERhdGUoMjAxNiwgMTEsIDMpKVxcbiAgICAgICAgLmFkZCgxLCAnZGF5cycpXFxuICAgICAgICAuc3VidHJhY3QoNCwgJ2hvdXJzJylcXG4gICAgICAgIC50b0RhdGUoKSxcXG4gICAgfSxcXG4gIF0sXFxufVxcblxcbmV4cG9ydCBjb25zdCBFdmVudHNPbkFDb25zdHJhaW5lZERheUNvbHVtbiA9IFRlbXBsYXRlLmJpbmQoe30pXFxuRXZlbnRzT25BQ29uc3RyYWluZWREYXlDb2x1bW4uYXJncyA9IHtcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXFxuICBtaW46IG1vbWVudCgnOCBhbScsICdoIGEnKS50b0RhdGUoKSxcXG4gIG1heDogbW9tZW50KCc1IHBtJywgJ2ggYScpLnRvRGF0ZSgpLFxcbiAgZXZlbnRzLFxcbn1cXG5cXG5leHBvcnQgY29uc3QgTm9EdXJhdGlvbiA9IFRlbXBsYXRlLmJpbmQoe30pXFxuTm9EdXJhdGlvbi5hcmdzID0ge1xcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTYsIDExLCA0KSxcXG4gIGV2ZW50czogW1xcbiAgICB7XFxuICAgICAgdGl0bGU6ICdzdGFydCBvZiB0aGUgd2VlaycsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDExLCA0KSxcXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDExLCA0KSxcXG4gICAgfSxcXG4gICAge1xcbiAgICAgIHRpdGxlOiAnZW5kIG9mIHRoZSB3ZWVrJyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTEsIDMpLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTEsIDMpLFxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgdGl0bGU6ICdtaWRkbGUnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE2LCAxMSwgNiksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMSwgNiksXFxuICAgIH0sXFxuICBdLFxcbn1cXG5cXG5leHBvcnQgY29uc3QgRGF5U3BhbiA9IFRlbXBsYXRlLmJpbmQoe30pXFxuRGF5U3Bhbi5zdG9yeU5hbWUgPSAnU2luZ2xlIGRheXMgc2hvdWxkIG9ubHkgc3BhbiBvbmUgc2xvdCwgbXVsdGktZGF5cyBtdWx0aXBsZSdcXG5EYXlTcGFuLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMSksXFxuICBldmVudHM6IFtcXG4gICAge1xcbiAgICAgIHRpdGxlOiAnU2luZ2xlRGF5IDEnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAxMCksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMSksXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ1NpbmdsZURheSAyJyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgMTEpLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgMTIpLFxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgdGl0bGU6ICdTaW5nbGVEYXkgMycsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEyKSxcXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcXG4gICAgfSxcXG4gICAge1xcbiAgICAgIHRpdGxlOiAnU2luZ2xlRGF5IDQnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxNCksXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ011bHRpRGF5IDEnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAyNCksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAyNSwgMSwgMCwgMCwgMCksXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ011bHRpRGF5IDInLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAyNSksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAyNiwgMSwgMCwgMCwgMCksXFxuICAgIH0sXFxuICBdLFxcbn1cXG5cXG5leHBvcnQgY29uc3QgWmVyb0R1cmF0aW9uT2RkaXRpZXMgPSAoKSA9PiB7XFxuICByZXR1cm4gKFxcbiAgICA8RHJhZ0FuZERyb3BDYWxlbmRhclxcbiAgICAgIGRlZmF1bHREYXRlPXtuZXcgRGF0ZSgyMDE1LCAzLCAxKX1cXG4gICAgICBldmVudHM9e1tcXG4gICAgICAgIHtcXG4gICAgICAgICAgaWQ6IDQsXFxuICAgICAgICAgIHRpdGxlOiAnMCBkYXkgZHVyYXRpb24nLFxcbiAgICAgICAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgOCwgMCwgMCwgMCksXFxuICAgICAgICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgOCwgMCwgMCwgMCksXFxuICAgICAgICB9LFxcbiAgICAgICAge1xcbiAgICAgICAgICBpZDogNCxcXG4gICAgICAgICAgdGl0bGU6ICcxIGRheSBkdXJhdGlvbicsXFxuICAgICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCA5LCAwLCAwLCAwKSxcXG4gICAgICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMCwgMCwgMCwgMCksXFxuICAgICAgICB9LFxcbiAgICAgIF19XFxuICAgIC8+XFxuICApXFxufVxcblxcbmV4cG9ydCBjb25zdCBaZXJvRHVyYXRpb25PdmVybGFwID0gKCkgPT4ge1xcbiAgcmV0dXJuIChcXG4gICAgPERyYWdBbmREcm9wQ2FsZW5kYXJcXG4gICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgZXZlbnRzPXtbXFxuICAgICAgICB7XFxuICAgICAgICAgIHRpdGxlOiAnZXZlbnQgYScsXFxuICAgICAgICAgIHN0YXJ0OiBkZWZhdWx0RGF0ZSxcXG4gICAgICAgICAgZW5kOiBkZWZhdWx0RGF0ZSxcXG4gICAgICAgIH0sXFxuICAgICAgICB7XFxuICAgICAgICAgIHRpdGxlOiAnZXZlbnQgYicsXFxuICAgICAgICAgIHN0YXJ0OiBkZWZhdWx0RGF0ZSxcXG4gICAgICAgICAgZW5kOiBkZWZhdWx0RGF0ZSxcXG4gICAgICAgIH0sXFxuICAgICAgXX1cXG4gICAgICBkYXlMYXlvdXRBbGdvcml0aG09eyduby1vdmVybGFwJ31cXG4gICAgICBzY3JvbGxUb1RpbWU9e2RlZmF1bHREYXRlfVxcbiAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxcbiAgICAvPlxcbiAgKVxcbn1cXG5cXG5leHBvcnQgY29uc3QgT3ZlcmxhcHBpbmdCYWNrZ3JvdW5kRXZlbnRzT3ZlcmxhcCA9IFRlbXBsYXRlLmJpbmQoe30pXFxuT3ZlcmxhcHBpbmdCYWNrZ3JvdW5kRXZlbnRzT3ZlcmxhcC5zdG9yeU5hbWUgPVxcbiAgXFxcIk92ZXJsYXBwaW5nIEJhY2tncm91bmQgRXZlbnRzIC0gJ292ZXJsYXAnXFxcIlxcbk92ZXJsYXBwaW5nQmFja2dyb3VuZEV2ZW50c092ZXJsYXAuYXJncyA9IHtcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE2LCAxMSwgMyksXFxuICBkYXlMYXlvdXRBbGdvcml0aG06ICdvdmVybGFwJyxcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxcbiAgc2Nyb2xsVG9UaW1lOiBuZXcgRGF0ZSgyMDE2LCAxMSwgMSwgNywgMCksXFxuICBiYWNrZ3JvdW5kRXZlbnRzOiBbXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ0ZpcnN0IEV2ZW50JyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTAsIDI4LCAxMCwgMzApLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTAsIDI4LCAxOCwgMCksXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ1NlY29uZCBFdmVudCcsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOCwgMTIsIDApLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTAsIDI4LCAxNiwgMzApLFxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgdGl0bGU6ICdUaGlyZCBFdmVudCcsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOSwgOCwgMCksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMCwgMjksIDIxLCAwKSxcXG4gICAgfSxcXG4gICAge1xcbiAgICAgIHRpdGxlOiAnRm91cnRoIEV2ZW50JyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTAsIDI5LCA5LCAzMCksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMCwgMjksIDE5LCAzMCksXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ0ZpZnRoIEV2ZW50JyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTAsIDI5LCAxMSwgMCksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMCwgMjksIDE4LCAwKSxcXG4gICAgfSxcXG4gICAge1xcbiAgICAgIHRpdGxlOiAnU2l4dGggRXZlbnQnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE2LCAxMSwgMSwgOSwgMCksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMSwgMSwgMTQsIDApLFxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgdGl0bGU6ICdTZXZlbnRoIEV2ZW50JyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTEsIDEsIDExLCAwKSxcXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDExLCAxLCAxNiwgMCksXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ0VpZ2h0aCBFdmVudCcsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDExLCAxLCAxMywgMCksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMSwgMSwgMTgsIDApLFxcbiAgICB9LFxcbiAgXSxcXG59XFxuXFxuZXhwb3J0IGNvbnN0IE92ZXJsYXBwaW5nQmFja2dyb3VuZEV2ZW50c05vT3ZlcmxhcCA9IFRlbXBsYXRlLmJpbmQoe30pXFxuT3ZlcmxhcHBpbmdCYWNrZ3JvdW5kRXZlbnRzTm9PdmVybGFwLnN0b3J5TmFtZSA9XFxuICBcXFwiT3ZlcmxhcHBpbmcgQmFja2dyb3VuZCBFdmVudHMgLSAnbm8tb3ZlcmxhcCdcXFwiXFxuT3ZlcmxhcHBpbmdCYWNrZ3JvdW5kRXZlbnRzTm9PdmVybGFwLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNiwgMTEsIDMpLFxcbiAgZGF5TGF5b3V0QWxnb3JpdGhtOiAnbm8tb3ZlcmxhcCcsXFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcXG4gIHNjcm9sbFRvVGltZTogbmV3IERhdGUoMjAxNiwgMTEsIDEsIDcsIDApLFxcbiAgYmFja2dyb3VuZEV2ZW50czogW1xcbiAgICB7XFxuICAgICAgdGl0bGU6ICdGaXJzdCBFdmVudCcsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOCwgMTAsIDMwKSxcXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOCwgMTgsIDApLFxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgdGl0bGU6ICdTZWNvbmQgRXZlbnQnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE2LCAxMCwgMjgsIDEyLCAwKSxcXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOCwgMTYsIDMwKSxcXG4gICAgfSxcXG4gICAge1xcbiAgICAgIHRpdGxlOiAnVGhpcmQgRXZlbnQnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE2LCAxMCwgMjksIDgsIDApLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTAsIDI5LCAyMSwgMCksXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ0ZvdXJ0aCBFdmVudCcsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOSwgOSwgMzApLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTAsIDI5LCAxOSwgMzApLFxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgdGl0bGU6ICdGaWZ0aCBFdmVudCcsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOSwgMTEsIDApLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTAsIDI5LCAxOCwgMCksXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ1NpeHRoIEV2ZW50JyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTEsIDEsIDksIDApLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTEsIDEsIDE0LCAwKSxcXG4gICAgfSxcXG4gICAge1xcbiAgICAgIHRpdGxlOiAnU2V2ZW50aCBFdmVudCcsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDExLCAxLCAxMSwgMCksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMSwgMSwgMTYsIDApLFxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgdGl0bGU6ICdFaWdodGggRXZlbnQnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE2LCAxMSwgMSwgMTMsIDApLFxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTEsIDEsIDE4LCAwKSxcXG4gICAgfSxcXG4gIF0sXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJFdmVudExheW91dFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjF9LFwiZW5kTG9jXCI6e1wiY29sXCI6NDksXCJsaW5lXCI6MjF9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjF9LFwiZW5kQm9keVwiOntcImNvbFwiOjQ5LFwibGluZVwiOjIxfX0sXCJGaXJzdE9mV2Vla0FsbERheVwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjF9LFwiZW5kTG9jXCI6e1wiY29sXCI6NDksXCJsaW5lXCI6MjF9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjF9LFwiZW5kQm9keVwiOntcImNvbFwiOjQ5LFwibGluZVwiOjIxfX0sXCJFbmRPZldlZWtBbGxEYXlcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjIxfSxcImVuZExvY1wiOntcImNvbFwiOjQ5LFwibGluZVwiOjIxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjIxfSxcImVuZEJvZHlcIjp7XCJjb2xcIjo0OSxcImxpbmVcIjoyMX19LFwiRXZlbnRBdFN0YXJ0T2ZXZWVrXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyMX0sXCJlbmRMb2NcIjp7XCJjb2xcIjo0OSxcImxpbmVcIjoyMX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyMX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6NDksXCJsaW5lXCI6MjF9fSxcIkV2ZW50QXRFbmRPZldlZWtcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjIxfSxcImVuZExvY1wiOntcImNvbFwiOjQ5LFwibGluZVwiOjIxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjIxfSxcImVuZEJvZHlcIjp7XCJjb2xcIjo0OSxcImxpbmVcIjoyMX19LFwiRXZlbnRzT25BQ29uc3RyYWluZWREYXlDb2x1bW5cIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjIxfSxcImVuZExvY1wiOntcImNvbFwiOjQ5LFwibGluZVwiOjIxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjIxfSxcImVuZEJvZHlcIjp7XCJjb2xcIjo0OSxcImxpbmVcIjoyMX19LFwiTm9EdXJhdGlvblwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjF9LFwiZW5kTG9jXCI6e1wiY29sXCI6NDksXCJsaW5lXCI6MjF9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjF9LFwiZW5kQm9keVwiOntcImNvbFwiOjQ5LFwibGluZVwiOjIxfX0sXCJEYXlTcGFuXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyMX0sXCJlbmRMb2NcIjp7XCJjb2xcIjo0OSxcImxpbmVcIjoyMX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyMX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6NDksXCJsaW5lXCI6MjF9fSxcIlplcm9EdXJhdGlvbk9kZGl0aWVzXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjozNixcImxpbmVcIjoxNjV9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoxODV9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MzYsXCJsaW5lXCI6MTY1fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjE4NX19LFwiWmVyb0R1cmF0aW9uT3ZlcmxhcFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MzUsXCJsaW5lXCI6MTg3fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MjA4fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjM1LFwibGluZVwiOjE4N30sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMDh9fSxcIk92ZXJsYXBwaW5nQmFja2dyb3VuZEV2ZW50c092ZXJsYXBcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjIxfSxcImVuZExvY1wiOntcImNvbFwiOjQ5LFwibGluZVwiOjIxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjIxfSxcImVuZEJvZHlcIjp7XCJjb2xcIjo0OSxcImxpbmVcIjoyMX19LFwiT3ZlcmxhcHBpbmdCYWNrZ3JvdW5kRXZlbnRzTm9PdmVybGFwXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyMX0sXCJlbmRMb2NcIjp7XCJjb2xcIjo0OSxcImxpbmVcIjoyMX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyMX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6NDksXCJsaW5lXCI6MjF9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBhY3Rpb24gfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWFjdGlvbnMnXG5cbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuXG5pbXBvcnQgeyBldmVudHMsIENhbGVuZGFyLCBWaWV3cywgRHJhZ0FuZERyb3BDYWxlbmRhciB9IGZyb20gJy4vaGVscGVycydcbmltcG9ydCBjcmVhdGVFdmVudHMgZnJvbSAnLi9oZWxwZXJzL2NyZWF0ZUV2ZW50cydcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0FkZGl0aW9uYWwgRXhhbXBsZXMvTGF5b3V0JyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgZGVjb3JhdG9yczogW1xuICAgIChTdG9yeSkgPT4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgICAgPFN0b3J5IC8+XG4gICAgICA8L2Rpdj5cbiAgICApLFxuICBdLFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XG5cbmNvbnN0IGRlZmF1bHREYXRlID0gbmV3IERhdGUoKVxuXG5leHBvcnQgY29uc3QgRXZlbnRMYXlvdXQgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbkV2ZW50TGF5b3V0LmFyZ3MgPSB7XG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXG4gIGRlZmF1bHREYXRlLFxuICB0aW1lc2xvdHM6IDQsXG4gIGV2ZW50czogY3JlYXRlRXZlbnRzKDEpLFxufVxuXG5leHBvcnQgY29uc3QgRmlyc3RPZldlZWtBbGxEYXkgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbkZpcnN0T2ZXZWVrQWxsRGF5LnN0b3J5TmFtZSA9ICdmaXJzdCBvZiB0aGUgd2VlayBhbGwtZGF5IGV2ZW50J1xuRmlyc3RPZldlZWtBbGxEYXkuYXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTYsIDExLCA0KSxcbiAgZXZlbnRzOiBbXG4gICAge1xuICAgICAgYWxsRGF5OiB0cnVlLFxuICAgICAgdGl0bGU6ICdBbGwgRGF5IEV2ZW50JyxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE2LCAxMSwgNCksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDExLCA0KSxcbiAgICB9LFxuICBdLFxufVxuXG5leHBvcnQgY29uc3QgRW5kT2ZXZWVrQWxsRGF5ID0gVGVtcGxhdGUuYmluZCh7fSk7XG5FbmRPZldlZWtBbGxEYXkuc3RvcnlOYW1lID0gJ2VuZCBvZiB0aGUgd2VlayBhbGwtZGF5IGV2ZW50J1xuRW5kT2ZXZWVrQWxsRGF5LmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE2LCAxMSwgMyksXG4gIGV2ZW50czogW1xuICAgIHtcbiAgICAgIGFsbERheTogdHJ1ZSxcbiAgICAgIHRpdGxlOiAnQWxsIERheSBFdmVudCcsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTEsIDMpLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMSwgMyksXG4gICAgfSxcbiAgXSxcbn1cblxuZXhwb3J0IGNvbnN0IEV2ZW50QXRTdGFydE9mV2VlayA9IFRlbXBsYXRlLmJpbmQoe30pO1xuRXZlbnRBdFN0YXJ0T2ZXZWVrLmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE2LCAxMSwgNCksXG4gIGV2ZW50czogW1xuICAgIHtcbiAgICAgIHRpdGxlOiAnaGFzIHRpbWUnLFxuICAgICAgc3RhcnQ6IG1vbWVudChuZXcgRGF0ZSgyMDE2LCAxMSwgNCkpXG4gICAgICAgIC5hZGQoMSwgJ2RheXMnKVxuICAgICAgICAuc3VidHJhY3QoNSwgJ2hvdXJzJylcbiAgICAgICAgLnRvRGF0ZSgpLFxuICAgICAgZW5kOiBtb21lbnQobmV3IERhdGUoMjAxNiwgMTEsIDQpKVxuICAgICAgICAuYWRkKDEsICdkYXlzJylcbiAgICAgICAgLnN1YnRyYWN0KDQsICdob3VycycpXG4gICAgICAgIC50b0RhdGUoKSxcbiAgICB9LFxuICBdLFxufVxuXG5leHBvcnQgY29uc3QgRXZlbnRBdEVuZE9mV2VlayA9IFRlbXBsYXRlLmJpbmQoe30pO1xuRXZlbnRBdEVuZE9mV2Vlay5hcmdzID0ge1xuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNiwgMTEsIDMpLFxuICBldmVudHM6IFtcbiAgICB7XG4gICAgICB0aXRsZTogJ2hhcyB0aW1lJyxcbiAgICAgIHN0YXJ0OiBtb21lbnQobmV3IERhdGUoMjAxNiwgMTEsIDMpKVxuICAgICAgICAuYWRkKDEsICdkYXlzJylcbiAgICAgICAgLnN1YnRyYWN0KDUsICdob3VycycpXG4gICAgICAgIC50b0RhdGUoKSxcbiAgICAgIGVuZDogbW9tZW50KG5ldyBEYXRlKDIwMTYsIDExLCAzKSlcbiAgICAgICAgLmFkZCgxLCAnZGF5cycpXG4gICAgICAgIC5zdWJ0cmFjdCg0LCAnaG91cnMnKVxuICAgICAgICAudG9EYXRlKCksXG4gICAgfSxcbiAgXSxcbn1cblxuZXhwb3J0IGNvbnN0IEV2ZW50c09uQUNvbnN0cmFpbmVkRGF5Q29sdW1uID0gVGVtcGxhdGUuYmluZCh7fSk7XG5FdmVudHNPbkFDb25zdHJhaW5lZERheUNvbHVtbi5hcmdzID0ge1xuICBkZWZhdWx0VmlldzogVmlld3MuREFZLFxuICBtaW46IG1vbWVudCgnOCBhbScsICdoIGEnKS50b0RhdGUoKSxcbiAgbWF4OiBtb21lbnQoJzUgcG0nLCAnaCBhJykudG9EYXRlKCksXG4gIGV2ZW50cyxcbn1cblxuZXhwb3J0IGNvbnN0IE5vRHVyYXRpb24gPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbk5vRHVyYXRpb24uYXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTYsIDExLCA0KSxcbiAgZXZlbnRzOiBbXG4gICAge1xuICAgICAgdGl0bGU6ICdzdGFydCBvZiB0aGUgd2VlaycsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTEsIDQpLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMSwgNCksXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ2VuZCBvZiB0aGUgd2VlaycsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTEsIDMpLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMSwgMyksXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ21pZGRsZScsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTEsIDYpLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMSwgNiksXG4gICAgfSxcbiAgXSxcbn1cblxuZXhwb3J0IGNvbnN0IERheVNwYW4gPSBUZW1wbGF0ZS5iaW5kKHt9KTtcbkRheVNwYW4uc3RvcnlOYW1lID0gJ1NpbmdsZSBkYXlzIHNob3VsZCBvbmx5IHNwYW4gb25lIHNsb3QsIG11bHRpLWRheXMgbXVsdGlwbGUnXG5EYXlTcGFuLmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcbiAgZXZlbnRzOiBbXG4gICAge1xuICAgICAgdGl0bGU6ICdTaW5nbGVEYXkgMScsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgMTApLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMSksXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ1NpbmdsZURheSAyJyxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAxMSksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEyKSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnU2luZ2xlRGF5IDMnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEyKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdTaW5nbGVEYXkgNCcsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxNCksXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ011bHRpRGF5IDEnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDI0KSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgMjUsIDEsIDAsIDAsIDApLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdNdWx0aURheSAyJyxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAyNSksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDI2LCAxLCAwLCAwLCAwKSxcbiAgICB9LFxuICBdLFxufVxuXG5leHBvcnQgY29uc3QgWmVyb0R1cmF0aW9uT2RkaXRpZXMgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPERyYWdBbmREcm9wQ2FsZW5kYXJcbiAgICAgIGRlZmF1bHREYXRlPXtuZXcgRGF0ZSgyMDE1LCAzLCAxKX1cbiAgICAgIGV2ZW50cz17W1xuICAgICAgICB7XG4gICAgICAgICAgaWQ6IDQsXG4gICAgICAgICAgdGl0bGU6ICcwIGRheSBkdXJhdGlvbicsXG4gICAgICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDgsIDAsIDAsIDApLFxuICAgICAgICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgOCwgMCwgMCwgMCksXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogNCxcbiAgICAgICAgICB0aXRsZTogJzEgZGF5IGR1cmF0aW9uJyxcbiAgICAgICAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgOSwgMCwgMCwgMCksXG4gICAgICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMCwgMCwgMCwgMCksXG4gICAgICAgIH0sXG4gICAgICBdfVxuICAgIC8+XG4gIClcbn07XG5cbmV4cG9ydCBjb25zdCBaZXJvRHVyYXRpb25PdmVybGFwID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxEcmFnQW5kRHJvcENhbGVuZGFyXG4gICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XG4gICAgICBldmVudHM9e1tcbiAgICAgICAge1xuICAgICAgICAgIHRpdGxlOiAnZXZlbnQgYScsXG4gICAgICAgICAgc3RhcnQ6IGRlZmF1bHREYXRlLFxuICAgICAgICAgIGVuZDogZGVmYXVsdERhdGUsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICB0aXRsZTogJ2V2ZW50IGInLFxuICAgICAgICAgIHN0YXJ0OiBkZWZhdWx0RGF0ZSxcbiAgICAgICAgICBlbmQ6IGRlZmF1bHREYXRlLFxuICAgICAgICB9LFxuICAgICAgXX1cbiAgICAgIGRheUxheW91dEFsZ29yaXRobT17J25vLW92ZXJsYXAnfVxuICAgICAgc2Nyb2xsVG9UaW1lPXtkZWZhdWx0RGF0ZX1cbiAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxuICAgIC8+XG4gIClcbn07XG5cbmV4cG9ydCBjb25zdCBPdmVybGFwcGluZ0JhY2tncm91bmRFdmVudHNPdmVybGFwID0gVGVtcGxhdGUuYmluZCh7fSk7XG5PdmVybGFwcGluZ0JhY2tncm91bmRFdmVudHNPdmVybGFwLnN0b3J5TmFtZSA9XG4gIFwiT3ZlcmxhcHBpbmcgQmFja2dyb3VuZCBFdmVudHMgLSAnb3ZlcmxhcCdcIlxuT3ZlcmxhcHBpbmdCYWNrZ3JvdW5kRXZlbnRzT3ZlcmxhcC5hcmdzID0ge1xuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNiwgMTEsIDMpLFxuICBkYXlMYXlvdXRBbGdvcml0aG06ICdvdmVybGFwJyxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXG4gIHNjcm9sbFRvVGltZTogbmV3IERhdGUoMjAxNiwgMTEsIDEsIDcsIDApLFxuICBiYWNrZ3JvdW5kRXZlbnRzOiBbXG4gICAge1xuICAgICAgdGl0bGU6ICdGaXJzdCBFdmVudCcsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTAsIDI4LCAxMCwgMzApLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMCwgMjgsIDE4LCAwKSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnU2Vjb25kIEV2ZW50JyxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE2LCAxMCwgMjgsIDEyLCAwKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTAsIDI4LCAxNiwgMzApLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdUaGlyZCBFdmVudCcsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTAsIDI5LCA4LCAwKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTAsIDI5LCAyMSwgMCksXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ0ZvdXJ0aCBFdmVudCcsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTAsIDI5LCA5LCAzMCksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOSwgMTksIDMwKSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnRmlmdGggRXZlbnQnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOSwgMTEsIDApLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMCwgMjksIDE4LCAwKSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnU2l4dGggRXZlbnQnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDExLCAxLCA5LCAwKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTEsIDEsIDE0LCAwKSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnU2V2ZW50aCBFdmVudCcsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTEsIDEsIDExLCAwKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTEsIDEsIDE2LCAwKSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnRWlnaHRoIEV2ZW50JyxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE2LCAxMSwgMSwgMTMsIDApLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMSwgMSwgMTgsIDApLFxuICAgIH0sXG4gIF0sXG59XG5cbmV4cG9ydCBjb25zdCBPdmVybGFwcGluZ0JhY2tncm91bmRFdmVudHNOb092ZXJsYXAgPSBUZW1wbGF0ZS5iaW5kKHt9KTtPdmVybGFwcGluZ0JhY2tncm91bmRFdmVudHNOb092ZXJsYXAuc3RvcnlOYW1lID1cbiAgXCJPdmVybGFwcGluZyBCYWNrZ3JvdW5kIEV2ZW50cyAtICduby1vdmVybGFwJ1wiXG5PdmVybGFwcGluZ0JhY2tncm91bmRFdmVudHNOb092ZXJsYXAuYXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTYsIDExLCAzKSxcbiAgZGF5TGF5b3V0QWxnb3JpdGhtOiAnbm8tb3ZlcmxhcCcsXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxuICBzY3JvbGxUb1RpbWU6IG5ldyBEYXRlKDIwMTYsIDExLCAxLCA3LCAwKSxcbiAgYmFja2dyb3VuZEV2ZW50czogW1xuICAgIHtcbiAgICAgIHRpdGxlOiAnRmlyc3QgRXZlbnQnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOCwgMTAsIDMwKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTAsIDI4LCAxOCwgMCksXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ1NlY29uZCBFdmVudCcsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTAsIDI4LCAxMiwgMCksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOCwgMTYsIDMwKSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnVGhpcmQgRXZlbnQnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOSwgOCwgMCksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOSwgMjEsIDApLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdGb3VydGggRXZlbnQnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAyOSwgOSwgMzApLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMCwgMjksIDE5LCAzMCksXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ0ZpZnRoIEV2ZW50JyxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE2LCAxMCwgMjksIDExLCAwKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTAsIDI5LCAxOCwgMCksXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ1NpeHRoIEV2ZW50JyxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE2LCAxMSwgMSwgOSwgMCksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDExLCAxLCAxNCwgMCksXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ1NldmVudGggRXZlbnQnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDExLCAxLCAxMSwgMCksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDExLCAxLCAxNiwgMCksXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ0VpZ2h0aCBFdmVudCcsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTEsIDEsIDEzLCAwKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTEsIDEsIDE4LCAwKSxcbiAgICB9LFxuICBdLFxufVxuXG5cblxuRXZlbnRMYXlvdXQucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XCIgfSwgLi4uRXZlbnRMYXlvdXQucGFyYW1ldGVycyB9O1xuRmlyc3RPZldlZWtBbGxEYXkucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XCIgfSwgLi4uRmlyc3RPZldlZWtBbGxEYXkucGFyYW1ldGVycyB9O1xuRW5kT2ZXZWVrQWxsRGF5LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gPENhbGVuZGFyIHsuLi5hcmdzfSAvPlwiIH0sIC4uLkVuZE9mV2Vla0FsbERheS5wYXJhbWV0ZXJzIH07XG5FdmVudEF0U3RhcnRPZldlZWsucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XCIgfSwgLi4uRXZlbnRBdFN0YXJ0T2ZXZWVrLnBhcmFtZXRlcnMgfTtcbkV2ZW50QXRFbmRPZldlZWsucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XCIgfSwgLi4uRXZlbnRBdEVuZE9mV2Vlay5wYXJhbWV0ZXJzIH07XG5FdmVudHNPbkFDb25zdHJhaW5lZERheUNvbHVtbi5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IDxDYWxlbmRhciB7Li4uYXJnc30gLz5cIiB9LCAuLi5FdmVudHNPbkFDb25zdHJhaW5lZERheUNvbHVtbi5wYXJhbWV0ZXJzIH07XG5Ob0R1cmF0aW9uLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gPENhbGVuZGFyIHsuLi5hcmdzfSAvPlwiIH0sIC4uLk5vRHVyYXRpb24ucGFyYW1ldGVycyB9O1xuRGF5U3Bhbi5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IDxDYWxlbmRhciB7Li4uYXJnc30gLz5cIiB9LCAuLi5EYXlTcGFuLnBhcmFtZXRlcnMgfTtcblplcm9EdXJhdGlvbk9kZGl0aWVzLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoKSA9PiB7XFxuICByZXR1cm4gKFxcbiAgICA8RHJhZ0FuZERyb3BDYWxlbmRhclxcbiAgICAgIGRlZmF1bHREYXRlPXtuZXcgRGF0ZSgyMDE1LCAzLCAxKX1cXG4gICAgICBldmVudHM9e1tcXG4gICAgICAgIHtcXG4gICAgICAgICAgaWQ6IDQsXFxuICAgICAgICAgIHRpdGxlOiAnMCBkYXkgZHVyYXRpb24nLFxcbiAgICAgICAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgOCwgMCwgMCwgMCksXFxuICAgICAgICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgOCwgMCwgMCwgMCksXFxuICAgICAgICB9LFxcbiAgICAgICAge1xcbiAgICAgICAgICBpZDogNCxcXG4gICAgICAgICAgdGl0bGU6ICcxIGRheSBkdXJhdGlvbicsXFxuICAgICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCA5LCAwLCAwLCAwKSxcXG4gICAgICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMCwgMCwgMCwgMCksXFxuICAgICAgICB9LFxcbiAgICAgIF19XFxuICAgIC8+XFxuICApXFxufVwiIH0sIC4uLlplcm9EdXJhdGlvbk9kZGl0aWVzLnBhcmFtZXRlcnMgfTtcblplcm9EdXJhdGlvbk92ZXJsYXAucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIigpID0+IHtcXG4gIHJldHVybiAoXFxuICAgIDxEcmFnQW5kRHJvcENhbGVuZGFyXFxuICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgIGV2ZW50cz17W1xcbiAgICAgICAge1xcbiAgICAgICAgICB0aXRsZTogJ2V2ZW50IGEnLFxcbiAgICAgICAgICBzdGFydDogZGVmYXVsdERhdGUsXFxuICAgICAgICAgIGVuZDogZGVmYXVsdERhdGUsXFxuICAgICAgICB9LFxcbiAgICAgICAge1xcbiAgICAgICAgICB0aXRsZTogJ2V2ZW50IGInLFxcbiAgICAgICAgICBzdGFydDogZGVmYXVsdERhdGUsXFxuICAgICAgICAgIGVuZDogZGVmYXVsdERhdGUsXFxuICAgICAgICB9LFxcbiAgICAgIF19XFxuICAgICAgZGF5TGF5b3V0QWxnb3JpdGhtPXsnbm8tb3ZlcmxhcCd9XFxuICAgICAgc2Nyb2xsVG9UaW1lPXtkZWZhdWx0RGF0ZX1cXG4gICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cXG4gICAgLz5cXG4gIClcXG59XCIgfSwgLi4uWmVyb0R1cmF0aW9uT3ZlcmxhcC5wYXJhbWV0ZXJzIH07XG5PdmVybGFwcGluZ0JhY2tncm91bmRFdmVudHNPdmVybGFwLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gPENhbGVuZGFyIHsuLi5hcmdzfSAvPlwiIH0sIC4uLk92ZXJsYXBwaW5nQmFja2dyb3VuZEV2ZW50c092ZXJsYXAucGFyYW1ldGVycyB9O1xuT3ZlcmxhcHBpbmdCYWNrZ3JvdW5kRXZlbnRzTm9PdmVybGFwLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gPENhbGVuZGFyIHsuLi5hcmdzfSAvPlwiIH0sIC4uLk92ZXJsYXBwaW5nQmFja2dyb3VuZEV2ZW50c05vT3ZlcmxhcC5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IHsgYWN0aW9uIH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1hY3Rpb25zJ1xcbmltcG9ydCB7IENhbGVuZGFyIH0gZnJvbSAnLi4vc3JjJ1xcblxcbmltcG9ydCB7IENhbGVuZGFyIGFzIEJhc2VDYWxlbmRhciwgVmlld3MsIGV2ZW50cyB9IGZyb20gJy4vaGVscGVycydcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0FkZGl0aW9uYWwgRXhhbXBsZXMvVGltZXNsb3RzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBkZWNvcmF0b3JzOiBbXFxuICAgIChTdG9yeSkgPT4gKFxcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgICAgPFN0b3J5IC8+XFxuICAgICAgPC9kaXY+XFxuICAgICksXFxuICBdLFxcbn1cXG5cXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiA8QmFzZUNhbGVuZGFyIHsuLi5hcmdzfSAvPlxcblxcbmV4cG9ydCBjb25zdCBTZWxlY3RhYmxlU3RlcDE1eDRTbG90ID0gVGVtcGxhdGUuYmluZCh7fSlcXG5TZWxlY3RhYmxlU3RlcDE1eDRTbG90LnN0b3J5TmFtZSA9ICdzZWxlY3RhYmxlLCBzdGVwIDE1LCA0IHRpbWVzbG90cydcXG5TZWxlY3RhYmxlU3RlcDE1eDRTbG90LmFyZ3MgPSB7XFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgpLFxcbiAgc2VsZWN0YWJsZTogdHJ1ZSxcXG4gIHRpbWVzbG90czogNCxcXG4gIHN0ZXA6IDE1LFxcbiAgZXZlbnRzLFxcbiAgb25TZWxlY3RFdmVudDogYWN0aW9uKCdldmVudCBzZWxlY3RlZCcpLFxcbiAgb25TZWxlY3RTbG90OiBhY3Rpb24oJ3Nsb3Qgc2VsZWN0ZWQnKSxcXG59XFxuXFxuZXhwb3J0IGNvbnN0IFNlbGVjdGFibGVTdGVwMTB4NlNsb3QgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcblNlbGVjdGFibGVTdGVwMTB4NlNsb3Quc3RvcnlOYW1lID0gJ3NlbGVjdGFibGUsIHN0ZXAgMTAsIDYgdGltZXNsb3RzJ1xcblNlbGVjdGFibGVTdGVwMTB4NlNsb3QuYXJncyA9IHtcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKCksXFxuICBzZWxlY3RhYmxlOiB0cnVlLFxcbiAgdGltZXNsb3RzOiA2LFxcbiAgc3RlcDogMTAsXFxuICBldmVudHMsXFxuICBvblNlbGVjdEV2ZW50OiBhY3Rpb24oJ2V2ZW50IHNlbGVjdGVkJyksXFxuICBvblNlbGVjdFNsb3Q6IGFjdGlvbignc2xvdCBzZWxlY3RlZCcpLFxcbn1cXG5cXG5leHBvcnQgY29uc3QgU2VsZWN0YWJsZVN0ZXA1eDZTbG90ID0gVGVtcGxhdGUuYmluZCh7fSlcXG5TZWxlY3RhYmxlU3RlcDV4NlNsb3Quc3RvcnlOYW1lID0gJ3NlbGVjdGFibGUsIHN0ZXAgNSwgNiB0aW1lc2xvdHMnXFxuU2VsZWN0YWJsZVN0ZXA1eDZTbG90LmFyZ3MgPSB7XFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgpLFxcbiAgc2VsZWN0YWJsZTogdHJ1ZSxcXG4gIHRpbWVzbG90czogNixcXG4gIHN0ZXA6IDUsXFxuICBldmVudHMsXFxuICBvblNlbGVjdEV2ZW50OiBhY3Rpb24oJ2V2ZW50IHNlbGVjdGVkJyksXFxuICBvblNlbGVjdFNsb3Q6IGFjdGlvbignc2xvdCBzZWxlY3RlZCcpLFxcbn1cXG5cXG5leHBvcnQgY29uc3QgU2VsZWN0YWJsZTNTbG90ID0gVGVtcGxhdGUuYmluZCh7fSlcXG5TZWxlY3RhYmxlM1Nsb3Quc3RvcnlOYW1lID0gJ3NlbGVjdGFibGUsIDMgdGltZXNsb3RzJ1xcblNlbGVjdGFibGUzU2xvdC5hcmdzID0ge1xcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoKSxcXG4gIHNlbGVjdGFibGU6IHRydWUsXFxuICB0aW1lc2xvdHM6IDMsXFxuICBldmVudHMsXFxuICBvblNlbGVjdEV2ZW50OiBhY3Rpb24oJ2V2ZW50IHNlbGVjdGVkJyksXFxuICBvblNlbGVjdFNsb3Q6IGFjdGlvbignc2xvdCBzZWxlY3RlZCcpLFxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiU2VsZWN0YWJsZVN0ZXAxNXg0U2xvdFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6NTMsXCJsaW5lXCI6MTl9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjUzLFwibGluZVwiOjE5fX0sXCJTZWxlY3RhYmxlU3RlcDEweDZTbG90XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjo1MyxcImxpbmVcIjoxOX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6NTMsXCJsaW5lXCI6MTl9fSxcIlNlbGVjdGFibGVTdGVwNXg2U2xvdFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6NTMsXCJsaW5lXCI6MTl9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjUzLFwibGluZVwiOjE5fX0sXCJTZWxlY3RhYmxlM1Nsb3RcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjUzLFwibGluZVwiOjE5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjo1MyxcImxpbmVcIjoxOX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IGFjdGlvbiB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tYWN0aW9ucydcbmltcG9ydCB7IENhbGVuZGFyIH0gZnJvbSAnLi4vc3JjJ1xuXG5pbXBvcnQgeyBDYWxlbmRhciBhcyBCYXNlQ2FsZW5kYXIsIFZpZXdzLCBldmVudHMgfSBmcm9tICcuL2hlbHBlcnMnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdBZGRpdGlvbmFsIEV4YW1wbGVzL1RpbWVzbG90cycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIGRlY29yYXRvcnM6IFtcbiAgICAoU3RvcnkpID0+IChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICAgIDxTdG9yeSAvPlxuICAgICAgPC9kaXY+XG4gICAgKSxcbiAgXSxcbn1cblxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gPEJhc2VDYWxlbmRhciB7Li4uYXJnc30gLz5cblxuZXhwb3J0IGNvbnN0IFNlbGVjdGFibGVTdGVwMTV4NFNsb3QgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcblNlbGVjdGFibGVTdGVwMTV4NFNsb3Quc3RvcnlOYW1lID0gJ3NlbGVjdGFibGUsIHN0ZXAgMTUsIDQgdGltZXNsb3RzJ1xuU2VsZWN0YWJsZVN0ZXAxNXg0U2xvdC5hcmdzID0ge1xuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKCksXG4gIHNlbGVjdGFibGU6IHRydWUsXG4gIHRpbWVzbG90czogNCxcbiAgc3RlcDogMTUsXG4gIGV2ZW50cyxcbiAgb25TZWxlY3RFdmVudDogYWN0aW9uKCdldmVudCBzZWxlY3RlZCcpLFxuICBvblNlbGVjdFNsb3Q6IGFjdGlvbignc2xvdCBzZWxlY3RlZCcpLFxufVxuXG5leHBvcnQgY29uc3QgU2VsZWN0YWJsZVN0ZXAxMHg2U2xvdCA9IFRlbXBsYXRlLmJpbmQoe30pO1xuU2VsZWN0YWJsZVN0ZXAxMHg2U2xvdC5zdG9yeU5hbWUgPSAnc2VsZWN0YWJsZSwgc3RlcCAxMCwgNiB0aW1lc2xvdHMnXG5TZWxlY3RhYmxlU3RlcDEweDZTbG90LmFyZ3MgPSB7XG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoKSxcbiAgc2VsZWN0YWJsZTogdHJ1ZSxcbiAgdGltZXNsb3RzOiA2LFxuICBzdGVwOiAxMCxcbiAgZXZlbnRzLFxuICBvblNlbGVjdEV2ZW50OiBhY3Rpb24oJ2V2ZW50IHNlbGVjdGVkJyksXG4gIG9uU2VsZWN0U2xvdDogYWN0aW9uKCdzbG90IHNlbGVjdGVkJyksXG59XG5cbmV4cG9ydCBjb25zdCBTZWxlY3RhYmxlU3RlcDV4NlNsb3QgPSBUZW1wbGF0ZS5iaW5kKHt9KTtcblNlbGVjdGFibGVTdGVwNXg2U2xvdC5zdG9yeU5hbWUgPSAnc2VsZWN0YWJsZSwgc3RlcCA1LCA2IHRpbWVzbG90cydcblNlbGVjdGFibGVTdGVwNXg2U2xvdC5hcmdzID0ge1xuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKCksXG4gIHNlbGVjdGFibGU6IHRydWUsXG4gIHRpbWVzbG90czogNixcbiAgc3RlcDogNSxcbiAgZXZlbnRzLFxuICBvblNlbGVjdEV2ZW50OiBhY3Rpb24oJ2V2ZW50IHNlbGVjdGVkJyksXG4gIG9uU2VsZWN0U2xvdDogYWN0aW9uKCdzbG90IHNlbGVjdGVkJyksXG59XG5cbmV4cG9ydCBjb25zdCBTZWxlY3RhYmxlM1Nsb3QgPSBUZW1wbGF0ZS5iaW5kKHt9KTtTZWxlY3RhYmxlM1Nsb3Quc3RvcnlOYW1lID0gJ3NlbGVjdGFibGUsIDMgdGltZXNsb3RzJ1xuU2VsZWN0YWJsZTNTbG90LmFyZ3MgPSB7XG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoKSxcbiAgc2VsZWN0YWJsZTogdHJ1ZSxcbiAgdGltZXNsb3RzOiAzLFxuICBldmVudHMsXG4gIG9uU2VsZWN0RXZlbnQ6IGFjdGlvbignZXZlbnQgc2VsZWN0ZWQnKSxcbiAgb25TZWxlY3RTbG90OiBhY3Rpb24oJ3Nsb3Qgc2VsZWN0ZWQnKSxcbn1cblxuXG5cblNlbGVjdGFibGVTdGVwMTV4NFNsb3QucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiA8QmFzZUNhbGVuZGFyIHsuLi5hcmdzfSAvPlwiIH0sIC4uLlNlbGVjdGFibGVTdGVwMTV4NFNsb3QucGFyYW1ldGVycyB9O1xuU2VsZWN0YWJsZVN0ZXAxMHg2U2xvdC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IDxCYXNlQ2FsZW5kYXIgey4uLmFyZ3N9IC8+XCIgfSwgLi4uU2VsZWN0YWJsZVN0ZXAxMHg2U2xvdC5wYXJhbWV0ZXJzIH07XG5TZWxlY3RhYmxlU3RlcDV4NlNsb3QucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiA8QmFzZUNhbGVuZGFyIHsuLi5hcmdzfSAvPlwiIH0sIC4uLlNlbGVjdGFibGVTdGVwNXg2U2xvdC5wYXJhbWV0ZXJzIH07XG5TZWxlY3RhYmxlM1Nsb3QucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiA8QmFzZUNhbGVuZGFyIHsuLi5hcmdzfSAvPlwiIH0sIC4uLlNlbGVjdGFibGUzU2xvdC5wYXJhbWV0ZXJzIH07IiwiaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCB1c2VDYWxsYmFjaywgdXNlTWVtbywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBldmVudHMgZnJvbSAnLi4vLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgRGF0ZUxvY2FsaXplciB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCBEZW1vTGluayBmcm9tICcuLi8uLi9EZW1vTGluay5jb21wb25lbnQnXG4vLyBTdG9yeWJvb2sgY2Fubm90IGFsaWFzIHRoaXMsIHNvIHlvdSB3b3VsZCB1c2UgJ3JlYWN0LWJpZy1jYWxlbmRhci9saWIvYWRkb25zL2RyYWdBbmREcm9wJ1xuaW1wb3J0IHdpdGhEcmFnQW5kRHJvcCBmcm9tICcuLi8uLi8uLi9zcmMvYWRkb25zL2RyYWdBbmREcm9wJ1xuLy8gU3Rvcnlib29rIGNhbm5vdCBhbGlhcyB0aGlzLCBzbyB5b3Ugd291bGQgdXNlICdyZWFjdC1iaWctY2FsZW5kYXIvbGliL2FkZG9ucy9kcmFnQW5kRHJvcC9zdHlsZXMuc2NzcydcbmltcG9ydCAnLi4vLi4vLi4vc3JjL2FkZG9ucy9kcmFnQW5kRHJvcC9zdHlsZXMuc2NzcydcblxuY29uc3QgRHJhZ0FuZERyb3BDYWxlbmRhciA9IHdpdGhEcmFnQW5kRHJvcChDYWxlbmRhcilcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRHJhZ0FuZERyb3AoeyBsb2NhbGl6ZXIgfSkge1xuICBjb25zdCBbbXlFdmVudHMsIHNldE15RXZlbnRzXSA9IHVzZVN0YXRlKGV2ZW50cylcblxuICBjb25zdCBtb3ZlRXZlbnQgPSB1c2VDYWxsYmFjayhcbiAgICAoeyBldmVudCwgc3RhcnQsIGVuZCwgaXNBbGxEYXk6IGRyb3BwZWRPbkFsbERheVNsb3QgPSBmYWxzZSB9KSA9PiB7XG4gICAgICBjb25zdCB7IGFsbERheSB9ID0gZXZlbnRcbiAgICAgIGlmICghYWxsRGF5ICYmIGRyb3BwZWRPbkFsbERheVNsb3QpIHtcbiAgICAgICAgZXZlbnQuYWxsRGF5ID0gdHJ1ZVxuICAgICAgfVxuICAgICAgaWYgKGFsbERheSAmJiAhZHJvcHBlZE9uQWxsRGF5U2xvdCkge1xuICAgICAgICAgIGV2ZW50LmFsbERheSA9IGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBzZXRNeUV2ZW50cygocHJldikgPT4ge1xuICAgICAgICBjb25zdCBleGlzdGluZyA9IHByZXYuZmluZCgoZXYpID0+IGV2LmlkID09PSBldmVudC5pZCkgPz8ge31cbiAgICAgICAgY29uc3QgZmlsdGVyZWQgPSBwcmV2LmZpbHRlcigoZXYpID0+IGV2LmlkICE9PSBldmVudC5pZClcbiAgICAgICAgcmV0dXJuIFsuLi5maWx0ZXJlZCwgeyAuLi5leGlzdGluZywgc3RhcnQsIGVuZCwgYWxsRGF5OiBldmVudC5hbGxEYXkgfV1cbiAgICAgIH0pXG4gICAgfSxcbiAgICBbc2V0TXlFdmVudHNdXG4gIClcblxuICBjb25zdCByZXNpemVFdmVudCA9IHVzZUNhbGxiYWNrKFxuICAgICh7IGV2ZW50LCBzdGFydCwgZW5kIH0pID0+IHtcbiAgICAgIHNldE15RXZlbnRzKChwcmV2KSA9PiB7XG4gICAgICAgIGNvbnN0IGV4aXN0aW5nID0gcHJldi5maW5kKChldikgPT4gZXYuaWQgPT09IGV2ZW50LmlkKSA/PyB7fVxuICAgICAgICBjb25zdCBmaWx0ZXJlZCA9IHByZXYuZmlsdGVyKChldikgPT4gZXYuaWQgIT09IGV2ZW50LmlkKVxuICAgICAgICByZXR1cm4gWy4uLmZpbHRlcmVkLCB7IC4uLmV4aXN0aW5nLCBzdGFydCwgZW5kIH1dXG4gICAgICB9KVxuICAgIH0sXG4gICAgW3NldE15RXZlbnRzXVxuICApXG5cbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEyKSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8RGVtb0xpbmsgZmlsZU5hbWU9XCJkbmRcIj5cbiAgICAgICAgPHN0cm9uZz5cbiAgICAgICAgICBEcmFnIGFuZCBEcm9wIGFuIFwiZXZlbnRcIiBmcm9tIG9uZSBzbG90IHRvIGFub3RoZXIgdG8gXCJtb3ZlXCIgdGhlIGV2ZW50LFxuICAgICAgICAgIG9yIGRyYWcgYW4gZXZlbnQncyBkcmFnIGhhbmRsZXMgdG8gXCJyZXNpemVcIiB0aGUgZXZlbnQuXG4gICAgICAgIDwvc3Ryb25nPlxuICAgICAgPC9EZW1vTGluaz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICAgIDxEcmFnQW5kRHJvcENhbGVuZGFyXG4gICAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5NT05USH1cbiAgICAgICAgICBldmVudHM9e215RXZlbnRzfVxuICAgICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICAgIG9uRXZlbnREcm9wPXttb3ZlRXZlbnR9XG4gICAgICAgICAgb25FdmVudFJlc2l6ZT17cmVzaXplRXZlbnR9XG4gICAgICAgICAgcG9wdXBcbiAgICAgICAgICByZXNpemFibGVcbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvRnJhZ21lbnQ+XG4gIClcbn1cbkRyYWdBbmREcm9wLnByb3BUeXBlcyA9IHtcbiAgbG9jYWxpemVyOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlTG9jYWxpemVyKSxcbn1cbiIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi8uLi9zcmMnXFxuaW1wb3J0IEJhc2ljIGZyb20gJy4uLy4uL2RlbW9zL2V4YW1wbGVDb2RlL2RuZCdcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0FkZG9ucy9EcmFnIGFuZCBEcm9wJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBudWxsLFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZnVuY3Rpb24gRXhhbXBsZTEoKSB7XFxuICByZXR1cm4gPEJhc2ljIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cXG5FeGFtcGxlMS5zdG9yeU5hbWUgPSAnQmFzaWMgRHJhZyBuIERyb3AnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkV4YW1wbGUxXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE4fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MjB9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMH19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uLy4uL3NyYydcbmltcG9ydCBCYXNpYyBmcm9tICcuLi8uLi9kZW1vcy9leGFtcGxlQ29kZS9kbmQnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdBZGRvbnMvRHJhZyBhbmQgRHJvcCcsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBudWxsLFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBjb25zdCBFeGFtcGxlMSA9IGZ1bmN0aW9uIEV4YW1wbGUxKCkge1xuICByZXR1cm4gPEJhc2ljIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxufTtFeGFtcGxlMS5zdG9yeU5hbWUgPSAnQmFzaWMgRHJhZyBuIERyb3AnXG5cblxuXG5FeGFtcGxlMS5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gRXhhbXBsZTEoKSB7XFxuICByZXR1cm4gPEJhc2ljIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cIiB9LCAuLi5FeGFtcGxlMS5wYXJhbWV0ZXJzIH07IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uLy4uL3NyYydcXG5pbXBvcnQgQmFzaWMgZnJvbSAnLi4vLi4vZGVtb3MvZXhhbXBsZUNvZGUvZG5kT3V0c2lkZVNvdXJjZSdcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0FkZG9ucy9EcmFnIGFuZCBEcm9wJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBudWxsLFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZnVuY3Rpb24gRXhhbXBsZTMoKSB7XFxuICByZXR1cm4gPEJhc2ljIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cXG5FeGFtcGxlMy5zdG9yeU5hbWUgPSAnRHJhZyBhbmQgRHJvcCAoZnJvbSBvdXRzaWRlIGNhbGVuZGFyKSdcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRXhhbXBsZTNcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTh9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE4fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIwfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vLi4vc3JjJ1xuaW1wb3J0IEJhc2ljIGZyb20gJy4uLy4uL2RlbW9zL2V4YW1wbGVDb2RlL2RuZE91dHNpZGVTb3VyY2UnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdBZGRvbnMvRHJhZyBhbmQgRHJvcCcsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBudWxsLFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBjb25zdCBFeGFtcGxlMyA9IGZ1bmN0aW9uIEV4YW1wbGUzKCkge1xuICByZXR1cm4gPEJhc2ljIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxufTtFeGFtcGxlMy5zdG9yeU5hbWUgPSAnRHJhZyBhbmQgRHJvcCAoZnJvbSBvdXRzaWRlIGNhbGVuZGFyKSdcblxuXG5cbkV4YW1wbGUzLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBFeGFtcGxlMygpIHtcXG4gIHJldHVybiA8QmFzaWMgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLkV4YW1wbGUzLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJkcmFnZnJvbW91dHNpZGVpdGVtXCJcbiAgICB9fT57YGRyYWdGcm9tT3V0c2lkZUl0ZW1gfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uICgpID0+IGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BBIGNhbGxiYWNrIHRvIGdldCBhIHRlbXBvcmFyeSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BldmVudGB9PC9pbmxpbmVDb2RlPntgIHRvIGRpc3BsYXkgaW4gYSBzbG90IGluIHRoZSBwcm9jZXNzIG9mIGRyYWdnaW5nIGZyb20gb3V0c2lkZS4gVGhpcyBpcyBub3QgcmVxdWlyZWQgZm9yIERyYWcgYW5kIERyb3AgdG8gZnVuY3Rpb24sIGJ1dCBwcm92aWRlcyBhIG5pY2UgdmlzdWFsIGN1ZSB0byB0aGUgdXNlciB3aGVuIGRyYWdnaW5nIGluIGFuIGl0ZW0gZnJvbSBvdXRzaWRlIG9mIHRoZSBDYWxlbmRhci5gfTwvcD5cbiAgICA8cD57YFRpcDogVG9nZ2xlIHRoZSBjaGVja2JveCwgaW4gdGhlIGV4YW1wbGUsIGFuZCBkcmFnIGFuIG91dHNpZGUgaXRlbSBpbi4gRG8gdGhpcyBmcm9tIGJvdGggY2hlY2tib3ggc3RhdGVzIHRvIHNlZSB0aGUgZGlmZmVyZW5jZSBpbiBlZmZlY3QuYH08L3A+XG4gICAgPFN0b3J5IGlkPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtcHJvcHMtLWRyYWctZnJvbS1vdXRzaWRlLWl0ZW1cIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMnXFxuaW1wb3J0IEJhc2ljIGZyb20gJy4uLy4uLy4uL2RlbW9zL2V4YW1wbGVDb2RlL2RuZE91dHNpZGVTb3VyY2UnXFxuaW1wb3J0IG1keCBmcm9tICcuL2RyYWdGcm9tT3V0c2lkZUl0ZW0ubWR4J1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnQWRkb25zL0RyYWcgYW5kIERyb3AvcHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGZ1bmN0aW9uIERyYWdGcm9tT3V0c2lkZUl0ZW0oKSB7XFxuICByZXR1cm4gPEJhc2ljIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cXG5EcmFnRnJvbU91dHNpZGVJdGVtLnN0b3J5TmFtZSA9ICdkcmFnRnJvbU91dHNpZGVJdGVtJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJEcmFnRnJvbU91dHNpZGVJdGVtXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MjF9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYydcbmltcG9ydCBCYXNpYyBmcm9tICcuLi8uLi8uLi9kZW1vcy9leGFtcGxlQ29kZS9kbmRPdXRzaWRlU291cmNlJ1xuaW1wb3J0IG1keCBmcm9tICcuL2RyYWdGcm9tT3V0c2lkZUl0ZW0ubWR4J1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnQWRkb25zL0RyYWcgYW5kIERyb3AvcHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBjb25zdCBEcmFnRnJvbU91dHNpZGVJdGVtID0gZnVuY3Rpb24gRHJhZ0Zyb21PdXRzaWRlSXRlbSgpIHtcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cbn07RHJhZ0Zyb21PdXRzaWRlSXRlbS5zdG9yeU5hbWUgPSAnZHJhZ0Zyb21PdXRzaWRlSXRlbSdcblxuXG5cbkRyYWdGcm9tT3V0c2lkZUl0ZW0ucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIERyYWdGcm9tT3V0c2lkZUl0ZW0oKSB7XFxuICByZXR1cm4gPEJhc2ljIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cIiB9LCAuLi5EcmFnRnJvbU91dHNpZGVJdGVtLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJkcmFnZ2FibGVhY2Nlc3NvclwiXG4gICAgfX0+e2BkcmFnZ2FibGVBY2Nlc3NvcmB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgc3RyaW5nfGZ1bmN0aW9uIChldmVudCkgPT4gYm9vbGVhbmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgKCkgPT4gdHJ1ZWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFdoZW4gdXNlZCwgY2FuIGRldGVybWluZSB3aGV0aGVyIGFuICdldmVudCcgaXMgZHJhZ2dhYmxlYH08L3A+XG4gICAgPFN0b3J5IGlkPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtcHJvcHMtLWRyYWdnYWJsZS1hY2Nlc3NvclwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYydcXG5pbXBvcnQgQmFzaWMgZnJvbSAnLi4vLi4vLi4vZGVtb3MvZXhhbXBsZUNvZGUvZG5kT3V0c2lkZVNvdXJjZSdcXG5pbXBvcnQgbWR4IGZyb20gJy4vZHJhZ2dhYmxlQWNjZXNzb3IubWR4J1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnQWRkb25zL0RyYWcgYW5kIERyb3AvcHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGZ1bmN0aW9uIERyYWdnYWJsZUFjY2Vzc29yKCkge1xcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XFxuRHJhZ2dhYmxlQWNjZXNzb3Iuc3RvcnlOYW1lID0gJ2RyYWdnYWJsZUFjY2Vzc29yJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJEcmFnZ2FibGVBY2Nlc3NvclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MjF9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMnXG5pbXBvcnQgQmFzaWMgZnJvbSAnLi4vLi4vLi4vZGVtb3MvZXhhbXBsZUNvZGUvZG5kT3V0c2lkZVNvdXJjZSdcbmltcG9ydCBtZHggZnJvbSAnLi9kcmFnZ2FibGVBY2Nlc3Nvci5tZHgnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdBZGRvbnMvRHJhZyBhbmQgRHJvcC9wcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGNvbnN0IERyYWdnYWJsZUFjY2Vzc29yID0gZnVuY3Rpb24gRHJhZ2dhYmxlQWNjZXNzb3IoKSB7XG4gIHJldHVybiA8QmFzaWMgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XG59O0RyYWdnYWJsZUFjY2Vzc29yLnN0b3J5TmFtZSA9ICdkcmFnZ2FibGVBY2Nlc3NvcidcblxuXG5cbkRyYWdnYWJsZUFjY2Vzc29yLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBEcmFnZ2FibGVBY2Nlc3NvcigpIHtcXG4gIHJldHVybiA8QmFzaWMgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLkRyYWdnYWJsZUFjY2Vzc29yLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJvbmRyYWdvdmVyXCJcbiAgICB9fT57YG9uRHJhZ092ZXJgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChkcmFnRXZlbnQ6IFN5bnRoZXRpY0V2ZW50KSA9PiBhbnlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BJZiBhbiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BvbkRyYWdPdmVyYH08L2lubGluZUNvZGU+e2AgY2FsbGJhY2sgYH08ZW0gcGFyZW50TmFtZT1cInBcIj57YGlzYH08L2VtPntgIHBhc3NlZCwgdGhlbiBpdCBjYW4gZGlzY3JpbWluYXRlIGFzIHRvIHdoZXRoZXIgYSBkcmFnZ2FibGUgaXRlbSBpcyBkcm9wcGFibGUgb24gdGhlIGNhbGVuZGFyLiBUbyBkZXNpZ25hdGUgYSBkcmFnZ2FibGUgaXRlbSBhcyBkcm9wcGFibGUsIGNhbGwgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZXZlbnQucHJldmVudERlZmF1bHRgfTwvaW5saW5lQ29kZT57YCBpbnNpZGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25EcmFnT3ZlcmB9PC9pbmxpbmVDb2RlPntgLiBJZiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BldmVudC5wcmV2ZW50RGVmYXVsdGB9PC9pbmxpbmVDb2RlPntgIGlzIG5vdCBjYWxsZWQgaW4gdGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG9uRHJhZ092ZXJgfTwvaW5saW5lQ29kZT57YCBjYWxsYmFjaywgdGhlbiB0aGUgZHJhZ2dhYmxlIGl0ZW0gd2lsbCBub3QgYmUgZHJvcHBhYmxlIG9uIHRoZSBjYWxlbmRhci5gfTwvcD5cbiAgICA8U3RvcnkgaWQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wcy0tb24tZHJhZy1vdmVyXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3JjJ1xcbmltcG9ydCBCYXNpYyBmcm9tICcuLi8uLi8uLi9kZW1vcy9leGFtcGxlQ29kZS9kbmRPdXRzaWRlU291cmNlJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9vbkRyYWdPdmVyLm1keCdcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0FkZG9ucy9EcmFnIGFuZCBEcm9wL3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBmdW5jdGlvbiBPbkRyYWdPdmVyKCkge1xcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XFxuT25EcmFnT3Zlci5zdG9yeU5hbWUgPSAnb25EcmFnT3ZlcidcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiT25EcmFnT3ZlclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MjF9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMnXG5pbXBvcnQgQmFzaWMgZnJvbSAnLi4vLi4vLi4vZGVtb3MvZXhhbXBsZUNvZGUvZG5kT3V0c2lkZVNvdXJjZSdcbmltcG9ydCBtZHggZnJvbSAnLi9vbkRyYWdPdmVyLm1keCdcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0FkZG9ucy9EcmFnIGFuZCBEcm9wL3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgY29uc3QgT25EcmFnT3ZlciA9IGZ1bmN0aW9uIE9uRHJhZ092ZXIoKSB7XG4gIHJldHVybiA8QmFzaWMgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XG59O09uRHJhZ092ZXIuc3RvcnlOYW1lID0gJ29uRHJhZ092ZXInXG5cblxuXG5PbkRyYWdPdmVyLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBPbkRyYWdPdmVyKCkge1xcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XCIgfSwgLi4uT25EcmFnT3Zlci5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwib25kcmFnc3RhcnRcIlxuICAgIH19Pntgb25EcmFnU3RhcnRgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uICh7IGV2ZW50LCBhY3Rpb24sIGRpcmVjdGlvbiB9KSA9PiBhbnlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BBIGNhbGxiYWNrIGZpcmVkIHdoZW4gdXNlciBiZWdpbnMgdG8gZHJhZyBhbiBldmVudC5gfTwvcD5cbiAgICA8U3RvcnkgaWQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wcy0tb24tZHJhZy1zdGFydFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYydcXG5pbXBvcnQgQmFzaWMgZnJvbSAnLi4vLi4vLi4vZGVtb3MvZXhhbXBsZUNvZGUvZG5kT3V0c2lkZVNvdXJjZSdcXG5pbXBvcnQgbWR4IGZyb20gJy4vb25EcmFnU3RhcnQubWR4J1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnQWRkb25zL0RyYWcgYW5kIERyb3AvcHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGZ1bmN0aW9uIE9uRHJhZ1N0YXJ0KCkge1xcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XFxuT25EcmFnU3RhcnQuc3RvcnlOYW1lID0gJ29uRHJhZ1N0YXJ0J1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJPbkRyYWdTdGFydFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MjF9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMnXG5pbXBvcnQgQmFzaWMgZnJvbSAnLi4vLi4vLi4vZGVtb3MvZXhhbXBsZUNvZGUvZG5kT3V0c2lkZVNvdXJjZSdcbmltcG9ydCBtZHggZnJvbSAnLi9vbkRyYWdTdGFydC5tZHgnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdBZGRvbnMvRHJhZyBhbmQgRHJvcC9wcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGNvbnN0IE9uRHJhZ1N0YXJ0ID0gZnVuY3Rpb24gT25EcmFnU3RhcnQoKSB7XG4gIHJldHVybiA8QmFzaWMgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XG59O09uRHJhZ1N0YXJ0LnN0b3J5TmFtZSA9ICdvbkRyYWdTdGFydCdcblxuXG5cbk9uRHJhZ1N0YXJ0LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBPbkRyYWdTdGFydCgpIHtcXG4gIHJldHVybiA8QmFzaWMgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLk9uRHJhZ1N0YXJ0LnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJvbmRyb3Bmcm9tb3V0c2lkZVwiXG4gICAgfX0+e2BvbkRyb3BGcm9tT3V0c2lkZWB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKHsgc3RhcnQsIGVuZCwgYWxsRGF5LCByZXNvdXJjZSB9KSA9PiBhbnlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BBIGNhbGxiYWNrIGZpcmVkIHdoZW4gdXNlciBkcm9wcyBhbiBpdGVtIG9udG8gdGhlIENhbGVuZGFyIGZyb20gb3V0c2lkZSBvZiB0aGUgQ2FsZW5kYXIuIERldmVsb3BlcnMgd2lsbCB0eXBpY2FsbHkgdXNlIHRoaXMgbWV0aG9kIHRvIGFkZCBuZXcgaXRlbXMgdG8gdGhlIENhbGVuZGFyJ3MgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZXZlbnRzXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgZXZlbnRzYH08L0xpbmtUbz57YC5gfTwvcD5cbiAgICA8cD48c3Ryb25nIHBhcmVudE5hbWU9XCJwXCI+e2BJbXBvcnRhbnQ6YH08L3N0cm9uZz57YCBUaGUgY2FsbGJhY2sgZG9lcyBgfTxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YG5vdGB9PC9zdHJvbmc+e2AgcmVjZWl2ZSB0aGUgZWxlbWVudCBiZWluZyBkcm9wcGVkLiBJdCBvbmx5IHJlY2VpdmVzIHRoZSBkZXRhaWxzIG9mIHRoZSBzbG90IGFuIGVsZW1lbnQgd2FzIGRyb3BwZWQgb24uYH08L3A+XG4gICAgPFN0b3J5IGlkPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtcHJvcHMtLW9uLWRyb3AtZnJvbS1vdXRzaWRlXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3JjJ1xcbmltcG9ydCBCYXNpYyBmcm9tICcuLi8uLi8uLi9kZW1vcy9leGFtcGxlQ29kZS9kbmRPdXRzaWRlU291cmNlJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9vbkRyb3BGcm9tT3V0c2lkZS5tZHgnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdBZGRvbnMvRHJhZyBhbmQgRHJvcC9wcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZnVuY3Rpb24gT25Ecm9wRnJvbU91dHNpZGUoKSB7XFxuICByZXR1cm4gPEJhc2ljIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cXG5PbkRyb3BGcm9tT3V0c2lkZS5zdG9yeU5hbWUgPSAnb25Ecm9wRnJvbU91dHNpZGUnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIk9uRHJvcEZyb21PdXRzaWRlXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MjF9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYydcbmltcG9ydCBCYXNpYyBmcm9tICcuLi8uLi8uLi9kZW1vcy9leGFtcGxlQ29kZS9kbmRPdXRzaWRlU291cmNlJ1xuaW1wb3J0IG1keCBmcm9tICcuL29uRHJvcEZyb21PdXRzaWRlLm1keCdcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0FkZG9ucy9EcmFnIGFuZCBEcm9wL3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgY29uc3QgT25Ecm9wRnJvbU91dHNpZGUgPSBmdW5jdGlvbiBPbkRyb3BGcm9tT3V0c2lkZSgpIHtcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cbn07T25Ecm9wRnJvbU91dHNpZGUuc3RvcnlOYW1lID0gJ29uRHJvcEZyb21PdXRzaWRlJ1xuXG5cblxuT25Ecm9wRnJvbU91dHNpZGUucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIE9uRHJvcEZyb21PdXRzaWRlKCkge1xcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XCIgfSwgLi4uT25Ecm9wRnJvbU91dHNpZGUucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm9uZXZlbnRkcm9wXCJcbiAgICB9fT57YG9uRXZlbnREcm9wYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoeyBldmVudCwgc3RhcnQsIGVuZCwgYWxsRGF5IH0pID0+IGFueWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEEgY2FsbGJhY2sgZmlyZWQgd2hlbiB1c2VyIGRyb3BzIGFuIGl0ZW0gZnJvbSBvbmUgc2xvdCB0byBhbm90aGVyIGZyb20gd2l0aGluIHRoZSBDYWxlbmRhci4gRGV2ZWxvcGVycyB3aWxsIHR5cGljYWxseSB1c2UgdGhpcyBtZXRob2QgdG8gdXBkYXRlIGFuIGl0ZW0ncyBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BzdGFydGB9PC9pbmxpbmVDb2RlPntgIGFuZCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BlbmRgfTwvaW5saW5lQ29kZT57YCBpbiBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJldmVudHNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BldmVudHNgfTwvTGlua1RvPntgLmB9PC9wPlxuICAgIDxTdG9yeSBpZD1cImFkZG9ucy1kcmFnLWFuZC1kcm9wLXByb3BzLS1vbi1ldmVudC1kcm9wXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3JjJ1xcbmltcG9ydCBCYXNpYyBmcm9tICcuLi8uLi8uLi9kZW1vcy9leGFtcGxlQ29kZS9kbmRPdXRzaWRlU291cmNlJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9vbkV2ZW50RHJvcC5tZHgnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdBZGRvbnMvRHJhZyBhbmQgRHJvcC9wcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZnVuY3Rpb24gT25FdmVudERyb3AoKSB7XFxuICByZXR1cm4gPEJhc2ljIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cXG5PbkV2ZW50RHJvcC5zdG9yeU5hbWUgPSAnb25FdmVudERyb3AnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIk9uRXZlbnREcm9wXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MjF9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYydcbmltcG9ydCBCYXNpYyBmcm9tICcuLi8uLi8uLi9kZW1vcy9leGFtcGxlQ29kZS9kbmRPdXRzaWRlU291cmNlJ1xuaW1wb3J0IG1keCBmcm9tICcuL29uRXZlbnREcm9wLm1keCdcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0FkZG9ucy9EcmFnIGFuZCBEcm9wL3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgY29uc3QgT25FdmVudERyb3AgPSBmdW5jdGlvbiBPbkV2ZW50RHJvcCgpIHtcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cbn07T25FdmVudERyb3Auc3RvcnlOYW1lID0gJ29uRXZlbnREcm9wJ1xuXG5cblxuT25FdmVudERyb3AucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIE9uRXZlbnREcm9wKCkge1xcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XCIgfSwgLi4uT25FdmVudERyb3AucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm9uZXZlbnRyZXNpemVcIlxuICAgIH19Pntgb25FdmVudFJlc2l6ZWB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKHsgZXZlbnQsIHN0YXJ0LCBlbmQgfSkgPT4gYW55YH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQSBjYWxsYmFjayBmaXJlZCB3aGVuIHVzZXIgcmVzaXplcyBhbiBldmVudC4gRGV2ZWxvcGVycyB3aWxsIHR5cGljYWxseSB1c2UgdGhpcyBtZXRob2QgdG8gdXBkYXRlIGFuIGl0ZW0ncyBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BzdGFydGB9PC9pbmxpbmVDb2RlPntgIGFuZCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BlbmRgfTwvaW5saW5lQ29kZT57YCBpbiBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJldmVudHNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BldmVudHNgfTwvTGlua1RvPntgLmB9PC9wPlxuICAgIDxwPntgVGhlIGB9PExpbmtUbyBraW5kPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtcHJvcHNcIiBzdG9yeT1cInJlc2l6YWJsZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YHJlc2l6YWJsZWB9PC9MaW5rVG8+e2AgcHJvcCBtdXN0IGJlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHRydWVgfTwvaW5saW5lQ29kZT57YCAodGhlIGRlZmF1bHQpIHRvIHVzZSB0aGUgbWV0aG9kLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YE5vdGU6YH08L3N0cm9uZz57YCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2ByZXNpemFibGVgfTwvaW5saW5lQ29kZT57YCBldmVudHMgbXVzdCBhbHNvIGJlIGRyYWdnYWJsZS4gWW91IGNhbm5vdCByZXNpemUgYW4gZXZlbnQgd2l0aCBhIGB9PExpbmtUbyBraW5kPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtcHJvcHNcIiBzdG9yeT1cImRyYWdnYWJsZS1hY2Nlc3NvclwiIG1keFR5cGU9XCJMaW5rVG9cIj57YGRyYWdnYWJsZUFjY2Vzc29yYH08L0xpbmtUbz57YCBwcm9wIG9mIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGZhbHNlYH08L2lubGluZUNvZGU+e2AuYH08L3A+XG4gICAgPFN0b3J5IGlkPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtcHJvcHMtLW9uLWV2ZW50LXJlc2l6ZVwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uLy4uLy4uL3NyYydcXG5pbXBvcnQgQmFzaWMgZnJvbSAnLi4vLi4vLi4vZGVtb3MvZXhhbXBsZUNvZGUvcmVzaXphYmxlJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9vbkV2ZW50UmVzaXplLm1keCdcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0FkZG9ucy9EcmFnIGFuZCBEcm9wL3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBmdW5jdGlvbiBPbkV2ZW50UmVzaXplKCkge1xcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XFxuT25FdmVudFJlc2l6ZS5zdG9yeU5hbWUgPSAnb25FdmVudFJlc2l6ZSdcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiT25FdmVudFJlc2l6ZVwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MjF9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMnXG5pbXBvcnQgQmFzaWMgZnJvbSAnLi4vLi4vLi4vZGVtb3MvZXhhbXBsZUNvZGUvcmVzaXphYmxlJ1xuaW1wb3J0IG1keCBmcm9tICcuL29uRXZlbnRSZXNpemUubWR4J1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnQWRkb25zL0RyYWcgYW5kIERyb3AvcHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBjb25zdCBPbkV2ZW50UmVzaXplID0gZnVuY3Rpb24gT25FdmVudFJlc2l6ZSgpIHtcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cbn07T25FdmVudFJlc2l6ZS5zdG9yeU5hbWUgPSAnb25FdmVudFJlc2l6ZSdcblxuXG5cbk9uRXZlbnRSZXNpemUucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIE9uRXZlbnRSZXNpemUoKSB7XFxuICByZXR1cm4gPEJhc2ljIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cIiB9LCAuLi5PbkV2ZW50UmVzaXplLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJyZXNpemFibGVcIlxuICAgIH19PntgcmVzaXphYmxlYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2Bib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2B0cnVlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgRGV0ZXJtaW5lcyBpZiBldmVudHMgbWF5IGJlIHJlc2l6ZWQgb24gdGhlIENhbGVuZGFyLiBVc2VkIGluIGNvbmp1bmN0aW9uIHdpdGggYH08TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwib24tZXZlbnQtcmVzaXplXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgb25FdmVudFJlc2l6ZWB9PC9MaW5rVG8+e2AuIFdoZW4gdXNlZCB3aXRoIHRoZSBgfTxMaW5rVG8ga2luZD1cImFkZG9ucy1kcmFnLWFuZC1kcm9wLXByb3BzXCIgc3Rvcnk9XCJyZXNpemFibGUtYWNjZXNzb3JcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2ByZXNpemFibGVBY2Nlc3NvcmB9PC9MaW5rVG8+e2AgdGhlIGRldmVsb3BlciBoYXMgZXZlbiBncmVhdGVyIGNvbnRyb2wuYH08L3A+XG4gICAgPHA+PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgTm90ZTpgfTwvc3Ryb25nPntgIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHJlc2l6YWJsZWB9PC9pbmxpbmVDb2RlPntgIGV2ZW50cyBtdXN0IGFsc28gYmUgZHJhZ2dhYmxlLiBZb3UgY2Fubm90IHJlc2l6ZSBhbiBldmVudCB3aXRoIGEgYH08TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwiZHJhZ2dhYmxlLWFjY2Vzc29yXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgZHJhZ2dhYmxlQWNjZXNzb3JgfTwvTGlua1RvPntgIHByb3Agb2YgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZmFsc2VgfTwvaW5saW5lQ29kZT57YC5gfTwvcD5cbiAgICA8U3RvcnkgaWQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wcy0tcmVzaXphYmxlXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3JjJ1xcbmltcG9ydCBCYXNpYyBmcm9tICcuLi8uLi8uLi9kZW1vcy9leGFtcGxlQ29kZS9yZXNpemFibGUnXFxuaW1wb3J0IG1keCBmcm9tICcuL3Jlc2l6YWJsZS5tZHgnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdBZGRvbnMvRHJhZyBhbmQgRHJvcC9wcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZnVuY3Rpb24gUmVzaXphYmxlKCkge1xcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XFxuUmVzaXphYmxlLnN0b3J5TmFtZSA9ICdyZXNpemFibGUnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlJlc2l6YWJsZVwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MjF9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMnXG5pbXBvcnQgQmFzaWMgZnJvbSAnLi4vLi4vLi4vZGVtb3MvZXhhbXBsZUNvZGUvcmVzaXphYmxlJ1xuaW1wb3J0IG1keCBmcm9tICcuL3Jlc2l6YWJsZS5tZHgnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdBZGRvbnMvRHJhZyBhbmQgRHJvcC9wcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGNvbnN0IFJlc2l6YWJsZSA9IGZ1bmN0aW9uIFJlc2l6YWJsZSgpIHtcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cbn07UmVzaXphYmxlLnN0b3J5TmFtZSA9ICdyZXNpemFibGUnXG5cblxuXG5SZXNpemFibGUucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIFJlc2l6YWJsZSgpIHtcXG4gIHJldHVybiA8QmFzaWMgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLlJlc2l6YWJsZS5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwicmVzaXphYmxlYWNjZXNzb3JcIlxuICAgIH19PntgcmVzaXphYmxlQWNjZXNzb3JgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YHN0cmluZ3xmdW5jdGlvbiAoZXZlbnQpID0+IGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YCgpID0+IHRydWVgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BEZXRlcm1pbmVzIGlmIGFuIGV2ZW50IGlzIHJlc2l6YWJsZS5gfTwvcD5cbiAgICA8cD48c3Ryb25nIHBhcmVudE5hbWU9XCJwXCI+e2BOb3RlOmB9PC9zdHJvbmc+e2AgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgcmVzaXphYmxlYH08L2lubGluZUNvZGU+e2AgZXZlbnRzIG11c3QgYWxzbyBiZSBkcmFnZ2FibGUuIFlvdSBjYW5ub3QgcmVzaXplIGFuIGV2ZW50IHdpdGggYSBgfTxMaW5rVG8ga2luZD1cImFkZG9ucy1kcmFnLWFuZC1kcm9wLXByb3BzXCIgc3Rvcnk9XCJkcmFnZ2FibGUtYWNjZXNzb3JcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BkcmFnZ2FibGVBY2Nlc3NvcmB9PC9MaW5rVG8+e2AgcHJvcCBvZiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BmYWxzZWB9PC9pbmxpbmVDb2RlPntgLmB9PC9wPlxuICAgIDxTdG9yeSBpZD1cImFkZG9ucy1kcmFnLWFuZC1kcm9wLXByb3BzLS1yZXNpemFibGVcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMnXFxuaW1wb3J0IEJhc2ljIGZyb20gJy4uLy4uLy4uL2RlbW9zL2V4YW1wbGVDb2RlL3Jlc2l6YWJsZSdcXG5pbXBvcnQgbWR4IGZyb20gJy4vcmVzaXphYmxlQWNjZXNzb3IubWR4J1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnQWRkb25zL0RyYWcgYW5kIERyb3AvcHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGZ1bmN0aW9uIFJlc2l6YWJsZUFjY2Vzc29yKCkge1xcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XFxuUmVzaXphYmxlQWNjZXNzb3Iuc3RvcnlOYW1lID0gJ3Jlc2l6YWJsZUFjY2Vzc29yJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJSZXNpemFibGVBY2Nlc3NvclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MjF9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9zcmMnXG5pbXBvcnQgQmFzaWMgZnJvbSAnLi4vLi4vLi4vZGVtb3MvZXhhbXBsZUNvZGUvcmVzaXphYmxlJ1xuaW1wb3J0IG1keCBmcm9tICcuL3Jlc2l6YWJsZUFjY2Vzc29yLm1keCdcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0FkZG9ucy9EcmFnIGFuZCBEcm9wL3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgY29uc3QgUmVzaXphYmxlQWNjZXNzb3IgPSBmdW5jdGlvbiBSZXNpemFibGVBY2Nlc3NvcigpIHtcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cbn07UmVzaXphYmxlQWNjZXNzb3Iuc3RvcnlOYW1lID0gJ3Jlc2l6YWJsZUFjY2Vzc29yJ1xuXG5cblxuUmVzaXphYmxlQWNjZXNzb3IucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIFJlc2l6YWJsZUFjY2Vzc29yKCkge1xcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XCIgfSwgLi4uUmVzaXphYmxlQWNjZXNzb3IucGFyYW1ldGVycyB9OyIsImltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCwgdXNlTWVtbywgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIERhdGVMb2NhbGl6ZXIgfSBmcm9tICdyZWFjdC1iaWctY2FsZW5kYXInXG5pbXBvcnQgRGVtb0xpbmsgZnJvbSAnLi4vLi4vRGVtb0xpbmsuY29tcG9uZW50J1xuLy8gU3Rvcnlib29rIGNhbm5vdCBhbGlhcyB0aGlzLCBzbyB5b3Ugd291bGQgdXNlICdyZWFjdC1iaWctY2FsZW5kYXIvbGliL2FkZG9ucy9kcmFnQW5kRHJvcCdcbmltcG9ydCB3aXRoRHJhZ0FuZERyb3AgZnJvbSAnLi4vLi4vLi4vc3JjL2FkZG9ucy9kcmFnQW5kRHJvcCdcbi8vIFN0b3J5Ym9vayBjYW5ub3QgYWxpYXMgdGhpcywgc28geW91IHdvdWxkIHVzZSAncmVhY3QtYmlnLWNhbGVuZGFyL2xpYi9hZGRvbnMvZHJhZ0FuZERyb3Avc3R5bGVzLnNjc3MnXG5pbXBvcnQgJy4uLy4uLy4uL3NyYy9hZGRvbnMvZHJhZ0FuZERyb3Avc3R5bGVzLnNjc3MnXG5cbmNvbnN0IERyYWdBbmREcm9wQ2FsZW5kYXIgPSB3aXRoRHJhZ0FuZERyb3AoQ2FsZW5kYXIpXG5cbmNvbnN0IGV2ZW50cyA9IFtcbiAge1xuICAgIGlkOiAwLFxuICAgIHRpdGxlOiAnQm9hcmQgbWVldGluZycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTgsIDAsIDI5LCA5LCAwLCAwKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTgsIDAsIDI5LCAxMywgMCwgMCksXG4gICAgcmVzb3VyY2VJZDogWzEsIDJdLFxuICB9LFxuICB7XG4gICAgaWQ6IDEsXG4gICAgdGl0bGU6ICdNUyB0cmFpbmluZycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTgsIDAsIDI5LCAxNCwgMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE4LCAwLCAyOSwgMTYsIDMwLCAwKSxcbiAgICByZXNvdXJjZUlkOiAyLFxuICB9LFxuICB7XG4gICAgaWQ6IDIsXG4gICAgdGl0bGU6ICdUZWFtIGxlYWQgbWVldGluZycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTgsIDAsIDI5LCA4LCAzMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE4LCAwLCAyOSwgMTIsIDMwLCAwKSxcbiAgICByZXNvdXJjZUlkOiAzLFxuICB9LFxuICB7XG4gICAgaWQ6IDEwLFxuICAgIHRpdGxlOiAnQm9hcmQgbWVldGluZycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTgsIDAsIDMwLCAyMywgMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE4LCAwLCAzMCwgMjMsIDU5LCAwKSxcbiAgICByZXNvdXJjZUlkOiAxLFxuICB9LFxuICB7XG4gICAgaWQ6IDExLFxuICAgIHRpdGxlOiAnQmlydGhkYXkgUGFydHknLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE4LCAwLCAzMCwgNywgMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE4LCAwLCAzMCwgMTAsIDMwLCAwKSxcbiAgICByZXNvdXJjZUlkOiA0LFxuICB9LFxuICB7XG4gICAgaWQ6IDEyLFxuICAgIHRpdGxlOiAnQm9hcmQgbWVldGluZycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTgsIDAsIDI5LCAyMywgNTksIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAxOCwgMCwgMzAsIDEzLCAwLCAwKSxcbiAgICByZXNvdXJjZUlkOiAxLFxuICB9LFxuICB7XG4gICAgaWQ6IDEzLFxuICAgIHRpdGxlOiAnQm9hcmQgbWVldGluZycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTgsIDAsIDI5LCAyMywgNTAsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAxOCwgMCwgMzAsIDEzLCAwLCAwKSxcbiAgICByZXNvdXJjZUlkOiAyLFxuICB9LFxuICB7XG4gICAgaWQ6IDE0LFxuICAgIHRpdGxlOiAnQm9hcmQgbWVldGluZycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTgsIDAsIDI5LCAyMywgNDAsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAxOCwgMCwgMzAsIDEzLCAwLCAwKSxcbiAgICByZXNvdXJjZUlkOiA0LFxuICB9LFxuXVxuXG5jb25zdCByZXNvdXJjZU1hcCA9IFtcbiAgeyByZXNvdXJjZUlkOiAxLCByZXNvdXJjZVRpdGxlOiAnQm9hcmQgcm9vbScgfSxcbiAgeyByZXNvdXJjZUlkOiAyLCByZXNvdXJjZVRpdGxlOiAnVHJhaW5pbmcgcm9vbScgfSxcbiAgeyByZXNvdXJjZUlkOiAzLCByZXNvdXJjZVRpdGxlOiAnTWVldGluZyByb29tIDEnIH0sXG4gIHsgcmVzb3VyY2VJZDogNCwgcmVzb3VyY2VUaXRsZTogJ01lZXRpbmcgcm9vbSAyJyB9LFxuXVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEbkRSZXNvdXJjZSh7IGxvY2FsaXplciB9KSB7XG4gIGNvbnN0IFtteUV2ZW50cywgc2V0TXlFdmVudHNdID0gdXNlU3RhdGUoZXZlbnRzKVxuICBjb25zdCBbY29weUV2ZW50LCBzZXRDb3B5RXZlbnRdID0gdXNlU3RhdGUodHJ1ZSlcblxuICBjb25zdCB0b2dnbGVDb3B5RXZlbnQgPSB1c2VDYWxsYmFjaygoKSA9PiBzZXRDb3B5RXZlbnQoKHZhbCkgPT4gIXZhbCksIFtdKVxuXG4gIGNvbnN0IG1vdmVFdmVudCA9IHVzZUNhbGxiYWNrKFxuICAgICh7XG4gICAgICBldmVudCxcbiAgICAgIHN0YXJ0LFxuICAgICAgZW5kLFxuICAgICAgcmVzb3VyY2VJZCxcbiAgICAgIGlzQWxsRGF5OiBkcm9wcGVkT25BbGxEYXlTbG90ID0gZmFsc2UsXG4gICAgfSkgPT4ge1xuICAgICAgY29uc3QgeyBhbGxEYXkgfSA9IGV2ZW50XG4gICAgICBpZiAoIWFsbERheSAmJiBkcm9wcGVkT25BbGxEYXlTbG90KSB7XG4gICAgICAgIGV2ZW50LmFsbERheSA9IHRydWVcbiAgICAgIH1cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGV2ZW50LnJlc291cmNlSWQpKSB7XG4gICAgICAgIGlmIChjb3B5RXZlbnQpIHtcbiAgICAgICAgICByZXNvdXJjZUlkID0gWy4uLm5ldyBTZXQoWy4uLmV2ZW50LnJlc291cmNlSWQsIHJlc291cmNlSWRdKV1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zdCBmaWx0ZXJlZCA9IGV2ZW50LnJlc291cmNlSWQuZmlsdGVyKFxuICAgICAgICAgICAgKGV2KSA9PiBldiAhPT0gZXZlbnQuc291cmNlUmVzb3VyY2VcbiAgICAgICAgICApXG4gICAgICAgICAgcmVzb3VyY2VJZCA9IFsuLi5uZXcgU2V0KFsuLi5maWx0ZXJlZCwgcmVzb3VyY2VJZF0pXVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGNvcHlFdmVudCkge1xuICAgICAgICByZXNvdXJjZUlkID0gWy4uLm5ldyBTZXQoW2V2ZW50LnJlc291cmNlSWQsIHJlc291cmNlSWRdKV1cbiAgICAgIH1cblxuICAgICAgc2V0TXlFdmVudHMoKHByZXYpID0+IHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmcgPSBwcmV2LmZpbmQoKGV2KSA9PiBldi5pZCA9PT0gZXZlbnQuaWQpID8/IHt9XG4gICAgICAgIGNvbnN0IGZpbHRlcmVkID0gcHJldi5maWx0ZXIoKGV2KSA9PiBldi5pZCAhPT0gZXZlbnQuaWQpXG4gICAgICAgIHJldHVybiBbLi4uZmlsdGVyZWQsIHsgLi4uZXhpc3RpbmcsIHN0YXJ0LCBlbmQsIHJlc291cmNlSWQsIGFsbERheSB9XVxuICAgICAgfSlcbiAgICB9LFxuICAgIFtzZXRNeUV2ZW50cywgY29weUV2ZW50XVxuICApXG5cbiAgY29uc3QgcmVzaXplRXZlbnQgPSB1c2VDYWxsYmFjayhcbiAgICAoeyBldmVudCwgc3RhcnQsIGVuZCB9KSA9PiB7XG4gICAgICBzZXRNeUV2ZW50cygocHJldikgPT4ge1xuICAgICAgICBjb25zdCBleGlzdGluZyA9IHByZXYuZmluZCgoZXYpID0+IGV2LmlkID09PSBldmVudC5pZCkgPz8ge31cbiAgICAgICAgY29uc3QgZmlsdGVyZWQgPSBwcmV2LmZpbHRlcigoZXYpID0+IGV2LmlkICE9PSBldmVudC5pZClcbiAgICAgICAgcmV0dXJuIFsuLi5maWx0ZXJlZCwgeyAuLi5leGlzdGluZywgc3RhcnQsIGVuZCB9XVxuICAgICAgfSlcbiAgICB9LFxuICAgIFtzZXRNeUV2ZW50c11cbiAgKVxuXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIHNjcm9sbFRvVGltZSB9ID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTgsIDAsIDI5KSxcbiAgICAgIHNjcm9sbFRvVGltZTogbmV3IERhdGUoMTk3MiwgMCwgMSwgOCksXG4gICAgfSksXG4gICAgW11cbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPERlbW9MaW5rIGZpbGVOYW1lPVwiZG5kcmVzb3VyY2VcIj5cbiAgICAgICAgPHN0cm9uZz5cbiAgICAgICAgICBEcmFnIGFuZCBEcm9wIGFuIFwiZXZlbnRcIiBmcm9tIG9uZSByZXNvdXJjZSBzbG90IHRvIGFub3RoZXIuXG4gICAgICAgIDwvc3Ryb25nPlxuICAgICAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpbjogJzEwcHggMCAyMHB4IDAnIH19PlxuICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICAgICAgICBjaGVja2VkPXtjb3B5RXZlbnR9XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXt0b2dnbGVDb3B5RXZlbnR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgS2VlcCBjb3B5IG9mIGRyYWdnZWQgXCJzb3VyY2VcIiBldmVudCBpbiBpdHMgb3JpZ2luYWwgcmVzb3VyY2Ugc2xvdC5cbiAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvRGVtb0xpbms+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgICA8RHJhZ0FuZERyb3BDYWxlbmRhclxuICAgICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuREFZfVxuICAgICAgICAgIGV2ZW50cz17bXlFdmVudHN9XG4gICAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XG4gICAgICAgICAgb25FdmVudERyb3A9e21vdmVFdmVudH1cbiAgICAgICAgICBvbkV2ZW50UmVzaXplPXtyZXNpemVFdmVudH1cbiAgICAgICAgICByZXNpemFibGVcbiAgICAgICAgICByZXNvdXJjZUlkQWNjZXNzb3I9XCJyZXNvdXJjZUlkXCJcbiAgICAgICAgICByZXNvdXJjZXM9e3Jlc291cmNlTWFwfVxuICAgICAgICAgIHJlc291cmNlVGl0bGVBY2Nlc3Nvcj1cInJlc291cmNlVGl0bGVcIlxuICAgICAgICAgIHNjcm9sbFRvVGltZT17c2Nyb2xsVG9UaW1lfVxuICAgICAgICAgIHNlbGVjdGFibGVcbiAgICAgICAgICBzaG93TXVsdGlEYXlUaW1lcz17dHJ1ZX1cbiAgICAgICAgICBzdGVwPXsxNX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvRnJhZ21lbnQ+XG4gIClcbn1cbkRuRFJlc291cmNlLnByb3BUeXBlcyA9IHtcbiAgbG9jYWxpemVyOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlTG9jYWxpemVyKSxcbn1cbiIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi8uLi9zcmMnXFxuaW1wb3J0IERuRFJlc291cmNlIGZyb20gJy4uLy4uL2RlbW9zL2V4YW1wbGVDb2RlL2RuZHJlc291cmNlJ1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnQWRkb25zL0RyYWcgYW5kIERyb3AnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG51bGwsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBmdW5jdGlvbiBFeGFtcGxlMigpIHtcXG4gIHJldHVybiA8RG5EUmVzb3VyY2UgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVxcbkV4YW1wbGUyLnN0b3J5TmFtZSA9ICdSZXNvdXJjZSBEcmFnIGFuZCBEcm9wJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJFeGFtcGxlMlwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOH0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIwfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTh9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MjB9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi8uLi9zcmMnXG5pbXBvcnQgRG5EUmVzb3VyY2UgZnJvbSAnLi4vLi4vZGVtb3MvZXhhbXBsZUNvZGUvZG5kcmVzb3VyY2UnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdBZGRvbnMvRHJhZyBhbmQgRHJvcCcsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBudWxsLFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBjb25zdCBFeGFtcGxlMiA9IGZ1bmN0aW9uIEV4YW1wbGUyKCkge1xuICByZXR1cm4gPERuRFJlc291cmNlIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxufTtFeGFtcGxlMi5zdG9yeU5hbWUgPSAnUmVzb3VyY2UgRHJhZyBhbmQgRHJvcCdcblxuXG5cbkV4YW1wbGUyLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBFeGFtcGxlMigpIHtcXG4gIHJldHVybiA8RG5EUmVzb3VyY2UgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLkV4YW1wbGUyLnBhcmFtZXRlcnMgfTsiLCJleHBvcnQgZGVmYXVsdCBbXG4gIHtcbiAgICBpZDogMCxcbiAgICB0aXRsZTogJ0F2YWlsYWJsZSBmb3IgQ2xpZW50cycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEzLCA2KSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEzLCAxOCksXG4gIH0sXG5dXG4iLCJpbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgRGF0ZUxvY2FsaXplciB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCBEZW1vTGluayBmcm9tICcuLi8uLi9EZW1vTGluay5jb21wb25lbnQnXG5pbXBvcnQgZXZlbnRzIGZyb20gJy4uLy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgYmFja2dyb3VuZEV2ZW50cyBmcm9tICcuLi8uLi9yZXNvdXJjZXMvYmFja2dyb3VuZEV2ZW50cydcbmltcG9ydCAqIGFzIGRhdGVzIGZyb20gJy4uLy4uLy4uL3NyYy91dGlscy9kYXRlcydcblxubGV0IGFsbFZpZXdzID0gT2JqZWN0LmtleXMoVmlld3MpLm1hcCgoaykgPT4gVmlld3Nba10pXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEJhY2tncm91bmRFdmVudHNDYWxlbmRhcih7IGxvY2FsaXplciB9KSB7XG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIG1heCB9ID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcbiAgICAgIG1heDogZGF0ZXMuYWRkKGRhdGVzLmVuZE9mKG5ldyBEYXRlKDIwMTUsIDE3LCAxKSwgJ2RheScpLCAtMSwgJ2hvdXJzJyksXG4gICAgfSksXG4gICAgW11cbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPERlbW9MaW5rIGZpbGVOYW1lPVwiYmFja2dyb3VuZEV2ZW50c1wiIC8+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgICA8Q2FsZW5kYXJcbiAgICAgICAgICBiYWNrZ3JvdW5kRXZlbnRzPXtiYWNrZ3JvdW5kRXZlbnRzfVxuICAgICAgICAgIGRheUxheW91dEFsZ29yaXRobT1cIm5vLW92ZXJsYXBcIlxuICAgICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuREFZfVxuICAgICAgICAgIGV2ZW50cz17ZXZlbnRzfVxuICAgICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICAgIG1heD17bWF4fVxuICAgICAgICAgIHNob3dNdWx0aURheVRpbWVzXG4gICAgICAgICAgc3RlcD17NjB9XG4gICAgICAgICAgdmlld3M9e2FsbFZpZXdzfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKVxufVxuQmFja2dyb3VuZEV2ZW50c0NhbGVuZGFyLnByb3BUeXBlcyA9IHtcbiAgbG9jYWxpemVyOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlTG9jYWxpemVyKSxcbn1cbiIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IEJhY2tncm91bmRDYWxlbmRhciBmcm9tICcuL2V4YW1wbGVDb2RlL2JhY2tncm91bmRFdmVudHMnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdFeGFtcGxlcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbnVsbCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGZ1bmN0aW9uIEV4YW1wbGUxMCgpIHtcXG4gIHJldHVybiA8QmFja2dyb3VuZENhbGVuZGFyIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cXG5FeGFtcGxlMTAuc3RvcnlOYW1lID0gJ0JhY2tncm91bmQgRXZlbnRzJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJFeGFtcGxlMTBcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTh9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE4fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIwfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IEJhY2tncm91bmRDYWxlbmRhciBmcm9tICcuL2V4YW1wbGVDb2RlL2JhY2tncm91bmRFdmVudHMnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdFeGFtcGxlcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBudWxsLFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBjb25zdCBFeGFtcGxlMTAgPSBmdW5jdGlvbiBFeGFtcGxlMTAoKSB7XG4gIHJldHVybiA8QmFja2dyb3VuZENhbGVuZGFyIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxufTtFeGFtcGxlMTAuc3RvcnlOYW1lID0gJ0JhY2tncm91bmQgRXZlbnRzJ1xuXG5cblxuRXhhbXBsZTEwLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBFeGFtcGxlMTAoKSB7XFxuICByZXR1cm4gPEJhY2tncm91bmRDYWxlbmRhciBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XCIgfSwgLi4uRXhhbXBsZTEwLnBhcmFtZXRlcnMgfTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBCYXNpYyBmcm9tICcuL2V4YW1wbGVDb2RlL2Jhc2ljJ1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRXhhbXBsZXMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG51bGwsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBmdW5jdGlvbiBFeGFtcGxlMSgpIHtcXG4gIHJldHVybiA8QmFzaWMgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVxcbkV4YW1wbGUxLnN0b3J5TmFtZSA9ICdCYXNpYyBEZW1vJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJFeGFtcGxlMVwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOH0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIwfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTh9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MjB9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgQmFzaWMgZnJvbSAnLi9leGFtcGxlQ29kZS9iYXNpYydcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0V4YW1wbGVzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG51bGwsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGNvbnN0IEV4YW1wbGUxID0gZnVuY3Rpb24gRXhhbXBsZTEoKSB7XG4gIHJldHVybiA8QmFzaWMgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XG59O0V4YW1wbGUxLnN0b3J5TmFtZSA9ICdCYXNpYyBEZW1vJ1xuXG5cblxuRXhhbXBsZTEucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIEV4YW1wbGUxKCkge1xcbiAgcmV0dXJuIDxCYXNpYyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XCIgfSwgLi4uRXhhbXBsZTEucGFyYW1ldGVycyB9OyIsImltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBDYWxlbmRhciwgRGF0ZUxvY2FsaXplciB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCBEZW1vTGluayBmcm9tICcuLi8uLi9EZW1vTGluay5jb21wb25lbnQnXG5pbXBvcnQgZXZlbnRzIGZyb20gJy4uLy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgTGF5b3V0IGZyb20gJ3JlYWN0LXRhY2tsZS1ib3gvTGF5b3V0J1xuXG5yZXF1aXJlKCdnbG9iYWxpemUvbGliL2N1bHR1cmVzL2dsb2JhbGl6ZS5jdWx0dXJlLmVuLUdCJylcbnJlcXVpcmUoJ2dsb2JhbGl6ZS9saWIvY3VsdHVyZXMvZ2xvYmFsaXplLmN1bHR1cmUuZXMnKVxucmVxdWlyZSgnZ2xvYmFsaXplL2xpYi9jdWx0dXJlcy9nbG9iYWxpemUuY3VsdHVyZS5mcicpXG5yZXF1aXJlKCdnbG9iYWxpemUvbGliL2N1bHR1cmVzL2dsb2JhbGl6ZS5jdWx0dXJlLmFyLUFFJylcblxuY29uc3QgY3VsdHVyZXMgPSBbJ2VuJywgJ2VuLUdCJywgJ2VzJywgJ2ZyJywgJ2FyLUFFJ11cbmNvbnN0IGxhbmcgPSB7XG4gIGVuOiBudWxsLFxuICAnZW4tR0InOiBudWxsLFxuICBlczoge1xuICAgIHdlZWs6ICdTZW1hbmEnLFxuICAgIHdvcmtfd2VlazogJ1NlbWFuYSBkZSB0cmFiYWpvJyxcbiAgICBkYXk6ICdEw61hJyxcbiAgICBtb250aDogJ01lcycsXG4gICAgcHJldmlvdXM6ICdBdHLDoXMnLFxuICAgIG5leHQ6ICdEZXNwdcOpcycsXG4gICAgdG9kYXk6ICdIb3knLFxuICAgIGFnZW5kYTogJ0VsIERpYXJpbycsXG5cbiAgICBzaG93TW9yZTogKHRvdGFsKSA9PiBgKyR7dG90YWx9IG3DoXNgLFxuICB9LFxuICBmcjoge1xuICAgIHdlZWs6ICdMYSBzZW1haW5lJyxcbiAgICB3b3JrX3dlZWs6ICdTZW1haW5lIGRlIHRyYXZhaWwnLFxuICAgIGRheTogJ0pvdXInLFxuICAgIG1vbnRoOiAnTW9pcycsXG4gICAgcHJldmlvdXM6ICdBbnTDqXJpZXVyJyxcbiAgICBuZXh0OiAnUHJvY2hhaW4nLFxuICAgIHRvZGF5OiBgQXVqb3VyZCdodWlgLFxuICAgIGFnZW5kYTogJ09yZHJlIGR1IGpvdXInLFxuXG4gICAgc2hvd01vcmU6ICh0b3RhbCkgPT4gYCske3RvdGFsfSBwbHVzYCxcbiAgfSxcbiAgJ2FyLUFFJzoge1xuICAgIHdlZWs6ICfYo9iz2KjZiNi5JyxcbiAgICB3b3JrX3dlZWs6ICfYo9iz2KjZiNi5INin2YTYudmF2YQnLFxuICAgIGRheTogJ9mK2YjZhScsXG4gICAgbW9udGg6ICfYtNmH2LEnLFxuICAgIHByZXZpb3VzOiAn2LPYp9io2YInLFxuICAgIG5leHQ6ICfYp9mE2KrYp9mE2YonLFxuICAgIHRvZGF5OiAn2KfZhNmK2YjZhScsXG4gICAgYWdlbmRhOiAn2KzYr9mI2YQg2KPYudmF2KfZhCcsXG5cbiAgICBzaG93TW9yZTogKHRvdGFsKSA9PiBgKyR7dG90YWx9INil2LbYp9mB2YpgLFxuICB9LFxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDdWx0dXJlc0RlbW8oeyBsb2NhbGl6ZXIgfSkge1xuICBjb25zdCBbY3VsdHVyZSwgc2V0Q3VsdHVyZV0gPSB1c2VTdGF0ZSgnZnInKVxuICBjb25zdCBbcmlnaHRUb0xlZnQsIHNldFJpZ2h0VG9MZWZ0XSA9IHVzZVN0YXRlKGZhbHNlKVxuXG4gIGNvbnN0IGN1bHR1cmVPbkNsaWNrID0gdXNlQ2FsbGJhY2soXG4gICAgKHsgdGFyZ2V0OiB7IHZhbHVlIH0gfSkgPT4ge1xuICAgICAgLy8gcmVhbGx5IGJldHRlciB0byB1c2VSZWR1Y2VyIGZvciBzaW11bHRhbmVvdXNseSBzZXR0aW5nIG11bHRpcGxlIHN0YXRlIHZhbHVlc1xuICAgICAgc2V0Q3VsdHVyZSh2YWx1ZSlcbiAgICAgIHNldFJpZ2h0VG9MZWZ0KHZhbHVlID09PSAnYXItQUUnKVxuICAgIH0sXG4gICAgW3NldEN1bHR1cmVdXG4gIClcblxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBtZXNzYWdlcyB9ID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEpLFxuICAgICAgbWVzc2FnZXM6IGxhbmdbY3VsdHVyZV0sXG4gICAgfSksXG4gICAgW2N1bHR1cmVdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxEZW1vTGluayBmaWxlTmFtZT1cImN1bHR1cmVzXCI+XG4gICAgICAgIDxMYXlvdXQgZGlyZWN0aW9uPVwiY29sdW1uXCIgYWxpZ249XCJjZW50ZXJcIj5cbiAgICAgICAgICA8bGFiZWw+U2VsZWN0IGEgQ3VsdHVyZTwvbGFiZWw+eycgJ31cbiAgICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgc3R5bGU9e3sgd2lkdGg6IDIwMCwgZGlzcGxheTogJ2lubGluZS1ibG9jaycgfX1cbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17J2ZyJ31cbiAgICAgICAgICAgIG9uQ2hhbmdlPXtjdWx0dXJlT25DbGlja31cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y3VsdHVyZXMubWFwKChjLCBpZHgpID0+IChcbiAgICAgICAgICAgICAgPG9wdGlvbiBrZXk9e2lkeH0gdmFsdWU9e2N9PlxuICAgICAgICAgICAgICAgIHtjfVxuICAgICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICA8L0xheW91dD5cbiAgICAgIDwvRGVtb0xpbms+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgICA8Q2FsZW5kYXJcbiAgICAgICAgICBjdWx0dXJlPXtjdWx0dXJlfVxuICAgICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgICBldmVudHM9e2V2ZW50c31cbiAgICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgICBtZXNzYWdlcz17bWVzc2FnZXN9XG4gICAgICAgICAgcnRsPXtyaWdodFRvTGVmdH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvRnJhZ21lbnQ+XG4gIClcbn1cbkN1bHR1cmVzRGVtby5wcm9wVHlwZXMgPSB7XG4gIGxvY2FsaXplcjogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZUxvY2FsaXplciksXG59XG4iLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBDdWx0dXJlRGVtbyBmcm9tICcuL2V4YW1wbGVDb2RlL2N1bHR1cmVzJ1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRXhhbXBsZXMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG51bGwsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBmdW5jdGlvbiBFeGFtcGxlNSgpIHtcXG4gIHJldHVybiA8Q3VsdHVyZURlbW8gbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVxcbkV4YW1wbGU1LnN0b3J5TmFtZSA9ICdMb2NhbGl6YXRpb24nXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkV4YW1wbGU1XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE4fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MjB9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMH19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBDdWx0dXJlRGVtbyBmcm9tICcuL2V4YW1wbGVDb2RlL2N1bHR1cmVzJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRXhhbXBsZXMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbnVsbCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgY29uc3QgRXhhbXBsZTUgPSBmdW5jdGlvbiBFeGFtcGxlNSgpIHtcbiAgcmV0dXJuIDxDdWx0dXJlRGVtbyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cbn07RXhhbXBsZTUuc3RvcnlOYW1lID0gJ0xvY2FsaXphdGlvbidcblxuXG5cbkV4YW1wbGU1LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBFeGFtcGxlNSgpIHtcXG4gIHJldHVybiA8Q3VsdHVyZURlbW8gbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLkV4YW1wbGU1LnBhcmFtZXRlcnMgfTsiLCJpbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcblxuaW1wb3J0ICogYXMgZGF0ZXMgZnJvbSAnZGF0ZS1hcml0aG1ldGljJ1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBOYXZpZ2F0ZSwgRGF0ZUxvY2FsaXplciB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCBUaW1lR3JpZCBmcm9tICcuLi8uLi8uLi9zcmMvVGltZUdyaWQnIC8vIHVzZSAncmVhY3QtYmlnLWNhbGVuZGFyL2xpYi9UaW1lR3JpZCcuIENhbid0ICdhbGlhcycgaW4gU3Rvcnlib29rXG5pbXBvcnQgZXZlbnRzIGZyb20gJy4uLy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgRGVtb0xpbmsgZnJvbSAnLi4vLi4vRGVtb0xpbmsuY29tcG9uZW50J1xuXG5mdW5jdGlvbiBNeVdlZWsoe1xuICBkYXRlLFxuICBsb2NhbGl6ZXIsXG4gIG1heCA9IGxvY2FsaXplci5lbmRPZihuZXcgRGF0ZSgpLCAnZGF5JyksXG4gIG1pbiA9IGxvY2FsaXplci5zdGFydE9mKG5ldyBEYXRlKCksICdkYXknKSxcbiAgc2Nyb2xsVG9UaW1lID0gbG9jYWxpemVyLnN0YXJ0T2YobmV3IERhdGUoKSwgJ2RheScpLFxuICAuLi5wcm9wc1xufSkge1xuICBjb25zdCBjdXJyUmFuZ2UgPSB1c2VNZW1vKFxuICAgICgpID0+IE15V2Vlay5yYW5nZShkYXRlLCB7IGxvY2FsaXplciB9KSxcbiAgICBbZGF0ZSwgbG9jYWxpemVyXVxuICApXG5cbiAgcmV0dXJuIChcbiAgICA8VGltZUdyaWRcbiAgICAgIGRhdGU9e2RhdGV9XG4gICAgICBldmVudE9mZnNldD17MTV9XG4gICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgIG1heD17bWF4fVxuICAgICAgbWluPXttaW59XG4gICAgICByYW5nZT17Y3VyclJhbmdlfVxuICAgICAgc2Nyb2xsVG9UaW1lPXtzY3JvbGxUb1RpbWV9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgLz5cbiAgKVxufVxuXG5NeVdlZWsucHJvcFR5cGVzID0ge1xuICBkYXRlOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKS5pc1JlcXVpcmVkLFxuICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5vYmplY3QsXG4gIG1heDogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG4gIG1pbjogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG4gIHNjcm9sbFRvVGltZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG59XG5cbk15V2Vlay5yYW5nZSA9IChkYXRlLCB7IGxvY2FsaXplciB9KSA9PiB7XG4gIGNvbnN0IHN0YXJ0ID0gZGF0ZVxuICBjb25zdCBlbmQgPSBkYXRlcy5hZGQoc3RhcnQsIDIsICdkYXknKVxuXG4gIGxldCBjdXJyZW50ID0gc3RhcnRcbiAgY29uc3QgcmFuZ2UgPSBbXVxuXG4gIHdoaWxlIChsb2NhbGl6ZXIubHRlKGN1cnJlbnQsIGVuZCwgJ2RheScpKSB7XG4gICAgcmFuZ2UucHVzaChjdXJyZW50KVxuICAgIGN1cnJlbnQgPSBsb2NhbGl6ZXIuYWRkKGN1cnJlbnQsIDEsICdkYXknKVxuICB9XG5cbiAgcmV0dXJuIHJhbmdlXG59XG5cbk15V2Vlay5uYXZpZ2F0ZSA9IChkYXRlLCBhY3Rpb24sIHsgbG9jYWxpemVyIH0pID0+IHtcbiAgc3dpdGNoIChhY3Rpb24pIHtcbiAgICBjYXNlIE5hdmlnYXRlLlBSRVZJT1VTOlxuICAgICAgcmV0dXJuIGxvY2FsaXplci5hZGQoZGF0ZSwgLTMsICdkYXknKVxuXG4gICAgY2FzZSBOYXZpZ2F0ZS5ORVhUOlxuICAgICAgcmV0dXJuIGxvY2FsaXplci5hZGQoZGF0ZSwgMywgJ2RheScpXG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGRhdGVcbiAgfVxufVxuXG5NeVdlZWsudGl0bGUgPSAoZGF0ZSkgPT4ge1xuICByZXR1cm4gYE15IGF3ZXNvbWUgd2VlazogJHtkYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpfWBcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ3VzdG9tVmlldyh7IGxvY2FsaXplciB9KSB7XG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIHZpZXdzIH0gPSB1c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMSksXG4gICAgICB2aWV3czoge1xuICAgICAgICBtb250aDogdHJ1ZSxcbiAgICAgICAgd2VlazogTXlXZWVrLFxuICAgICAgfSxcbiAgICB9KSxcbiAgICBbXVxuICApXG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8RGVtb0xpbmsgZmlsZU5hbWU9XCJjdXN0b21WaWV3XCI+XG4gICAgICAgIDxzdHJvbmc+VGhlIENhbGVuZGFyIGJlbG93IGltcGxlbWVudHMgYSBjdXN0b20gMy1kYXkgd2VlayB2aWV3PC9zdHJvbmc+XG4gICAgICA8L0RlbW9MaW5rPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgICAgPENhbGVuZGFyXG4gICAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxuICAgICAgICAgIGV2ZW50cz17ZXZlbnRzfVxuICAgICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICAgIHZpZXdzPXt2aWV3c31cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvRnJhZ21lbnQ+XG4gIClcbn1cbkN1c3RvbVZpZXcucHJvcFR5cGVzID0ge1xuICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGVMb2NhbGl6ZXIpLFxufVxuIiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgQ3VzdG9tVmlldyBmcm9tICcuL2V4YW1wbGVDb2RlL2N1c3RvbVZpZXcnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdFeGFtcGxlcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbnVsbCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGZ1bmN0aW9uIEV4YW1wbGU5KCkge1xcbiAgcmV0dXJuIDxDdXN0b21WaWV3IGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cXG5FeGFtcGxlOS5zdG9yeU5hbWUgPSAnQ3VzdG9tIENhbGVuZGFyIFZpZXdzJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJFeGFtcGxlOVwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOH0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIwfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTh9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MjB9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgQ3VzdG9tVmlldyBmcm9tICcuL2V4YW1wbGVDb2RlL2N1c3RvbVZpZXcnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdFeGFtcGxlcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBudWxsLFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBjb25zdCBFeGFtcGxlOSA9IGZ1bmN0aW9uIEV4YW1wbGU5KCkge1xuICByZXR1cm4gPEN1c3RvbVZpZXcgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XG59O0V4YW1wbGU5LnN0b3J5TmFtZSA9ICdDdXN0b20gQ2FsZW5kYXIgVmlld3MnXG5cblxuXG5FeGFtcGxlOS5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gRXhhbXBsZTkoKSB7XFxuICByZXR1cm4gPEN1c3RvbVZpZXcgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLkV4YW1wbGU5LnBhcmFtZXRlcnMgfTsiLCJpbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBkYXlqcyBmcm9tICdkYXlqcydcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgZGF5anNMb2NhbGl6ZXIgfSBmcm9tICdyZWFjdC1iaWctY2FsZW5kYXInXG5pbXBvcnQgRGVtb0xpbmsgZnJvbSAnLi4vLi4vRGVtb0xpbmsuY29tcG9uZW50J1xuaW1wb3J0IGV2ZW50cyBmcm9tICcuLi8uLi9yZXNvdXJjZXMvZXZlbnRzJ1xuXG4vLyBOb3RlIHRoYXQgdGhlIGRheWpzTG9jYWxpemVyIGV4dGVuZHMgRGF5LmpzIHdpdGggdGhlIGZvbGxvd2luZyBwbHVnaW5zOlxuLy8gLSBJc0JldHdlZW5cbi8vIC0gSXNTYW1lT3JBZnRlclxuLy8gLSBJc1NhbWVPckJlZm9yZVxuLy8gLSBMb2NhbGVEYXRhXG4vLyAtIExvY2FsaXplZEZvcm1hdFxuLy8gLSBNaW5NYXhcbi8vIC0gVVRDXG5cbi8vIGFkZCBvcHRpb25hbCB0aW1lIHpvbmUgc3VwcG9ydFxuaW1wb3J0IHRpbWV6b25lIGZyb20gJ2RheWpzL3BsdWdpbi90aW1lem9uZSdcbmRheWpzLmV4dGVuZCh0aW1lem9uZSlcblxuY29uc3QgZGpMb2NhbGl6ZXIgPSBkYXlqc0xvY2FsaXplcihkYXlqcylcblxuY29uc3QgQ29sb3JlZERhdGVDZWxsV3JhcHBlciA9ICh7IGNoaWxkcmVuIH0pID0+XG4gIFJlYWN0LmNsb25lRWxlbWVudChSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKSwge1xuICAgIHN0eWxlOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdsaWdodGJsdWUnLFxuICAgIH0sXG4gIH0pXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERheWpzKHsgLi4ucHJvcHMgfSkge1xuICBjb25zdCB7IGNvbXBvbmVudHMsIGRlZmF1bHREYXRlLCBtYXgsIHZpZXdzIH0gPSB1c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICBjb21wb25lbnRzOiB7XG4gICAgICAgIHRpbWVTbG90V3JhcHBlcjogQ29sb3JlZERhdGVDZWxsV3JhcHBlcixcbiAgICAgIH0sXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMSksXG4gICAgICBtYXg6IGRheWpzKCkuZW5kT2YoJ2RheScpLnN1YnRyYWN0KDEsICdob3VycycpLnRvRGF0ZSgpLFxuICAgICAgdmlld3M6IE9iamVjdC5rZXlzKFZpZXdzKS5tYXAoKGspID0+IFZpZXdzW2tdKSxcbiAgICB9KSxcbiAgICBbXVxuICApXG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8RGVtb0xpbmsgZmlsZU5hbWU9XCJkYXlqc1wiIC8+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiIHsuLi5wcm9wc30+XG4gICAgICAgIDxDYWxlbmRhclxuICAgICAgICAgIGNvbXBvbmVudHM9e2NvbXBvbmVudHN9XG4gICAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICAgIGV2ZW50cz17ZXZlbnRzfVxuICAgICAgICAgIGxvY2FsaXplcj17ZGpMb2NhbGl6ZXJ9XG4gICAgICAgICAgbWF4PXttYXh9XG4gICAgICAgICAgc2hvd011bHRpRGF5VGltZXNcbiAgICAgICAgICBzdGVwPXs2MH1cbiAgICAgICAgICB2aWV3cz17dmlld3N9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApXG59XG4iLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIGRheWpzTG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBEYXlqcyBmcm9tICcuL2V4YW1wbGVDb2RlL2RheWpzJ1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRXhhbXBsZXMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG51bGwsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBsb2NhbGl6ZXIgPSBkYXlqc0xvY2FsaXplcihkYXlqcylcXG5cXG5leHBvcnQgZnVuY3Rpb24gRGF5anNMb2NhbGl6ZXIoKSB7XFxuICByZXR1cm4gPERheWpzIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRGF5anNMb2NhbGl6ZXJcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTh9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE4fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIwfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGRheWpzIGZyb20gJ2RheWpzJ1xuaW1wb3J0IHsgQ2FsZW5kYXIsIGRheWpzTG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IERheWpzIGZyb20gJy4vZXhhbXBsZUNvZGUvZGF5anMnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdFeGFtcGxlcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBudWxsLFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IGxvY2FsaXplciA9IGRheWpzTG9jYWxpemVyKGRheWpzKVxuXG5leHBvcnQgY29uc3QgRGF5anNMb2NhbGl6ZXIgPSBmdW5jdGlvbiBEYXlqc0xvY2FsaXplcigpIHtcbiAgcmV0dXJuIDxEYXlqcyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cbn07XG5cblxuRGF5anNMb2NhbGl6ZXIucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIERheWpzTG9jYWxpemVyKCkge1xcbiAgcmV0dXJuIDxEYXlqcyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XCIgfSwgLi4uRGF5anNMb2NhbGl6ZXIucGFyYW1ldGVycyB9OyIsImltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCwgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIGx1eG9uTG9jYWxpemVyLCBWaWV3cyB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCB7IERhdGVUaW1lLCBTZXR0aW5ncyB9IGZyb20gJ2x1eG9uJ1xuaW1wb3J0IERlbW9MaW5rIGZyb20gJy4uLy4uL0RlbW9MaW5rLmNvbXBvbmVudCdcblxuaW1wb3J0IGV2ZW50cyBmcm9tICcuLi8uLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IFRpbWV6b25lU2VsZWN0IGZyb20gJy4uL1RpbWV6b25lU2VsZWN0J1xuXG5jb25zdCBkZWZhdWx0VFogPSBEYXRlVGltZS5sb2NhbCgpLnpvbmVOYW1lXG5jb25zdCBkZWZhdWx0RGF0ZVN0ciA9ICcyMDE1LTA0LTEzJ1xuXG5mdW5jdGlvbiBnZXREYXRlKHN0ciwgRGF0ZVRpbWVPYmopIHtcbiAgcmV0dXJuIERhdGVUaW1lT2JqLmZyb21JU08oc3RyKS50b0pTRGF0ZSgpXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEx1eG9uKCkge1xuICBjb25zdCBbdGltZXpvbmUsIHNldFRpbWV6b25lXSA9IHVzZVN0YXRlKGRlZmF1bHRUWilcblxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBnZXROb3csIGxvY2FsaXplciwgbXlFdmVudHMsIHNjcm9sbFRvVGltZSB9ID1cbiAgICB1c2VNZW1vKCgpID0+IHtcbiAgICAgIFNldHRpbmdzLmRlZmF1bHRab25lID0gdGltZXpvbmVcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRlZmF1bHREYXRlOiBnZXREYXRlKGRlZmF1bHREYXRlU3RyLCBEYXRlVGltZSksXG4gICAgICAgIGdldE5vdzogKCkgPT4gRGF0ZVRpbWUubG9jYWwoKS50b0pTRGF0ZSgpLFxuICAgICAgICBsb2NhbGl6ZXI6IGx1eG9uTG9jYWxpemVyKERhdGVUaW1lKSxcbiAgICAgICAgbXlFdmVudHM6IFsuLi5ldmVudHNdLFxuICAgICAgICBzY3JvbGxUb1RpbWU6IERhdGVUaW1lLmxvY2FsKCkudG9KU0RhdGUoKSxcbiAgICAgIH1cbiAgICB9LCBbdGltZXpvbmVdKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIFNldHRpbmdzLmRlZmF1bHRab25lID0gZGVmYXVsdFRaIC8vIHJlc2V0IHRvIGJyb3dzZXIgVFogb24gdW5tb3VudFxuICAgIH1cbiAgfSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8RGVtb0xpbmsgZmlsZU5hbWU9XCJsdXhvblwiPlxuICAgICAgICA8VGltZXpvbmVTZWxlY3RcbiAgICAgICAgICBkZWZhdWx0VFo9e2RlZmF1bHRUWn1cbiAgICAgICAgICBzZXRUaW1lem9uZT17c2V0VGltZXpvbmV9XG4gICAgICAgICAgdGltZXpvbmU9e3RpbWV6b25lfVxuICAgICAgICAgIHRpdGxlPXtgVGhpcyBjYWxlbmRhciB1c2VzIHRoZSAnbHV4b25Mb2NhbGl6ZXInYH1cbiAgICAgICAgLz5cbiAgICAgIDwvRGVtb0xpbms+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgICA8Q2FsZW5kYXJcbiAgICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XG4gICAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XG4gICAgICAgICAgZXZlbnRzPXtteUV2ZW50c31cbiAgICAgICAgICBnZXROb3c9e2dldE5vd31cbiAgICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgICBzY3JvbGxUb1RpbWU9e3Njcm9sbFRvVGltZX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvRnJhZ21lbnQ+XG4gIClcbn1cbiIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSAnbHV4b24nXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIGx1eG9uTG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBMdXhvbiBmcm9tICcuL2V4YW1wbGVDb2RlL2x1eG9uJ1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRXhhbXBsZXMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG51bGwsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBsb2NhbGl6ZXIgPSBsdXhvbkxvY2FsaXplcihEYXRlVGltZSlcXG5cXG5leHBvcnQgZnVuY3Rpb24gTHV4b25Mb2NhbGl6ZXIoKSB7XFxuICByZXR1cm4gPEx1eG9uIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiTHV4b25Mb2NhbGl6ZXJcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTh9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE4fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIwfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tICdsdXhvbidcbmltcG9ydCB7IENhbGVuZGFyLCBsdXhvbkxvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBMdXhvbiBmcm9tICcuL2V4YW1wbGVDb2RlL2x1eG9uJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRXhhbXBsZXMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbnVsbCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBsb2NhbGl6ZXIgPSBsdXhvbkxvY2FsaXplcihEYXRlVGltZSlcblxuZXhwb3J0IGNvbnN0IEx1eG9uTG9jYWxpemVyID0gZnVuY3Rpb24gTHV4b25Mb2NhbGl6ZXIoKSB7XG4gIHJldHVybiA8THV4b24gbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XG59O1xuXG5cbkx1eG9uTG9jYWxpemVyLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBMdXhvbkxvY2FsaXplcigpIHtcXG4gIHJldHVybiA8THV4b24gbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLkx1eG9uTG9jYWxpemVyLnBhcmFtZXRlcnMgfTsiLCJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZVN0YXRlLCB1c2VNZW1vLCBGcmFnbWVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBEYXRlTG9jYWxpemVyIH0gZnJvbSAncmVhY3QtYmlnLWNhbGVuZGFyJ1xuaW1wb3J0IERlbW9MaW5rIGZyb20gJy4uLy4uL0RlbW9MaW5rLmNvbXBvbmVudCdcbmltcG9ydCBldmVudHMgZnJvbSAnLi4vLi4vcmVzb3VyY2VzL2V2ZW50cydcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ3JlYXRlRXZlbnRXaXRoTm9PdmVybGFwKHtcbiAgbG9jYWxpemVyLFxuICBkYXlMYXlvdXRBbGdvcml0aG0gPSAnbm8tb3ZlcmxhcCcsXG59KSB7XG4gIGNvbnN0IFtteUV2ZW50cywgc2V0RXZlbnRzXSA9IHVzZVN0YXRlKGV2ZW50cylcblxuICBjb25zdCBoYW5kbGVTZWxlY3RTbG90ID0gdXNlQ2FsbGJhY2soXG4gICAgKHsgc3RhcnQsIGVuZCB9KSA9PiB7XG4gICAgICBjb25zdCB0aXRsZSA9IHdpbmRvdy5wcm9tcHQoJ05ldyBFdmVudCBOYW1lJylcbiAgICAgIGlmICh0aXRsZSkge1xuICAgICAgICBzZXRFdmVudHMoKHByZXYpID0+IFsuLi5wcmV2LCB7IHN0YXJ0LCBlbmQsIHRpdGxlIH1dKVxuICAgICAgfVxuICAgIH0sXG4gICAgW3NldEV2ZW50c11cbiAgKVxuXG4gIGNvbnN0IGhhbmRsZVNlbGVjdEV2ZW50ID0gdXNlQ2FsbGJhY2soXG4gICAgKGV2ZW50KSA9PiB3aW5kb3cuYWxlcnQoZXZlbnQudGl0bGUpLFxuICAgIFtdXG4gIClcblxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBzY3JvbGxUb1RpbWUgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMiksXG4gICAgICBzY3JvbGxUb1RpbWU6IG5ldyBEYXRlKDE5NzAsIDEsIDEsIDYpLFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxEZW1vTGluayBmaWxlTmFtZT1cImNyZWF0ZUV2ZW50V2l0aE5vT3ZlcmxhcFwiPlxuICAgICAgICA8c3Ryb25nPlxuICAgICAgICAgIENsaWNrIGFuIGV2ZW50IHRvIHNlZSBtb3JlIGluZm8sIG9yIGRyYWcgdGhlIG1vdXNlIG92ZXIgdGhlIGNhbGVuZGFyXG4gICAgICAgICAgdG8gc2VsZWN0IGEgZGF0ZS90aW1lIHJhbmdlLlxuICAgICAgICAgIDxiciAvPlxuICAgICAgICAgIFRoZSBldmVudHMgYXJlIGJlaW5nIGFycmFuZ2VkIGJ5IGBuby1vdmVybGFwYCBhbGdvcml0aG0uXG4gICAgICAgIDwvc3Ryb25nPlxuICAgICAgPC9EZW1vTGluaz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICAgIDxDYWxlbmRhclxuICAgICAgICAgIGRheUxheW91dEFsZ29yaXRobT17ZGF5TGF5b3V0QWxnb3JpdGhtfVxuICAgICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cbiAgICAgICAgICBldmVudHM9e215RXZlbnRzfVxuICAgICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICAgIG9uU2VsZWN0RXZlbnQ9e2hhbmRsZVNlbGVjdEV2ZW50fVxuICAgICAgICAgIG9uU2VsZWN0U2xvdD17aGFuZGxlU2VsZWN0U2xvdH1cbiAgICAgICAgICBzZWxlY3RhYmxlXG4gICAgICAgICAgc2Nyb2xsVG9UaW1lPXtzY3JvbGxUb1RpbWV9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApXG59XG5cbkNyZWF0ZUV2ZW50V2l0aE5vT3ZlcmxhcC5wcm9wVHlwZXMgPSB7XG4gIGxvY2FsaXplcjogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZUxvY2FsaXplciksXG4gIGRheUxheW91dEFsZ29yaXRobTogUHJvcFR5cGVzLnN0cmluZyxcbn1cbiIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IENyZWF0ZUV2ZW50V2l0aE5vT3ZlcmxhcCBmcm9tICcuL2V4YW1wbGVDb2RlL2NyZWF0ZUV2ZW50V2l0aE5vT3ZlcmxhcCdcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0V4YW1wbGVzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBudWxsLFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZnVuY3Rpb24gRXhhbXBsZTMoKSB7XFxuICByZXR1cm4gPENyZWF0ZUV2ZW50V2l0aE5vT3ZlcmxhcCBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XFxuRXhhbXBsZTMuc3RvcnlOYW1lID0gJ0NyZWF0ZSBldmVudHMgd2l0aCBuby1vdmVybGFwIGFsZ29yaXRobSdcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRXhhbXBsZTNcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTh9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE4fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIwfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IENyZWF0ZUV2ZW50V2l0aE5vT3ZlcmxhcCBmcm9tICcuL2V4YW1wbGVDb2RlL2NyZWF0ZUV2ZW50V2l0aE5vT3ZlcmxhcCdcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0V4YW1wbGVzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG51bGwsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGNvbnN0IEV4YW1wbGUzID0gZnVuY3Rpb24gRXhhbXBsZTMoKSB7XG4gIHJldHVybiA8Q3JlYXRlRXZlbnRXaXRoTm9PdmVybGFwIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxufTtFeGFtcGxlMy5zdG9yeU5hbWUgPSAnQ3JlYXRlIGV2ZW50cyB3aXRoIG5vLW92ZXJsYXAgYWxnb3JpdGhtJ1xuXG5cblxuRXhhbXBsZTMucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIEV4YW1wbGUzKCkge1xcbiAgcmV0dXJuIDxDcmVhdGVFdmVudFdpdGhOb092ZXJsYXAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLkV4YW1wbGUzLnBhcmFtZXRlcnMgfTsiLCJpbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IENhbGVuZGFyLCBEYXRlTG9jYWxpemVyIH0gZnJvbSAncmVhY3QtYmlnLWNhbGVuZGFyJ1xuaW1wb3J0IERlbW9MaW5rIGZyb20gJy4uLy4uL0RlbW9MaW5rLmNvbXBvbmVudCdcbmltcG9ydCBldmVudHMgZnJvbSAnLi4vLi4vcmVzb3VyY2VzL2V2ZW50cydcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9wdXAoeyBsb2NhbGl6ZXIgfSkge1xuICBjb25zdCBkZWZhdWx0RGF0ZSA9IHVzZU1lbW8oKCkgPT4gbmV3IERhdGUoMjAxNSwgMywgMSksIFtdKVxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxEZW1vTGluayBmaWxlTmFtZT1cInBvcHVwXCI+XG4gICAgICAgIDxzdHJvbmc+XG4gICAgICAgICAgQ2xpY2sgdGhlIFwiKyYjMTIzO3gmIzEyNTsgbW9yZVwiIGxpbmsgb24gYW55IGNhbGVuZGFyIGRheSB0aGF0IGNhbm5vdFxuICAgICAgICAgIGZpdCBhbGwgdGhlIGRheXMgZXZlbnRzIHRvIHNlZSBhbiBpbmxpbmUgcG9wdXAgb2YgYWxsIHRoZSBldmVudHMuXG4gICAgICAgIDwvc3Ryb25nPlxuICAgICAgPC9EZW1vTGluaz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICAgIDxDYWxlbmRhclxuICAgICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgICBldmVudHM9e2V2ZW50c31cbiAgICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgICBwb3B1cFxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKVxufVxuUG9wdXAucHJvcFR5cGVzID0ge1xuICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGVMb2NhbGl6ZXIpLFxufVxuIiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgUG9wdXBEZW1vIGZyb20gJy4vZXhhbXBsZUNvZGUvcG9wdXAnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdFeGFtcGxlcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbnVsbCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGZ1bmN0aW9uIEV4YW1wbGU2KCkge1xcbiAgcmV0dXJuIDxQb3B1cERlbW8gbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVxcbkV4YW1wbGU2LnN0b3J5TmFtZSA9ICdTaG93IG1vcmUgdmlhIGEgcG9wdXAnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkV4YW1wbGU2XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE4fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MjB9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMH19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBQb3B1cERlbW8gZnJvbSAnLi9leGFtcGxlQ29kZS9wb3B1cCdcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0V4YW1wbGVzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG51bGwsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGNvbnN0IEV4YW1wbGU2ID0gZnVuY3Rpb24gRXhhbXBsZTYoKSB7XG4gIHJldHVybiA8UG9wdXBEZW1vIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxufTtFeGFtcGxlNi5zdG9yeU5hbWUgPSAnU2hvdyBtb3JlIHZpYSBhIHBvcHVwJ1xuXG5cblxuRXhhbXBsZTYucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIEV4YW1wbGU2KCkge1xcbiAgcmV0dXJuIDxQb3B1cERlbW8gbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLkV4YW1wbGU2LnBhcmFtZXRlcnMgfTsiLCJpbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgRGF0ZUxvY2FsaXplciB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCBEZW1vTGluayBmcm9tICcuLi8uLi9EZW1vTGluay5jb21wb25lbnQnXG5pbXBvcnQgZXZlbnRzIGZyb20gJy4uLy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vcmVuZGVyaW5nLm1vZHVsZS5zY3NzJ1xuXG5mdW5jdGlvbiBFdmVudCh7IGV2ZW50IH0pIHtcbiAgcmV0dXJuIChcbiAgICA8c3Bhbj5cbiAgICAgIDxzdHJvbmc+e2V2ZW50LnRpdGxlfTwvc3Ryb25nPlxuICAgICAge2V2ZW50LmRlc2MgJiYgJzogICcgKyBldmVudC5kZXNjfVxuICAgIDwvc3Bhbj5cbiAgKVxufVxuRXZlbnQucHJvcFR5cGVzID0ge1xuICBldmVudDogUHJvcFR5cGVzLm9iamVjdCxcbn1cblxuZnVuY3Rpb24gRXZlbnRBZ2VuZGEoeyBldmVudCB9KSB7XG4gIHJldHVybiAoXG4gICAgPHNwYW4+XG4gICAgICA8ZW0gc3R5bGU9e3sgY29sb3I6ICdtYWdlbnRhJyB9fT57ZXZlbnQudGl0bGV9PC9lbT5cbiAgICAgIDxwPntldmVudC5kZXNjfTwvcD5cbiAgICA8L3NwYW4+XG4gIClcbn1cbkV2ZW50QWdlbmRhLnByb3BUeXBlcyA9IHtcbiAgZXZlbnQ6IFByb3BUeXBlcy5vYmplY3QsXG59XG5cbmNvbnN0IGN1c3RvbURheVByb3BHZXR0ZXIgPSAoZGF0ZSkgPT4ge1xuICBpZiAoZGF0ZS5nZXREYXRlKCkgPT09IDcgfHwgZGF0ZS5nZXREYXRlKCkgPT09IDE1KVxuICAgIHJldHVybiB7XG4gICAgICBjbGFzc05hbWU6IHN0eWxlcy5zcGVjaWFsRGF5LFxuICAgICAgc3R5bGU6IHtcbiAgICAgICAgYm9yZGVyOiAnc29saWQgM3B4ICcgKyAoZGF0ZS5nZXREYXRlKCkgPT09IDcgPyAnI2ZhYScgOiAnI2FmYScpLFxuICAgICAgfSxcbiAgICB9XG4gIGVsc2UgcmV0dXJuIHt9XG59XG5cbmNvbnN0IGN1c3RvbVNsb3RQcm9wR2V0dGVyID0gKGRhdGUpID0+IHtcbiAgaWYgKGRhdGUuZ2V0RGF0ZSgpID09PSA3IHx8IGRhdGUuZ2V0RGF0ZSgpID09PSAxNSlcbiAgICByZXR1cm4ge1xuICAgICAgY2xhc3NOYW1lOiBzdHlsZXMuc3BlY2lhbERheSxcbiAgICB9XG4gIGVsc2UgcmV0dXJuIHt9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJlbmRlcmluZyh7IGxvY2FsaXplciB9KSB7XG4gIGNvbnN0IHsgY29tcG9uZW50cywgZGVmYXVsdERhdGUgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgYWdlbmRhOiB7XG4gICAgICAgICAgZXZlbnQ6IEV2ZW50QWdlbmRhLFxuICAgICAgICB9LFxuICAgICAgICBldmVudDogRXZlbnQsXG4gICAgICB9LFxuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDcpLFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxEZW1vTGluayBmaWxlTmFtZT1cInJlbmRlcmluZ1wiIC8+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgICA8Q2FsZW5kYXJcbiAgICAgICAgICBjb21wb25lbnRzPXtjb21wb25lbnRzfVxuICAgICAgICAgIGRheVByb3BHZXR0ZXI9e2N1c3RvbURheVByb3BHZXR0ZXJ9XG4gICAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5BR0VOREF9XG4gICAgICAgICAgZXZlbnRzPXtldmVudHN9XG4gICAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XG4gICAgICAgICAgc2xvdFByb3BHZXR0ZXI9e2N1c3RvbVNsb3RQcm9wR2V0dGVyfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKVxufVxuUmVuZGVyaW5nLnByb3BUeXBlcyA9IHtcbiAgbG9jYWxpemVyOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlTG9jYWxpemVyKSxcbn1cbiIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IFJlbmRlcmluZyBmcm9tICcuL2V4YW1wbGVDb2RlL3JlbmRlcmluZydcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0V4YW1wbGVzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBudWxsLFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZnVuY3Rpb24gRXhhbXBsZTgoKSB7XFxuICByZXR1cm4gPFJlbmRlcmluZyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XFxuRXhhbXBsZTguc3RvcnlOYW1lID0gJ0N1c3RvbWl6ZWQgQ29tcG9uZW50IFJlbmRlcmluZydcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRXhhbXBsZThcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTh9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE4fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIwfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IFJlbmRlcmluZyBmcm9tICcuL2V4YW1wbGVDb2RlL3JlbmRlcmluZydcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0V4YW1wbGVzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG51bGwsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGNvbnN0IEV4YW1wbGU4ID0gZnVuY3Rpb24gRXhhbXBsZTgoKSB7XG4gIHJldHVybiA8UmVuZGVyaW5nIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxufTtFeGFtcGxlOC5zdG9yeU5hbWUgPSAnQ3VzdG9taXplZCBDb21wb25lbnQgUmVuZGVyaW5nJ1xuXG5cblxuRXhhbXBsZTgucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIEV4YW1wbGU4KCkge1xcbiAgcmV0dXJuIDxSZW5kZXJpbmcgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLkV4YW1wbGU4LnBhcmFtZXRlcnMgfTsiLCJpbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHVzZU1lbW8sIHVzZVN0YXRlLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIERhdGVMb2NhbGl6ZXIsIFZpZXdzIH0gZnJvbSAncmVhY3QtYmlnLWNhbGVuZGFyJ1xuaW1wb3J0IERlbW9MaW5rIGZyb20gJy4uLy4uL0RlbW9MaW5rLmNvbXBvbmVudCdcbmltcG9ydCB3aXRoRHJhZ0FuZERyb3AgZnJvbSAnLi4vLi4vLi4vc3JjL2FkZG9ucy9kcmFnQW5kRHJvcCdcblxuY29uc3QgRHJhZ0FuZERyb3BDYWxlbmRhciA9IHdpdGhEcmFnQW5kRHJvcChDYWxlbmRhcilcbmNvbnN0IHJlc291cmNlcyA9IFtcbiAgeyByZXNvdXJjZUlkOiAxLCByZXNvdXJjZVRpdGxlOiAnQm9hcmQgcm9vbScgfSxcbiAgeyByZXNvdXJjZUlkOiAyLCByZXNvdXJjZVRpdGxlOiAnVHJhaW5pbmcgcm9vbScgfSxcbiAgeyByZXNvdXJjZUlkOiAzLCByZXNvdXJjZVRpdGxlOiAnTWVldGluZyByb29tIDEnIH0sXG4gIHsgcmVzb3VyY2VJZDogNCwgcmVzb3VyY2VUaXRsZTogJ01lZXRpbmcgcm9vbSAyJyB9LFxuXVxuXG5sZXQgZXZlbnRJZCA9IDBcbmNvbnN0IGV2ZW50cyA9IEFycmF5LmZyb20oeyBsZW5ndGg6IDIwIH0sIChfLCBrKSA9PiBrKS5mbGF0TWFwKChpKSA9PiB7XG4gIGNvbnN0IGN1cnJlbnRSZXNvdXJjZSA9IHJlc291cmNlc1tpICUgcmVzb3VyY2VzLmxlbmd0aF1cbiAgY29uc3QgZGF5RGlmZiA9IGkgJSA3XG5cbiAgcmV0dXJuIEFycmF5LmZyb20oeyBsZW5ndGg6IDUgfSwgKF8sIGopID0+ICh7XG4gICAgaWQ6IGV2ZW50SWQrKyxcbiAgICB0aXRsZTogYEV2ZW50ICR7aSArIGp9IF8gJHtjdXJyZW50UmVzb3VyY2UucmVzb3VyY2VUaXRsZX1gLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE4LCAwLCAyOSArIGRheURpZmYsIDkgKyAoaiAlIDQpLCAwLCAwKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTgsIDAsIDI5ICsgZGF5RGlmZiwgMTEgKyAoaiAlIDQpLCAwLCAwKSxcbiAgICByZXNvdXJjZUlkOiBjdXJyZW50UmVzb3VyY2UucmVzb3VyY2VJZCxcbiAgfSkpXG59KVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSZXNvdXJjZSh7IGxvY2FsaXplciB9KSB7XG4gIGNvbnN0IFtncm91cFJlc291cmNlc09uV2Vlaywgc2V0R3JvdXBSZXNvdXJjZXNPbldlZWtdID0gdXNlU3RhdGUoZmFsc2UpXG5cbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgdmlld3MgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE4LCAwLCAyOSksXG4gICAgICB2aWV3czogWydkYXknLCAnd29ya193ZWVrJ10sXG4gICAgfSksXG4gICAgW11cbiAgKVxuXG4gIGNvbnN0IFtteUV2ZW50cywgc2V0RXZlbnRzXSA9IHVzZVN0YXRlKGV2ZW50cylcblxuICBjb25zdCBoYW5kbGVTZWxlY3RTbG90ID0gdXNlQ2FsbGJhY2soXG4gICAgKHsgc3RhcnQsIGVuZCwgcmVzb3VyY2VJZCB9KSA9PiB7XG4gICAgICBjb25zdCB0aXRsZSA9IHdpbmRvdy5wcm9tcHQoJ05ldyBFdmVudCBOYW1lJylcbiAgICAgIGlmICh0aXRsZSkge1xuICAgICAgICBzZXRFdmVudHMoKHByZXYpID0+IFsuLi5wcmV2LCB7IHN0YXJ0LCBlbmQsIHRpdGxlLCByZXNvdXJjZUlkIH1dKVxuICAgICAgfVxuICAgIH0sXG4gICAgW3NldEV2ZW50c11cbiAgKVxuXG4gIGNvbnN0IGhhbmRsZVNlbGVjdEV2ZW50ID0gdXNlQ2FsbGJhY2soXG4gICAgKGV2ZW50KSA9PiB3aW5kb3cuYWxlcnQoZXZlbnQudGl0bGUpLFxuICAgIFtdXG4gIClcbiAgY29uc3QgbW92ZUV2ZW50ID0gdXNlQ2FsbGJhY2soXG4gICAgKHtcbiAgICAgIGV2ZW50LFxuICAgICAgc3RhcnQsXG4gICAgICBlbmQsXG4gICAgICByZXNvdXJjZUlkLFxuICAgICAgaXNBbGxEYXk6IGRyb3BwZWRPbkFsbERheVNsb3QgPSBmYWxzZSxcbiAgICB9KSA9PiB7XG4gICAgICBjb25zdCB7IGFsbERheSB9ID0gZXZlbnRcbiAgICAgIGlmICghYWxsRGF5ICYmIGRyb3BwZWRPbkFsbERheVNsb3QpIHtcbiAgICAgICAgZXZlbnQuYWxsRGF5ID0gdHJ1ZVxuICAgICAgfVxuXG4gICAgICBzZXRFdmVudHMoKHByZXYpID0+IHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmcgPSBwcmV2LmZpbmQoKGV2KSA9PiBldi5pZCA9PT0gZXZlbnQuaWQpID8/IHt9XG4gICAgICAgIGNvbnN0IGZpbHRlcmVkID0gcHJldi5maWx0ZXIoKGV2KSA9PiBldi5pZCAhPT0gZXZlbnQuaWQpXG4gICAgICAgIHJldHVybiBbLi4uZmlsdGVyZWQsIHsgLi4uZXhpc3RpbmcsIHN0YXJ0LCBlbmQsIHJlc291cmNlSWQsIGFsbERheSB9XVxuICAgICAgfSlcbiAgICB9LFxuICAgIFtzZXRFdmVudHNdXG4gIClcblxuICBjb25zdCByZXNpemVFdmVudCA9IHVzZUNhbGxiYWNrKFxuICAgICh7IGV2ZW50LCBzdGFydCwgZW5kIH0pID0+IHtcbiAgICAgIHNldEV2ZW50cygocHJldikgPT4ge1xuICAgICAgICBjb25zdCBleGlzdGluZyA9IHByZXYuZmluZCgoZXYpID0+IGV2LmlkID09PSBldmVudC5pZCkgPz8ge31cbiAgICAgICAgY29uc3QgZmlsdGVyZWQgPSBwcmV2LmZpbHRlcigoZXYpID0+IGV2LmlkICE9PSBldmVudC5pZClcbiAgICAgICAgcmV0dXJuIFsuLi5maWx0ZXJlZCwgeyAuLi5leGlzdGluZywgc3RhcnQsIGVuZCB9XVxuICAgICAgfSlcbiAgICB9LFxuICAgIFtzZXRFdmVudHNdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxEZW1vTGluayBmaWxlTmFtZT1cInJlc291cmNlXCIgLz5cbiAgICAgIDxzdHJvbmc+XG4gICAgICAgIFRoZSBjYWxlbmRhciBiZWxvdyB1c2VzIHRoZXsnICd9XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJyZXNvdXJjZS1pZC1hY2Nlc3NvclwiPlxuICAgICAgICAgIHJlc291cmNlSWRBY2Nlc3NvclxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgICAgLHsnICd9XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJyZXNvdXJjZS10aXRsZS1hY2Nlc3NvclwiPlxuICAgICAgICAgIHJlc291cmNlVGl0bGVBY2Nlc3NvclxuICAgICAgICA8L0xpbmtUbz57JyAnfVxuICAgICAgICBhbmR7JyAnfVxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwicmVzb3VyY2VzXCI+XG4gICAgICAgICAgcmVzb3VyY2VzXG4gICAgICAgIDwvTGlua1RvPnsnICd9XG4gICAgICAgIHByb3BzIHRvIHNob3cgZXZlbnRzIHNjaGVkdWxlZCBmb3IgZGlmZmVyZW50IHJlc291cmNlcy5cbiAgICAgICAgPGJyIC8+XG4gICAgICAgIEV2ZW50cyBjYW4gYmUgbWFwcGVkIHRvIGEgc2luZ2xlIHJlc291cmNlLCBvciBtdWx0aXBsZSByZXNvdXJjZXMuXG4gICAgICA8L3N0cm9uZz5cbiAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luOiAnMTBweCAwIDIwcHggMCcgfX0+XG4gICAgICAgIDxsYWJlbD5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgICBjaGVja2VkPXtncm91cFJlc291cmNlc09uV2Vla31cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoKSA9PiBzZXRHcm91cFJlc291cmNlc09uV2VlayghZ3JvdXBSZXNvdXJjZXNPbldlZWspfVxuICAgICAgICAgIC8+XG4gICAgICAgICAgR3JvdXAgcmVzb3VyY2VzIG9uIHdlZWsgdmlldy5cbiAgICAgICAgPC9sYWJlbD5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgICAgPERyYWdBbmREcm9wQ2FsZW5kYXJcbiAgICAgICAgICBzZWxlY3RhYmxlXG4gICAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5EQVl9XG4gICAgICAgICAgZXZlbnRzPXtteUV2ZW50c31cbiAgICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgICByZXNvdXJjZXM9e3Jlc291cmNlc31cbiAgICAgICAgICByZXNvdXJjZUlkQWNjZXNzb3I9XCJyZXNvdXJjZUlkXCJcbiAgICAgICAgICByZXNvdXJjZVRpdGxlQWNjZXNzb3I9XCJyZXNvdXJjZVRpdGxlXCJcbiAgICAgICAgICBvblNlbGVjdFNsb3Q9e2hhbmRsZVNlbGVjdFNsb3R9XG4gICAgICAgICAgb25TZWxlY3RFdmVudD17aGFuZGxlU2VsZWN0RXZlbnR9XG4gICAgICAgICAgb25FdmVudERyb3A9e21vdmVFdmVudH1cbiAgICAgICAgICBvbkV2ZW50UmVzaXplPXtyZXNpemVFdmVudH1cbiAgICAgICAgICBzdGVwPXs2MH1cbiAgICAgICAgICB2aWV3cz17dmlld3N9XG4gICAgICAgICAgcmVzb3VyY2VHcm91cGluZ0xheW91dD17Z3JvdXBSZXNvdXJjZXNPbldlZWt9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICA8L0ZyYWdtZW50PlxuICApXG59XG5SZXNvdXJjZS5wcm9wVHlwZXMgPSB7XG4gIGxvY2FsaXplcjogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZUxvY2FsaXplciksXG59XG4iLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBSZXNvdXJjZSBmcm9tICcuL2V4YW1wbGVDb2RlL3Jlc291cmNlJ1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRXhhbXBsZXMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG51bGwsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBmdW5jdGlvbiBFeGFtcGxlMTEoKSB7XFxuICByZXR1cm4gPFJlc291cmNlIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cXG5FeGFtcGxlMTEuc3RvcnlOYW1lID0gJ1Jlc291cmNlIFNjaGVkdWxpbmcnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkV4YW1wbGUxMVwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOH0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIwfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTh9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MjB9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgUmVzb3VyY2UgZnJvbSAnLi9leGFtcGxlQ29kZS9yZXNvdXJjZSdcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0V4YW1wbGVzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG51bGwsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGNvbnN0IEV4YW1wbGUxMSA9IGZ1bmN0aW9uIEV4YW1wbGUxMSgpIHtcbiAgcmV0dXJuIDxSZXNvdXJjZSBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cbn07RXhhbXBsZTExLnN0b3J5TmFtZSA9ICdSZXNvdXJjZSBTY2hlZHVsaW5nJ1xuXG5cblxuRXhhbXBsZTExLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBFeGFtcGxlMTEoKSB7XFxuICByZXR1cm4gPFJlc291cmNlIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxcbn1cIiB9LCAuLi5FeGFtcGxlMTEucGFyYW1ldGVycyB9OyIsImltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIERhdGVMb2NhbGl6ZXIgfSBmcm9tICdyZWFjdC1iaWctY2FsZW5kYXInXG5pbXBvcnQgRGVtb0xpbmsgZnJvbSAnLi4vLi4vRGVtb0xpbmsuY29tcG9uZW50J1xuaW1wb3J0IGV2ZW50cyBmcm9tICcuLi8uLi9yZXNvdXJjZXMvZXZlbnRzJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTZWxlY3RhYmxlKHsgbG9jYWxpemVyIH0pIHtcbiAgY29uc3QgW215RXZlbnRzLCBzZXRFdmVudHNdID0gdXNlU3RhdGUoZXZlbnRzKVxuXG4gIGNvbnN0IGhhbmRsZVNlbGVjdFNsb3QgPSB1c2VDYWxsYmFjayhcbiAgICAoeyBzdGFydCwgZW5kIH0pID0+IHtcbiAgICAgIGNvbnN0IHRpdGxlID0gd2luZG93LnByb21wdCgnTmV3IEV2ZW50IG5hbWUnKVxuICAgICAgaWYgKHRpdGxlKSB7XG4gICAgICAgIHNldEV2ZW50cygocHJldikgPT4gWy4uLnByZXYsIHsgc3RhcnQsIGVuZCwgdGl0bGUgfV0pXG4gICAgICB9XG4gICAgfSxcbiAgICBbc2V0RXZlbnRzXVxuICApXG5cbiAgY29uc3QgaGFuZGxlU2VsZWN0RXZlbnQgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQpID0+IHdpbmRvdy5hbGVydChldmVudC50aXRsZSksXG4gICAgW11cbiAgKVxuXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIHNjcm9sbFRvVGltZSB9ID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEyKSxcbiAgICAgIHNjcm9sbFRvVGltZTogbmV3IERhdGUoMTk3MCwgMSwgMSwgNiksXG4gICAgfSksXG4gICAgW11cbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPERlbW9MaW5rIGZpbGVOYW1lPVwic2VsZWN0YWJsZVwiPlxuICAgICAgICA8c3Ryb25nPlxuICAgICAgICAgIENsaWNrIGFuIGV2ZW50IHRvIHNlZSBtb3JlIGluZm8sIG9yIGRyYWcgdGhlIG1vdXNlIG92ZXIgdGhlIGNhbGVuZGFyXG4gICAgICAgICAgdG8gc2VsZWN0IGEgZGF0ZS90aW1lIHJhbmdlLlxuICAgICAgICA8L3N0cm9uZz5cbiAgICAgIDwvRGVtb0xpbms+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgICA8Q2FsZW5kYXJcbiAgICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XG4gICAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XG4gICAgICAgICAgZXZlbnRzPXtteUV2ZW50c31cbiAgICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgICBvblNlbGVjdEV2ZW50PXtoYW5kbGVTZWxlY3RFdmVudH1cbiAgICAgICAgICBvblNlbGVjdFNsb3Q9e2hhbmRsZVNlbGVjdFNsb3R9XG4gICAgICAgICAgc2VsZWN0YWJsZVxuICAgICAgICAgIHNjcm9sbFRvVGltZT17c2Nyb2xsVG9UaW1lfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKVxufVxuXG5TZWxlY3RhYmxlLnByb3BUeXBlcyA9IHtcbiAgbG9jYWxpemVyOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlTG9jYWxpemVyKSxcbn1cbiIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IFNlbGVjdGFibGUgZnJvbSAnLi9leGFtcGxlQ29kZS9zZWxlY3RhYmxlJ1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAnRXhhbXBsZXMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG51bGwsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBmdW5jdGlvbiBFeGFtcGxlMigpIHtcXG4gIHJldHVybiA8U2VsZWN0YWJsZSBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XFxuRXhhbXBsZTIuc3RvcnlOYW1lID0gJ0NyZWF0ZSBFdmVudHMnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkV4YW1wbGUyXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE4fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MjB9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMH19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBTZWxlY3RhYmxlIGZyb20gJy4vZXhhbXBsZUNvZGUvc2VsZWN0YWJsZSdcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0V4YW1wbGVzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG51bGwsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGNvbnN0IEV4YW1wbGUyID0gZnVuY3Rpb24gRXhhbXBsZTIoKSB7XG4gIHJldHVybiA8U2VsZWN0YWJsZSBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cbn07RXhhbXBsZTIuc3RvcnlOYW1lID0gJ0NyZWF0ZSBFdmVudHMnXG5cblxuXG5FeGFtcGxlMi5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gRXhhbXBsZTIoKSB7XFxuICByZXR1cm4gPFNlbGVjdGFibGUgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLkV4YW1wbGUyLnBhcmFtZXRlcnMgfTsiLCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbywgRnJhZ21lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgRGF0ZUxvY2FsaXplciB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCBEZW1vTGluayBmcm9tICcuLi8uLi9EZW1vTGluay5jb21wb25lbnQnXG5pbXBvcnQgZXZlbnRzIGZyb20gJy4uLy4uL3Jlc291cmNlcy9ldmVudHMnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRpbWVzbG90cyh7IGxvY2FsaXplciB9KSB7XG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxMiksIFtdKVxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxEZW1vTGluayBmaWxlTmFtZT1cInRpbWVzbG90c1wiIC8+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgICA8Q2FsZW5kYXJcbiAgICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XG4gICAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XG4gICAgICAgICAgZXZlbnRzPXtldmVudHN9XG4gICAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XG4gICAgICAgICAgc3RlcD17MTV9XG4gICAgICAgICAgdGltZXNsb3RzPXs4fVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKVxufVxuVGltZXNsb3RzLnByb3BUeXBlcyA9IHtcbiAgbG9jYWxpemVyOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlTG9jYWxpemVyKSxcbn1cbiIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IFRpbWVzbG90cyBmcm9tICcuL2V4YW1wbGVDb2RlL3RpbWVzbG90cydcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ0V4YW1wbGVzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBudWxsLFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZnVuY3Rpb24gRXhhbXBsZTcoKSB7XFxuICByZXR1cm4gPFRpbWVzbG90cyBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cXG59XFxuRXhhbXBsZTcuc3RvcnlOYW1lID0gJ1RpbWVzbG90cydcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRXhhbXBsZTdcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTh9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoyMH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE4fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjIwfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IFRpbWVzbG90cyBmcm9tICcuL2V4YW1wbGVDb2RlL3RpbWVzbG90cydcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ0V4YW1wbGVzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG51bGwsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGNvbnN0IEV4YW1wbGU3ID0gZnVuY3Rpb24gRXhhbXBsZTcoKSB7XG4gIHJldHVybiA8VGltZXNsb3RzIGxvY2FsaXplcj17bG9jYWxpemVyfSAvPlxufTtFeGFtcGxlNy5zdG9yeU5hbWUgPSAnVGltZXNsb3RzJ1xuXG5cblxuRXhhbXBsZTcucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIEV4YW1wbGU3KCkge1xcbiAgcmV0dXJuIDxUaW1lc2xvdHMgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9IC8+XFxufVwiIH0sIC4uLkV4YW1wbGU3LnBhcmFtZXRlcnMgfTsiLCJpbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIsIFZpZXdzIH0gZnJvbSAncmVhY3QtYmlnLWNhbGVuZGFyJ1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgJ21vbWVudC10aW1lem9uZSdcbmltcG9ydCBEZW1vTGluayBmcm9tICcuLi8uLi9EZW1vTGluay5jb21wb25lbnQnXG5pbXBvcnQgZXZlbnRzIGZyb20gJy4uLy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgVGltZXpvbmVTZWxlY3QgZnJvbSAnLi4vVGltZXpvbmVTZWxlY3QnXG5cbmNvbnN0IGRlZmF1bHRUWiA9IG1vbWVudC50ei5ndWVzcygpXG5jb25zdCBkZWZhdWx0RGF0ZVN0ciA9ICcyMDE1LTQtMTMnXG5cbmZ1bmN0aW9uIGdldERhdGUoc3RyLCBtb21lbnRPYmopIHtcbiAgcmV0dXJuIG1vbWVudE9iaihzdHIsICdZWVlZLU1NLUREJykudG9EYXRlKClcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVGltZXpvbmVzKCkge1xuICBjb25zdCBbdGltZXpvbmUsIHNldFRpbWV6b25lXSA9IHVzZVN0YXRlKGRlZmF1bHRUWilcblxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBnZXROb3csIGxvY2FsaXplciwgbXlFdmVudHMsIHNjcm9sbFRvVGltZSB9ID1cbiAgICB1c2VNZW1vKCgpID0+IHtcbiAgICAgIG1vbWVudC50ei5zZXREZWZhdWx0KHRpbWV6b25lKVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGVmYXVsdERhdGU6IGdldERhdGUoZGVmYXVsdERhdGVTdHIsIG1vbWVudCksXG4gICAgICAgIGdldE5vdzogKCkgPT4gbW9tZW50KCkudG9EYXRlKCksXG4gICAgICAgIGxvY2FsaXplcjogbW9tZW50TG9jYWxpemVyKG1vbWVudCksXG4gICAgICAgIG15RXZlbnRzOiBbLi4uZXZlbnRzXSxcbiAgICAgICAgc2Nyb2xsVG9UaW1lOiBtb21lbnQoKS50b0RhdGUoKSxcbiAgICAgIH1cbiAgICB9LCBbdGltZXpvbmVdKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIG1vbWVudC50ei5zZXREZWZhdWx0KCkgLy8gcmVzZXQgdG8gYnJvd3NlciBUWiBvbiB1bm1vdW50XG4gICAgfVxuICB9LCBbXSlcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxEZW1vTGluayBmaWxlTmFtZT1cInRpbWV6b25lc1wiPlxuICAgICAgICA8VGltZXpvbmVTZWxlY3RcbiAgICAgICAgICBkZWZhdWx0VFo9e2RlZmF1bHRUWn1cbiAgICAgICAgICBzZXRUaW1lem9uZT17c2V0VGltZXpvbmV9XG4gICAgICAgICAgdGltZXpvbmU9e3RpbWV6b25lfVxuICAgICAgICAvPlxuICAgICAgPC9EZW1vTGluaz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICAgIDxDYWxlbmRhclxuICAgICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cbiAgICAgICAgICBldmVudHM9e215RXZlbnRzfVxuICAgICAgICAgIGdldE5vdz17Z2V0Tm93fVxuICAgICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICAgIHNjcm9sbFRvVGltZT17c2Nyb2xsVG9UaW1lfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKVxufVxuIiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IHsgQ2FsZW5kYXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IFRpbWV6b25lQ2FsZW5kYXIgZnJvbSAnLi9leGFtcGxlQ29kZS90aW1lem9uZXMnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdFeGFtcGxlcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbnVsbCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBFeGFtcGxlNCgpIHtcXG4gIHJldHVybiA8VGltZXpvbmVDYWxlbmRhciAvPlxcbn1cXG5FeGFtcGxlNC5zdG9yeU5hbWUgPSAnVGltZXpvbmVzJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJFeGFtcGxlNFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxNX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjE3fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTV9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MTd9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBDYWxlbmRhciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBUaW1lem9uZUNhbGVuZGFyIGZyb20gJy4vZXhhbXBsZUNvZGUvdGltZXpvbmVzJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnRXhhbXBsZXMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbnVsbCxcbiAgICB9LFxuICB9LFxufVxuXG5leHBvcnQgY29uc3QgRXhhbXBsZTQgPSBmdW5jdGlvbiBFeGFtcGxlNCgpIHtcbiAgcmV0dXJuIDxUaW1lem9uZUNhbGVuZGFyIC8+XG59O0V4YW1wbGU0LnN0b3J5TmFtZSA9ICdUaW1lem9uZXMnXG5cblxuXG5FeGFtcGxlNC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gRXhhbXBsZTQoKSB7XFxuICByZXR1cm4gPFRpbWV6b25lQ2FsZW5kYXIgLz5cXG59XCIgfSwgLi4uRXhhbXBsZTQucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJhbGxkYXlhY2Nlc3NvclwiXG4gICAgfX0+e2BhbGxEYXlBY2Nlc3NvcmB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgc3RyaW5nIHwgZnVuY3Rpb24gKGV2ZW50OiBPYmplY3QpID0+IGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogJ2FsbERheSdgfTwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YERldGVybWluZXMgd2hldGhlciB0aGUgZXZlbnQgc2hvdWxkIGJlIGNvbnNpZGVyZWQgYW4gXCJhbGwgZGF5XCIgZXZlbnQgYW5kIGlnbm9yZSB0aW1lLiBNdXN0IHJlc29sdmUgdG8gYSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2Bib29sZWFuYH08L2lubGluZUNvZGU+e2AgdmFsdWUuYH08L3A+XG4gICAgPFN0b3J5IGlkPVwicHJvcHMtLWFsbC1kYXktYWNjZXNzb3JcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCB7IENhbGVuZGFyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCB7IGFjY2Vzc29yU3RvcnlBcmdzIH0gZnJvbSAnLi9zdG9yeURlZmF1bHRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9hbGxEYXlBY2Nlc3Nvci5tZHgnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0RGF0ZTogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IEFsbERheUFjY2Vzc29yID0gVGVtcGxhdGUuYmluZCh7fSlcXG5BbGxEYXlBY2Nlc3Nvci5zdG9yeU5hbWUgPSAnYWxsRGF5QWNjZXNzb3InXFxuQWxsRGF5QWNjZXNzb3IuYXJncyA9IGFjY2Vzc29yU3RvcnlBcmdzXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkFsbERheUFjY2Vzc29yXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyMX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjI1fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjIxfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjI1fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQ2FsZW5kYXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgeyBhY2Nlc3NvclN0b3J5QXJncyB9IGZyb20gJy4vc3RvcnlEZWZhdWx0cydcbmltcG9ydCBtZHggZnJvbSAnLi9hbGxEYXlBY2Nlc3Nvci5tZHgnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIGFyZ1R5cGVzOiB7XG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgZGVmYXVsdERhdGU6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IEFsbERheUFjY2Vzc29yID0gVGVtcGxhdGUuYmluZCh7fSk7QWxsRGF5QWNjZXNzb3Iuc3RvcnlOYW1lID0gJ2FsbERheUFjY2Vzc29yJ1xuQWxsRGF5QWNjZXNzb3IuYXJncyA9IGFjY2Vzc29yU3RvcnlBcmdzXG5cblxuXG5BbGxEYXlBY2Nlc3Nvci5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uQWxsRGF5QWNjZXNzb3IucGFyYW1ldGVycyB9OyIsImV4cG9ydCBkZWZhdWx0IFtcbiAge1xuICAgIGlkOiAwLFxuICAgIHRpdGxlOiAnQWxsIERheSBFdmVudCB2ZXJ5IGxvbmcgdGl0bGUnLFxuICAgIGFsbERheTogdHJ1ZSxcbiAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcbiAgfSxcbiAge1xuICAgIGlkOiAxLFxuICAgIHRpdGxlOiAnIzIgQWxsIERheSBFdmVudCB2ZXJ5IGxvbmcgdGl0bGUnLFxuICAgIGFsbERheTogdHJ1ZSxcbiAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAyKSxcbiAgfSxcbiAge1xuICAgIGlkOiAyLFxuICAgIHRpdGxlOiAnIzMgQWxsIERheSBFdmVudCB2ZXJ5IGxvbmcgdGl0bGUnLFxuICAgIGFsbERheTogdHJ1ZSxcbiAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcbiAgfSxcbiAge1xuICAgIGlkOiAzLFxuICAgIHRpdGxlOiAnIzQgQWxsIERheSBFdmVudCcsXG4gICAgYWxsRGF5OiB0cnVlLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAwKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEpLFxuICB9LFxuICB7XG4gICAgaWQ6IDQsXG4gICAgdGl0bGU6ICcjNSBBbGwgRGF5IEV2ZW50JyxcbiAgICBhbGxEYXk6IHRydWUsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgMSksXG4gIH0sXG4gIHtcbiAgICBpZDogNSxcbiAgICB0aXRsZTogJyM2IEFsbCBEYXkgRXZlbnQnLFxuICAgIGFsbERheTogdHJ1ZSxcbiAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgNyksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCA3KSxcbiAgfSxcbl1cbiIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImFsbGRheW1heHJvd3NcIlxuICAgIH19PntgYWxsRGF5TWF4Um93c2B9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgbnVtYmVyYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BJbmZpbml0eWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YERldGVybWluZXMgYSBtYXhpbXVtIGFtb3VudCBvZiByb3dzIG9mIGV2ZW50cyB0byBkaXNwbGF5IGluIHRoZSBhbGwgZGF5IHNlY3Rpb24gZm9yIFdlZWsgYW5kIERheSB2aWV3cywgd2lsbCBkaXNwbGF5IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHNob3dNb3JlYH08L2lubGluZUNvZGU+e2AgYnV0dG9uIGlmIGV2ZW50cyBleGNlZGUgdGhpcyBudW1iZXIuYH08L3A+XG4gICAgPFN0b3J5IGlkPVwicHJvcHMtLWFsbC1kYXktbWF4LXJvd3NcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBhbGxEYXlFdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2FsbERheUV2ZW50cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vYWxsRGF5TWF4Um93cy5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0RGF0ZTogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IEFsbERheU1heFJvd3MgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcbkFsbERheU1heFJvd3Muc3RvcnlOYW1lID0gJ2FsbERheU1heFJvd3MnXFxuQWxsRGF5TWF4Um93cy5hcmdzID0ge1xcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEpLFxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXFxuICBldmVudHM6IGFsbERheUV2ZW50cyxcXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcXG4gIGFsbERheU1heFJvd3M6IDIsXFxuICBwb3B1cDogdHJ1ZSxcXG59XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkFsbERheU1heFJvd3NcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjI0fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6Mjh9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjR9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6Mjh9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGFsbERheUV2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvYWxsRGF5RXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2FsbERheU1heFJvd3MubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZTogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgY29uc3QgQWxsRGF5TWF4Um93cyA9IFRlbXBsYXRlLmJpbmQoe30pO0FsbERheU1heFJvd3Muc3RvcnlOYW1lID0gJ2FsbERheU1heFJvd3MnXG5BbGxEYXlNYXhSb3dzLmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXG4gIGV2ZW50czogYWxsRGF5RXZlbnRzLFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXG4gIGFsbERheU1heFJvd3M6IDIsXG4gIHBvcHVwOiB0cnVlLFxufVxuXG5cblxuQWxsRGF5TWF4Um93cy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uQWxsRGF5TWF4Um93cy5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwiYmFja2dyb3VuZGV2ZW50c1wiXG4gICAgfX0+e2BiYWNrZ3JvdW5kRXZlbnRzYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BhcnJheU9mKEJhY2tncm91bmRFdmVudClgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YFtdYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQW4gYXJyYXkgb2YgYmFja2dyb3VuZCBldmVudCBvYmplY3RzIHRvIGRpc3BsYXkgb24gdGhlIGNhbGVuZGFyLiBCYWNrZ3JvdW5kXG5FdmVudHMgYmVoYXZlIHNpbWlsYXJseSB0byBFdmVudHMgYnV0IGFyZSBub3QgZmFjdG9yZWQgaW50byBFdmVudCBvdmVybGFwIGxvZ2ljLFxuYWxsb3dpbmcgdGhlbSB0byBzaXQgYmVoaW5kIGFueSBFdmVudHMgdGhhdCBtYXkgb2NjdXIgZHVyaW5nIHRoZSBzYW1lIHBlcmlvZC5cbkJhY2tncm91bmQgRXZlbnRzIG9iamVjdHMgY2FuIGJlIGFueSBzaGFwZSwgYXMgbG9uZyBhcyB0aGUgQ2FsZW5kYXIga25vd3MgaG93IHRvXG5yZXRyaWV2ZSB0aGUgZm9sbG93aW5nIGRldGFpbHMgb2YgdGhlIGV2ZW50OmB9PC9wPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHN0YXJ0IHRpbWVgfTwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BlbmQgdGltZWB9PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgRWFjaCBvZiB0aGVzZSBwcm9wZXJ0aWVzIGNhbiBiZSBjdXN0b21pemVkIG9yIGdlbmVyYXRlZCBkeW5hbWljYWxseSBieVxuc2V0dGluZyB0aGUgdmFyaW91cyBcImFjY2Vzc29yXCIgcHJvcHMuIFdpdGhvdXQgYW55IGNvbmZpZ3VyYXRpb24gdGhlIGRlZmF1bHRcbmV2ZW50IHNob3VsZCBsb29rIGxpa2U6YH08L3A+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YEJhY2tncm91bmRFdmVudCB7XG4gIHN0YXJ0OiBEYXRlLFxuICBlbmQ6IERhdGUsXG59XG5gfTwvY29kZT48L3ByZT5cbiAgICA8U3RvcnkgaWQ9XCJwcm9wcy0tYmFjay1ncm91bmQtZXZlbnRzXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgeyBiYWNrZ3JvdW5kRXZlbnRzLCBldmVudHMgfSBmcm9tICcuLi9oZWxwZXJzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9iYWNrZ3JvdW5kRXZlbnRzLm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBhcmdUeXBlczoge1xcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHRWaWV3OiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IEJhY2tHcm91bmRFdmVudHMgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcbkJhY2tHcm91bmRFdmVudHMuc3RvcnlOYW1lID0gJ2JhY2tncm91bmRFdmVudHMnXFxuQmFja0dyb3VuZEV2ZW50cy5hcmdzID0ge1xcbiAgYmFja2dyb3VuZEV2ZW50cyxcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxcbiAgZXZlbnRzLFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiQmFja0dyb3VuZEV2ZW50c1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6Mjh9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjozMn0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyOH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozMn19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgeyBiYWNrZ3JvdW5kRXZlbnRzLCBldmVudHMgfSBmcm9tICcuLi9oZWxwZXJzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2JhY2tncm91bmRFdmVudHMubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0Vmlldzoge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgY29uc3QgQmFja0dyb3VuZEV2ZW50cyA9IFRlbXBsYXRlLmJpbmQoe30pO0JhY2tHcm91bmRFdmVudHMuc3RvcnlOYW1lID0gJ2JhY2tncm91bmRFdmVudHMnXG5CYWNrR3JvdW5kRXZlbnRzLmFyZ3MgPSB7XG4gIGJhY2tncm91bmRFdmVudHMsXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxuICBldmVudHMsXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcbn1cblxuXG5cbkJhY2tHcm91bmRFdmVudHMucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLkJhY2tHcm91bmRFdmVudHMucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImNvbXBvbmVudHNcIlxuICAgIH19PntgY29tcG9uZW50c2B9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgb2JqZWN0YH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQ3VzdG9taXplIGhvdyBkaWZmZXJlbnQgc2VjdGlvbnMgb2YgdGhlIGNhbGVuZGFyIHJlbmRlciBieSBwcm92aWRpbmcgY3VzdG9tIENvbXBvbmVudHMuIEluIHBhcnRpY3VsYXIgdGhlIEV2ZW50IGNvbXBvbmVudCBjYW4gYmUgc3BlY2lmaWVkIGZvciB0aGUgZW50aXJlIGNhbGVuZGFyLCBvciB5b3UgY2FuIHByb3ZpZGUgYW4gaW5kaXZpZHVhbCBjb21wb25lbnQgZm9yIGVhY2ggdmlldyB0eXBlLmB9PC9wPlxuICAgIDxwcmU+PGNvZGUgcGFyZW50TmFtZT1cInByZVwiIHsuLi57XG4gICAgICAgIFwiY2xhc3NOYW1lXCI6IFwibGFuZ3VhZ2UtanN4XCJcbiAgICAgIH19PntgY29uc3QgY29tcG9uZW50cyA9IHVzZU1lbW8oKCkgPT4gKHtcbiAgZXZlbnQ6IE15RXZlbnQsIC8vIHVzZWQgYnkgZWFjaCB2aWV3IChNb250aCwgRGF5LCBXZWVrKVxuICBldmVudFdyYXBwZXI6IE15RXZlbnRXcmFwcGVyLFxuICBldmVudENvbnRhaW5lcldyYXBwZXI6IE15RXZlbnRDb250YWluZXJXcmFwcGVyLFxuICBkYXRlQ2VsbFdyYXBwZXI6IE15RGF0ZUNlbGxXcmFwcGVyLFxuICBkYXlDb2x1bW5XcmFwcGVyOiBNeURheUNvbHVtbldyYXBwZXIsXG4gIHRpbWVTbG90V3JhcHBlcjogTXlUaW1lU2xvdFdyYXBwZXIsXG4gIHRpbWVHdXR0ZXJIZWFkZXI6IE15VGltZUd1dHRlcldyYXBwZXIsXG4gIHJlc291cmNlSGVhZGVyOiBNeVJlc291cmNlSGVhZGVyLFxuICB0b29sYmFyOiBNeVRvb2xiYXIsXG4gIHNob3dNb3JlOiBNeVNob3dNb3JlQnV0dG9uLFxuICBhZ2VuZGE6IHtcbiAgICBldmVudDogTXlBZ2VuZGFFdmVudCwgLy8gd2l0aCB0aGUgYWdlbmRhIHZpZXcgdXNlIGEgZGlmZmVyZW50IGNvbXBvbmVudCB0byByZW5kZXIgZXZlbnRzXG4gICAgdGltZTogTXlBZ2VuZGFUaW1lLFxuICAgIGRhdGU6IE15QWdlbmRhRGF0ZSxcbiAgfSxcbiAgZGF5OiB7XG4gICAgaGVhZGVyOiBNeURheUhlYWRlcixcbiAgICBldmVudDogTXlEYXlFdmVudCxcbiAgfSxcbiAgd2Vlazoge1xuICAgIGhlYWRlcjogTXlXZWVrSGVhZGVyLFxuICAgIGV2ZW50OiBNeVdlZWtFdmVudCxcbiAgfSxcbiAgbW9udGg6IHtcbiAgICBoZWFkZXI6IE15TW9udGhIZWFkZXIsXG4gICAgZGF0ZUhlYWRlcjogTXlNb250aERhdGVIZWFkZXIsXG4gICAgZXZlbnQ6IE15TW9udGhFdmVudCxcbiAgfVxufSksIFtdKVxuPENhbGVuZGFyIGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IC8+XG5gfTwvY29kZT48L3ByZT5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLWNvbXBvbmVudHNcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvQ2FudmFzPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnXG5pbXBvcnQgeyBOYXZpZ2F0ZSBhcyBuYXZpZ2F0ZSB9IGZyb20gJy4uLy4uLy4uL3NyYydcblxuZnVuY3Rpb24gVmlld05hbWVzR3JvdXAoeyB2aWV3czogdmlld05hbWVzLCB2aWV3LCBtZXNzYWdlcywgb25WaWV3IH0pIHtcbiAgcmV0dXJuIHZpZXdOYW1lcy5tYXAoKG5hbWUpID0+IChcbiAgICA8YnV0dG9uXG4gICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgIGtleT17bmFtZX1cbiAgICAgIGNsYXNzTmFtZT17Y2xzeCh7ICdyYmMtYWN0aXZlJzogdmlldyA9PT0gbmFtZSB9KX1cbiAgICAgIG9uQ2xpY2s9eygpID0+IG9uVmlldyhuYW1lKX1cbiAgICA+XG4gICAgICB7bWVzc2FnZXNbbmFtZV19XG4gICAgPC9idXR0b24+XG4gICkpXG59XG5WaWV3TmFtZXNHcm91cC5wcm9wVHlwZXMgPSB7XG4gIG1lc3NhZ2VzOiBQcm9wVHlwZXMub2JqZWN0LFxuICBvblZpZXc6IFByb3BUeXBlcy5mdW5jLFxuICB2aWV3OiBQcm9wVHlwZXMuc3RyaW5nLFxuICB2aWV3czogUHJvcFR5cGVzLmFycmF5LFxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDdXN0b21Ub29sYmFyKHtcbiAgLy8gZGF0ZSwgLy8gYXZhaWxhYmxlLCBidXQgbm90IHVzZWQgaGVyZVxuICBsYWJlbCxcbiAgbG9jYWxpemVyOiB7IG1lc3NhZ2VzIH0sXG4gIG9uTmF2aWdhdGUsXG4gIG9uVmlldyxcbiAgdmlldyxcbiAgdmlld3MsXG59KSB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJyYmMtdG9vbGJhclwiPlxuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicmJjLWJ0bi1ncm91cFwiPlxuICAgICAgICA8Vmlld05hbWVzR3JvdXBcbiAgICAgICAgICB2aWV3PXt2aWV3fVxuICAgICAgICAgIHZpZXdzPXt2aWV3c31cbiAgICAgICAgICBtZXNzYWdlcz17bWVzc2FnZXN9XG4gICAgICAgICAgb25WaWV3PXtvblZpZXd9XG4gICAgICAgIC8+XG4gICAgICA8L3NwYW4+XG5cbiAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInJiYy10b29sYmFyLWxhYmVsXCI+e2xhYmVsfTwvc3Bhbj5cblxuICAgICAgPHNwYW4gY2xhc3NOYW1lPXtjbHN4KCdyYmMtYnRuLWdyb3VwJywgJ2V4YW1wbGVzLS1jdXN0b20tdG9vbGJhcicpfT5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uTmF2aWdhdGUobmF2aWdhdGUuUFJFVklPVVMpfVxuICAgICAgICAgIGFyaWEtbGFiZWw9e21lc3NhZ2VzLnByZXZpb3VzfVxuICAgICAgICA+XG4gICAgICAgICAgJiM2MDtcbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbk5hdmlnYXRlKG5hdmlnYXRlLlRPREFZKX1cbiAgICAgICAgICBhcmlhLWxhYmVsPXttZXNzYWdlcy50b2RheX1cbiAgICAgICAgPlxuICAgICAgICAgICYjODIyNjtcbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbk5hdmlnYXRlKG5hdmlnYXRlLk5FWFQpfVxuICAgICAgICAgIGFyaWEtbGFiZWw9e21lc3NhZ2VzLm5leHR9XG4gICAgICAgID5cbiAgICAgICAgICAmIzYyO1xuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAgKVxufVxuQ3VzdG9tVG9vbGJhci5wcm9wVHlwZXMgPSB7XG4gIGRhdGU6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuICBsYWJlbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgbG9jYWxpemVyOiBQcm9wVHlwZXMub2JqZWN0LFxuICBtZXNzYWdlczogUHJvcFR5cGVzLm9iamVjdCxcbiAgb25OYXZpZ2F0ZTogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uVmlldzogUHJvcFR5cGVzLmZ1bmMsXG4gIHZpZXc6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHZpZXdzOiBQcm9wVHlwZXMuYXJyYXksXG59XG4iLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9jb21wb25lbnRzLm1keCdcXG5pbXBvcnQgQ3VzdG9tVG9vbGJhciBmcm9tICcuL2N1c3RvbUNvbXBvbmVudHMvQ3VzdG9tVG9vbGJhci5jb21wb25lbnQnXFxuaW1wb3J0ICcuLi9yZXNvdXJjZXMvY3VzdG9tVG9vbGJhci5zY3NzJ1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBDb21wb25lbnRzKCkge1xcbiAgY29uc3QgeyBjb21wb25lbnRzLCBkZWZhdWx0RGF0ZSB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBjb21wb25lbnRzOiB7XFxuICAgICAgICB0b29sYmFyOiBDdXN0b21Ub29sYmFyLFxcbiAgICAgIH0sXFxuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIGNvbXBvbmVudHM9e2NvbXBvbmVudHN9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVxcbkNvbXBvbmVudHMuc3RvcnlOYW1lID0gJ2NvbXBvbmVudHMnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkNvbXBvbmVudHNcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MjF9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo0Mn0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjIxfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQyfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vY29tcG9uZW50cy5tZHgnXG5pbXBvcnQgQ3VzdG9tVG9vbGJhciBmcm9tICcuL2N1c3RvbUNvbXBvbmVudHMvQ3VzdG9tVG9vbGJhci5jb21wb25lbnQnXG5pbXBvcnQgJy4uL3Jlc291cmNlcy9jdXN0b21Ub29sYmFyLnNjc3MnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBDb21wb25lbnRzID0gZnVuY3Rpb24gQ29tcG9uZW50cygpIHtcbiAgY29uc3QgeyBjb21wb25lbnRzLCBkZWZhdWx0RGF0ZSB9ID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgY29tcG9uZW50czoge1xuICAgICAgICB0b29sYmFyOiBDdXN0b21Ub29sYmFyLFxuICAgICAgfSxcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gICAgfSksXG4gICAgW11cbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgIDxDYWxlbmRhclxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxuICAgICAgICBjb21wb25lbnRzPXtjb21wb25lbnRzfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtDb21wb25lbnRzLnN0b3J5TmFtZSA9ICdjb21wb25lbnRzJ1xuXG5cblxuQ29tcG9uZW50cy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gQ29tcG9uZW50cygpIHtcXG4gIGNvbnN0IHsgY29tcG9uZW50cywgZGVmYXVsdERhdGUgfSA9IHVzZU1lbW8oXFxuICAgICgpID0+ICh7XFxuICAgICAgY29tcG9uZW50czoge1xcbiAgICAgICAgdG9vbGJhcjogQ3VzdG9tVG9vbGJhcixcXG4gICAgICB9LFxcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICAgIH0pLFxcbiAgICBbXVxcbiAgKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBjb21wb25lbnRzPXtjb21wb25lbnRzfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5Db21wb25lbnRzLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJjdWx0dXJlXCJcbiAgICB9fT57YGN1bHR1cmVgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YHN0cmluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgbm9uZSAoYnJvd3NlciBkZWZhdWx0KWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFNwZWNpZnkgYSBzcGVjaWZpYyBjdWx0dXJlIGNvZGUgZm9yIHRoZSBDYWxlbmRhci4gVGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGN1bHR1cmVgfTwvaW5saW5lQ29kZT57YCBpcyB1c2VkIGJ5IGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImZvcm1hdHNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2Bmb3JtYXRzYH08L0xpbmtUbz57YCB3aXRoIHlvdXIgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwibG9jYWxpemVyXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgbG9jYWxpemVyYH08L0xpbmtUbz57YCB0byAnZm9ybWF0JyBkYXRlL3RpbWUgaW5mb3JtYXRpb24gb24gdGhlIENhbGVuZGFyLiBUbyBsb2NhbGl6ZSBtZXNzYWdpbmcsIHVzZSB0aGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwibWVzc2FnZXNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BtZXNzYWdlc2B9PC9MaW5rVG8+e2AgcHJvcC5gfTwvcD5cbiAgICA8cD57YFNlZSB0aGUgYH08TGlua1RvIGtpbmQ9XCJleGFtcGxlc1wiIHN0b3J5PVwiZXhhbXBsZS01XCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgTG9jYWxpemF0aW9uIEV4YW1wbGVgfTwvTGlua1RvPntgIGZvciBhbm90aGVyIGV4YW1wbGUgb2YgY29tYmluaW5nIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHJ0bGB9PC9pbmxpbmVDb2RlPntgLCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2Bsb2NhbGl6ZXJgfTwvaW5saW5lQ29kZT57YCwgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgY3VsdHVyZWB9PC9pbmxpbmVDb2RlPntgIGFuZCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BtZXNzYWdlc2B9PC9pbmxpbmVDb2RlPntgLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YE5vdGU6IGl0J3MgZ2VuZXJhbGx5IGJldHRlciB0byBoYW5kbGUgdGhpcyBnbG9iYWxseSB2aWEgeW91ciBpMThuIGxpYnJhcnkuYH08L3N0cm9uZz48L3A+XG4gICAgPFN0b3J5IGlkPVwicHJvcHMtLWN1bHR1cmVcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2N1bHR1cmUubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0RGF0ZTogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgY3VsdHVyZToge1xcbiAgICAgIG9wdGlvbnM6IFsnZXMnLCAnZnInLCAnZW4tdXMnLCAnZW4tZ2InXSxcXG4gICAgICBjb250cm9sOiB7XFxuICAgICAgICB0eXBlOiAnc2VsZWN0JyxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IEN1bHR1cmUgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcbkN1bHR1cmUuc3RvcnlOYW1lID0gJ2N1bHR1cmUnXFxuQ3VsdHVyZS5hcmdzID0ge1xcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcXG4gIGV2ZW50czogZGVtb0V2ZW50cyxcXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcXG4gIGN1bHR1cmU6ICdlcycsXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJDdWx0dXJlXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjozMH0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjM0fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjMwfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjM0fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vY3VsdHVyZS5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHREYXRlOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgY3VsdHVyZToge1xuICAgICAgb3B0aW9uczogWydlcycsICdmcicsICdlbi11cycsICdlbi1nYiddLFxuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiAnc2VsZWN0JyxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IEN1bHR1cmUgPSBUZW1wbGF0ZS5iaW5kKHt9KTtDdWx0dXJlLnN0b3J5TmFtZSA9ICdjdWx0dXJlJ1xuQ3VsdHVyZS5hcmdzID0ge1xuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxuICBldmVudHM6IGRlbW9FdmVudHMsXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcbiAgY3VsdHVyZTogJ2VzJyxcbn1cblxuXG5cbkN1bHR1cmUucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLkN1bHR1cmUucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImRhdGVcIlxuICAgIH19PntgZGF0ZWB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgaW5zdGFuY2VPZihEYXRlKWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgbmV3IERhdGUoKWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2Bjb250cm9sbGVkIGJ5OiBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJvbi1uYXZpZ2F0ZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YG9uTmF2aWdhdGVgfTwvTGlua1RvPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRoZSBjdXJyZW50IGRhdGUgdmFsdWUgb2YgdGhlIGNhbGVuZGFyLiBEZXRlcm1pbmVzIHRoZSB2aXNpYmxlIHZpZXcgcmFuZ2UuXG5JZiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BkYXRlYH08L2lubGluZUNvZGU+e2AgaXMgb21pdHRlZCB0aGVuIHRoZSByZXN1bHQgb2YgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZ2V0LW5vd1wiIG1keFR5cGU9XCJMaW5rVG9cIj57YGdldE5vd2B9PC9MaW5rVG8+e2AgaXMgdXNlZDsgb3RoZXJ3aXNlIHRoZVxuY3VycmVudCBkYXRlIGlzIHVzZWQuYH08L3A+XG4gICAgPHA+e2BUaGlzIGlzIGEgY29udHJvbGxhYmxlIHByb3AsIHdoZW4gdXNpbmcgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwib24tbmF2aWdhdGVcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2Bvbk5hdmlnYXRlYH08L0xpbmtUbz48L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1jYWwtZGF0ZVwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9kYXRlLm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gQ2FsRGF0ZSgpIHtcXG4gIGNvbnN0IFtkYXRlLCBzZXREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKDIwMTUsIDMsIDEpKVxcblxcbiAgY29uc3Qgb25OYXZpZ2F0ZSA9IHVzZUNhbGxiYWNrKChuZXdEYXRlKSA9PiBzZXREYXRlKG5ld0RhdGUpLCBbc2V0RGF0ZV0pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRhdGU9e2RhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvbk5hdmlnYXRlPXtvbk5hdmlnYXRlfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5DYWxEYXRlLnN0b3J5TmFtZSA9ICdkYXRlJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJDYWxEYXRlXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MzR9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozNH19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vZGF0ZS5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBDYWxEYXRlID0gZnVuY3Rpb24gQ2FsRGF0ZSgpIHtcbiAgY29uc3QgW2RhdGUsIHNldERhdGVdID0gdXNlU3RhdGUobmV3IERhdGUoMjAxNSwgMywgMSkpXG5cbiAgY29uc3Qgb25OYXZpZ2F0ZSA9IHVzZUNhbGxiYWNrKChuZXdEYXRlKSA9PiBzZXREYXRlKG5ld0RhdGUpLCBbc2V0RGF0ZV0pXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRhdGU9e2RhdGV9XG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxuICAgICAgICBvbk5hdmlnYXRlPXtvbk5hdmlnYXRlfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtDYWxEYXRlLnN0b3J5TmFtZSA9ICdkYXRlJ1xuXG5cblxuQ2FsRGF0ZS5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gQ2FsRGF0ZSgpIHtcXG4gIGNvbnN0IFtkYXRlLCBzZXREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKDIwMTUsIDMsIDEpKVxcblxcbiAgY29uc3Qgb25OYXZpZ2F0ZSA9IHVzZUNhbGxiYWNrKChuZXdEYXRlKSA9PiBzZXREYXRlKG5ld0RhdGUpLCBbc2V0RGF0ZV0pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRhdGU9e2RhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvbk5hdmlnYXRlPXtvbk5hdmlnYXRlfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5DYWxEYXRlLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJkYXlsYXlvdXRhbGdvcml0aG1cIlxuICAgIH19PntgZGF5TGF5b3V0QWxnb3JpdGhtYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BzdHJpbmcgfCBGdW5jdGlvbihldmVudHMsIG1pbmltdW1TdGFydERpZmZlcmVuY2UsIHNsb3RNZXRyaWNzLCBhY2Nlc3NvcnMpYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BvdmVybGFwYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQSBkYXkgZXZlbnQgbGF5b3V0KGFycmFuZ2VtZW50KSBhbGdvcml0aG0uYH08L3A+XG4gICAgPHA+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG92ZXJsYXBgfTwvaW5saW5lQ29kZT57YCBhbGxvd3MgZXZlbnRzIHRvIGJlIG92ZXJsYXBwZWQuYH08L3A+XG4gICAgPHA+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG5vLW92ZXJsYXBgfTwvaW5saW5lQ29kZT57YCByZXNpemVzIGV2ZW50cyB0byBhdm9pZCBvdmVybGFwLmB9PC9wPlxuICAgIDxwPntgb3IgY3VzdG9tIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YEZ1bmN0aW9uKGV2ZW50cywgbWluaW11bVN0YXJ0RGlmZmVyZW5jZSwgc2xvdE1ldHJpY3MsIGFjY2Vzc29ycylgfTwvaW5saW5lQ29kZT48L3A+XG4gICAgPFN0b3J5IGlkPVwicHJvcHMtLWRheS1sYXlvdXQtYWxnb3JpdGhtXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9kYXlMYXlvdXRBbGdvcml0aG0ubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0RGF0ZTogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0VmlldzogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZGF5TGF5b3V0QWxnb3JpdGhtOiB7XFxuICAgICAgb3B0aW9uczogWydvdmVybGFwJywgJ25vLW92ZXJsYXAnXSxcXG4gICAgICBjb250cm9sOiB7XFxuICAgICAgICB0eXBlOiAnc2VsZWN0JyxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IERheUxheW91dEFsZ29yaXRobSA9IFRlbXBsYXRlLmJpbmQoe30pXFxuRGF5TGF5b3V0QWxnb3JpdGhtLnN0b3J5TmFtZSA9ICdkYXlMYXlvdXRBbGdvcml0aG0nXFxuRGF5TGF5b3V0QWxnb3JpdGhtLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXFxuICBldmVudHM6IGRlbW9FdmVudHMsXFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXFxuICBkYXlMYXlvdXRBbGdvcml0aG06ICduby1vdmVybGFwJyxcXG59XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkRheUxheW91dEFsZ29yaXRobVwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzF9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjozNX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjozMX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozNX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2RheUxheW91dEFsZ29yaXRobS5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHREYXRlOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgZGVmYXVsdFZpZXc6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkYXlMYXlvdXRBbGdvcml0aG06IHtcbiAgICAgIG9wdGlvbnM6IFsnb3ZlcmxhcCcsICduby1vdmVybGFwJ10sXG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6ICdzZWxlY3QnLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgY29uc3QgRGF5TGF5b3V0QWxnb3JpdGhtID0gVGVtcGxhdGUuYmluZCh7fSk7RGF5TGF5b3V0QWxnb3JpdGhtLnN0b3J5TmFtZSA9ICdkYXlMYXlvdXRBbGdvcml0aG0nXG5EYXlMYXlvdXRBbGdvcml0aG0uYXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXG4gIGV2ZW50czogZGVtb0V2ZW50cyxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxuICBkYXlMYXlvdXRBbGdvcml0aG06ICduby1vdmVybGFwJyxcbn1cblxuXG5cbkRheUxheW91dEFsZ29yaXRobS5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uRGF5TGF5b3V0QWxnb3JpdGhtLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJkYXlwcm9wZ2V0dGVyXCJcbiAgICB9fT57YGRheVByb3BHZXR0ZXJgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChkYXRlOiBEYXRlLCByZXNvdXJjZUlkPzogQW55KSA9PiB7Y2xhc3NOYW1lPzogc3RyaW5nLCBzdHlsZT86IE9iamVjdH1gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BPcHRpb25hbGx5IHByb3ZpZGUgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gb2JqZWN0IG9mIGNsYXNzTmFtZSBvciBzdHlsZSBwcm9wcyB0byBiZSBhcHBsaWVkIHRvIHRoZSB0aGUgZGF5IGJhY2tncm91bmQuYH08L3A+XG4gICAgPHA+PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgQ2F1dGlvbiFgfTwvc3Ryb25nPntgIFN0eWxlcyB0aGF0IGNoYW5nZSBsYXlvdXQgb3IgcG9zaXRpb24gbWF5IGJyZWFrIHRoZSBjYWxlbmRhciBpbiB1bmV4cGVjdGVkIHdheXMuYH08L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1kYXktcHJvcC1nZXR0ZXJcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvQ2FudmFzPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vZGF5UHJvcEdldHRlci5tZHgnXFxuaW1wb3J0ICcuLi9yZXNvdXJjZXMvcHJvcEdldHRlci5zY3NzJ1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBEYXlQcm9wR2V0dGVyKCkge1xcbiAgY29uc3QgZGF5UHJvcEdldHRlciA9IHVzZUNhbGxiYWNrKFxcbiAgICAoZGF0ZSkgPT4gKHtcXG4gICAgICAuLi4obW9tZW50KGRhdGUpLmRheSgpID09PSAyICYmIHtcXG4gICAgICAgIGNsYXNzTmFtZTogJ3R1ZXNkYXknLFxcbiAgICAgIH0pLFxcbiAgICAgIC4uLihtb21lbnQoZGF0ZSkuZGF5KCkgPT09IDQgJiYge1xcbiAgICAgICAgc3R5bGU6IHtcXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnZGFya2dyZWVuJyxcXG4gICAgICAgICAgY29sb3I6ICd3aGl0ZScsXFxuICAgICAgICB9LFxcbiAgICAgIH0pLFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cXG4gICAgICAgIGRheVByb3BHZXR0ZXI9e2RheVByb3BHZXR0ZXJ9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVxcbkRheVByb3BHZXR0ZXIuc3RvcnlOYW1lID0gJ2RheVByb3BHZXR0ZXInXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkRheVByb3BHZXR0ZXJcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MjB9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo0OX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjIwfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQ5fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9kYXlQcm9wR2V0dGVyLm1keCdcbmltcG9ydCAnLi4vcmVzb3VyY2VzL3Byb3BHZXR0ZXIuc2NzcydcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IERheVByb3BHZXR0ZXIgPSBmdW5jdGlvbiBEYXlQcm9wR2V0dGVyKCkge1xuICBjb25zdCBkYXlQcm9wR2V0dGVyID0gdXNlQ2FsbGJhY2soXG4gICAgKGRhdGUpID0+ICh7XG4gICAgICAuLi4obW9tZW50KGRhdGUpLmRheSgpID09PSAyICYmIHtcbiAgICAgICAgY2xhc3NOYW1lOiAndHVlc2RheScsXG4gICAgICB9KSxcbiAgICAgIC4uLihtb21lbnQoZGF0ZSkuZGF5KCkgPT09IDQgJiYge1xuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ2RhcmtncmVlbicsXG4gICAgICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICAgIH0sXG4gICAgICB9KSxcbiAgICB9KSxcbiAgICBbXVxuICApXG5cbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XG4gICAgICAgIGRheVByb3BHZXR0ZXI9e2RheVByb3BHZXR0ZXJ9XG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtEYXlQcm9wR2V0dGVyLnN0b3J5TmFtZSA9ICdkYXlQcm9wR2V0dGVyJ1xuXG5cblxuRGF5UHJvcEdldHRlci5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gRGF5UHJvcEdldHRlcigpIHtcXG4gIGNvbnN0IGRheVByb3BHZXR0ZXIgPSB1c2VDYWxsYmFjayhcXG4gICAgKGRhdGUpID0+ICh7XFxuICAgICAgLi4uKG1vbWVudChkYXRlKS5kYXkoKSA9PT0gMiAmJiB7XFxuICAgICAgICBjbGFzc05hbWU6ICd0dWVzZGF5JyxcXG4gICAgICB9KSxcXG4gICAgICAuLi4obW9tZW50KGRhdGUpLmRheSgpID09PSA0ICYmIHtcXG4gICAgICAgIHN0eWxlOiB7XFxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ2RhcmtncmVlbicsXFxuICAgICAgICAgIGNvbG9yOiAnd2hpdGUnLFxcbiAgICAgICAgfSxcXG4gICAgICB9KSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICBjb25zdCBkZWZhdWx0RGF0ZSA9IHVzZU1lbW8oKCkgPT4gbmV3IERhdGUoMjAxNSwgMywgMTMpLCBbXSlcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XFxuICAgICAgICBkYXlQcm9wR2V0dGVyPXtkYXlQcm9wR2V0dGVyfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5EYXlQcm9wR2V0dGVyLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJkZWZhdWx0ZGF0ZVwiXG4gICAgfX0+e2BkZWZhdWx0RGF0ZWB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgaW5zdGFuY2VPZihEYXRlKWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgbmV3IERhdGUoKWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFNldHMgdGhlIGluaXRpYWwgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZGF0ZWB9PC9pbmxpbmVDb2RlPntgIHZhbHVlIGluIHlvdXIgY2FsZW5kYXIgd2hlbiB5b3UgZG9uJ3Qgd2FudCBpdCB0byBiZSAndG9kYXknLCB3aGVuIG5vdCB1c2luZyBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BnZXROb3dgfTwvaW5saW5lQ29kZT57YCwgb3IgY29udHJvbGxpbmcgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZGF0ZWB9PC9pbmxpbmVDb2RlPntgLmB9PC9wPlxuICAgIDxTdG9yeSBpZD1cInByb3BzLS1kZWZhdWx0LWRhdGVcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2RlZmF1bHREYXRlLm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBhcmdUeXBlczoge1xcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHRWaWV3OiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IERlZmF1bHREYXRlID0gVGVtcGxhdGUuYmluZCh7fSlcXG5EZWZhdWx0RGF0ZS5zdG9yeU5hbWUgPSAnZGVmYXVsdERhdGUnXFxuRGVmYXVsdERhdGUuYXJncyA9IHtcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICBkZWZhdWx0VmlldzogVmlld3MuREFZLFxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRGVmYXVsdERhdGVcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjI4fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MzJ9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6Mjh9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MzJ9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9kZWZhdWx0RGF0ZS5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHRWaWV3OiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cbiAgPC9kaXY+XG4pXG5cbmV4cG9ydCBjb25zdCBEZWZhdWx0RGF0ZSA9IFRlbXBsYXRlLmJpbmQoe30pO0RlZmF1bHREYXRlLnN0b3J5TmFtZSA9ICdkZWZhdWx0RGF0ZSdcbkRlZmF1bHREYXRlLmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXG4gIGV2ZW50czogZGVtb0V2ZW50cyxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxufVxuXG5cblxuRGVmYXVsdERhdGUucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLkRlZmF1bHREYXRlLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJkZWZhdWx0dmlld1wiXG4gICAgfX0+e2BkZWZhdWx0Vmlld2B9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BWaWV3cy5NT05USCAobW9udGh8d2Vla3x3b3JrX3dlZWt8ZGF5fGFnZW5kYSlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BUaGUgaW5pdGlhbCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2B2aWV3YH08L2lubGluZUNvZGU+e2Agc2V0IGZvciB5b3VyIGNhbGVuZGFyIHdoZW4geW91IGRvbid0IHdhbnQgaXQgdG8gYmUgdGhlIGRlZmF1bHQgKCdtb250aCcpLmB9PC9wPlxuICAgIDxTdG9yeSBpZD1cInByb3BzLS1kZWZhdWx0LXZpZXdcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2RlZmF1bHRWaWV3Lm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBhcmdUeXBlczoge1xcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHREYXRlOiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IERlZmF1bHRWaWV3ID0gVGVtcGxhdGUuYmluZCh7fSlcXG5EZWZhdWx0Vmlldy5zdG9yeU5hbWUgPSAnZGVmYXVsdFZpZXcnXFxuRGVmYXVsdFZpZXcuYXJncyA9IHtcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICBkZWZhdWx0VmlldzogVmlld3MuREFZLFxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRGVmYXVsdFZpZXdcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjI4fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MzJ9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6Mjh9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MzJ9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9kZWZhdWx0Vmlldy5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHREYXRlOiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cbiAgPC9kaXY+XG4pXG5cbmV4cG9ydCBjb25zdCBEZWZhdWx0VmlldyA9IFRlbXBsYXRlLmJpbmQoe30pO0RlZmF1bHRWaWV3LnN0b3J5TmFtZSA9ICdkZWZhdWx0VmlldydcbkRlZmF1bHRWaWV3LmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXG4gIGV2ZW50czogZGVtb0V2ZW50cyxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxufVxuXG5cblxuRGVmYXVsdFZpZXcucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLkRlZmF1bHRWaWV3LnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJkcmlsbGRvd252aWV3XCJcbiAgICB9fT57YGRyaWxsZG93blZpZXdgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YHN0cmluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgVmlld3MuREFZYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVGhlIHN0cmluZyBuYW1lIG9mIHRoZSBkZXN0aW5hdGlvbiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2B2aWV3YH08L2lubGluZUNvZGU+e2AgZm9yIGRyaWxsLWRvd24gYWN0aW9ucywgc3VjaCBhcyBjbGlja2luZyBhIGRhdGUgaGVhZGVyLCBvciB0aGUgdHJ1bmNhdGVkIGV2ZW50cyBsaW5rcy4gSWYgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZ2V0RHJpbGxkb3duVmlld2B9PC9pbmxpbmVDb2RlPntgIGlzIGFsc28gc3BlY2lmaWVkIGl0IHdpbGwgYmUgdXNlZCBpbnN0ZWFkLmB9PC9wPlxuICAgIDxwPntgU2V0IHRvIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG51bGxgfTwvaW5saW5lQ29kZT57YCB0byBkaXNhYmxlIGRyaWxsLWRvd24gYWN0aW9ucy5gfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgPENhbGVuZGFyIGRyaWxsZG93blZpZXc9XCJhZ2VuZGFcIiAvPlxuYH08L2NvZGU+PC9wcmU+XG4gICAgPFN0b3J5IGlkPVwicHJvcHMtLWRyaWxsZG93bi12aWV3XCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9kcmlsbGRvd25WaWV3Lm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBhcmdUeXBlczoge1xcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHREYXRlOiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgICBkcmlsbGRvd25WaWV3OiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogJ3NlbGVjdCcsXFxuICAgICAgICBvcHRpb25zOiBbJ2RheScsICdhZ2VuZGEnXSxcXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogVmlld3MuREFZLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICB9LFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcXG5cXG5leHBvcnQgY29uc3QgRHJpbGxkb3duVmlldyA9IFRlbXBsYXRlLmJpbmQoe30pXFxuRHJpbGxkb3duVmlldy5zdG9yeU5hbWUgPSAnZHJpbGxkb3duVmlldydcXG5EcmlsbGRvd25WaWV3LmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMSksXFxuICBkcmlsbGRvd25WaWV3OiBWaWV3cy5BR0VOREEsXFxuICBldmVudHM6IGRlbW9FdmVudHMsXFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJEcmlsbGRvd25WaWV3XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjozNX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjM5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjM1fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjM5fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vZHJpbGxkb3duVmlldy5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHREYXRlOiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gICAgZHJpbGxkb3duVmlldzoge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiAnc2VsZWN0JyxcbiAgICAgICAgb3B0aW9uczogWydkYXknLCAnYWdlbmRhJ10sXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogVmlld3MuREFZLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgY29uc3QgRHJpbGxkb3duVmlldyA9IFRlbXBsYXRlLmJpbmQoe30pO0RyaWxsZG93blZpZXcuc3RvcnlOYW1lID0gJ2RyaWxsZG93blZpZXcnXG5EcmlsbGRvd25WaWV3LmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcbiAgZHJpbGxkb3duVmlldzogVmlld3MuQUdFTkRBLFxuICBldmVudHM6IGRlbW9FdmVudHMsXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcbn1cblxuXG5cbkRyaWxsZG93blZpZXcucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLkRyaWxsZG93blZpZXcucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImVsZW1lbnRwcm9wc1wiXG4gICAgfX0+e2BlbGVtZW50UHJvcHNgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG9iamVjdGB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFByb3BzIHBhc3NlZCB0byBtYWluIGNhbGVuZGFyIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YDxkaXY+YH08L2lubGluZUNvZGU+e2AuYH08L3A+XG4gICAgPHA+PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgTm90ZTpgfTwvc3Ryb25nPntgIFdpbGwgbm90IHBhc3MgZG93biBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BjbGFzc05hbWVgfTwvaW5saW5lQ29kZT57YC5gfTwvcD5cbiAgICA8U3RvcnkgaWQ9XCJwcm9wcy0tZWxlbWVudC1wcm9wc1wiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9lbGVtZW50UHJvcHMubWR4J1xcbmltcG9ydCAnLi4vcmVzb3VyY2VzL3Byb3BHZXR0ZXIuc2NzcydcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBhcmdUeXBlczoge1xcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICB9LFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcXG5cXG5leHBvcnQgY29uc3QgRWxlbWVudFByb3BzID0gVGVtcGxhdGUuYmluZCh7fSlcXG5FbGVtZW50UHJvcHMuc3RvcnlOYW1lID0gJ2VsZW1lbnRQcm9wcydcXG5FbGVtZW50UHJvcHMuYXJncyA9IHtcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICBlbGVtZW50UHJvcHM6IHsgaWQ6ICdteV9zY2hlZHVsZXInIH0sXFxuICBldmVudHM6IGRlbW9FdmVudHMsXFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJFbGVtZW50UHJvcHNcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjI0fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6Mjh9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjR9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6Mjh9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2VsZW1lbnRQcm9wcy5tZHgnXG5pbXBvcnQgJy4uL3Jlc291cmNlcy9wcm9wR2V0dGVyLnNjc3MnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgY29uc3QgRWxlbWVudFByb3BzID0gVGVtcGxhdGUuYmluZCh7fSk7RWxlbWVudFByb3BzLnN0b3J5TmFtZSA9ICdlbGVtZW50UHJvcHMnXG5FbGVtZW50UHJvcHMuYXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcbiAgZWxlbWVudFByb3BzOiB7IGlkOiAnbXlfc2NoZWR1bGVyJyB9LFxuICBldmVudHM6IGRlbW9FdmVudHMsXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcbn1cblxuXG5cbkVsZW1lbnRQcm9wcy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uRWxlbWVudFByb3BzLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJlbmRhY2Nlc3NvclwiXG4gICAgfX0+e2BlbmRBY2Nlc3NvcmB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgc3RyaW5nIHwgZnVuY3Rpb24gKGV2ZW50OiBPYmplY3QpID0+IERhdGVgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogJ2VuZCdgfTwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRoZSBlbmQgZGF0ZS90aW1lIG9mIHRoZSBldmVudC4gTXVzdCByZXNvbHZlIHRvIGEgSmF2YVNjcmlwdCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BEYXRlYH08L2lubGluZUNvZGU+e2Agb2JqZWN0LmB9PC9wPlxuICAgIDxTdG9yeSBpZD1cInByb3BzLS1lbmQtYWNjZXNzb3JcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCB7IENhbGVuZGFyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCB7IGFjY2Vzc29yU3RvcnlBcmdzIH0gZnJvbSAnLi9zdG9yeURlZmF1bHRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9lbmRBY2Nlc3Nvci5tZHgnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0RGF0ZToge1xcbiAgICAgIGNvbnRyb2w6IHtcXG4gICAgICAgIHR5cGU6IG51bGwsXFxuICAgICAgfSxcXG4gICAgfSxcXG4gIH0sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVxcblxcbmV4cG9ydCBjb25zdCBFbmRBY2Nlc3NvciA9IFRlbXBsYXRlLmJpbmQoe30pXFxuRW5kQWNjZXNzb3Iuc3RvcnlOYW1lID0gJ2VuZEFjY2Vzc29yJ1xcbkVuZEFjY2Vzc29yLmFyZ3MgPSBhY2Nlc3NvclN0b3J5QXJnc1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJFbmRBY2Nlc3NvclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjV9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoyOX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyOX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IENhbGVuZGFyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IHsgYWNjZXNzb3JTdG9yeUFyZ3MgfSBmcm9tICcuL3N0b3J5RGVmYXVsdHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vZW5kQWNjZXNzb3IubWR4J1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHREYXRlOiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cbiAgPC9kaXY+XG4pXG5cbmV4cG9ydCBjb25zdCBFbmRBY2Nlc3NvciA9IFRlbXBsYXRlLmJpbmQoe30pO0VuZEFjY2Vzc29yLnN0b3J5TmFtZSA9ICdlbmRBY2Nlc3NvcidcbkVuZEFjY2Vzc29yLmFyZ3MgPSBhY2Nlc3NvclN0b3J5QXJnc1xuXG5cblxuRW5kQWNjZXNzb3IucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLkVuZEFjY2Vzc29yLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJldmVudGlkYWNjZXNzb3JcIlxuICAgIH19PntgZXZlbnRJZEFjY2Vzc29yYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BzdHJpbmcgfCBudW1iZXIgfCBmdW5jdGlvbiAoZXZlbnQ6IE9iamVjdCkgPT4gc3RyaW5nIHwgbnVtYmVyYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6ICdpZCdgfTwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRoZSBpZCBvZiB0aGUgZXZlbnQuIE11c3QgcmVzb2x2ZSB0byBhIHN0cmluZyBvciBudW1iZXIuIFVzZWQgYXMgdGhlIGtleSBmb3IgdGhlIGV2ZW50IGluIHRoZSBET00uIElmIG5vdCBwcm92aWRlZCwgdGhlIGV2ZW50IHdpbGwgYmUgZ2l2ZW4gYSBrZXkgb2YgJ2V2dGB9e2BfYH17YHtpbmRleH0nLmB9PC9wPlxuICAgIDxTdG9yeSBpZD1cInByb3BzLS1ldmVudC1pZC1hY2Nlc3NvclwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IHsgQ2FsZW5kYXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IHsgYWNjZXNzb3JTdG9yeUFyZ3MgfSBmcm9tICcuL3N0b3J5RGVmYXVsdHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2V2ZW50SWRBY2Nlc3Nvci5tZHgnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0RGF0ZToge1xcbiAgICAgIGNvbnRyb2w6IHtcXG4gICAgICAgIHR5cGU6IG51bGwsXFxuICAgICAgfSxcXG4gICAgfSxcXG4gIH0sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVxcblxcbmV4cG9ydCBjb25zdCBFdmVudElkQWNjZXNzb3IgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcbkV2ZW50SWRBY2Nlc3Nvci5zdG9yeU5hbWUgPSAnZXZlbnRJZEFjY2Vzc29yJ1xcbkV2ZW50SWRBY2Nlc3Nvci5hcmdzID0gYWNjZXNzb3JTdG9yeUFyZ3NcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRXZlbnRJZEFjY2Vzc29yXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjI5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjI1fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjI5fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQ2FsZW5kYXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgeyBhY2Nlc3NvclN0b3J5QXJncyB9IGZyb20gJy4vc3RvcnlEZWZhdWx0cydcbmltcG9ydCBtZHggZnJvbSAnLi9ldmVudElkQWNjZXNzb3IubWR4J1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHREYXRlOiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cbiAgPC9kaXY+XG4pXG5cbmV4cG9ydCBjb25zdCBFdmVudElkQWNjZXNzb3IgPSBUZW1wbGF0ZS5iaW5kKHt9KTtFdmVudElkQWNjZXNzb3Iuc3RvcnlOYW1lID0gJ2V2ZW50SWRBY2Nlc3NvcidcbkV2ZW50SWRBY2Nlc3Nvci5hcmdzID0gYWNjZXNzb3JTdG9yeUFyZ3NcblxuXG5cbkV2ZW50SWRBY2Nlc3Nvci5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uRXZlbnRJZEFjY2Vzc29yLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJldmVudHByb3BnZXR0ZXJcIlxuICAgIH19PntgZXZlbnRQcm9wR2V0dGVyYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoZXZlbnQ6IE9iamVjdCwgc3RhcnQ6IERhdGUsIGVuZDogRGF0ZSwgaXNTZWxlY3RlZDogYm9vbGVhbikgPT4ge2NsYXNzTmFtZT86IHN0cmluZywgc3R5bGU/OiBPYmplY3R9YH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgT3B0aW9uYWxseSBwcm92aWRlIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGFuIG9iamVjdCBvZiBjbGFzc05hbWUgb3Igc3R5bGUgcHJvcHMgdG8gYmUgYXBwbGllZCB0byB0aGUgdGhlIGV2ZW50IG5vZGUuYH08L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1ldmVudC1wcm9wLWdldHRlclwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9ldmVudFByb3BHZXR0ZXIubWR4J1xcbmltcG9ydCAnLi4vcmVzb3VyY2VzL3Byb3BHZXR0ZXIuc2NzcydcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gRXZlbnRQcm9wR2V0dGVyKCkge1xcbiAgY29uc3QgZXZlbnRQcm9wR2V0dGVyID0gdXNlQ2FsbGJhY2soXFxuICAgIChldmVudCwgc3RhcnQsIGVuZCwgaXNTZWxlY3RlZCkgPT4gKHtcXG4gICAgICAuLi4oaXNTZWxlY3RlZCAmJiB7XFxuICAgICAgICBzdHlsZToge1xcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMDAwJyxcXG4gICAgICAgIH0sXFxuICAgICAgfSksXFxuICAgICAgLi4uKG1vbWVudChzdGFydCkuaG91cigpIDwgMTIgJiYge1xcbiAgICAgICAgY2xhc3NOYW1lOiAncG93ZGVyQmx1ZScsXFxuICAgICAgfSksXFxuICAgICAgLi4uKGV2ZW50LnRpdGxlLmluY2x1ZGVzKCdNZWV0aW5nJykgJiYge1xcbiAgICAgICAgY2xhc3NOYW1lOiAnZGFya0dyZWVuJyxcXG4gICAgICB9KSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtuZXcgRGF0ZSgyMDE1LCAzLCAxMyl9XFxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cXG4gICAgICAgIGV2ZW50UHJvcEdldHRlcj17ZXZlbnRQcm9wR2V0dGVyfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5FdmVudFByb3BHZXR0ZXIuc3RvcnlOYW1lID0gJ2V2ZW50UHJvcEdldHRlcidcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRXZlbnRQcm9wR2V0dGVyXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjIwfSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6NDl9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoyMH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjo0OX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vZXZlbnRQcm9wR2V0dGVyLm1keCdcbmltcG9ydCAnLi4vcmVzb3VyY2VzL3Byb3BHZXR0ZXIuc2NzcydcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IEV2ZW50UHJvcEdldHRlciA9IGZ1bmN0aW9uIEV2ZW50UHJvcEdldHRlcigpIHtcbiAgY29uc3QgZXZlbnRQcm9wR2V0dGVyID0gdXNlQ2FsbGJhY2soXG4gICAgKGV2ZW50LCBzdGFydCwgZW5kLCBpc1NlbGVjdGVkKSA9PiAoe1xuICAgICAgLi4uKGlzU2VsZWN0ZWQgJiYge1xuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMwMDAnLFxuICAgICAgICB9LFxuICAgICAgfSksXG4gICAgICAuLi4obW9tZW50KHN0YXJ0KS5ob3VyKCkgPCAxMiAmJiB7XG4gICAgICAgIGNsYXNzTmFtZTogJ3Bvd2RlckJsdWUnLFxuICAgICAgfSksXG4gICAgICAuLi4oZXZlbnQudGl0bGUuaW5jbHVkZXMoJ01lZXRpbmcnKSAmJiB7XG4gICAgICAgIGNsYXNzTmFtZTogJ2RhcmtHcmVlbicsXG4gICAgICB9KSxcbiAgICB9KSxcbiAgICBbXVxuICApXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRlZmF1bHREYXRlPXtuZXcgRGF0ZSgyMDE1LCAzLCAxMyl9XG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxuICAgICAgICBldmVudFByb3BHZXR0ZXI9e2V2ZW50UHJvcEdldHRlcn1cbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59O0V2ZW50UHJvcEdldHRlci5zdG9yeU5hbWUgPSAnZXZlbnRQcm9wR2V0dGVyJ1xuXG5cblxuRXZlbnRQcm9wR2V0dGVyLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBFdmVudFByb3BHZXR0ZXIoKSB7XFxuICBjb25zdCBldmVudFByb3BHZXR0ZXIgPSB1c2VDYWxsYmFjayhcXG4gICAgKGV2ZW50LCBzdGFydCwgZW5kLCBpc1NlbGVjdGVkKSA9PiAoe1xcbiAgICAgIC4uLihpc1NlbGVjdGVkICYmIHtcXG4gICAgICAgIHN0eWxlOiB7XFxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMwMDAnLFxcbiAgICAgICAgfSxcXG4gICAgICB9KSxcXG4gICAgICAuLi4obW9tZW50KHN0YXJ0KS5ob3VyKCkgPCAxMiAmJiB7XFxuICAgICAgICBjbGFzc05hbWU6ICdwb3dkZXJCbHVlJyxcXG4gICAgICB9KSxcXG4gICAgICAuLi4oZXZlbnQudGl0bGUuaW5jbHVkZXMoJ01lZXRpbmcnKSAmJiB7XFxuICAgICAgICBjbGFzc05hbWU6ICdkYXJrR3JlZW4nLFxcbiAgICAgIH0pLFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e25ldyBEYXRlKDIwMTUsIDMsIDEzKX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxcbiAgICAgICAgZXZlbnRQcm9wR2V0dGVyPXtldmVudFByb3BHZXR0ZXJ9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVwiIH0sIC4uLkV2ZW50UHJvcEdldHRlci5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwiZXZlbnRzXCJcbiAgICB9fT57YGV2ZW50c2B9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgYXJyYXlPZihFdmVudClgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YFtdYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQW4gYXJyYXkgb2YgZXZlbnQgb2JqZWN0cyB0byBkaXNwbGF5IG9uIHRoZSBjYWxlbmRhci4gRXZlbnRzIG9iamVjdHNcbmNhbiBiZSBhbnkgc2hhcGUsIGFzIGxvbmcgYXMgdGhlIENhbGVuZGFyIGtub3dzIGhvdyB0byByZXRyaWV2ZSB0aGVcbmZvbGxvd2luZyBkZXRhaWxzIG9mIHRoZSBldmVudDpgfTwvcD5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BzdGFydCB0aW1lYH08L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZW5kIHRpbWVgfTwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0aXRsZWB9PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHdoZXRoZXIgaXRzIGFuIFwiYWxsIGRheVwiIGV2ZW50IG9yIG5vdGB9PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGFueSByZXNvdXJjZSB0aGUgZXZlbnQgbWF5IGJlIHJlbGF0ZWQgdG9gfTwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEVhY2ggb2YgdGhlc2UgcHJvcGVydGllcyBjYW4gYmUgY3VzdG9taXplZCBvciBnZW5lcmF0ZWQgZHluYW1pY2FsbHkgYnlcbnNldHRpbmcgdGhlIHZhcmlvdXMgXCJhY2Nlc3NvclwiIHByb3BzLiBXaXRob3V0IGFueSBjb25maWd1cmF0aW9uIHRoZSBkZWZhdWx0XG5ldmVudCBzaG91bGQgbG9vayBsaWtlOmB9PC9wPlxuICAgIDxwcmU+PGNvZGUgcGFyZW50TmFtZT1cInByZVwiIHsuLi57XG4gICAgICAgIFwiY2xhc3NOYW1lXCI6IFwibGFuZ3VhZ2UtanNcIlxuICAgICAgfX0+e2BFdmVudCB7XG4gIHRpdGxlOiBzdHJpbmcsXG4gIHN0YXJ0OiBEYXRlLFxuICBlbmQ6IERhdGUsXG4gIGFsbERheT86IGJvb2xlYW5cbiAgcmVzb3VyY2U/OiBhbnksXG59XG5gfTwvY29kZT48L3ByZT5cbiAgICA8U3RvcnkgaWQ9XCJwcm9wcy0tZXZlbnRzXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2V2ZW50cy5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHREYXRlOiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IEV2ZW50cyA9IFRlbXBsYXRlLmJpbmQoe30pXFxuRXZlbnRzLnN0b3J5TmFtZSA9ICdldmVudHMnXFxuRXZlbnRzLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRXZlbnRzXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyN30sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjMxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjI3fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjMxfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9ldmVudHMubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZToge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgY29uc3QgRXZlbnRzID0gVGVtcGxhdGUuYmluZCh7fSk7RXZlbnRzLnN0b3J5TmFtZSA9ICdldmVudHMnXG5FdmVudHMuYXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXG59XG5cblxuXG5FdmVudHMucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLkV2ZW50cy5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwiZm9ybWF0c1wiXG4gICAgfX0+e2Bmb3JtYXRzYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BPYmplY3RgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImxvY2FsaXplclwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgTG9jYWxpemVyXG4gICAgPC9MaW5rVG8+IHNwZWNpZmljIGZvcm1hdHMsIHRlbGwgdGhlIENhbGVuZGFyIGhvdyB0byBmb3JtYXQgYW5kIGRpc3BsYXkgZGF0ZXMgYW5kXG50aW1lcy5cbiAgICA8cD57YFRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2Bmb3JtYXRgfTwvaW5saW5lQ29kZT57YCB0eXBlcyBhcmUgZGVwZW5kZW50IG9uIHRoZSBjb25maWd1cmVkIGxvY2FsaXplcjsgYm90aCBNb21lbnQgYW5kIEdsb2JhbGl6ZSBhY2NlcHQgc3RyaW5ncyBvZiB0b2tlbnMgYWNjb3JkaW5nIHRvIHRoZWlyIG93biBzcGVjaWZpY2F0aW9uLCBzdWNoIGFzOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2AnREQgbW0geXl5eSdgfTwvaW5saW5lQ29kZT57YC5gfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgY29uc3QgZm9ybWF0cyA9IHVzZU1lbW8oKCkgPT4gKHtcbiAgZGF0ZUZvcm1hdDogJ2RkJyxcblxuICBkYXlGb3JtYXQ6IChkYXRlLCAsIGxvY2FsaXplcikgPT5cbiAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdEREQnLCBjdWx0dXJlKSxcblxuICBkYXlSYW5nZUhlYWRlckZvcm1hdDogKHsgc3RhcnQsIGVuZCB9LCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XG4gICAgbG9jYWxpemVyLmZvcm1hdChzdGFydCwgeyBkYXRlOiAnc2hvcnQnIH0sIGN1bHR1cmUpICsgJyDigJQgJyArXG4gICAgbG9jYWxpemVyLmZvcm1hdChlbmQsIHsgZGF0ZTogJ3Nob3J0JyB9LCBjdWx0dXJlKVxufSksIFtdKVxuXG48Q2FsZW5kYXIgZm9ybWF0cz17Zm9ybWF0c30gLz5cbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxDYW52YXMgbWR4VHlwZT1cIkNhbnZhc1wiPlxuICA8U3RvcnkgaWQ9XCJwcm9wcy0tZm9ybWF0c1wiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vZm9ybWF0cy5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIEZvcm1hdHMoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcXG4gICAgICBmb3JtYXRzOiB7XFxuICAgICAgICAvLyB0aGUgJ2RhdGUnIG9uIGVhY2ggZGF5IGNlbGwgb2YgdGhlICdtb250aCcgdmlld1xcbiAgICAgICAgZGF0ZUZvcm1hdDogJ0QnLFxcbiAgICAgICAgLy8gdGhlIGRheSBvZiB0aGUgd2VlayBoZWFkZXIgaW4gdGhlICdtb250aCcgdmlld1xcbiAgICAgICAgd2Vla2RheUZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnZGRkZCcsIGN1bHR1cmUpLFxcbiAgICAgICAgLy8gdGhlIGRheSBoZWFkZXIgaW4gdGhlICd3ZWVrJyBhbmQgJ2RheScgKFRpbWUgR3JpZCkgdmlld3NcXG4gICAgICAgIGRheUZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnZGRkZCBEbycsIGN1bHR1cmUpLFxcbiAgICAgICAgLy8gdGhlIHRpbWUgaW4gdGhlIGd1dHRlciBpbiB0aGUgVGltZSBHcmlkIHZpZXdzXFxuICAgICAgICB0aW1lR3V0dGVyRm9ybWF0OiAoZGF0ZSwgY3VsdHVyZSwgbG9jYWxpemVyKSA9PlxcbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdoaDptbSBhJywgY3VsdHVyZSksXFxuICAgICAgfSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVxcbkZvcm1hdHMuc3RvcnlOYW1lID0gJ2Zvcm1hdHMnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkZvcm1hdHNcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo1MH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjUwfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vZm9ybWF0cy5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBGb3JtYXRzID0gZnVuY3Rpb24gRm9ybWF0cygpIHtcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cyB9ID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEpLFxuICAgICAgZm9ybWF0czoge1xuICAgICAgICAvLyB0aGUgJ2RhdGUnIG9uIGVhY2ggZGF5IGNlbGwgb2YgdGhlICdtb250aCcgdmlld1xuICAgICAgICBkYXRlRm9ybWF0OiAnRCcsXG4gICAgICAgIC8vIHRoZSBkYXkgb2YgdGhlIHdlZWsgaGVhZGVyIGluIHRoZSAnbW9udGgnIHZpZXdcbiAgICAgICAgd2Vla2RheUZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdkZGRkJywgY3VsdHVyZSksXG4gICAgICAgIC8vIHRoZSBkYXkgaGVhZGVyIGluIHRoZSAnd2VlaycgYW5kICdkYXknIChUaW1lIEdyaWQpIHZpZXdzXG4gICAgICAgIGRheUZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdkZGRkIERvJywgY3VsdHVyZSksXG4gICAgICAgIC8vIHRoZSB0aW1lIGluIHRoZSBndXR0ZXIgaW4gdGhlIFRpbWUgR3JpZCB2aWV3c1xuICAgICAgICB0aW1lR3V0dGVyRm9ybWF0OiAoZGF0ZSwgY3VsdHVyZSwgbG9jYWxpemVyKSA9PlxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ2hoOm1tIGEnLCBjdWx0dXJlKSxcbiAgICAgIH0sXG4gICAgfSksXG4gICAgW11cbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgIDxDYWxlbmRhclxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtGb3JtYXRzLnN0b3J5TmFtZSA9ICdmb3JtYXRzJ1xuXG5cblxuRm9ybWF0cy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gRm9ybWF0cygpIHtcXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMgfSA9IHVzZU1lbW8oXFxuICAgICgpID0+ICh7XFxuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIC8vIHRoZSAnZGF0ZScgb24gZWFjaCBkYXkgY2VsbCBvZiB0aGUgJ21vbnRoJyB2aWV3XFxuICAgICAgICBkYXRlRm9ybWF0OiAnRCcsXFxuICAgICAgICAvLyB0aGUgZGF5IG9mIHRoZSB3ZWVrIGhlYWRlciBpbiB0aGUgJ21vbnRoJyB2aWV3XFxuICAgICAgICB3ZWVrZGF5Rm9ybWF0OiAoZGF0ZSwgY3VsdHVyZSwgbG9jYWxpemVyKSA9PlxcbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdkZGRkJywgY3VsdHVyZSksXFxuICAgICAgICAvLyB0aGUgZGF5IGhlYWRlciBpbiB0aGUgJ3dlZWsnIGFuZCAnZGF5JyAoVGltZSBHcmlkKSB2aWV3c1xcbiAgICAgICAgZGF5Rm9ybWF0OiAoZGF0ZSwgY3VsdHVyZSwgbG9jYWxpemVyKSA9PlxcbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdkZGRkIERvJywgY3VsdHVyZSksXFxuICAgICAgICAvLyB0aGUgdGltZSBpbiB0aGUgZ3V0dGVyIGluIHRoZSBUaW1lIEdyaWQgdmlld3NcXG4gICAgICAgIHRpbWVHdXR0ZXJGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ2hoOm1tIGEnLCBjdWx0dXJlKSxcXG4gICAgICB9LFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uRm9ybWF0cy5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwiZm9ybWF0c2FnZW5kYWRhdGVmb3JtYXRcIlxuICAgIH19PntgZm9ybWF0cy5hZ2VuZGFEYXRlRm9ybWF0YH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoZGF0ZTogRGF0ZSwgY3VsdHVyZTogP3N0cmluZywgbG9jYWxpemVyOiBEYXRlTG9jYWxpemVyKSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BEYXRlcyBkaXNwbGF5ZWQgaW4gdGhlIGd1dHRlciBvZiB0aGUgQWdlbmRhIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHZpZXdgfTwvaW5saW5lQ29kZT48L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1mb3JtYXRzLWFnZW5kYS1kYXRlLWZvcm1hdFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNBZ2VuZGFEYXRlRm9ybWF0Lm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gRm9ybWF0c0FnZW5kRGF0ZUZvcm1hdCgpIHtcXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMsIHZpZXdzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICAgICAgZm9ybWF0czoge1xcbiAgICAgICAgYWdlbmRhRGF0ZUZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnZGRkZCBNTU1NIERvJywgY3VsdHVyZSksXFxuICAgICAgfSxcXG4gICAgICB2aWV3czogW1ZpZXdzLldFRUssIFZpZXdzLkRBWSwgVmlld3MuQUdFTkRBXSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5BR0VOREF9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgdmlld3M9e3ZpZXdzfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5Gb3JtYXRzQWdlbmREYXRlRm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLmFnZW5kYURhdGVGb3JtYXQnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkZvcm1hdHNBZ2VuZERhdGVGb3JtYXRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo0NH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQ0fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNBZ2VuZGFEYXRlRm9ybWF0Lm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IEZvcm1hdHNBZ2VuZERhdGVGb3JtYXQgPSBmdW5jdGlvbiBGb3JtYXRzQWdlbmREYXRlRm9ybWF0KCkge1xuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzLCB2aWV3cyB9ID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcbiAgICAgIGZvcm1hdHM6IHtcbiAgICAgICAgYWdlbmRhRGF0ZUZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdkZGRkIE1NTU0gRG8nLCBjdWx0dXJlKSxcbiAgICAgIH0sXG4gICAgICB2aWV3czogW1ZpZXdzLldFRUssIFZpZXdzLkRBWSwgVmlld3MuQUdFTkRBXSxcbiAgICB9KSxcbiAgICBbXVxuICApXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLkFHRU5EQX1cbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XG4gICAgICAgIHZpZXdzPXt2aWV3c31cbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gIClcbn07Rm9ybWF0c0FnZW5kRGF0ZUZvcm1hdC5zdG9yeU5hbWUgPSAnZm9ybWF0cy5hZ2VuZGFEYXRlRm9ybWF0J1xuXG5cblxuRm9ybWF0c0FnZW5kRGF0ZUZvcm1hdC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gRm9ybWF0c0FnZW5kRGF0ZUZvcm1hdCgpIHtcXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMsIHZpZXdzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICAgICAgZm9ybWF0czoge1xcbiAgICAgICAgYWdlbmRhRGF0ZUZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnZGRkZCBNTU1NIERvJywgY3VsdHVyZSksXFxuICAgICAgfSxcXG4gICAgICB2aWV3czogW1ZpZXdzLldFRUssIFZpZXdzLkRBWSwgVmlld3MuQUdFTkRBXSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5BR0VOREF9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgdmlld3M9e3ZpZXdzfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5Gb3JtYXRzQWdlbmREYXRlRm9ybWF0LnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJmb3JtYXRzYWdlbmRhaGVhZGVyZm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMuYWdlbmRhSGVhZGVyRm9ybWF0YH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAocmFuZ2U6IE9iamVjdCB7c3RhcnQ6IERhdGUsIGVuZDogRGF0ZX0sIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogRGF0ZUxvY2FsaXplcikgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVG9vbGJhciBoZWFkZXIgZm9ybWF0IGZvciB0aGUgQWdlbmRhIHZpZXcsIGUuZy4gXCI0LzEvMjAxNSDigJQgNS8xLzIwMTVcImB9PC9wPlxuICAgIDxDYW52YXMgbWR4VHlwZT1cIkNhbnZhc1wiPlxuICA8U3RvcnkgaWQ9XCJwcm9wcy0tZm9ybWF0cy1hZ2VuZGEtaGVhZGVyLWZvcm1hdFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNBZ2VuZGFIZWFkZXJGb3JtYXQubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBGb3JtYXRzQWdlbmRIZWFkZXJGb3JtYXQoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzLCB2aWV3cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIGFnZW5kYUhlYWRlckZvcm1hdDogKHsgc3RhcnQsIGVuZCB9LCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoc3RhcnQsICdkZGRkIE1NTU0gRG8sIFlZWVknLCBjdWx0dXJlKSArXFxuICAgICAgICAgICcgLSAnICtcXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChlbmQsICdkZGRkIE1NTU0gRG8sIFlZWVknLCBjdWx0dXJlKSxcXG4gICAgICB9LFxcbiAgICAgIHZpZXdzOiBbVmlld3MuV0VFSywgVmlld3MuREFZLCBWaWV3cy5BR0VOREFdLFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLkFHRU5EQX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICB2aWV3cz17dmlld3N9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVxcbkZvcm1hdHNBZ2VuZEhlYWRlckZvcm1hdC5zdG9yeU5hbWUgPSAnZm9ybWF0cy5hZ2VuZGFIZWFkZXJGb3JtYXQnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkZvcm1hdHNBZ2VuZEhlYWRlckZvcm1hdFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQ2fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6NDZ9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vZm9ybWF0c0FnZW5kYUhlYWRlckZvcm1hdC5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBGb3JtYXRzQWdlbmRIZWFkZXJGb3JtYXQgPSBmdW5jdGlvbiBGb3JtYXRzQWdlbmRIZWFkZXJGb3JtYXQoKSB7XG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMsIHZpZXdzIH0gPSB1c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxuICAgICAgZm9ybWF0czoge1xuICAgICAgICBhZ2VuZGFIZWFkZXJGb3JtYXQ6ICh7IHN0YXJ0LCBlbmQgfSwgY3VsdHVyZSwgbG9jYWxpemVyKSA9PlxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoc3RhcnQsICdkZGRkIE1NTU0gRG8sIFlZWVknLCBjdWx0dXJlKSArXG4gICAgICAgICAgJyAtICcgK1xuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZW5kLCAnZGRkZCBNTU1NIERvLCBZWVlZJywgY3VsdHVyZSksXG4gICAgICB9LFxuICAgICAgdmlld3M6IFtWaWV3cy5XRUVLLCBWaWV3cy5EQVksIFZpZXdzLkFHRU5EQV0sXG4gICAgfSksXG4gICAgW11cbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgIDxDYWxlbmRhclxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5BR0VOREF9XG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxuICAgICAgICB2aWV3cz17dmlld3N9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59O0Zvcm1hdHNBZ2VuZEhlYWRlckZvcm1hdC5zdG9yeU5hbWUgPSAnZm9ybWF0cy5hZ2VuZGFIZWFkZXJGb3JtYXQnXG5cblxuXG5Gb3JtYXRzQWdlbmRIZWFkZXJGb3JtYXQucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIEZvcm1hdHNBZ2VuZEhlYWRlckZvcm1hdCgpIHtcXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMsIHZpZXdzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICAgICAgZm9ybWF0czoge1xcbiAgICAgICAgYWdlbmRhSGVhZGVyRm9ybWF0OiAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChzdGFydCwgJ2RkZGQgTU1NTSBEbywgWVlZWScsIGN1bHR1cmUpICtcXG4gICAgICAgICAgJyAtICcgK1xcbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGVuZCwgJ2RkZGQgTU1NTSBEbywgWVlZWScsIGN1bHR1cmUpLFxcbiAgICAgIH0sXFxuICAgICAgdmlld3M6IFtWaWV3cy5XRUVLLCBWaWV3cy5EQVksIFZpZXdzLkFHRU5EQV0sXFxuICAgIH0pLFxcbiAgICBbXVxcbiAgKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuQUdFTkRBfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIHZpZXdzPXt2aWV3c31cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uRm9ybWF0c0FnZW5kSGVhZGVyRm9ybWF0LnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJmb3JtYXRzYWdlbmRhdGltZWZvcm1hdFwiXG4gICAgfX0+e2Bmb3JtYXRzLmFnZW5kYVRpbWVGb3JtYXRgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChkYXRlOiBEYXRlLCBjdWx0dXJlOiA/c3RyaW5nLCBsb2NhbGl6ZXI6IERhdGVMb2NhbGl6ZXIpID0+IHN0cmluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRpbWUgb25seSAobm90IHJhbmdlKSBkaXNwbGF5ZWQgaW4gdGhlIGd1dHRlciBvZiB0aGUgQWdlbmRhIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHZpZXdgfTwvaW5saW5lQ29kZT48L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1mb3JtYXRzLWFnZW5kYS10aW1lLWZvcm1hdFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNBZ2VuZGFUaW1lRm9ybWF0Lm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gRm9ybWF0c0FnZW5kVGltZUZvcm1hdCgpIHtcXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMsIHZpZXdzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICAgICAgZm9ybWF0czoge1xcbiAgICAgICAgYWdlbmRhVGltZUZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnaGg6bW0gQScsIGN1bHR1cmUpLFxcbiAgICAgIH0sXFxuICAgICAgdmlld3M6IFtWaWV3cy5XRUVLLCBWaWV3cy5EQVksIFZpZXdzLkFHRU5EQV0sXFxuICAgIH0pLFxcbiAgICBbXVxcbiAgKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuQUdFTkRBfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIHZpZXdzPXt2aWV3c31cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuRm9ybWF0c0FnZW5kVGltZUZvcm1hdC5zdG9yeU5hbWUgPSAnZm9ybWF0cy5hZ2VuZGFUaW1lRm9ybWF0J1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJGb3JtYXRzQWdlbmRUaW1lRm9ybWF0XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6NDR9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjo0NH19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9mb3JtYXRzQWdlbmRhVGltZUZvcm1hdC5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBGb3JtYXRzQWdlbmRUaW1lRm9ybWF0ID0gZnVuY3Rpb24gRm9ybWF0c0FnZW5kVGltZUZvcm1hdCgpIHtcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cywgdmlld3MgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gICAgICBmb3JtYXRzOiB7XG4gICAgICAgIGFnZW5kYVRpbWVGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnaGg6bW0gQScsIGN1bHR1cmUpLFxuICAgICAgfSxcbiAgICAgIHZpZXdzOiBbVmlld3MuV0VFSywgVmlld3MuREFZLCBWaWV3cy5BR0VOREFdLFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuQUdFTkRBfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgICAgdmlld3M9e3ZpZXdzfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtGb3JtYXRzQWdlbmRUaW1lRm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLmFnZW5kYVRpbWVGb3JtYXQnXG5cblxuXG5Gb3JtYXRzQWdlbmRUaW1lRm9ybWF0LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBGb3JtYXRzQWdlbmRUaW1lRm9ybWF0KCkge1xcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cywgdmlld3MgfSA9IHVzZU1lbW8oXFxuICAgICgpID0+ICh7XFxuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcXG4gICAgICBmb3JtYXRzOiB7XFxuICAgICAgICBhZ2VuZGFUaW1lRm9ybWF0OiAoZGF0ZSwgY3VsdHVyZSwgbG9jYWxpemVyKSA9PlxcbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdoaDptbSBBJywgY3VsdHVyZSksXFxuICAgICAgfSxcXG4gICAgICB2aWV3czogW1ZpZXdzLldFRUssIFZpZXdzLkRBWSwgVmlld3MuQUdFTkRBXSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5BR0VOREF9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgdmlld3M9e3ZpZXdzfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5Gb3JtYXRzQWdlbmRUaW1lRm9ybWF0LnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJmb3JtYXRzYWdlbmRhdGltZXJhbmdlZm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMuYWdlbmRhVGltZVJhbmdlRm9ybWF0YH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAocmFuZ2U6IE9iamVjdCB7c3RhcnQ6IERhdGUsIGVuZDogRGF0ZX0sIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogRGF0ZUxvY2FsaXplcikgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVGltZSByYW5nZSBkaXNwbGF5ZWQgaW4gdGhlIGd1dHRlciBvZiB0aGUgQWdlbmRhIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHZpZXdgfTwvaW5saW5lQ29kZT48L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1mb3JtYXRzLWFnZW5kYS10aW1lLXJhbmdlLWZvcm1hdFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNBZ2VuZGFUaW1lUmFuZ2VGb3JtYXQubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBGb3JtYXRzQWdlbmRhVGltZVJhbmdlRm9ybWF0KCkge1xcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cywgdmlld3MgfSA9IHVzZU1lbW8oXFxuICAgICgpID0+ICh7XFxuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcXG4gICAgICBmb3JtYXRzOiB7XFxuICAgICAgICBhZ2VuZGFUaW1lUmFuZ2VGb3JtYXQ6ICh7IHN0YXJ0LCBlbmQgfSwgY3VsdHVyZSwgbG9jYWxpemVyKSA9PlxcbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KHN0YXJ0LCAnaGg6bW0gQScsIGN1bHR1cmUpICtcXG4gICAgICAgICAgJyAtICcgK1xcbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGVuZCwgJ2hoOm1tIEEnLCBjdWx0dXJlKSxcXG4gICAgICB9LFxcbiAgICAgIHZpZXdzOiBbVmlld3MuV0VFSywgVmlld3MuREFZLCBWaWV3cy5BR0VOREFdLFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLkFHRU5EQX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICB2aWV3cz17dmlld3N9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVxcbkZvcm1hdHNBZ2VuZGFUaW1lUmFuZ2VGb3JtYXQuc3RvcnlOYW1lID0gJ2Zvcm1hdHMuYWdlbmRhVGltZVJhbmdlRm9ybWF0J1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJGb3JtYXRzQWdlbmRhVGltZVJhbmdlRm9ybWF0XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6NDZ9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjo0Nn19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9mb3JtYXRzQWdlbmRhVGltZVJhbmdlRm9ybWF0Lm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IEZvcm1hdHNBZ2VuZGFUaW1lUmFuZ2VGb3JtYXQgPSBmdW5jdGlvbiBGb3JtYXRzQWdlbmRhVGltZVJhbmdlRm9ybWF0KCkge1xuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzLCB2aWV3cyB9ID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcbiAgICAgIGZvcm1hdHM6IHtcbiAgICAgICAgYWdlbmRhVGltZVJhbmdlRm9ybWF0OiAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KHN0YXJ0LCAnaGg6bW0gQScsIGN1bHR1cmUpICtcbiAgICAgICAgICAnIC0gJyArXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChlbmQsICdoaDptbSBBJywgY3VsdHVyZSksXG4gICAgICB9LFxuICAgICAgdmlld3M6IFtWaWV3cy5XRUVLLCBWaWV3cy5EQVksIFZpZXdzLkFHRU5EQV0sXG4gICAgfSksXG4gICAgW11cbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgIDxDYWxlbmRhclxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5BR0VOREF9XG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxuICAgICAgICB2aWV3cz17dmlld3N9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59O0Zvcm1hdHNBZ2VuZGFUaW1lUmFuZ2VGb3JtYXQuc3RvcnlOYW1lID0gJ2Zvcm1hdHMuYWdlbmRhVGltZVJhbmdlRm9ybWF0J1xuXG5cblxuRm9ybWF0c0FnZW5kYVRpbWVSYW5nZUZvcm1hdC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gRm9ybWF0c0FnZW5kYVRpbWVSYW5nZUZvcm1hdCgpIHtcXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMsIHZpZXdzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICAgICAgZm9ybWF0czoge1xcbiAgICAgICAgYWdlbmRhVGltZVJhbmdlRm9ybWF0OiAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChzdGFydCwgJ2hoOm1tIEEnLCBjdWx0dXJlKSArXFxuICAgICAgICAgICcgLSAnICtcXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChlbmQsICdoaDptbSBBJywgY3VsdHVyZSksXFxuICAgICAgfSxcXG4gICAgICB2aWV3czogW1ZpZXdzLldFRUssIFZpZXdzLkRBWSwgVmlld3MuQUdFTkRBXSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5BR0VOREF9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgdmlld3M9e3ZpZXdzfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5Gb3JtYXRzQWdlbmRhVGltZVJhbmdlRm9ybWF0LnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJmb3JtYXRzZGF0ZWZvcm1hdFwiXG4gICAgfX0+e2Bmb3JtYXRzLmRhdGVGb3JtYXRgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChkYXRlOiBEYXRlLCBjdWx0dXJlOiA/c3RyaW5nLCBsb2NhbGl6ZXI6IERhdGVMb2NhbGl6ZXIpID0+IHN0cmluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEZvcm1hdCBmb3IgdGhlIGRheSBvZiB0aGUgbW9udGggaGVhZGluZyBpbiB0aGUgTW9udGggdmlldy4gZS5nLiBcIjAxXCIsIFwiMDJcIiwgXCIwM1wiLCBldGNgfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLWZvcm1hdHMtZGF0ZS1mb3JtYXRcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvQ2FudmFzPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNEYXRlRm9ybWF0Lm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gRm9ybWF0c0RhdGVGb3JtYXQoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcXG4gICAgICBmb3JtYXRzOiB7XFxuICAgICAgICBkYXRlRm9ybWF0OiAoZGF0ZSwgY3VsdHVyZSwgbG9jYWxpemVyKSA9PlxcbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdEJywgY3VsdHVyZSksXFxuICAgICAgfSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVxcbkZvcm1hdHNEYXRlRm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLmRhdGVGb3JtYXQnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkZvcm1hdHNEYXRlRm9ybWF0XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6NDF9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjo0MX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNEYXRlRm9ybWF0Lm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IEZvcm1hdHNEYXRlRm9ybWF0ID0gZnVuY3Rpb24gRm9ybWF0c0RhdGVGb3JtYXQoKSB7XG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcbiAgICAgIGZvcm1hdHM6IHtcbiAgICAgICAgZGF0ZUZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdEJywgY3VsdHVyZSksXG4gICAgICB9LFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gIClcbn07Rm9ybWF0c0RhdGVGb3JtYXQuc3RvcnlOYW1lID0gJ2Zvcm1hdHMuZGF0ZUZvcm1hdCdcblxuXG5cbkZvcm1hdHNEYXRlRm9ybWF0LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBGb3JtYXRzRGF0ZUZvcm1hdCgpIHtcXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMgfSA9IHVzZU1lbW8oXFxuICAgICgpID0+ICh7XFxuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIGRhdGVGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ0QnLCBjdWx0dXJlKSxcXG4gICAgICB9LFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uRm9ybWF0c0RhdGVGb3JtYXQucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImZvcm1hdHNkYXlmb3JtYXRcIlxuICAgIH19PntgZm9ybWF0cy5kYXlGb3JtYXRgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChkYXRlOiBEYXRlLCBjdWx0dXJlOiA/c3RyaW5nLCBsb2NhbGl6ZXI6IERhdGVMb2NhbGl6ZXIpID0+IHN0cmluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEEgZGF5IG9mIHRoZSB3ZWVrIGZvcm1hdCBmb3IgV2VlayBhbmQgRGF5IGhlYWRpbmdzLCBlLmcuIFwiV2VkIDAxLzA0XCJgfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLWZvcm1hdHMtZGF5LWZvcm1hdFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNEYXlGb3JtYXQubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBGb3JtYXRzRGF5Rm9ybWF0KCkge1xcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cywgdmlld3MgfSA9IHVzZU1lbW8oXFxuICAgICgpID0+ICh7XFxuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcXG4gICAgICBmb3JtYXRzOiB7XFxuICAgICAgICBkYXlGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ2RkZCBNTS9ERCcsIGN1bHR1cmUpLFxcbiAgICAgIH0sXFxuICAgICAgdmlld3M6IFtWaWV3cy5XRUVLLCBWaWV3cy5EQVldLFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgdmlld3M9e3ZpZXdzfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5Gb3JtYXRzRGF5Rm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLmRheUZvcm1hdCdcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRm9ybWF0c0RheUZvcm1hdFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQ0fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6NDR9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vZm9ybWF0c0RheUZvcm1hdC5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBGb3JtYXRzRGF5Rm9ybWF0ID0gZnVuY3Rpb24gRm9ybWF0c0RheUZvcm1hdCgpIHtcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cywgdmlld3MgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gICAgICBmb3JtYXRzOiB7XG4gICAgICAgIGRheUZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdkZGQgTU0vREQnLCBjdWx0dXJlKSxcbiAgICAgIH0sXG4gICAgICB2aWV3czogW1ZpZXdzLldFRUssIFZpZXdzLkRBWV0sXG4gICAgfSksXG4gICAgW11cbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgIDxDYWxlbmRhclxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgICAgdmlld3M9e3ZpZXdzfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtGb3JtYXRzRGF5Rm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLmRheUZvcm1hdCdcblxuXG5cbkZvcm1hdHNEYXlGb3JtYXQucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIEZvcm1hdHNEYXlGb3JtYXQoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzLCB2aWV3cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIGRheUZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnZGRkIE1NL0REJywgY3VsdHVyZSksXFxuICAgICAgfSxcXG4gICAgICB2aWV3czogW1ZpZXdzLldFRUssIFZpZXdzLkRBWV0sXFxuICAgIH0pLFxcbiAgICBbXVxcbiAgKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICB2aWV3cz17dmlld3N9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVwiIH0sIC4uLkZvcm1hdHNEYXlGb3JtYXQucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImZvcm1hdHNkYXloZWFkZXJmb3JtYXRcIlxuICAgIH19PntgZm9ybWF0cy5kYXlIZWFkZXJGb3JtYXRgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChkYXRlOiBEYXRlLCBjdWx0dXJlOiA/c3RyaW5nLCBsb2NhbGl6ZXI6IERhdGVMb2NhbGl6ZXIpID0+IHN0cmluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRvb2xiYXIgaGVhZGVyIGZvcm1hdCBmb3IgdGhlIERheSB2aWV3LCBlLmcuIFwiV2VkbmVzZGF5IEFwciAwMVwiYH08L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1mb3JtYXRzLWRheS1oZWFkZXItZm9ybWF0XCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L0NhbnZhcz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vZm9ybWF0c0RheUhlYWRlckZvcm1hdC5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIEZvcm1hdHNEYXlIZWFkZXJGb3JtYXQoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzLCB2aWV3cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIGRheUhlYWRlckZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnZGRkZCBNTU1NIERvJywgY3VsdHVyZSksXFxuICAgICAgfSxcXG4gICAgICB2aWV3czogW1ZpZXdzLldFRUssIFZpZXdzLkRBWV0sXFxuICAgIH0pLFxcbiAgICBbXVxcbiAgKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuREFZfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIHZpZXdzPXt2aWV3c31cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuRm9ybWF0c0RheUhlYWRlckZvcm1hdC5zdG9yeU5hbWUgPSAnZm9ybWF0cy5kYXlIZWFkZXJGb3JtYXQnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkZvcm1hdHNEYXlIZWFkZXJGb3JtYXRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo0NH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQ0fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNEYXlIZWFkZXJGb3JtYXQubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5leHBvcnQgY29uc3QgRm9ybWF0c0RheUhlYWRlckZvcm1hdCA9IGZ1bmN0aW9uIEZvcm1hdHNEYXlIZWFkZXJGb3JtYXQoKSB7XG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMsIHZpZXdzIH0gPSB1c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxuICAgICAgZm9ybWF0czoge1xuICAgICAgICBkYXlIZWFkZXJGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnZGRkZCBNTU1NIERvJywgY3VsdHVyZSksXG4gICAgICB9LFxuICAgICAgdmlld3M6IFtWaWV3cy5XRUVLLCBWaWV3cy5EQVldLFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuREFZfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgICAgdmlld3M9e3ZpZXdzfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtGb3JtYXRzRGF5SGVhZGVyRm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLmRheUhlYWRlckZvcm1hdCdcblxuXG5cbkZvcm1hdHNEYXlIZWFkZXJGb3JtYXQucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIEZvcm1hdHNEYXlIZWFkZXJGb3JtYXQoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzLCB2aWV3cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIGRheUhlYWRlckZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnZGRkZCBNTU1NIERvJywgY3VsdHVyZSksXFxuICAgICAgfSxcXG4gICAgICB2aWV3czogW1ZpZXdzLldFRUssIFZpZXdzLkRBWV0sXFxuICAgIH0pLFxcbiAgICBbXVxcbiAgKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuREFZfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIHZpZXdzPXt2aWV3c31cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uRm9ybWF0c0RheUhlYWRlckZvcm1hdC5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwiZm9ybWF0c2RheXJhbmdlaGVhZGVyZm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMuZGF5UmFuZ2VIZWFkZXJGb3JtYXRgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChyYW5nZTogT2JqZWN0IHtzdGFydDogRGF0ZSwgZW5kOiBEYXRlfSwgY3VsdHVyZTogP3N0cmluZywgbG9jYWxpemVyOiBEYXRlTG9jYWxpemVyKSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BUb29sYmFyIGhlYWRlciBmb3JtYXQgZm9yIHRoZSBXZWVrIHZpZXdzLCBlLmcuIFwiTWFyIDI5IC0gQXByIDA0XCJgfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLWZvcm1hdHMtZGF5LXJhbmdlLWhlYWRlci1mb3JtYXRcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvQ2FudmFzPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9mb3JtYXRzRGF5UmFuZ2VIZWFkZXJGb3JtYXQubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBGb3JtYXRzRGF5UmFuZ2VIZWFkZXJGb3JtYXQoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzLCB2aWV3cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIGRheVJhbmdlSGVhZGVyRm9ybWF0OiAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChzdGFydCwgJ2RkZCBEJywgY3VsdHVyZSkgK1xcbiAgICAgICAgICAnIC0gJyArXFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZW5kLCAnZGRkIEQnLCBjdWx0dXJlKSxcXG4gICAgICB9LFxcbiAgICAgIHZpZXdzOiBbVmlld3MuV0VFSywgVmlld3MuREFZXSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIHZpZXdzPXt2aWV3c31cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuRm9ybWF0c0RheVJhbmdlSGVhZGVyRm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLmRheVJhbmdlSGVhZGVyRm9ybWF0J1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJGb3JtYXRzRGF5UmFuZ2VIZWFkZXJGb3JtYXRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo0Nn0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQ2fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNEYXlSYW5nZUhlYWRlckZvcm1hdC5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBGb3JtYXRzRGF5UmFuZ2VIZWFkZXJGb3JtYXQgPSBmdW5jdGlvbiBGb3JtYXRzRGF5UmFuZ2VIZWFkZXJGb3JtYXQoKSB7XG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMsIHZpZXdzIH0gPSB1c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxuICAgICAgZm9ybWF0czoge1xuICAgICAgICBkYXlSYW5nZUhlYWRlckZvcm1hdDogKHsgc3RhcnQsIGVuZCB9LCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChzdGFydCwgJ2RkZCBEJywgY3VsdHVyZSkgK1xuICAgICAgICAgICcgLSAnICtcbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGVuZCwgJ2RkZCBEJywgY3VsdHVyZSksXG4gICAgICB9LFxuICAgICAgdmlld3M6IFtWaWV3cy5XRUVLLCBWaWV3cy5EQVldLFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XG4gICAgICAgIHZpZXdzPXt2aWV3c31cbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gIClcbn07Rm9ybWF0c0RheVJhbmdlSGVhZGVyRm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLmRheVJhbmdlSGVhZGVyRm9ybWF0J1xuXG5cblxuRm9ybWF0c0RheVJhbmdlSGVhZGVyRm9ybWF0LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBGb3JtYXRzRGF5UmFuZ2VIZWFkZXJGb3JtYXQoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzLCB2aWV3cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIGRheVJhbmdlSGVhZGVyRm9ybWF0OiAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChzdGFydCwgJ2RkZCBEJywgY3VsdHVyZSkgK1xcbiAgICAgICAgICAnIC0gJyArXFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZW5kLCAnZGRkIEQnLCBjdWx0dXJlKSxcXG4gICAgICB9LFxcbiAgICAgIHZpZXdzOiBbVmlld3MuV0VFSywgVmlld3MuREFZXSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIHZpZXdzPXt2aWV3c31cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uRm9ybWF0c0RheVJhbmdlSGVhZGVyRm9ybWF0LnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJmb3JtYXRzZXZlbnR0aW1lcmFuZ2VlbmRmb3JtYXRcIlxuICAgIH19PntgZm9ybWF0cy5ldmVudFRpbWVSYW5nZUVuZEZvcm1hdGB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGRhdGU6IERhdGUsIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogRGF0ZUxvY2FsaXplcikgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQW4gb3B0aW9uYWwgZXZlbnQgdGltZSByYW5nZSBmb3IgZXZlbnRzIHRoYXQgY29udGludWUgb250byBhbm90aGVyIGRheS4gVXNlZCB3aXRoIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInNob3ctbXVsdGktZGF5LXRpbWVzXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgc2hvd011bHRpRGF5VGltZXNgfTwvTGlua1RvPntgLmB9PC9wPlxuICAgIDxDYW52YXMgbWR4VHlwZT1cIkNhbnZhc1wiPlxuICA8U3RvcnkgaWQ9XCJwcm9wcy0tZm9ybWF0cy1ldmVudC10aW1lLXJhbmdlLWVuZC1mb3JtYXRcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvQ2FudmFzPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9mb3JtYXRzRXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXQubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBGb3JtYXRzRXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXQoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICAgICAgZm9ybWF0czoge1xcbiAgICAgICAgZXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XFxuICAgICAgICAgICcgPDwgJyArIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ2hoOm1tIEEnLCBjdWx0dXJlKSxcXG4gICAgICB9LFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgc2hvd011bHRpRGF5VGltZXNcXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuRm9ybWF0c0V2ZW50VGltZVJhbmdlRW5kRm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLmV2ZW50VGltZVJhbmdlRW5kRm9ybWF0J1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJGb3JtYXRzRXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo0M30sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQzfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNFdmVudFRpbWVSYW5nZUVuZEZvcm1hdC5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBGb3JtYXRzRXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXQgPSBmdW5jdGlvbiBGb3JtYXRzRXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXQoKSB7XG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gICAgICBmb3JtYXRzOiB7XG4gICAgICAgIGV2ZW50VGltZVJhbmdlRW5kRm9ybWF0OiAoZGF0ZSwgY3VsdHVyZSwgbG9jYWxpemVyKSA9PlxuICAgICAgICAgICcgPDwgJyArIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ2hoOm1tIEEnLCBjdWx0dXJlKSxcbiAgICAgIH0sXG4gICAgfSksXG4gICAgW11cbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgIDxDYWxlbmRhclxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgICAgc2hvd011bHRpRGF5VGltZXNcbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gIClcbn07Rm9ybWF0c0V2ZW50VGltZVJhbmdlRW5kRm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLmV2ZW50VGltZVJhbmdlRW5kRm9ybWF0J1xuXG5cblxuRm9ybWF0c0V2ZW50VGltZVJhbmdlRW5kRm9ybWF0LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBGb3JtYXRzRXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXQoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICAgICAgZm9ybWF0czoge1xcbiAgICAgICAgZXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XFxuICAgICAgICAgICcgPDwgJyArIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ2hoOm1tIEEnLCBjdWx0dXJlKSxcXG4gICAgICB9LFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgc2hvd011bHRpRGF5VGltZXNcXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uRm9ybWF0c0V2ZW50VGltZVJhbmdlRW5kRm9ybWF0LnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJmb3JtYXRzZXZlbnR0aW1lcmFuZ2Vmb3JtYXRcIlxuICAgIH19PntgZm9ybWF0cy5ldmVudFRpbWVSYW5nZUZvcm1hdGB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKHJhbmdlOiBPYmplY3Qge3N0YXJ0OiBEYXRlLCBlbmQ6IERhdGV9LCBjdWx0dXJlOiA/c3RyaW5nLCBsb2NhbGl6ZXI6IERhdGVMb2NhbGl6ZXIpID0+IHN0cmluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRpbWUgcmFuZ2UgZGlzcGxheWVkIG9uIGV2ZW50cyBpbiBUaW1lIEdyaWQgdmlld3MuYH08L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1mb3JtYXRzLWV2ZW50LXRpbWUtcmFuZ2UtZm9ybWF0XCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L0NhbnZhcz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vZm9ybWF0c0V2ZW50VGltZVJhbmdlRm9ybWF0Lm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gRm9ybWF0c0V2ZW50VGltZVJhbmdlRm9ybWF0KCkge1xcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIGV2ZW50VGltZVJhbmdlRm9ybWF0OiAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChzdGFydCwgJ2hoOm1tIGEnLCBjdWx0dXJlKSArXFxuICAgICAgICAgICcgLSAnICtcXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChlbmQsICdoaDptbSBhJywgY3VsdHVyZSksXFxuICAgICAgfSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuRm9ybWF0c0V2ZW50VGltZVJhbmdlRm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLmV2ZW50VGltZVJhbmdlRm9ybWF0J1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJGb3JtYXRzRXZlbnRUaW1lUmFuZ2VGb3JtYXRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo0NH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQ0fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNFdmVudFRpbWVSYW5nZUZvcm1hdC5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBGb3JtYXRzRXZlbnRUaW1lUmFuZ2VGb3JtYXQgPSBmdW5jdGlvbiBGb3JtYXRzRXZlbnRUaW1lUmFuZ2VGb3JtYXQoKSB7XG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gICAgICBmb3JtYXRzOiB7XG4gICAgICAgIGV2ZW50VGltZVJhbmdlRm9ybWF0OiAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KHN0YXJ0LCAnaGg6bW0gYScsIGN1bHR1cmUpICtcbiAgICAgICAgICAnIC0gJyArXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChlbmQsICdoaDptbSBhJywgY3VsdHVyZSksXG4gICAgICB9LFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59O0Zvcm1hdHNFdmVudFRpbWVSYW5nZUZvcm1hdC5zdG9yeU5hbWUgPSAnZm9ybWF0cy5ldmVudFRpbWVSYW5nZUZvcm1hdCdcblxuXG5cbkZvcm1hdHNFdmVudFRpbWVSYW5nZUZvcm1hdC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gRm9ybWF0c0V2ZW50VGltZVJhbmdlRm9ybWF0KCkge1xcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIGV2ZW50VGltZVJhbmdlRm9ybWF0OiAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChzdGFydCwgJ2hoOm1tIGEnLCBjdWx0dXJlKSArXFxuICAgICAgICAgICcgLSAnICtcXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChlbmQsICdoaDptbSBhJywgY3VsdHVyZSksXFxuICAgICAgfSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uRm9ybWF0c0V2ZW50VGltZVJhbmdlRm9ybWF0LnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJmb3JtYXRzZXZlbnR0aW1lcmFuZ2VzdGFydGZvcm1hdFwiXG4gICAgfX0+e2Bmb3JtYXRzLmV2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXRgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChkYXRlOiBEYXRlLCBjdWx0dXJlOiA/c3RyaW5nLCBsb2NhbGl6ZXI6IERhdGVMb2NhbGl6ZXIpID0+IHN0cmluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEFuIG9wdGlvbmFsIGV2ZW50IHRpbWUgcmFuZ2UgZm9yIGV2ZW50cyB0aGF0IGNvbnRpbnVlIG9udG8gYW5vdGhlciBkYXkuIFVzZWQgd2l0aCBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJzaG93LW11bHRpLWRheS10aW1lc1wiIG1keFR5cGU9XCJMaW5rVG9cIj57YHNob3dNdWx0aURheVRpbWVzYH08L0xpbmtUbz57YC5gfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLWZvcm1hdHMtZXZlbnQtdGltZS1yYW5nZS1zdGFydC1mb3JtYXRcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvQ2FudmFzPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9mb3JtYXRzRXZlbnRUaW1lUmFuZ2VTdGFydEZvcm1hdC5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIEZvcm1hdHNFdmVudFRpbWVSYW5nZVN0YXJ0Rm9ybWF0KCkge1xcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIGV2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ2hoOm1tIEEnLCBjdWx0dXJlKSArICcgPj4gJyxcXG4gICAgICB9LFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgc2hvd011bHRpRGF5VGltZXNcXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuRm9ybWF0c0V2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQuc3RvcnlOYW1lID0gJ2Zvcm1hdHMuZXZlbnRUaW1lUmFuZ2VTdGFydEZvcm1hdCdcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiRm9ybWF0c0V2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo0M30sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQzfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNFdmVudFRpbWVSYW5nZVN0YXJ0Rm9ybWF0Lm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IEZvcm1hdHNFdmVudFRpbWVSYW5nZVN0YXJ0Rm9ybWF0ID0gZnVuY3Rpb24gRm9ybWF0c0V2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQoKSB7XG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gICAgICBmb3JtYXRzOiB7XG4gICAgICAgIGV2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnaGg6bW0gQScsIGN1bHR1cmUpICsgJyA+PiAnLFxuICAgICAgfSxcbiAgICB9KSxcbiAgICBbXVxuICApXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxuICAgICAgICBzaG93TXVsdGlEYXlUaW1lc1xuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtGb3JtYXRzRXZlbnRUaW1lUmFuZ2VTdGFydEZvcm1hdC5zdG9yeU5hbWUgPSAnZm9ybWF0cy5ldmVudFRpbWVSYW5nZVN0YXJ0Rm9ybWF0J1xuXG5cblxuRm9ybWF0c0V2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIEZvcm1hdHNFdmVudFRpbWVSYW5nZVN0YXJ0Rm9ybWF0KCkge1xcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIGV2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ2hoOm1tIEEnLCBjdWx0dXJlKSArICcgPj4gJyxcXG4gICAgICB9LFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgc2hvd011bHRpRGF5VGltZXNcXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uRm9ybWF0c0V2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImZvcm1hdHNtb250aGhlYWRlcmZvcm1hdFwiXG4gICAgfX0+e2Bmb3JtYXRzLm1vbnRoSGVhZGVyRm9ybWF0YH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoZGF0ZTogRGF0ZSwgY3VsdHVyZTogP3N0cmluZywgbG9jYWxpemVyOiBEYXRlTG9jYWxpemVyKSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BUb29sYmFyIGhlYWRlciBmb3JtYXQgZm9yIHRoZSBNb250aCB2aWV3LCBlLmcgXCIyMDE1IEFwcmlsXCJgfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLWZvcm1hdHMtbW9udGgtaGVhZGVyLWZvcm1hdFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vZm9ybWF0c01vbnRoSGVhZGVyRm9ybWF0Lm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gRm9ybWF0c01vbnRoSGVhZGVyRm9ybWF0KCkge1xcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMSksXFxuICAgICAgZm9ybWF0czoge1xcbiAgICAgICAgbW9udGhIZWFkZXJGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgYE1NTU0gWyddWVlgLCBjdWx0dXJlKSxcXG4gICAgICB9LFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuRm9ybWF0c01vbnRoSGVhZGVyRm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLm1vbnRoSGVhZGVyRm9ybWF0J1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJGb3JtYXRzTW9udGhIZWFkZXJGb3JtYXRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo0MX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQxfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vZm9ybWF0c01vbnRoSGVhZGVyRm9ybWF0Lm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IEZvcm1hdHNNb250aEhlYWRlckZvcm1hdCA9IGZ1bmN0aW9uIEZvcm1hdHNNb250aEhlYWRlckZvcm1hdCgpIHtcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cyB9ID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEpLFxuICAgICAgZm9ybWF0czoge1xuICAgICAgICBtb250aEhlYWRlckZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsIGBNTU1NIFsnXVlZYCwgY3VsdHVyZSksXG4gICAgICB9LFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gIClcbn07Rm9ybWF0c01vbnRoSGVhZGVyRm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLm1vbnRoSGVhZGVyRm9ybWF0J1xuXG5cblxuRm9ybWF0c01vbnRoSGVhZGVyRm9ybWF0LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBGb3JtYXRzTW9udGhIZWFkZXJGb3JtYXQoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcXG4gICAgICBmb3JtYXRzOiB7XFxuICAgICAgICBtb250aEhlYWRlckZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCBgTU1NTSBbJ11ZWWAsIGN1bHR1cmUpLFxcbiAgICAgIH0sXFxuICAgIH0pLFxcbiAgICBbXVxcbiAgKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5Gb3JtYXRzTW9udGhIZWFkZXJGb3JtYXQucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImZvcm1hdHNzZWxlY3RyYW5nZWZvcm1hdFwiXG4gICAgfX0+e2Bmb3JtYXRzLnNlbGVjdFJhbmdlRm9ybWF0YH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAocmFuZ2U6IE9iamVjdCB7c3RhcnQ6IERhdGUsIGVuZDogRGF0ZX0sIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogRGF0ZUxvY2FsaXplcikgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQSB0aW1lIHJhbmdlIGZvcm1hdCBzaG93biBpbiB0aGUgaGlnaGxpZ2h0ZWQgYXJlYSB3aGVuIHNlbGVjdGluZyB0aW1lIHNsb3RzLCBlLmcgXCIwODowMCBhbSDigJQgMTI6MDAgcG1cImB9PC9wPlxuICAgIDxDYW52YXMgbWR4VHlwZT1cIkNhbnZhc1wiPlxuICA8U3RvcnkgaWQ9XCJwcm9wcy0tZm9ybWF0cy1zZWxlY3QtcmFuZ2UtZm9ybWF0XCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L0NhbnZhcz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vZm9ybWF0c1NlbGVjdFJhbmdlRm9ybWF0Lm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gRm9ybWF0c1NlbGVjdFJhbmdlRm9ybWF0KCkge1xcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cywgdmlld3MgfSA9IHVzZU1lbW8oXFxuICAgICgpID0+ICh7XFxuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcXG4gICAgICBmb3JtYXRzOiB7XFxuICAgICAgICBzZWxlY3RSYW5nZUZvcm1hdDogKHsgc3RhcnQsIGVuZCB9LCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoc3RhcnQsICdoaDptbSBhJywgY3VsdHVyZSkgK1xcbiAgICAgICAgICAnIC0gJyArXFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZW5kLCAnaGg6bW0gYScsIGN1bHR1cmUpLFxcbiAgICAgIH0sXFxuICAgICAgdmlld3M6IFtWaWV3cy5XRUVLLCBWaWV3cy5EQVldLFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgc2VsZWN0YWJsZVxcbiAgICAgICAgdmlld3M9e3ZpZXdzfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5Gb3JtYXRzU2VsZWN0UmFuZ2VGb3JtYXQuc3RvcnlOYW1lID0gJ2Zvcm1hdHMuc2VsZWN0UmFuZ2VGb3JtYXQnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkZvcm1hdHNTZWxlY3RSYW5nZUZvcm1hdFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQ3fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6NDd9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vZm9ybWF0c1NlbGVjdFJhbmdlRm9ybWF0Lm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IEZvcm1hdHNTZWxlY3RSYW5nZUZvcm1hdCA9IGZ1bmN0aW9uIEZvcm1hdHNTZWxlY3RSYW5nZUZvcm1hdCgpIHtcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cywgdmlld3MgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gICAgICBmb3JtYXRzOiB7XG4gICAgICAgIHNlbGVjdFJhbmdlRm9ybWF0OiAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KHN0YXJ0LCAnaGg6bW0gYScsIGN1bHR1cmUpICtcbiAgICAgICAgICAnIC0gJyArXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChlbmQsICdoaDptbSBhJywgY3VsdHVyZSksXG4gICAgICB9LFxuICAgICAgdmlld3M6IFtWaWV3cy5XRUVLLCBWaWV3cy5EQVldLFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XG4gICAgICAgIHNlbGVjdGFibGVcbiAgICAgICAgdmlld3M9e3ZpZXdzfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtGb3JtYXRzU2VsZWN0UmFuZ2VGb3JtYXQuc3RvcnlOYW1lID0gJ2Zvcm1hdHMuc2VsZWN0UmFuZ2VGb3JtYXQnXG5cblxuXG5Gb3JtYXRzU2VsZWN0UmFuZ2VGb3JtYXQucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIEZvcm1hdHNTZWxlY3RSYW5nZUZvcm1hdCgpIHtcXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMsIHZpZXdzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICAgICAgZm9ybWF0czoge1xcbiAgICAgICAgc2VsZWN0UmFuZ2VGb3JtYXQ6ICh7IHN0YXJ0LCBlbmQgfSwgY3VsdHVyZSwgbG9jYWxpemVyKSA9PlxcbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KHN0YXJ0LCAnaGg6bW0gYScsIGN1bHR1cmUpICtcXG4gICAgICAgICAgJyAtICcgK1xcbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGVuZCwgJ2hoOm1tIGEnLCBjdWx0dXJlKSxcXG4gICAgICB9LFxcbiAgICAgIHZpZXdzOiBbVmlld3MuV0VFSywgVmlld3MuREFZXSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIHNlbGVjdGFibGVcXG4gICAgICAgIHZpZXdzPXt2aWV3c31cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uRm9ybWF0c1NlbGVjdFJhbmdlRm9ybWF0LnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJmb3JtYXRzdGltZWd1dHRlcmZvcm1hdFwiXG4gICAgfX0+e2Bmb3JtYXRzLnRpbWVHdXR0ZXJGb3JtYXRgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChkYXRlOiBEYXRlLCBjdWx0dXJlOiA/c3RyaW5nLCBsb2NhbGl6ZXI6IERhdGVMb2NhbGl6ZXIpID0+IHN0cmluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRoZSB0aW1lc3RhbXAgY2VsbCBmb3JtYXRzIGluIFdlZWsgYW5kIFRpbWUgdmlld3MsIGUuZy4gXCI0OjAwIEFNXCJgfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLWZvcm1hdHMtdGltZS1ndXR0ZXItZm9ybWF0XCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L0NhbnZhcz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vZm9ybWF0c1RpbWVHdXR0ZXJGb3JtYXQubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBGb3JtYXRzVGltZUd1dHRlckZvcm1hdCgpIHtcXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMsIHZpZXdzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICAgICAgZm9ybWF0czoge1xcbiAgICAgICAgdGltZUd1dHRlckZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cXG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnaGg6bW0gYScsIGN1bHR1cmUpLFxcbiAgICAgIH0sXFxuICAgICAgdmlld3M6IFtWaWV3cy5XRUVLLCBWaWV3cy5EQVldLFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBmb3JtYXRzPXtmb3JtYXRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgdmlld3M9e3ZpZXdzfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5Gb3JtYXRzVGltZUd1dHRlckZvcm1hdC5zdG9yeU5hbWUgPSAnZm9ybWF0cy50aW1lR3V0dGVyRm9ybWF0J1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJGb3JtYXRzVGltZUd1dHRlckZvcm1hdFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQ0fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6NDR9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vZm9ybWF0c1RpbWVHdXR0ZXJGb3JtYXQubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5leHBvcnQgY29uc3QgRm9ybWF0c1RpbWVHdXR0ZXJGb3JtYXQgPSBmdW5jdGlvbiBGb3JtYXRzVGltZUd1dHRlckZvcm1hdCgpIHtcbiAgY29uc3QgeyBkZWZhdWx0RGF0ZSwgZm9ybWF0cywgdmlld3MgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gICAgICBmb3JtYXRzOiB7XG4gICAgICAgIHRpbWVHdXR0ZXJGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XG4gICAgICAgICAgbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnaGg6bW0gYScsIGN1bHR1cmUpLFxuICAgICAgfSxcbiAgICAgIHZpZXdzOiBbVmlld3MuV0VFSywgVmlld3MuREFZXSxcbiAgICB9KSxcbiAgICBbXVxuICApXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxuICAgICAgICB2aWV3cz17dmlld3N9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59O0Zvcm1hdHNUaW1lR3V0dGVyRm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLnRpbWVHdXR0ZXJGb3JtYXQnXG5cblxuXG5Gb3JtYXRzVGltZUd1dHRlckZvcm1hdC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gRm9ybWF0c1RpbWVHdXR0ZXJGb3JtYXQoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzLCB2aWV3cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIHRpbWVHdXR0ZXJGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ2hoOm1tIGEnLCBjdWx0dXJlKSxcXG4gICAgICB9LFxcbiAgICAgIHZpZXdzOiBbVmlld3MuV0VFSywgVmlld3MuREFZXSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIHZpZXdzPXt2aWV3c31cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uRm9ybWF0c1RpbWVHdXR0ZXJGb3JtYXQucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImZvcm1hdHN3ZWVrZGF5Zm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMud2Vla2RheUZvcm1hdGB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGRhdGU6IERhdGUsIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogRGF0ZUxvY2FsaXplcikgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgV2VlayBkYXkgbmFtZSBmb3JtYXQgZm9yIHRoZSBNb250aCB3ZWVrIGRheSBoZWFkaW5ncywgZS5nOiBcIlN1blwiLCBcIk1vblwiLCBcIlR1ZVwiLCBldGNgfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLWZvcm1hdHMtd2Vla2RheS1mb3JtYXRcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvQ2FudmFzPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNXZWVrZGF5Rm9ybWF0Lm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gRm9ybWF0c1dlZWtkYXlGb3JtYXQoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBmb3JtYXRzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcXG4gICAgICBmb3JtYXRzOiB7XFxuICAgICAgICB3ZWVrZGF5Rm9ybWF0OiAoZGF0ZSwgY3VsdHVyZSwgbG9jYWxpemVyKSA9PlxcbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdkZGRkJywgY3VsdHVyZSksXFxuICAgICAgfSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVxcbkZvcm1hdHNXZWVrZGF5Rm9ybWF0LnN0b3J5TmFtZSA9ICdmb3JtYXRzLndlZWtkYXlGb3JtYXQnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkZvcm1hdHNXZWVrZGF5Rm9ybWF0XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6NDF9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjo0MX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2Zvcm1hdHNXZWVrZGF5Rm9ybWF0Lm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IEZvcm1hdHNXZWVrZGF5Rm9ybWF0ID0gZnVuY3Rpb24gRm9ybWF0c1dlZWtkYXlGb3JtYXQoKSB7XG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSxcbiAgICAgIGZvcm1hdHM6IHtcbiAgICAgICAgd2Vla2RheUZvcm1hdDogKGRhdGUsIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cbiAgICAgICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdkZGRkJywgY3VsdHVyZSksXG4gICAgICB9LFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGZvcm1hdHM9e2Zvcm1hdHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gIClcbn07Rm9ybWF0c1dlZWtkYXlGb3JtYXQuc3RvcnlOYW1lID0gJ2Zvcm1hdHMud2Vla2RheUZvcm1hdCdcblxuXG5cbkZvcm1hdHNXZWVrZGF5Rm9ybWF0LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBGb3JtYXRzV2Vla2RheUZvcm1hdCgpIHtcXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIGZvcm1hdHMgfSA9IHVzZU1lbW8oXFxuICAgICgpID0+ICh7XFxuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEpLFxcbiAgICAgIGZvcm1hdHM6IHtcXG4gICAgICAgIHdlZWtkYXlGb3JtYXQ6IChkYXRlLCBjdWx0dXJlLCBsb2NhbGl6ZXIpID0+XFxuICAgICAgICAgIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ2RkZGQnLCBjdWx0dXJlKSxcXG4gICAgICB9LFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgZm9ybWF0cz17Zm9ybWF0c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uRm9ybWF0c1dlZWtkYXlGb3JtYXQucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImdldGRyaWxsZG93bnZpZXdcIlxuICAgIH19PntgZ2V0RHJpbGxkb3duVmlld2B9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKHRhcmdldERhdGU6IERhdGUsIGN1cnJlbnRWaWV3TmFtZTogc3RyaW5nLCBjb25maWd1cmVkVmlld05hbWVzOiBWaWV3c1tdKSA9PiBzdHJpbmd8bnVsbGB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEZ1bmN0aW9uYWxseSBlcXVpdmFsZW50IHRvIGRyaWxsZG93blZpZXcsIGJ1dCBhY2NlcHRzIGEgZnVuY3Rpb24gdGhhdCBjYW4gcmV0dXJuIGEgdmlldyBuYW1lLiBJdCdzIHVzZWZ1bCBmb3IgY3VzdG9taXppbmcgdGhlIGRyaWxsLWRvd24gYWN0aW9ucyBkZXBlbmRpbmcgb24gdGhlIHRhcmdldCBkYXRlIGFuZCB0cmlnZ2VyaW5nIHZpZXcuYH08L3A+XG4gICAgPHA+e2BSZXR1cm4gbnVsbCB0byBkaXNhYmxlIGRyaWxsLWRvd24gYWN0aW9ucy5gfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLWdldC1kcmlsbGRvd24tdmlld1wiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2dldERyaWxsZG93blZpZXcubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBHZXREcmlsbGRvd25WaWV3KCkge1xcbiAgY29uc3QgZ2V0RHJpbGxkb3duVmlldyA9IHVzZUNhbGxiYWNrKFxcbiAgICAodGFyZ2V0RGF0ZSwgY3VycmVudFZpZXdOYW1lLCBjb25maWd1cmVkVmlld05hbWVzKSA9PiB7XFxuICAgICAgaWYgKGN1cnJlbnRWaWV3TmFtZSA9PT0gJ21vbnRoJyAmJiBjb25maWd1cmVkVmlld05hbWVzLmluY2x1ZGVzKCd3ZWVrJykpXFxuICAgICAgICByZXR1cm4gJ3dlZWsnXFxuXFxuICAgICAgcmV0dXJuIG51bGxcXG4gICAgfSxcXG4gICAgW11cXG4gIClcXG5cXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSwgW10pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGdldERyaWxsZG93blZpZXc9e2dldERyaWxsZG93blZpZXd9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVxcbkdldERyaWxsZG93blZpZXcuc3RvcnlOYW1lID0gJ2dldERyaWxsZG93blZpZXcnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkdldERyaWxsZG93blZpZXdcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo0Mn0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQyfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2dldERyaWxsZG93blZpZXcubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5leHBvcnQgY29uc3QgR2V0RHJpbGxkb3duVmlldyA9IGZ1bmN0aW9uIEdldERyaWxsZG93blZpZXcoKSB7XG4gIGNvbnN0IGdldERyaWxsZG93blZpZXcgPSB1c2VDYWxsYmFjayhcbiAgICAodGFyZ2V0RGF0ZSwgY3VycmVudFZpZXdOYW1lLCBjb25maWd1cmVkVmlld05hbWVzKSA9PiB7XG4gICAgICBpZiAoY3VycmVudFZpZXdOYW1lID09PSAnbW9udGgnICYmIGNvbmZpZ3VyZWRWaWV3TmFtZXMuaW5jbHVkZXMoJ3dlZWsnKSlcbiAgICAgICAgcmV0dXJuICd3ZWVrJ1xuXG4gICAgICByZXR1cm4gbnVsbFxuICAgIH0sXG4gICAgW11cbiAgKVxuXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxuICAgICAgICBnZXREcmlsbGRvd25WaWV3PXtnZXREcmlsbGRvd25WaWV3fVxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59O0dldERyaWxsZG93blZpZXcuc3RvcnlOYW1lID0gJ2dldERyaWxsZG93blZpZXcnXG5cblxuXG5HZXREcmlsbGRvd25WaWV3LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBHZXREcmlsbGRvd25WaWV3KCkge1xcbiAgY29uc3QgZ2V0RHJpbGxkb3duVmlldyA9IHVzZUNhbGxiYWNrKFxcbiAgICAodGFyZ2V0RGF0ZSwgY3VycmVudFZpZXdOYW1lLCBjb25maWd1cmVkVmlld05hbWVzKSA9PiB7XFxuICAgICAgaWYgKGN1cnJlbnRWaWV3TmFtZSA9PT0gJ21vbnRoJyAmJiBjb25maWd1cmVkVmlld05hbWVzLmluY2x1ZGVzKCd3ZWVrJykpXFxuICAgICAgICByZXR1cm4gJ3dlZWsnXFxuXFxuICAgICAgcmV0dXJuIG51bGxcXG4gICAgfSxcXG4gICAgW11cXG4gIClcXG5cXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSwgW10pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGdldERyaWxsZG93blZpZXc9e2dldERyaWxsZG93blZpZXd9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVwiIH0sIC4uLkdldERyaWxsZG93blZpZXcucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImdldG5vd1wiXG4gICAgfX0+e2BnZXROb3dgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uICgpID0+IERhdGVgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YCgpID0+IG5ldyBEYXRlKClgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BEZXRlcm1pbmVzIHRoZSBjdXJyZW50IGRhdGUvdGltZSB3aGljaCBpcyBoaWdobGlnaHRlZCBpbiB0aGUgdmlld3MuYH08L3A+XG4gICAgPHA+e2BUaGUgdmFsdWUgYWZmZWN0cyB3aGljaCBkYXkgaXMgc2hhZGVkIGFuZCB3aGljaCB0aW1lIGlzIHNob3duIGFzIHRoZSBjdXJyZW50IHRpbWUuIEl0IGFsc28gYWZmZWN0cyB0aGUgZGF0ZSB1c2VkIGJ5IHRoZSBUb2RheSBidXR0b24gaW4gdGhlIHRvb2xiYXIuYH08L3A+XG4gICAgPHA+e2BQcm92aWRpbmcgYSB2YWx1ZSBoZXJlIGNhbiBiZSB1c2VmdWwgd2hlbiB5b3UgYXJlIGltcGxlbWVudGluZyB0aW1lIHpvbmVzIHVzaW5nIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BzdGFydEFjY2Vzc29yYH08L2lubGluZUNvZGU+e2AgYW5kIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGVuZEFjY2Vzc29yYH08L2lubGluZUNvZGU+e2AgcHJvcGVydGllcy5gfTwvcD5cbiAgICA8U3RvcnkgaWQ9XCJwcm9wcy0tZ2V0LW5vd1wiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9nZXROb3cubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gIH0sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVxcblxcbmNvbnN0IGdldE5vdyA9ICgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEzKVxcblxcbmV4cG9ydCBjb25zdCBHZXROb3cgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcbkdldE5vdy5zdG9yeU5hbWUgPSAnZ2V0Tm93J1xcbkdldE5vdy5hcmdzID0ge1xcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxcbiAgZ2V0Tm93LFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiR2V0Tm93XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyM30sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjI3fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjIzfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjI3fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9nZXROb3cubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuY29uc3QgZ2V0Tm93ID0gKCkgPT4gbmV3IERhdGUoMjAxNSwgMywgMTMpXG5cbmV4cG9ydCBjb25zdCBHZXROb3cgPSBUZW1wbGF0ZS5iaW5kKHt9KTtHZXROb3cuc3RvcnlOYW1lID0gJ2dldE5vdydcbkdldE5vdy5hcmdzID0ge1xuICBldmVudHM6IGRlbW9FdmVudHMsXG4gIGdldE5vdyxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxufVxuXG5cblxuR2V0Tm93LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcIiB9LCAuLi5HZXROb3cucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImxlbmd0aFwiXG4gICAgfX0+e2BsZW5ndGhgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG51bWJlcmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgMzBgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BEZXRlcm1pbmVzIHRoZSBlbmQgZGF0ZSBmcm9tIGRhdGUgcHJvcCBpbiB0aGUgYWdlbmRhIHZpZXcgZGF0ZSBwcm9wICsgbGVuZ3RoIChpbiBudW1iZXIgb2YgZGF5cykgPSBlbmQgZGF0ZS5gfTwvcD5cbiAgICA8U3RvcnkgaWQ9XCJwcm9wcy0tbGVuZ3RoXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9sZW5ndGgubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZGVmYXVsdERhdGU6IHtcXG4gICAgICBjb250cm9sOiB7XFxuICAgICAgICB0eXBlOiBudWxsLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICAgIGRlZmF1bHRWaWV3OiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgICBsZW5ndGg6ICdudW1iZXInLFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IExlbmd0aCA9IFRlbXBsYXRlLmJpbmQoe30pXFxuTGVuZ3RoLnN0b3J5TmFtZSA9ICdsZW5ndGgnXFxuTGVuZ3RoLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLkFHRU5EQSxcXG4gIGV2ZW50czogZGVtb0V2ZW50cyxcXG4gIGxlbmd0aDogMTQsXFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJMZW5ndGhcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjM0fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzh9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzR9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzh9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9sZW5ndGgubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZToge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGRlZmF1bHRWaWV3OiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gICAgbGVuZ3RoOiAnbnVtYmVyJyxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IExlbmd0aCA9IFRlbXBsYXRlLmJpbmQoe30pO0xlbmd0aC5zdG9yeU5hbWUgPSAnbGVuZ3RoJ1xuTGVuZ3RoLmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5BR0VOREEsXG4gIGV2ZW50czogZGVtb0V2ZW50cyxcbiAgbGVuZ3RoOiAxNCxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxufVxuXG5cblxuTGVuZ3RoLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcIiB9LCAuLi5MZW5ndGgucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImxvY2FsaXplclwiXG4gICAgfX0+e2Bsb2NhbGl6ZXJgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGluc3RhbmNlT2YoRGF0ZUxvY2FsaXplcilgfTwvaW5saW5lQ29kZT57YCBgfTxzdHJvbmcgcGFyZW50TmFtZT1cImxpXCI+e2ByZXF1aXJlZGB9PC9zdHJvbmc+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVGhlIGxvY2FsaXplciB1c2VkIGZvciBgfTxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YGZvcm1hdHRpbmcgZGF0ZXNgfTwvc3Ryb25nPntgIGFuZCB0aW1lcyBhY2NvcmRpbmcgdG8gdGhlIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImZvcm1hdHNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2Bmb3JtYXRzYH08L0xpbmtUbz57YCBhbmQgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiY3VsdHVyZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YGN1bHR1cmVgfTwvTGlua1RvPntgLiBUbyBmb3JtYXQgYnV0dG9ucyBhbmQgbWVzc2FnaW5nIHVzZSB0aGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwibWVzc2FnZXNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BtZXNzYWdlc2B9PC9MaW5rVG8+e2AgcHJvcC5gfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgLy8gV2hlbiB1c2luZyBcXGBEYXkuanNcXGBcbmltcG9ydCB7IGRheWpzTG9jYWxpemVyIH0gZnJvbSAncmVhY3QtYmlnLWNhbGVuZGFyJ1xuaW1wb3J0IGRheWpzIGZyb20gJ2RheWpzJ1xuLy8gYW5kLCBmb3Igb3B0aW9uYWwgdGltZSB6b25lIHN1cHBvcnRcbmltcG9ydCB0aW1lem9uZSBmcm9tICdkYXlqcy9wbHVnaW4vdGltZXpvbmUnXG5cbmRheWpzLmV4dGVuZCh0aW1lem9uZSlcbi8vIGVuZCBvcHRpb25hbCB0aW1lIHpvbmUgc3VwcG9ydFxuXG4vLyBOb3RlIHRoYXQgdGhlIGRheWpzTG9jYWxpemVyIGV4dGVuZHMgRGF5LmpzIHdpdGggdGhlIGZvbGxvd2luZyBwbHVnaW5zOlxuLy8gLSBJc0JldHdlZW5cbi8vIC0gSXNTYW1lT3JBZnRlclxuLy8gLSBJc1NhbWVPckJlZm9yZVxuLy8gLSBMb2NhbGVEYXRhXG4vLyAtIExvY2FsaXplZEZvcm1hdFxuLy8gLSBNaW5NYXhcbi8vIC0gVVRDXG5cbmNvbnN0IGxvY2FsaXplciA9IGRheWpzTG9jYWxpemVyKGRheWpzKVxuYH08L2NvZGU+PC9wcmU+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YC8vIFdoZW4gdXNpbmcgXFxgR2xvYmFsaXplXFxgXG5pbXBvcnQgeyBnbG9iYWxpemVMb2NhbGl6ZXIgfSBmcm9tICdyZWFjdC1iaWctY2FsZW5kYXInXG5pbXBvcnQgZ2xvYmFsaXplIGZyb20gJ2dsb2JhbGl6ZSdcblxuY29uc3QgbG9jYWxpemVyID0gZ2xvYmFsaXplTG9jYWxpemVyKGdsb2JhbGl6ZSlcbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxwcmU+PGNvZGUgcGFyZW50TmFtZT1cInByZVwiIHsuLi57XG4gICAgICAgIFwiY2xhc3NOYW1lXCI6IFwibGFuZ3VhZ2UtanNcIlxuICAgICAgfX0+e2AvLyBXaGVuIHVzaW5nIFxcYEx1eG9uXFxgXG5pbXBvcnQgeyBsdXhvbkxvY2FsaXplciB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCB7IERhdGVUaW1lLCBTZXR0aW5ncyB9IGZyb20gJ2x1eG9uJ1xuLy8gb25seSB1c2UgXFxgU2V0dGluZ3NcXGAgaWYgeW91IHJlcXVpcmUgb3B0aW9uYWwgdGltZSB6b25lIHN1cHBvcnRcblNldHRpbmdzLmRlZmF1bHRab25lID0gJ0FtZXJpY2EvTG9zX0FuZ2VsZXMnXG4vLyBlbmQgb3B0aW9uYWwgdGltZSB6b25lIHN1cHBvcnRcblxuLy8gTHV4b24gdXNlcyB0aGUgSW50bCBBUEksIHdoaWNoIGN1cnJlbnRseSBkb2VzIG5vdCBjb250YWluIFxcYHdlZWtJbmZvXFxgXG4vLyB0byBkZXRlcm1pbmUgd2hpY2ggd2Vla2RheSBpcyB0aGUgc3RhcnQgb2YgdGhlIHdlZWsgYnkgXFxgY3VsdHVyZVxcYC5cbi8vIFRoZSBcXGBsdXhvbkxvY2FsaXplclxcYCBkZWZhdWx0cyB0aGlzIHRvIFN1bmRheSwgd2hpY2ggZGlmZmVycyBmcm9tXG4vLyB0aGUgTHV4b24gZGVmYXVsdCBvZiBNb25kYXkuIFRoZSBsb2NhbGl6ZXIgcmVxdWlyZXMgdGhpcyBvcHRpb25cbi8vIHRvIGNoYW5nZSB0aGUgZGlzcGxheSwgYW5kIHRoZSBkYXRlIG1hdGggZm9yIGRldGVybWluaW5nIHRoZVxuLy8gc3RhcnQgb2YgYSB3ZWVrLiBMdXhvbiB1c2VzIG5vbi16ZXJvIGJhc2VkIHZhbHVlcyBmb3IgXFxgd2Vla2RheVxcYC5cbmNvbnN0IGxvY2FsaXplciA9IGx1eG9uTG9jYWxpemVyKERhdGVUaW1lLCB7IGZpcnN0RGF5T2ZXZWVrOiA3IH0pXG5gfTwvY29kZT48L3ByZT5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgLy8gV2hlbiB1c2luZyBcXGBtb21lbnRcXGBcbmltcG9ydCB7IG1vbWVudExvY2FsaXplciB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuLy8gYW5kLCBmb3Igb3B0aW9uYWwgdGltZSB6b25lIHN1cHBvcnRcbmltcG9ydCAnbW9tZW50LXRpbWV6b25lJ1xuXG5tb21lbnQudHouc2V0RGVmYXVsdCgnQW1lcmljYS9Mb3NfQW5nZWxlcycpXG4vLyBlbmQgb3B0aW9uYWwgdGltZSB6b25lIHN1cHBvcnRcblxuY29uc3QgbG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxwPntgU2VlIHRoZSBgfTxMaW5rVG8ga2luZD1cImV4YW1wbGVzXCIgc3Rvcnk9XCJleGFtcGxlLTVcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BMb2NhbGl6YXRpb24gRXhhbXBsZWB9PC9MaW5rVG8+e2AgZm9yIGFub3RoZXIgZXhhbXBsZSBvZiBjb21iaW5pbmcgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgcnRsYH08L2lubGluZUNvZGU+e2AsIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGxvY2FsaXplcmB9PC9pbmxpbmVDb2RlPntgLCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BjdWx0dXJlYH08L2lubGluZUNvZGU+e2AgYW5kIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG1lc3NhZ2VzYH08L2lubGluZUNvZGU+e2AuYH08L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1sb2NhbGl6ZXJcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvQ2FudmFzPlxuICAgIDxoMiB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm1vcmUtaW5mb3JtYXRpb25cIlxuICAgIH19PntgTW9yZSBJbmZvcm1hdGlvbmB9PC9oMj5cbiAgICA8cD57YFRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2Bsb2NhbGl6ZXJgfTwvaW5saW5lQ29kZT57YCBjYW4gYmUgdXNlZCBmb3IgZGF0ZSBtYXRoIGluIGEgbnVtYmVyIG9mIHdheXMuIExvb2sgYXQgdGhlIGB9PExpbmtUbyBraW5kPVwiZ3VpZGVzLWxvY2FsaXplcnNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BMb2NhbGl6ZXIgR3VpZGVgfTwvTGlua1RvPntgIGZvciBtb3JlIGluZm9ybWF0aW9uLmB9PC9wPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL2xvY2FsaXplci5tZHgnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG4gIGRlY29yYXRvcnM6IFtcXG4gICAgKFN0b3J5KSA9PiAoXFxuICAgICAgPGRpdiBzdHlsZT17eyBoZWlnaHQ6IDgwMCB9fT5cXG4gICAgICAgIDxTdG9yeSAvPlxcbiAgICAgIDwvZGl2PlxcbiAgICApLFxcbiAgXSxcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIExvY2FsaXplcigpIHtcXG4gIGNvbnN0IGxvY2FsaXplciA9IHVzZU1lbW8oKCkgPT4gbW9tZW50TG9jYWxpemVyKG1vbWVudCksIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17bmV3IERhdGUoMjAxNSwgMywgMTMpfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVxcbkxvY2FsaXplci5zdG9yeU5hbWUgPSAnbG9jYWxpemVyIConXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkxvY2FsaXplclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoyNH0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjM2fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MjR9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MzZ9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9sb2NhbGl6ZXIubWR4J1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG4gIGRlY29yYXRvcnM6IFtcbiAgICAoU3RvcnkpID0+IChcbiAgICAgIDxkaXYgc3R5bGU9e3sgaGVpZ2h0OiA4MDAgfX0+XG4gICAgICAgIDxTdG9yeSAvPlxuICAgICAgPC9kaXY+XG4gICAgKSxcbiAgXSxcbn1cblxuZXhwb3J0IGNvbnN0IExvY2FsaXplciA9IGZ1bmN0aW9uIExvY2FsaXplcigpIHtcbiAgY29uc3QgbG9jYWxpemVyID0gdXNlTWVtbygoKSA9PiBtb21lbnRMb2NhbGl6ZXIobW9tZW50KSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRlZmF1bHREYXRlPXtuZXcgRGF0ZSgyMDE1LCAzLCAxMyl9XG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cbiAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59O0xvY2FsaXplci5zdG9yeU5hbWUgPSAnbG9jYWxpemVyIConXG5cblxuXG5Mb2NhbGl6ZXIucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIExvY2FsaXplcigpIHtcXG4gIGNvbnN0IGxvY2FsaXplciA9IHVzZU1lbW8oKCkgPT4gbW9tZW50TG9jYWxpemVyKG1vbWVudCksIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17bmV3IERhdGUoMjAxNSwgMywgMTMpfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVwiIH0sIC4uLkxvY2FsaXplci5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwibG9uZ3ByZXNzdGhyZXNob2xkXCJcbiAgICB9fT57YGxvbmdQcmVzc1RocmVzaG9sZGB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgbnVtYmVyYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2AyNTBgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BTcGVjaWZpZXMgdGhlIG51bWJlciBvZiBtaWxpc2Vjb25kcyB0aGUgdXNlciBtdXN0IHByZXNzIGFuZCBob2xkIG9uIHRoZSBzY3JlZW4gZm9yIGEgdG91Y2ggdG8gYmUgY29uc2lkZXJlZCBhIFwibG9uZyBwcmVzcy5cIiBMb25nIHByZXNzZXMgYXJlIHVzZWQgZm9yIHRpbWUgc2xvdCBzZWxlY3Rpb24gb24gdG91Y2ggZGV2aWNlcy5gfTwvcD5cbiAgICA8U3RvcnkgaWQ9XCJwcm9wcy0tbG9uZy1wcmVzcy10aHJlc2hvbGRcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vbG9uZ1ByZXNzVGhyZXNob2xkLm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBhcmdUeXBlczoge1xcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHREYXRlOiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgICBsb25nUHJlc3NUaHJlc2hvbGQ6ICdudW1iZXInLFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IExvbmdQcmVzc1RocmVzaG9sZCA9IFRlbXBsYXRlLmJpbmQoe30pXFxuTG9uZ1ByZXNzVGhyZXNob2xkLnN0b3J5TmFtZSA9ICdsb25nUHJlc3NUaHJlc2hvbGQnXFxuTG9uZ1ByZXNzVGhyZXNob2xkLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbiAgbG9uZ1ByZXNzVGhyZXNob2xkOiAyNTAsXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJMb25nUHJlc3NUaHJlc2hvbGRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjI5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MzN9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6Mjl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MzN9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL2xvbmdQcmVzc1RocmVzaG9sZC5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHREYXRlOiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gICAgbG9uZ1ByZXNzVGhyZXNob2xkOiAnbnVtYmVyJyxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IExvbmdQcmVzc1RocmVzaG9sZCA9IFRlbXBsYXRlLmJpbmQoe30pO0xvbmdQcmVzc1RocmVzaG9sZC5zdG9yeU5hbWUgPSAnbG9uZ1ByZXNzVGhyZXNob2xkJ1xuTG9uZ1ByZXNzVGhyZXNob2xkLmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gIGV2ZW50czogZGVtb0V2ZW50cyxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxuICBsb25nUHJlc3NUaHJlc2hvbGQ6IDI1MCxcbn1cblxuXG5cbkxvbmdQcmVzc1RocmVzaG9sZC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uTG9uZ1ByZXNzVGhyZXNob2xkLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJtYXhcIlxuICAgIH19PntgbWF4YH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BpbnN0YW5jZU9mKERhdGUpYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BuZXcgRGF0ZSgxOTcyLCAwLCAxLCAyMywgNTksIDU5KWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YENvbnN0cmFpbnMgdGhlIG1heGltdW0gdGltZSBvZiB0aGUgRGF5IGFuZCBXZWVrIHZpZXdzLmB9PC9wPlxuICAgIDxTdG9yeSBpZD1cInByb3BzLS1tYXhcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL21heC5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHREYXRlOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHRWaWV3OiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBtYXg6IHsgY29udHJvbDogeyB0eXBlOiAnZGF0ZScgfSB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IE1heCA9IFRlbXBsYXRlLmJpbmQoe30pXFxuTWF4LnN0b3J5TmFtZSA9ICdtYXgnXFxuTWF4LmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXFxuICBldmVudHM6IGRlbW9FdmVudHMsXFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXFxuICBtYXg6IG5ldyBEYXRlKDE5NzIsIDAsIDEsIDIwLCA1OSwgNTkpLFxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiTWF4XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNn0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjMwfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjI2fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjMwfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vbWF4Lm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIGFyZ1R5cGVzOiB7XG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgZGVmYXVsdERhdGU6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0VmlldzogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIG1heDogeyBjb250cm9sOiB7IHR5cGU6ICdkYXRlJyB9IH0sXG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cbiAgPC9kaXY+XG4pXG5cbmV4cG9ydCBjb25zdCBNYXggPSBUZW1wbGF0ZS5iaW5kKHt9KTtNYXguc3RvcnlOYW1lID0gJ21heCdcbk1heC5hcmdzID0ge1xuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXG4gIG1heDogbmV3IERhdGUoMTk3MiwgMCwgMSwgMjAsIDU5LCA1OSksXG59XG5cblxuXG5NYXgucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLk1heC5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwibWVzc2FnZXNcIlxuICAgIH19PntgbWVzc2FnZXNgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YE9iamVjdGB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFN0cmluZyBtZXNzYWdlcyB1c2VkIHRocm91Z2hvdXQgdGhlIGNvbXBvbmVudCwgb3ZlcnJpZGUgdG8gcHJvdmlkZSBsb2NhbGl6YXRpb25zIGZvciBidXR0b24gdGV4dCwgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgdGl0bGVgfTwvaW5saW5lQ29kZT57YCBhdHRyaWJ1dGVzIGFuZCBtb3JlLmB9PC9wPlxuICAgIDxwPntgZGVmYXVsdHNgfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19Pntge1xuICBkYXRlOiAnRGF0ZScsXG4gIHRpbWU6ICdUaW1lJyxcbiAgZXZlbnQ6ICdFdmVudCcsXG4gIGFsbERheTogJ0FsbCBEYXknLFxuICB3ZWVrOiAnV2VlaycsXG4gIHdvcmtfd2VlazogJ1dvcmsgV2VlaycsXG4gIGRheTogJ0RheScsXG4gIG1vbnRoOiAnTW9udGgnLFxuICBwcmV2aW91czogJ0JhY2snLFxuICBuZXh0OiAnTmV4dCcsXG4gIHllc3RlcmRheTogJ1llc3RlcmRheScsXG4gIHRvbW9ycm93OiAnVG9tb3Jyb3cnLFxuICB0b2RheTogJ1RvZGF5JyxcbiAgYWdlbmRhOiAnQWdlbmRhJyxcblxuICBub0V2ZW50c0luUmFuZ2U6ICdUaGVyZSBhcmUgbm8gZXZlbnRzIGluIHRoaXMgcmFuZ2UuJyxcbiAgLyoqXG4gICAqIHBhcmFtcyB7dG90YWx9IGNvdW50IG9mIHJlbWFpbmluZyBldmVudHMgXG4gICAqIHBhcmFtcyB7cmVtYWluaW5nRXZlbnRzfSByZW1haW5pbmcgZXZlbnRzIFxuICAgKiBwYXJhbXMge2V2ZW50c30gYWxsIGV2ZW50cyBpbiBkYXlcbiAgICovXG4gIHNob3dNb3JlOiAodG90YWwsIHJlbWFpbmluZ0V2ZW50cywgZXZlbnRzKSA9PiBcXGArXFwke3RvdGFsfSBtw6FzXFxgLFxufVxuYH08L2NvZGU+PC9wcmU+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1tZXNzYWdlc1wiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vbWVzc2FnZXMubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBNZXNzYWdlcygpIHtcXG4gIGNvbnN0IHsgZGVmYXVsdERhdGUsIG1lc3NhZ2VzIH0gPSB1c2VNZW1vKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICAgICAgbWVzc2FnZXM6IHtcXG4gICAgICAgIHdlZWs6ICdTZW1hbmEnLFxcbiAgICAgICAgd29ya193ZWVrOiAnU2VtYW5hIGRlIHRyYWJham8nLFxcbiAgICAgICAgZGF5OiAnRMOtYScsXFxuICAgICAgICBtb250aDogJ01lcycsXFxuICAgICAgICBwcmV2aW91czogJ0F0csOhcycsXFxuICAgICAgICBuZXh0OiAnRGVzcHXDqXMnLFxcbiAgICAgICAgdG9kYXk6ICdIb3knLFxcbiAgICAgICAgYWdlbmRhOiAnRWwgRGlhcmlvJyxcXG5cXG4gICAgICAgIHNob3dNb3JlOiAodG90YWwpID0+IGArJHt0b3RhbH0gbcOhc2AsXFxuICAgICAgfSxcXG4gICAgfSksXFxuICAgIFtdXFxuICApXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIG1lc3NhZ2VzPXttZXNzYWdlc31cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuTWVzc2FnZXMuc3RvcnlOYW1lID0gJ21lc3NhZ2VzJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJNZXNzYWdlc1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQ5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6NDl9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9tZXNzYWdlcy5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlcyA9IGZ1bmN0aW9uIE1lc3NhZ2VzKCkge1xuICBjb25zdCB7IGRlZmF1bHREYXRlLCBtZXNzYWdlcyB9ID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcbiAgICAgIG1lc3NhZ2VzOiB7XG4gICAgICAgIHdlZWs6ICdTZW1hbmEnLFxuICAgICAgICB3b3JrX3dlZWs6ICdTZW1hbmEgZGUgdHJhYmFqbycsXG4gICAgICAgIGRheTogJ0TDrWEnLFxuICAgICAgICBtb250aDogJ01lcycsXG4gICAgICAgIHByZXZpb3VzOiAnQXRyw6FzJyxcbiAgICAgICAgbmV4dDogJ0Rlc3B1w6lzJyxcbiAgICAgICAgdG9kYXk6ICdIb3knLFxuICAgICAgICBhZ2VuZGE6ICdFbCBEaWFyaW8nLFxuXG4gICAgICAgIHNob3dNb3JlOiAodG90YWwpID0+IGArJHt0b3RhbH0gbcOhc2AsXG4gICAgICB9LFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgICAgbWVzc2FnZXM9e21lc3NhZ2VzfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtNZXNzYWdlcy5zdG9yeU5hbWUgPSAnbWVzc2FnZXMnXG5cblxuXG5NZXNzYWdlcy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gTWVzc2FnZXMoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCBtZXNzYWdlcyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgICAgIG1lc3NhZ2VzOiB7XFxuICAgICAgICB3ZWVrOiAnU2VtYW5hJyxcXG4gICAgICAgIHdvcmtfd2VlazogJ1NlbWFuYSBkZSB0cmFiYWpvJyxcXG4gICAgICAgIGRheTogJ0TDrWEnLFxcbiAgICAgICAgbW9udGg6ICdNZXMnLFxcbiAgICAgICAgcHJldmlvdXM6ICdBdHLDoXMnLFxcbiAgICAgICAgbmV4dDogJ0Rlc3B1w6lzJyxcXG4gICAgICAgIHRvZGF5OiAnSG95JyxcXG4gICAgICAgIGFnZW5kYTogJ0VsIERpYXJpbycsXFxuXFxuICAgICAgICBzaG93TW9yZTogKHRvdGFsKSA9PiBgKyR7dG90YWx9IG3DoXNgLFxcbiAgICAgIH0sXFxuICAgIH0pLFxcbiAgICBbXVxcbiAgKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBtZXNzYWdlcz17bWVzc2FnZXN9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVwiIH0sIC4uLk1lc3NhZ2VzLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJtaW5cIlxuICAgIH19PntgbWluYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BpbnN0YW5jZU9mKERhdGUpYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BuZXcgRGF0ZSgxOTcyLCAwLCAxLCAwLCAwLCAwLCAwKWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YENvbnN0cmFpbnMgdGhlIG1pbmltdW0gdGltZSBvZiB0aGUgRGF5IGFuZCBXZWVrIHZpZXdzLmB9PC9wPlxuICAgIDxTdG9yeSBpZD1cInByb3BzLS1taW5cIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL21pbi5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHREYXRlOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHRWaWV3OiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBtaW46IHsgY29udHJvbDogeyB0eXBlOiAnZGF0ZScgfSB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IE1pbiA9IFRlbXBsYXRlLmJpbmQoe30pXFxuTWluLnN0b3J5TmFtZSA9ICdtaW4nXFxuTWluLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXFxuICBldmVudHM6IGRlbW9FdmVudHMsXFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXFxuICBtaW46IG5ldyBEYXRlKDE5NzIsIDAsIDEsIDgpLFxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiTWluXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNn0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjMwfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjI2fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjMwfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vbWluLm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIGFyZ1R5cGVzOiB7XG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgZGVmYXVsdERhdGU6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0VmlldzogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIG1pbjogeyBjb250cm9sOiB7IHR5cGU6ICdkYXRlJyB9IH0sXG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cbiAgPC9kaXY+XG4pXG5cbmV4cG9ydCBjb25zdCBNaW4gPSBUZW1wbGF0ZS5iaW5kKHt9KTtNaW4uc3RvcnlOYW1lID0gJ21pbidcbk1pbi5hcmdzID0ge1xuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXG4gIG1pbjogbmV3IERhdGUoMTk3MiwgMCwgMSwgOCksXG59XG5cblxuXG5NaW4ucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLk1pbi5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwib25kb3VibGVjbGlja2V2ZW50XCJcbiAgICB9fT57YG9uRG91YmxlQ2xpY2tFdmVudGB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGV2ZW50OiBPYmplY3QpID0+IGFueWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YENhbGxiYWNrIGZpcmVkIHdoZW4gYSBjYWxlbmRhciBldmVudCBpcyBjbGlja2VkIHR3aWNlLiAoaS5lLjogYW4gYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25Eb3VibGVDbGlja2B9PC9pbmxpbmVDb2RlPntgIGhhbmRsZXIpLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YE5vdGU6YH08L3N0cm9uZz57YCBUaGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwic2VsZWN0YWJsZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YHNlbGVjdGFibGVgfTwvTGlua1RvPntgIHByb3AgaXMgYH08ZW0gcGFyZW50TmFtZT1cInBcIj57YG5vdGB9PC9lbT57YCByZXF1aXJlZCBmb3IgdGhpcyBwcm9wIHRvIGZ1bmN0aW9uLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YEltcG9ydGFudDpgfTwvc3Ryb25nPntgIFRoZSBldmVudCBwYXNzZWQgaW50byB0aGUgZnVuY3Rpb24gaXMgdGhlIENhbGVuZGFyIEV2ZW50LCBub3QgdGhlIFN5bnRoZXRpY0V2ZW50IGV4cGVjdGVkIGJ5IG1vc3QgY2xpY2sgaGFuZGxlcnMuYH08L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1vbi1kb3VibGUtY2xpY2stZXZlbnRcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvQ2FudmFzPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZUVmZmVjdCwgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vb25Eb3VibGVDbGlja0V2ZW50Lm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5mdW5jdGlvbiBidWlsZE1lc3NhZ2UoY2FsRXZlbnQsIGV2ZW50TmFtZSkge1xcbiAgcmV0dXJuIGBbJHtldmVudE5hbWV9XSBhbiAnZXZlbnQnIHNlbGVjdGlvbiB3YXMgbWFkZSB3aXRoOlxcbiAgJHtKU09OLnN0cmluZ2lmeShjYWxFdmVudCwgbnVsbCwgMil9YFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gT25Eb3VibGVDbGlja0V2ZW50KCkge1xcbiAgY29uc3QgY2xpY2tSZWYgPSB1c2VSZWYobnVsbClcXG5cXG4gIHVzZUVmZmVjdCgoKSA9PiB7XFxuICAgIC8qKlxcbiAgICAgKiBXaGF0IElzIFRoaXM/XFxuICAgICAqIFRoaXMgaXMgdG8gcHJldmVudCBhIG1lbW9yeSBsZWFrLCBpbiB0aGUgb2ZmIGNoYW5jZSB0aGF0IHlvdVxcbiAgICAgKiB0ZWFyZG93biB5b3VyIGludGVyZmFjZSBwcmlvciB0byB0aGUgdGltZWQgbWV0aG9kIGJlaW5nIGNhbGxlZC5cXG4gICAgICovXFxuICAgIHJldHVybiAoKSA9PiB7XFxuICAgICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcXG4gICAgfVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBvblNlbGVjdEV2ZW50ID0gdXNlQ2FsbGJhY2soKGNhbEV2ZW50KSA9PiB7XFxuICAgIC8qKlxcbiAgICAgKiBIZXJlIHdlIGFyZSB3YWl0aW5nIDI1MCBtaWxsaXNlY29uZHMgKHVzZSB3aGF0IHlvdSB3YW50KSBwcmlvciB0byBmaXJpbmdcXG4gICAgICogb3VyIG1ldGhvZC4gV2h5PyBCZWNhdXNlIGJvdGggJ2NsaWNrJyBhbmQgJ2RvdWJsZUNsaWNrJ1xcbiAgICAgKiB3b3VsZCBmaXJlLCBpbiB0aGUgZXZlbnQgb2YgYSAnZG91YmxlQ2xpY2snLiBCeSBkb2luZ1xcbiAgICAgKiB0aGlzLCB0aGUgJ2NsaWNrJyBoYW5kbGVyIGlzIG92ZXJyaWRkZW4gYnkgdGhlICdkb3VibGVDbGljaydcXG4gICAgICogYWN0aW9uLlxcbiAgICAgKi9cXG4gICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcXG4gICAgY2xpY2tSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcXG4gICAgICB3aW5kb3cuYWxlcnQoYnVpbGRNZXNzYWdlKGNhbEV2ZW50LCAnb25TZWxlY3RFdmVudCcpKVxcbiAgICB9LCAyNTApXFxuICB9LCBbXSlcXG5cXG4gIGNvbnN0IG9uRG91YmxlQ2xpY2tFdmVudCA9IHVzZUNhbGxiYWNrKChjYWxFdmVudCkgPT4ge1xcbiAgICAvKipcXG4gICAgICogTm90aWNlIG91ciB1c2Ugb2YgdGhlIHNhbWUgcmVmIGFzIGFib3ZlLlxcbiAgICAgKi9cXG4gICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcXG4gICAgY2xpY2tSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcXG4gICAgICB3aW5kb3cuYWxlcnQoYnVpbGRNZXNzYWdlKGNhbEV2ZW50LCAnb25Eb3VibGVDbGlja0V2ZW50JykpXFxuICAgIH0sIDI1MClcXG4gIH0sIFtdKVxcblxcbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEpLCBbXSlcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgb25Eb3VibGVDbGlja0V2ZW50PXtvbkRvdWJsZUNsaWNrRXZlbnR9XFxuICAgICAgICBvblNlbGVjdEV2ZW50PXtvblNlbGVjdEV2ZW50fVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5PbkRvdWJsZUNsaWNrRXZlbnQuc3RvcnlOYW1lID0gJ29uRG91YmxlQ2xpY2tFdmVudCdcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiT25Eb3VibGVDbGlja0V2ZW50XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjI0fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6NzV9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoyNH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjo3NX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VFZmZlY3QsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vb25Eb3VibGVDbGlja0V2ZW50Lm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZnVuY3Rpb24gYnVpbGRNZXNzYWdlKGNhbEV2ZW50LCBldmVudE5hbWUpIHtcbiAgcmV0dXJuIGBbJHtldmVudE5hbWV9XSBhbiAnZXZlbnQnIHNlbGVjdGlvbiB3YXMgbWFkZSB3aXRoOlxuICAke0pTT04uc3RyaW5naWZ5KGNhbEV2ZW50LCBudWxsLCAyKX1gXG59XG5cbmV4cG9ydCBjb25zdCBPbkRvdWJsZUNsaWNrRXZlbnQgPSBmdW5jdGlvbiBPbkRvdWJsZUNsaWNrRXZlbnQoKSB7XG4gIGNvbnN0IGNsaWNrUmVmID0gdXNlUmVmKG51bGwpXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvKipcbiAgICAgKiBXaGF0IElzIFRoaXM/XG4gICAgICogVGhpcyBpcyB0byBwcmV2ZW50IGEgbWVtb3J5IGxlYWssIGluIHRoZSBvZmYgY2hhbmNlIHRoYXQgeW91XG4gICAgICogdGVhcmRvd24geW91ciBpbnRlcmZhY2UgcHJpb3IgdG8gdGhlIHRpbWVkIG1ldGhvZCBiZWluZyBjYWxsZWQuXG4gICAgICovXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXG4gICAgfVxuICB9LCBbXSlcblxuICBjb25zdCBvblNlbGVjdEV2ZW50ID0gdXNlQ2FsbGJhY2soKGNhbEV2ZW50KSA9PiB7XG4gICAgLyoqXG4gICAgICogSGVyZSB3ZSBhcmUgd2FpdGluZyAyNTAgbWlsbGlzZWNvbmRzICh1c2Ugd2hhdCB5b3Ugd2FudCkgcHJpb3IgdG8gZmlyaW5nXG4gICAgICogb3VyIG1ldGhvZC4gV2h5PyBCZWNhdXNlIGJvdGggJ2NsaWNrJyBhbmQgJ2RvdWJsZUNsaWNrJ1xuICAgICAqIHdvdWxkIGZpcmUsIGluIHRoZSBldmVudCBvZiBhICdkb3VibGVDbGljaycuIEJ5IGRvaW5nXG4gICAgICogdGhpcywgdGhlICdjbGljaycgaGFuZGxlciBpcyBvdmVycmlkZGVuIGJ5IHRoZSAnZG91YmxlQ2xpY2snXG4gICAgICogYWN0aW9uLlxuICAgICAqL1xuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXG4gICAgY2xpY2tSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2UoY2FsRXZlbnQsICdvblNlbGVjdEV2ZW50JykpXG4gICAgfSwgMjUwKVxuICB9LCBbXSlcblxuICBjb25zdCBvbkRvdWJsZUNsaWNrRXZlbnQgPSB1c2VDYWxsYmFjaygoY2FsRXZlbnQpID0+IHtcbiAgICAvKipcbiAgICAgKiBOb3RpY2Ugb3VyIHVzZSBvZiB0aGUgc2FtZSByZWYgYXMgYWJvdmUuXG4gICAgICovXG4gICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcbiAgICBjbGlja1JlZi5jdXJyZW50ID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgd2luZG93LmFsZXJ0KGJ1aWxkTWVzc2FnZShjYWxFdmVudCwgJ29uRG91YmxlQ2xpY2tFdmVudCcpKVxuICAgIH0sIDI1MClcbiAgfSwgW10pXG5cbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEpLCBbXSlcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgICAgb25Eb3VibGVDbGlja0V2ZW50PXtvbkRvdWJsZUNsaWNrRXZlbnR9XG4gICAgICAgIG9uU2VsZWN0RXZlbnQ9e29uU2VsZWN0RXZlbnR9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59O09uRG91YmxlQ2xpY2tFdmVudC5zdG9yeU5hbWUgPSAnb25Eb3VibGVDbGlja0V2ZW50J1xuXG5cblxuT25Eb3VibGVDbGlja0V2ZW50LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBPbkRvdWJsZUNsaWNrRXZlbnQoKSB7XFxuICBjb25zdCBjbGlja1JlZiA9IHVzZVJlZihudWxsKVxcblxcbiAgdXNlRWZmZWN0KCgpID0+IHtcXG4gICAgLyoqXFxuICAgICAqIFdoYXQgSXMgVGhpcz9cXG4gICAgICogVGhpcyBpcyB0byBwcmV2ZW50IGEgbWVtb3J5IGxlYWssIGluIHRoZSBvZmYgY2hhbmNlIHRoYXQgeW91XFxuICAgICAqIHRlYXJkb3duIHlvdXIgaW50ZXJmYWNlIHByaW9yIHRvIHRoZSB0aW1lZCBtZXRob2QgYmVpbmcgY2FsbGVkLlxcbiAgICAgKi9cXG4gICAgcmV0dXJuICgpID0+IHtcXG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxcbiAgICB9XFxuICB9LCBbXSlcXG5cXG4gIGNvbnN0IG9uU2VsZWN0RXZlbnQgPSB1c2VDYWxsYmFjaygoY2FsRXZlbnQpID0+IHtcXG4gICAgLyoqXFxuICAgICAqIEhlcmUgd2UgYXJlIHdhaXRpbmcgMjUwIG1pbGxpc2Vjb25kcyAodXNlIHdoYXQgeW91IHdhbnQpIHByaW9yIHRvIGZpcmluZ1xcbiAgICAgKiBvdXIgbWV0aG9kLiBXaHk/IEJlY2F1c2UgYm90aCAnY2xpY2snIGFuZCAnZG91YmxlQ2xpY2snXFxuICAgICAqIHdvdWxkIGZpcmUsIGluIHRoZSBldmVudCBvZiBhICdkb3VibGVDbGljaycuIEJ5IGRvaW5nXFxuICAgICAqIHRoaXMsIHRoZSAnY2xpY2snIGhhbmRsZXIgaXMgb3ZlcnJpZGRlbiBieSB0aGUgJ2RvdWJsZUNsaWNrJ1xcbiAgICAgKiBhY3Rpb24uXFxuICAgICAqL1xcbiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxcbiAgICBjbGlja1JlZi5jdXJyZW50ID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xcbiAgICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2UoY2FsRXZlbnQsICdvblNlbGVjdEV2ZW50JykpXFxuICAgIH0sIDI1MClcXG4gIH0sIFtdKVxcblxcbiAgY29uc3Qgb25Eb3VibGVDbGlja0V2ZW50ID0gdXNlQ2FsbGJhY2soKGNhbEV2ZW50KSA9PiB7XFxuICAgIC8qKlxcbiAgICAgKiBOb3RpY2Ugb3VyIHVzZSBvZiB0aGUgc2FtZSByZWYgYXMgYWJvdmUuXFxuICAgICAqL1xcbiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxcbiAgICBjbGlja1JlZi5jdXJyZW50ID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xcbiAgICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2UoY2FsRXZlbnQsICdvbkRvdWJsZUNsaWNrRXZlbnQnKSlcXG4gICAgfSwgMjUwKVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBkZWZhdWx0RGF0ZSA9IHVzZU1lbW8oKCkgPT4gbmV3IERhdGUoMjAxNSwgMywgMSksIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvbkRvdWJsZUNsaWNrRXZlbnQ9e29uRG91YmxlQ2xpY2tFdmVudH1cXG4gICAgICAgIG9uU2VsZWN0RXZlbnQ9e29uU2VsZWN0RXZlbnR9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVwiIH0sIC4uLk9uRG91YmxlQ2xpY2tFdmVudC5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwib25kcmlsbGRvd25cIlxuICAgIH19Pntgb25EcmlsbERvd25gfTwvaDE+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1vbi1kcmlsbC1kb3duXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L0NhbnZhcz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGRhdGU6IERhdGUpID0+IC8vIGRvIHNvbWV0aGluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YENhbGxiYWNrIGZpcmVkIHdoZW4gZGF0ZSBoZWFkZXIsIG9yIHRoZSB0cnVuY2F0ZWQgZXZlbnQgbGlua3MgYXJlIGNsaWNrZWQuIFdoZW4gaW5jbHVkZWQsIGl0IHdpbGwgb3ZlcnJpZGUgdGhlIGRlZmF1bHQgZHJpbGxkb3duIGJlaGF2aW9yLmB9PC9wPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL29uRHJpbGxEb3duLm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gT25EcmlsbERvd24oKSB7XFxuICBjb25zdCBbdmlldywgc2V0Vmlld10gPSB1c2VTdGF0ZShWaWV3cy5NT05USClcXG4gIGNvbnN0IFtkYXRlLCBzZXREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKDIwMTUsIDMsIDEzKSlcXG4gIGNvbnN0IG9uTmF2aWdhdGUgPSB1c2VDYWxsYmFjaygobmV3RGF0ZSkgPT4gc2V0RGF0ZShuZXdEYXRlKSwgW3NldERhdGVdKVxcbiAgY29uc3Qgb25WaWV3ID0gdXNlQ2FsbGJhY2soKG5ld1ZpZXcpID0+IHNldFZpZXcobmV3VmlldyksIFtzZXRWaWV3XSlcXG4gIGNvbnN0IG9uRHJpbGxEb3duID0gdXNlQ2FsbGJhY2soXFxuICAgIChuZXdEYXRlKSA9PiB7XFxuICAgICAgc2V0RGF0ZShuZXdEYXRlKVxcbiAgICAgIHNldFZpZXcoVmlld3MuQUdFTkRBKVxcbiAgICB9LFxcbiAgICBbc2V0RGF0ZSwgc2V0Vmlld11cXG4gIClcXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGF0ZT17ZGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIG9uRHJpbGxEb3duPXtvbkRyaWxsRG93bn1cXG4gICAgICAgIG9uTmF2aWdhdGU9e29uTmF2aWdhdGV9XFxuICAgICAgICBvblZpZXc9e29uVmlld31cXG4gICAgICAgIHZpZXc9e3ZpZXd9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVxcbk9uRHJpbGxEb3duLnN0b3J5TmFtZSA9ICdvbkRyaWxsRG93bidcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiT25EcmlsbERvd25cIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo0NH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQ0fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vb25EcmlsbERvd24ubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5leHBvcnQgY29uc3QgT25EcmlsbERvd24gPSBmdW5jdGlvbiBPbkRyaWxsRG93bigpIHtcbiAgY29uc3QgW3ZpZXcsIHNldFZpZXddID0gdXNlU3RhdGUoVmlld3MuTU9OVEgpXG4gIGNvbnN0IFtkYXRlLCBzZXREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKDIwMTUsIDMsIDEzKSlcbiAgY29uc3Qgb25OYXZpZ2F0ZSA9IHVzZUNhbGxiYWNrKChuZXdEYXRlKSA9PiBzZXREYXRlKG5ld0RhdGUpLCBbc2V0RGF0ZV0pXG4gIGNvbnN0IG9uVmlldyA9IHVzZUNhbGxiYWNrKChuZXdWaWV3KSA9PiBzZXRWaWV3KG5ld1ZpZXcpLCBbc2V0Vmlld10pXG4gIGNvbnN0IG9uRHJpbGxEb3duID0gdXNlQ2FsbGJhY2soXG4gICAgKG5ld0RhdGUpID0+IHtcbiAgICAgIHNldERhdGUobmV3RGF0ZSlcbiAgICAgIHNldFZpZXcoVmlld3MuQUdFTkRBKVxuICAgIH0sXG4gICAgW3NldERhdGUsIHNldFZpZXddXG4gIClcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRhdGU9e2RhdGV9XG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxuICAgICAgICBvbkRyaWxsRG93bj17b25EcmlsbERvd259XG4gICAgICAgIG9uTmF2aWdhdGU9e29uTmF2aWdhdGV9XG4gICAgICAgIG9uVmlldz17b25WaWV3fVxuICAgICAgICB2aWV3PXt2aWV3fVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtPbkRyaWxsRG93bi5zdG9yeU5hbWUgPSAnb25EcmlsbERvd24nXG5cblxuXG5PbkRyaWxsRG93bi5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gT25EcmlsbERvd24oKSB7XFxuICBjb25zdCBbdmlldywgc2V0Vmlld10gPSB1c2VTdGF0ZShWaWV3cy5NT05USClcXG4gIGNvbnN0IFtkYXRlLCBzZXREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKDIwMTUsIDMsIDEzKSlcXG4gIGNvbnN0IG9uTmF2aWdhdGUgPSB1c2VDYWxsYmFjaygobmV3RGF0ZSkgPT4gc2V0RGF0ZShuZXdEYXRlKSwgW3NldERhdGVdKVxcbiAgY29uc3Qgb25WaWV3ID0gdXNlQ2FsbGJhY2soKG5ld1ZpZXcpID0+IHNldFZpZXcobmV3VmlldyksIFtzZXRWaWV3XSlcXG4gIGNvbnN0IG9uRHJpbGxEb3duID0gdXNlQ2FsbGJhY2soXFxuICAgIChuZXdEYXRlKSA9PiB7XFxuICAgICAgc2V0RGF0ZShuZXdEYXRlKVxcbiAgICAgIHNldFZpZXcoVmlld3MuQUdFTkRBKVxcbiAgICB9LFxcbiAgICBbc2V0RGF0ZSwgc2V0Vmlld11cXG4gIClcXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGF0ZT17ZGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIG9uRHJpbGxEb3duPXtvbkRyaWxsRG93bn1cXG4gICAgICAgIG9uTmF2aWdhdGU9e29uTmF2aWdhdGV9XFxuICAgICAgICBvblZpZXc9e29uVmlld31cXG4gICAgICAgIHZpZXc9e3ZpZXd9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVwiIH0sIC4uLk9uRHJpbGxEb3duLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJvbmtleXByZXNzZXZlbnRcIlxuICAgIH19Pntgb25LZXlQcmVzc0V2ZW50YH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoZXZlbnQ6IE9iamVjdCwgZTogU3ludGhldGljRXZlbnQpID0+IHZvaWRgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BDYWxsYmFjayBmaXJlZCB3aGVuIGEgZm9jdXNlZCBjYWxlbmRhciBldmVudCByZWNlaXZlcyBhIGtleSBwcmVzcy5gfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLW9uLWtleS1wcmVzcy1ldmVudFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlRWZmZWN0LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9vbktleVByZXNzRXZlbnQubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmZ1bmN0aW9uIGJ1aWxkTWVzc2FnZShldmVudCwgeyBhbHRLZXksIGN0cmxLZXksIHNoaWZ0S2V5LCBtZXRhS2V5LCBrZXkgfSkge1xcbiAgbGV0IHByZWZpeCA9ICcnXFxuICBpZiAoYWx0S2V5KSB7XFxuICAgIHByZWZpeCA9ICdBTFQgKyAnXFxuICB9IGVsc2UgaWYgKGN0cmxLZXkpIHtcXG4gICAgcHJlZml4ID0gJ0NUUkwgKyAnXFxuICB9IGVsc2UgaWYgKHNoaWZ0S2V5KSB7XFxuICAgIHByZWZpeCA9ICdTSElGVCArICdcXG4gIH0gZWxzZSBpZiAobWV0YUtleSkge1xcbiAgICBwcmVmaXggPSAnQ01EICsgJ1xcbiAgfVxcbiAgcmV0dXJuIGBZb3UgcHJlc3NlZCBvbiB0aGUgXFxcIiR7cHJlZml4fSR7a2V5fVxcXCIgb24gXFxcImV2ZW50XFxcIjpcXG5KU09OLnN0cmluZ2lmeShldmVudCwgbnVsbCwgMilgXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBPbktleVByZXNzRXZlbnQoKSB7XFxuICBjb25zdCBwcmVzc1JlZiA9IHVzZVJlZihudWxsKVxcblxcbiAgdXNlRWZmZWN0KCgpID0+IHtcXG4gICAgcmV0dXJuICgpID0+IHtcXG4gICAgICAvLyBUbyBwcmV2ZW50IHBvc3NpYmxlIG1lbW9yeSBsZWFrIG9uIHVubW91bnRcXG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHByZXNzUmVmPy5jdXJyZW50KVxcbiAgICB9XFxuICB9LCBbXSlcXG5cXG4gIGNvbnN0IG9uS2V5UHJlc3NFdmVudCA9IHVzZUNhbGxiYWNrKChldmVudCwga2V5cHJlc3NFdmVudCkgPT4ge1xcbiAgICAvKipcXG4gICAgICogV2UgZGVsYXkgb3VyIHJlc3BvbnNlIHRvIGNhcHR1cmUgY3RybC9zaGlmdC9hbHQgKyBrZXlcXG4gICAgICogKlN0b3J5Ym9vayB3aWxsIHN3YWxsb3cgc29tZSBwcmVzc2VzIGZyb20gaXQncyBvd24gYnVpbHQtaW5zXFxuICAgICAqL1xcbiAgICBwcmVzc1JlZi5jdXJyZW50ID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xcbiAgICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2UoZXZlbnQsIGtleXByZXNzRXZlbnQpKVxcbiAgICB9LCAyNTApXFxuICB9LCBbXSlcXG5cXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvbktleVByZXNzRXZlbnQ9e29uS2V5UHJlc3NFdmVudH1cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuT25LZXlQcmVzc0V2ZW50LnN0b3J5TmFtZSA9ICdvbktleXByZXNzRXZlbnQnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIk9uS2V5UHJlc3NFdmVudFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjozNH0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjY2fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MzR9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6NjZ9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlRWZmZWN0LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL29uS2V5UHJlc3NFdmVudC5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmZ1bmN0aW9uIGJ1aWxkTWVzc2FnZShldmVudCwgeyBhbHRLZXksIGN0cmxLZXksIHNoaWZ0S2V5LCBtZXRhS2V5LCBrZXkgfSkge1xuICBsZXQgcHJlZml4ID0gJydcbiAgaWYgKGFsdEtleSkge1xuICAgIHByZWZpeCA9ICdBTFQgKyAnXG4gIH0gZWxzZSBpZiAoY3RybEtleSkge1xuICAgIHByZWZpeCA9ICdDVFJMICsgJ1xuICB9IGVsc2UgaWYgKHNoaWZ0S2V5KSB7XG4gICAgcHJlZml4ID0gJ1NISUZUICsgJ1xuICB9IGVsc2UgaWYgKG1ldGFLZXkpIHtcbiAgICBwcmVmaXggPSAnQ01EICsgJ1xuICB9XG4gIHJldHVybiBgWW91IHByZXNzZWQgb24gdGhlIFwiJHtwcmVmaXh9JHtrZXl9XCIgb24gXCJldmVudFwiOlxuSlNPTi5zdHJpbmdpZnkoZXZlbnQsIG51bGwsIDIpYFxufVxuXG5leHBvcnQgY29uc3QgT25LZXlQcmVzc0V2ZW50ID0gZnVuY3Rpb24gT25LZXlQcmVzc0V2ZW50KCkge1xuICBjb25zdCBwcmVzc1JlZiA9IHVzZVJlZihudWxsKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIC8vIFRvIHByZXZlbnQgcG9zc2libGUgbWVtb3J5IGxlYWsgb24gdW5tb3VudFxuICAgICAgd2luZG93LmNsZWFyVGltZW91dChwcmVzc1JlZj8uY3VycmVudClcbiAgICB9XG4gIH0sIFtdKVxuXG4gIGNvbnN0IG9uS2V5UHJlc3NFdmVudCA9IHVzZUNhbGxiYWNrKChldmVudCwga2V5cHJlc3NFdmVudCkgPT4ge1xuICAgIC8qKlxuICAgICAqIFdlIGRlbGF5IG91ciByZXNwb25zZSB0byBjYXB0dXJlIGN0cmwvc2hpZnQvYWx0ICsga2V5XG4gICAgICogKlN0b3J5Ym9vayB3aWxsIHN3YWxsb3cgc29tZSBwcmVzc2VzIGZyb20gaXQncyBvd24gYnVpbHQtaW5zXG4gICAgICovXG4gICAgcHJlc3NSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2UoZXZlbnQsIGtleXByZXNzRXZlbnQpKVxuICAgIH0sIDI1MClcbiAgfSwgW10pXG5cbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XG4gICAgICAgIG9uS2V5UHJlc3NFdmVudD17b25LZXlQcmVzc0V2ZW50fVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtPbktleVByZXNzRXZlbnQuc3RvcnlOYW1lID0gJ29uS2V5cHJlc3NFdmVudCdcblxuXG5cbk9uS2V5UHJlc3NFdmVudC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gT25LZXlQcmVzc0V2ZW50KCkge1xcbiAgY29uc3QgcHJlc3NSZWYgPSB1c2VSZWYobnVsbClcXG5cXG4gIHVzZUVmZmVjdCgoKSA9PiB7XFxuICAgIHJldHVybiAoKSA9PiB7XFxuICAgICAgLy8gVG8gcHJldmVudCBwb3NzaWJsZSBtZW1vcnkgbGVhayBvbiB1bm1vdW50XFxuICAgICAgd2luZG93LmNsZWFyVGltZW91dChwcmVzc1JlZj8uY3VycmVudClcXG4gICAgfVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBvbktleVByZXNzRXZlbnQgPSB1c2VDYWxsYmFjaygoZXZlbnQsIGtleXByZXNzRXZlbnQpID0+IHtcXG4gICAgLyoqXFxuICAgICAqIFdlIGRlbGF5IG91ciByZXNwb25zZSB0byBjYXB0dXJlIGN0cmwvc2hpZnQvYWx0ICsga2V5XFxuICAgICAqICpTdG9yeWJvb2sgd2lsbCBzd2FsbG93IHNvbWUgcHJlc3NlcyBmcm9tIGl0J3Mgb3duIGJ1aWx0LWluc1xcbiAgICAgKi9cXG4gICAgcHJlc3NSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcXG4gICAgICB3aW5kb3cuYWxlcnQoYnVpbGRNZXNzYWdlKGV2ZW50LCBrZXlwcmVzc0V2ZW50KSlcXG4gICAgfSwgMjUwKVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBkZWZhdWx0RGF0ZSA9IHVzZU1lbW8oKCkgPT4gbmV3IERhdGUoMjAxNSwgMywgMTMpLCBbXSlcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgb25LZXlQcmVzc0V2ZW50PXtvbktleVByZXNzRXZlbnR9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVwiIH0sIC4uLk9uS2V5UHJlc3NFdmVudC5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwib25uYXZpZ2F0ZVwiXG4gICAgfX0+e2Bvbk5hdmlnYXRlYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2Bjb250cm9sczogYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZGF0ZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YGRhdGVgfTwvTGlua1RvPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BleGFtcGxlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgKG5ld0RhdGUpID0+IHNldERhdGUobmV3RGF0ZSlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BkYXRlYH08L2lubGluZUNvZGU+e2AgdmFsdWUgY2hhbmdlcy4gV2hlbiBpbmNsdWRlZCBpdCBpcyB1c2VkIHRvICdjb250cm9sJyB0aGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZGF0ZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YGRhdGVgfTwvTGlua1RvPntgIHByb3AgdmFsdWUuYH08L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1vbi1uYXZpZ2F0ZVwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9vbk5hdmlnYXRlLm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gT25OYXZpZ2F0ZSgpIHtcXG4gIGNvbnN0IFtkYXRlLCBzZXREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKDIwMTUsIDMsIDEpKVxcblxcbiAgY29uc3Qgb25OYXZpZ2F0ZSA9IHVzZUNhbGxiYWNrKChuZXdEYXRlKSA9PiBzZXREYXRlKG5ld0RhdGUpLCBbc2V0RGF0ZV0pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRhdGU9e2RhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvbk5hdmlnYXRlPXtvbk5hdmlnYXRlfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5Pbk5hdmlnYXRlLnN0b3J5TmFtZSA9ICdvbk5hdmlnYXRlJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJPbk5hdmlnYXRlXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MzR9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozNH19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vb25OYXZpZ2F0ZS5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBPbk5hdmlnYXRlID0gZnVuY3Rpb24gT25OYXZpZ2F0ZSgpIHtcbiAgY29uc3QgW2RhdGUsIHNldERhdGVdID0gdXNlU3RhdGUobmV3IERhdGUoMjAxNSwgMywgMSkpXG5cbiAgY29uc3Qgb25OYXZpZ2F0ZSA9IHVzZUNhbGxiYWNrKChuZXdEYXRlKSA9PiBzZXREYXRlKG5ld0RhdGUpLCBbc2V0RGF0ZV0pXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRhdGU9e2RhdGV9XG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxuICAgICAgICBvbk5hdmlnYXRlPXtvbk5hdmlnYXRlfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtPbk5hdmlnYXRlLnN0b3J5TmFtZSA9ICdvbk5hdmlnYXRlJ1xuXG5cblxuT25OYXZpZ2F0ZS5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gT25OYXZpZ2F0ZSgpIHtcXG4gIGNvbnN0IFtkYXRlLCBzZXREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKDIwMTUsIDMsIDEpKVxcblxcbiAgY29uc3Qgb25OYXZpZ2F0ZSA9IHVzZUNhbGxiYWNrKChuZXdEYXRlKSA9PiBzZXREYXRlKG5ld0RhdGUpLCBbc2V0RGF0ZV0pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRhdGU9e2RhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvbk5hdmlnYXRlPXtvbk5hdmlnYXRlfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5Pbk5hdmlnYXRlLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJvbnJhbmdlY2hhbmdlXCJcbiAgICB9fT57YG9uUmFuZ2VDaGFuZ2VgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChyYW5nZTogQXJyYXkgWzF8N10gfCBPYmplY3Qge3N0YXJ0OiBEYXRlLCBlbmQ6IERhdGV9KSA9PiAvLyBkbyBzb21ldGhpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSB2aXNpYmxlIGRhdGUgcmFuZ2UgY2hhbmdlcy4gUmV0dXJucyBhbiBBcnJheSBvZiBkYXRlcyBvciBhbiBvYmplY3Qgd2l0aCBzdGFydCBhbmQgZW5kIGRhdGVzIGZvciBCVUlMVElOIHZpZXdzLmB9PC9wPlxuICAgIDxwPntgQ3VzdG9tIHZpZXdzIG1heSByZXR1cm4gc29tZXRoaW5nIGRpZmZlcmVudC5gfTwvcD5cbiAgICA8cD48ZW0gcGFyZW50TmFtZT1cInBcIj57YE5vdGU6YH08L2VtPntgIFRoaXMgbWV0aG9kIGlzIG5vdCBmaXJlZCBvbiBpbml0aWFsIHJlbmRlci4gT25seSBhcyB0aGUgdXNlciBuYXZpZ2F0ZXMgdGhyb3VnaCBCaWcgQ2FsZW5kYXIuYH08L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1vbi1yYW5nZS1jaGFuZ2VcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvQ2FudmFzPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIsIFZpZXdzIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL29uUmFuZ2VDaGFuZ2UubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmZ1bmN0aW9uIGJ1aWxkTWVzc2FnZShyYW5nZSkge1xcbiAgaWYgKCFyYW5nZSkge1xcbiAgICByZXR1cm4gJ25vIHJhbmdlJ1xcbiAgfVxcbiAgaWYgKCFBcnJheS5pc0FycmF5KHJhbmdlKSkge1xcbiAgICByZXR1cm4gYFtvblJhbmdlQ2hhbmdlXSB3YXMgZ2l2ZW4gYW4gb2JqZWN0IHdpdGhcXG4gICAgYSBzdGFydCBvZiAke3JhbmdlLnN0YXJ0LnRvTG9jYWxlU3RyaW5nKCl9XFxuICAgIGFuZCBhbiBlbmQgb2YgJHtyYW5nZS5lbmQudG9Mb2NhbGVTdHJpbmcoKX0uXFxuICAgIEFuIG9iamVjdCB3aXRoICdzdGFydCcgYW5kICdlbmQnIGlzIHBhc3NlZFxcbiAgICB3aGVuIGluIHRoZSAnbW9udGgnIG9yICdhZ2VuZGEnIHZpZXdzLmBcXG4gIH1cXG4gIGlmIChyYW5nZS5sZW5ndGggPT09IDEpIHtcXG4gICAgcmV0dXJuIGBbb25SYW5nZUNoYW5nZV0gd2FzIGdpdmVuIGFuIGFycmF5IHdpdGhcXG4gICAgYSBzaW5nbGUgaXRlbSBvZiAke3JhbmdlWzBdLnRvTG9jYWxlU3RyaW5nKCl9LFxcbiAgICB3aGljaCBvbmx5IG9jY3VycyB3aXRoaW4gdGhlICdkYXknIHZpZXcuYFxcbiAgfVxcbiAgcmV0dXJuIGBbb25SYW5nZUNoYW5nZV0gd2FzIGdpdmVuIGFuIGFycmF5IG9mIHNldmVuIGRhdGVzLFxcbiAgc3RhcnRpbmcgd2l0aCAke3JhbmdlWzBdLnRvTG9jYWxlU3RyaW5nKCl9XFxuICBhbmQgZW5kaW5nIHdpdGggJHtyYW5nZVs2XS50b0xvY2FsZVN0cmluZygpfS5cXG4gIFRoaXMgb2NjdXJzIHdoZW4gd2l0aGluIHRoZSAnd2Vlaycgb3IgJ3dvcmsgd2Vlaycgdmlld3MuYFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gT25SYW5nZUNoYW5nZSgpIHtcXG4gIGNvbnN0IFtkYXRlLCBzZXREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKDIwMTUsIDMsIDEpKVxcblxcbiAgY29uc3Qgb25OYXZpZ2F0ZSA9IHVzZUNhbGxiYWNrKChuZXdEYXRlKSA9PiBzZXREYXRlKG5ld0RhdGUpLCBbc2V0RGF0ZV0pXFxuXFxuICBjb25zdCBvblJhbmdlQ2hhbmdlID0gdXNlQ2FsbGJhY2soKHJhbmdlKSA9PiB7XFxuICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2UocmFuZ2UpKVxcbiAgfSwgW10pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRhdGU9e2RhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvbk5hdmlnYXRlPXtvbk5hdmlnYXRlfVxcbiAgICAgICAgb25SYW5nZUNoYW5nZT17b25SYW5nZUNoYW5nZX1cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuT25SYW5nZUNoYW5nZS5zdG9yeU5hbWUgPSAnb25SYW5nZUNoYW5nZSdcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiT25SYW5nZUNoYW5nZVwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjo0MX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjYxfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6NDF9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6NjF9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIsIFZpZXdzIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9vblJhbmdlQ2hhbmdlLm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZnVuY3Rpb24gYnVpbGRNZXNzYWdlKHJhbmdlKSB7XG4gIGlmICghcmFuZ2UpIHtcbiAgICByZXR1cm4gJ25vIHJhbmdlJ1xuICB9XG4gIGlmICghQXJyYXkuaXNBcnJheShyYW5nZSkpIHtcbiAgICByZXR1cm4gYFtvblJhbmdlQ2hhbmdlXSB3YXMgZ2l2ZW4gYW4gb2JqZWN0IHdpdGhcbiAgICBhIHN0YXJ0IG9mICR7cmFuZ2Uuc3RhcnQudG9Mb2NhbGVTdHJpbmcoKX1cbiAgICBhbmQgYW4gZW5kIG9mICR7cmFuZ2UuZW5kLnRvTG9jYWxlU3RyaW5nKCl9LlxuICAgIEFuIG9iamVjdCB3aXRoICdzdGFydCcgYW5kICdlbmQnIGlzIHBhc3NlZFxuICAgIHdoZW4gaW4gdGhlICdtb250aCcgb3IgJ2FnZW5kYScgdmlld3MuYFxuICB9XG4gIGlmIChyYW5nZS5sZW5ndGggPT09IDEpIHtcbiAgICByZXR1cm4gYFtvblJhbmdlQ2hhbmdlXSB3YXMgZ2l2ZW4gYW4gYXJyYXkgd2l0aFxuICAgIGEgc2luZ2xlIGl0ZW0gb2YgJHtyYW5nZVswXS50b0xvY2FsZVN0cmluZygpfSxcbiAgICB3aGljaCBvbmx5IG9jY3VycyB3aXRoaW4gdGhlICdkYXknIHZpZXcuYFxuICB9XG4gIHJldHVybiBgW29uUmFuZ2VDaGFuZ2VdIHdhcyBnaXZlbiBhbiBhcnJheSBvZiBzZXZlbiBkYXRlcyxcbiAgc3RhcnRpbmcgd2l0aCAke3JhbmdlWzBdLnRvTG9jYWxlU3RyaW5nKCl9XG4gIGFuZCBlbmRpbmcgd2l0aCAke3JhbmdlWzZdLnRvTG9jYWxlU3RyaW5nKCl9LlxuICBUaGlzIG9jY3VycyB3aGVuIHdpdGhpbiB0aGUgJ3dlZWsnIG9yICd3b3JrIHdlZWsnIHZpZXdzLmBcbn1cblxuZXhwb3J0IGNvbnN0IE9uUmFuZ2VDaGFuZ2UgPSBmdW5jdGlvbiBPblJhbmdlQ2hhbmdlKCkge1xuICBjb25zdCBbZGF0ZSwgc2V0RGF0ZV0gPSB1c2VTdGF0ZShuZXcgRGF0ZSgyMDE1LCAzLCAxKSlcblxuICBjb25zdCBvbk5hdmlnYXRlID0gdXNlQ2FsbGJhY2soKG5ld0RhdGUpID0+IHNldERhdGUobmV3RGF0ZSksIFtzZXREYXRlXSlcblxuICBjb25zdCBvblJhbmdlQ2hhbmdlID0gdXNlQ2FsbGJhY2soKHJhbmdlKSA9PiB7XG4gICAgd2luZG93LmFsZXJ0KGJ1aWxkTWVzc2FnZShyYW5nZSkpXG4gIH0sIFtdKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgIDxDYWxlbmRhclxuICAgICAgICBkYXRlPXtkYXRlfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgICAgb25OYXZpZ2F0ZT17b25OYXZpZ2F0ZX1cbiAgICAgICAgb25SYW5nZUNoYW5nZT17b25SYW5nZUNoYW5nZX1cbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gIClcbn07T25SYW5nZUNoYW5nZS5zdG9yeU5hbWUgPSAnb25SYW5nZUNoYW5nZSdcblxuXG5cbk9uUmFuZ2VDaGFuZ2UucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIE9uUmFuZ2VDaGFuZ2UoKSB7XFxuICBjb25zdCBbZGF0ZSwgc2V0RGF0ZV0gPSB1c2VTdGF0ZShuZXcgRGF0ZSgyMDE1LCAzLCAxKSlcXG5cXG4gIGNvbnN0IG9uTmF2aWdhdGUgPSB1c2VDYWxsYmFjaygobmV3RGF0ZSkgPT4gc2V0RGF0ZShuZXdEYXRlKSwgW3NldERhdGVdKVxcblxcbiAgY29uc3Qgb25SYW5nZUNoYW5nZSA9IHVzZUNhbGxiYWNrKChyYW5nZSkgPT4ge1xcbiAgICB3aW5kb3cuYWxlcnQoYnVpbGRNZXNzYWdlKHJhbmdlKSlcXG4gIH0sIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkYXRlPXtkYXRlfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgb25OYXZpZ2F0ZT17b25OYXZpZ2F0ZX1cXG4gICAgICAgIG9uUmFuZ2VDaGFuZ2U9e29uUmFuZ2VDaGFuZ2V9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVwiIH0sIC4uLk9uUmFuZ2VDaGFuZ2UucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm9uc2VsZWN0ZXZlbnRcIlxuICAgIH19Pntgb25TZWxlY3RFdmVudGB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGV2ZW50OiBPYmplY3QpID0+IGFueWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YENhbGxiYWNrIGZpcmVkIHdoZW4gYSBjYWxlbmRhciBldmVudCBpcyBzZWxlY3RlZCAoaS5lLjogYW4gYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25DbGlja2B9PC9pbmxpbmVDb2RlPntgIGhhbmRsZXIpLmB9PC9wPlxuICAgIDxwPntgVGhlIG1ldGhvZCByZWNlaXZlcyB0aGUgc2VsZWN0ZWQgZXZlbnQgYXMgYSBwYXJhbWV0ZXIuIElmIHVzaW5nIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInJlc291cmNlc1wiIG1keFR5cGU9XCJMaW5rVG9cIj57YHJlc291cmNlc2B9PC9MaW5rVG8+e2AsIGFuZCBhcmUgaW4gYSBUaW1lR3JpZCB2aWV3ICgnZGF5JyBvciAnd2VlaycpLCB0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZXZlbnRgfTwvaW5saW5lQ29kZT57YCB3aWxsIGhhdmUgYW4gYWRkaXRpb25hbCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2Bzb3VyY2VSZXNvdXJjZWB9PC9pbmxpbmVDb2RlPntgIHByb3BlcnR5IGNvbnRhaW5pbmcgdGhlIHJlc291cmNlIG9iamVjdCB0aGF0IHRoZSBldmVudCBpcyBhc3NvY2lhdGVkIHdpdGguYH08L3A+XG4gICAgPHA+e2BDbGlja2luZyBvbiBhIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImJhY2tncm91bmRFdmVudHNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BiYWNrZ3JvdW5kRXZlbnRgfTwvTGlua1RvPntgIHdpbGwgYWxzbyBmaXJlIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BvblNlbGVjdEV2ZW50YH08L2lubGluZUNvZGU+e2AgY2FsbGJhY2suIEl0IHdpbGwgYWxzbyByZWNlaXZlIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BiYWNrZ3JvdW5kRXZlbnRgfTwvaW5saW5lQ29kZT57YCBhcyB0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZXZlbnRgfTwvaW5saW5lQ29kZT57YCBvYmplY3QsIGJ1dCBjb250YWluIGEgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgaXNCYWNrZ3JvdW5kRXZlbnRgfTwvaW5saW5lQ29kZT57YCBwcm9wZXJ0eSBzZXQgdG8gYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgdHJ1ZWB9PC9pbmxpbmVDb2RlPntgLiBUaGlzIHdpbGwgYWxsb3cgeW91IHRvIGRpc3Rpbmd1aXNoIGJldHdlZW4gYSBiYWNrZ3JvdW5kIGV2ZW50IGFuZCBhIHJlZ3VsYXIgZXZlbnQgd2l0aGluIHlvdXIgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25TZWxlY3RFdmVudGB9PC9pbmxpbmVDb2RlPntgIGhhbmRsZXIuYH08L3A+XG4gICAgPHA+PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgTm90ZTpgfTwvc3Ryb25nPntgIFRoZSBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJzZWxlY3RhYmxlXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgc2VsZWN0YWJsZWB9PC9MaW5rVG8+e2AgcHJvcCBpcyBgfTxlbSBwYXJlbnROYW1lPVwicFwiPntgbm90YH08L2VtPntgIHJlcXVpcmVkIGZvciB0aGlzIHByb3AgdG8gZnVuY3Rpb24uYH08L3A+XG4gICAgPHA+PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgSW1wb3J0YW50OmB9PC9zdHJvbmc+e2AgVGhlIGV2ZW50IHBhc3NlZCBpbnRvIHRoZSBmdW5jdGlvbiBpcyB0aGUgQ2FsZW5kYXIgRXZlbnQsIG5vdCB0aGUgU3ludGhldGljRXZlbnQgZXhwZWN0ZWQgYnkgbW9zdCBjbGljayBoYW5kbGVycy5gfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLW9uLXNlbGVjdC1ldmVudFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlRWZmZWN0LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9vblNlbGVjdEV2ZW50Lm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5mdW5jdGlvbiBidWlsZE1lc3NhZ2UoY2FsRXZlbnQsIGV2ZW50TmFtZSkge1xcbiAgcmV0dXJuIGBbJHtldmVudE5hbWV9XSBhbiAnZXZlbnQnIHNlbGVjdGlvbiB3YXMgbWFkZSB3aXRoOlxcbiAgJHtKU09OLnN0cmluZ2lmeShjYWxFdmVudCwgbnVsbCwgMil9YFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gT25TZWxlY3RFdmVudCgpIHtcXG4gIGNvbnN0IGNsaWNrUmVmID0gdXNlUmVmKG51bGwpXFxuXFxuICB1c2VFZmZlY3QoKCkgPT4ge1xcbiAgICAvKipcXG4gICAgICogV2hhdCBJcyBUaGlzP1xcbiAgICAgKiBUaGlzIGlzIHRvIHByZXZlbnQgYSBtZW1vcnkgbGVhaywgaW4gdGhlIG9mZiBjaGFuY2UgdGhhdCB5b3VcXG4gICAgICogdGVhcmRvd24geW91ciBpbnRlcmZhY2UgcHJpb3IgdG8gdGhlIHRpbWVkIG1ldGhvZCBiZWluZyBjYWxsZWQuXFxuICAgICAqL1xcbiAgICByZXR1cm4gKCkgPT4ge1xcbiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXFxuICAgIH1cXG4gIH0sIFtdKVxcblxcbiAgY29uc3Qgb25TZWxlY3RFdmVudCA9IHVzZUNhbGxiYWNrKChjYWxFdmVudCkgPT4ge1xcbiAgICAvKipcXG4gICAgICogSGVyZSB3ZSBhcmUgd2FpdGluZyAyNTAgbWlsbGlzZWNvbmRzICh1c2Ugd2hhdCB5b3Ugd2FudCkgcHJpb3IgdG8gZmlyaW5nXFxuICAgICAqIG91ciBtZXRob2QuIFdoeT8gQmVjYXVzZSBib3RoICdjbGljaycgYW5kICdkb3VibGVDbGljaydcXG4gICAgICogd291bGQgZmlyZSwgaW4gdGhlIGV2ZW50IG9mIGEgJ2RvdWJsZUNsaWNrJy4gQnkgZG9pbmdcXG4gICAgICogdGhpcywgdGhlICdjbGljaycgaGFuZGxlciBpcyBvdmVycmlkZGVuIGJ5IHRoZSAnZG91YmxlQ2xpY2snXFxuICAgICAqIGFjdGlvbi5cXG4gICAgICovXFxuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXFxuICAgIGNsaWNrUmVmLmN1cnJlbnQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XFxuICAgICAgd2luZG93LmFsZXJ0KGJ1aWxkTWVzc2FnZShjYWxFdmVudCwgJ29uU2VsZWN0RXZlbnQnKSlcXG4gICAgfSwgMjUwKVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBvbkRvdWJsZUNsaWNrRXZlbnQgPSB1c2VDYWxsYmFjaygoY2FsRXZlbnQpID0+IHtcXG4gICAgLyoqXFxuICAgICAqIE5vdGljZSBvdXIgdXNlIG9mIHRoZSBzYW1lIHJlZiBhcyBhYm92ZS5cXG4gICAgICovXFxuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXFxuICAgIGNsaWNrUmVmLmN1cnJlbnQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XFxuICAgICAgd2luZG93LmFsZXJ0KGJ1aWxkTWVzc2FnZShjYWxFdmVudCwgJ29uRG91YmxlQ2xpY2tFdmVudCcpKVxcbiAgICB9LCAyNTApXFxuICB9LCBbXSlcXG5cXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSwgW10pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIG9uRG91YmxlQ2xpY2tFdmVudD17b25Eb3VibGVDbGlja0V2ZW50fVxcbiAgICAgICAgb25TZWxlY3RFdmVudD17b25TZWxlY3RFdmVudH1cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuT25TZWxlY3RFdmVudC5zdG9yeU5hbWUgPSAnb25TZWxlY3RFdmVudCdcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiT25TZWxlY3RFdmVudFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoyNH0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjc1fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MjR9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6NzV9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlRWZmZWN0LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL29uU2VsZWN0RXZlbnQubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5mdW5jdGlvbiBidWlsZE1lc3NhZ2UoY2FsRXZlbnQsIGV2ZW50TmFtZSkge1xuICByZXR1cm4gYFske2V2ZW50TmFtZX1dIGFuICdldmVudCcgc2VsZWN0aW9uIHdhcyBtYWRlIHdpdGg6XG4gICR7SlNPTi5zdHJpbmdpZnkoY2FsRXZlbnQsIG51bGwsIDIpfWBcbn1cblxuZXhwb3J0IGNvbnN0IE9uU2VsZWN0RXZlbnQgPSBmdW5jdGlvbiBPblNlbGVjdEV2ZW50KCkge1xuICBjb25zdCBjbGlja1JlZiA9IHVzZVJlZihudWxsKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLyoqXG4gICAgICogV2hhdCBJcyBUaGlzP1xuICAgICAqIFRoaXMgaXMgdG8gcHJldmVudCBhIG1lbW9yeSBsZWFrLCBpbiB0aGUgb2ZmIGNoYW5jZSB0aGF0IHlvdVxuICAgICAqIHRlYXJkb3duIHlvdXIgaW50ZXJmYWNlIHByaW9yIHRvIHRoZSB0aW1lZCBtZXRob2QgYmVpbmcgY2FsbGVkLlxuICAgICAqL1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxuICAgIH1cbiAgfSwgW10pXG5cbiAgY29uc3Qgb25TZWxlY3RFdmVudCA9IHVzZUNhbGxiYWNrKChjYWxFdmVudCkgPT4ge1xuICAgIC8qKlxuICAgICAqIEhlcmUgd2UgYXJlIHdhaXRpbmcgMjUwIG1pbGxpc2Vjb25kcyAodXNlIHdoYXQgeW91IHdhbnQpIHByaW9yIHRvIGZpcmluZ1xuICAgICAqIG91ciBtZXRob2QuIFdoeT8gQmVjYXVzZSBib3RoICdjbGljaycgYW5kICdkb3VibGVDbGljaydcbiAgICAgKiB3b3VsZCBmaXJlLCBpbiB0aGUgZXZlbnQgb2YgYSAnZG91YmxlQ2xpY2snLiBCeSBkb2luZ1xuICAgICAqIHRoaXMsIHRoZSAnY2xpY2snIGhhbmRsZXIgaXMgb3ZlcnJpZGRlbiBieSB0aGUgJ2RvdWJsZUNsaWNrJ1xuICAgICAqIGFjdGlvbi5cbiAgICAgKi9cbiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxuICAgIGNsaWNrUmVmLmN1cnJlbnQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB3aW5kb3cuYWxlcnQoYnVpbGRNZXNzYWdlKGNhbEV2ZW50LCAnb25TZWxlY3RFdmVudCcpKVxuICAgIH0sIDI1MClcbiAgfSwgW10pXG5cbiAgY29uc3Qgb25Eb3VibGVDbGlja0V2ZW50ID0gdXNlQ2FsbGJhY2soKGNhbEV2ZW50KSA9PiB7XG4gICAgLyoqXG4gICAgICogTm90aWNlIG91ciB1c2Ugb2YgdGhlIHNhbWUgcmVmIGFzIGFib3ZlLlxuICAgICAqL1xuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXG4gICAgY2xpY2tSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2UoY2FsRXZlbnQsICdvbkRvdWJsZUNsaWNrRXZlbnQnKSlcbiAgICB9LCAyNTApXG4gIH0sIFtdKVxuXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XG4gICAgICAgIG9uRG91YmxlQ2xpY2tFdmVudD17b25Eb3VibGVDbGlja0V2ZW50fVxuICAgICAgICBvblNlbGVjdEV2ZW50PXtvblNlbGVjdEV2ZW50fVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtPblNlbGVjdEV2ZW50LnN0b3J5TmFtZSA9ICdvblNlbGVjdEV2ZW50J1xuXG5cblxuT25TZWxlY3RFdmVudC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gT25TZWxlY3RFdmVudCgpIHtcXG4gIGNvbnN0IGNsaWNrUmVmID0gdXNlUmVmKG51bGwpXFxuXFxuICB1c2VFZmZlY3QoKCkgPT4ge1xcbiAgICAvKipcXG4gICAgICogV2hhdCBJcyBUaGlzP1xcbiAgICAgKiBUaGlzIGlzIHRvIHByZXZlbnQgYSBtZW1vcnkgbGVhaywgaW4gdGhlIG9mZiBjaGFuY2UgdGhhdCB5b3VcXG4gICAgICogdGVhcmRvd24geW91ciBpbnRlcmZhY2UgcHJpb3IgdG8gdGhlIHRpbWVkIG1ldGhvZCBiZWluZyBjYWxsZWQuXFxuICAgICAqL1xcbiAgICByZXR1cm4gKCkgPT4ge1xcbiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXFxuICAgIH1cXG4gIH0sIFtdKVxcblxcbiAgY29uc3Qgb25TZWxlY3RFdmVudCA9IHVzZUNhbGxiYWNrKChjYWxFdmVudCkgPT4ge1xcbiAgICAvKipcXG4gICAgICogSGVyZSB3ZSBhcmUgd2FpdGluZyAyNTAgbWlsbGlzZWNvbmRzICh1c2Ugd2hhdCB5b3Ugd2FudCkgcHJpb3IgdG8gZmlyaW5nXFxuICAgICAqIG91ciBtZXRob2QuIFdoeT8gQmVjYXVzZSBib3RoICdjbGljaycgYW5kICdkb3VibGVDbGljaydcXG4gICAgICogd291bGQgZmlyZSwgaW4gdGhlIGV2ZW50IG9mIGEgJ2RvdWJsZUNsaWNrJy4gQnkgZG9pbmdcXG4gICAgICogdGhpcywgdGhlICdjbGljaycgaGFuZGxlciBpcyBvdmVycmlkZGVuIGJ5IHRoZSAnZG91YmxlQ2xpY2snXFxuICAgICAqIGFjdGlvbi5cXG4gICAgICovXFxuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXFxuICAgIGNsaWNrUmVmLmN1cnJlbnQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XFxuICAgICAgd2luZG93LmFsZXJ0KGJ1aWxkTWVzc2FnZShjYWxFdmVudCwgJ29uU2VsZWN0RXZlbnQnKSlcXG4gICAgfSwgMjUwKVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBvbkRvdWJsZUNsaWNrRXZlbnQgPSB1c2VDYWxsYmFjaygoY2FsRXZlbnQpID0+IHtcXG4gICAgLyoqXFxuICAgICAqIE5vdGljZSBvdXIgdXNlIG9mIHRoZSBzYW1lIHJlZiBhcyBhYm92ZS5cXG4gICAgICovXFxuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXFxuICAgIGNsaWNrUmVmLmN1cnJlbnQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XFxuICAgICAgd2luZG93LmFsZXJ0KGJ1aWxkTWVzc2FnZShjYWxFdmVudCwgJ29uRG91YmxlQ2xpY2tFdmVudCcpKVxcbiAgICB9LCAyNTApXFxuICB9LCBbXSlcXG5cXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSwgW10pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIG9uRG91YmxlQ2xpY2tFdmVudD17b25Eb3VibGVDbGlja0V2ZW50fVxcbiAgICAgICAgb25TZWxlY3RFdmVudD17b25TZWxlY3RFdmVudH1cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uT25TZWxlY3RFdmVudC5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwib25zZWxlY3RzbG90XCJcbiAgICB9fT57YG9uU2VsZWN0U2xvdGB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKE9iamVjdDogc2xvdEluZm8pID0+IGFueWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2ByZXF1aXJlczogYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwic2VsZWN0YWJsZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YHNlbGVjdGFibGVgfTwvTGlua1RvPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEEgY2FsbGJhY2sgZmlyZWQgd2hlbiBhIGRhdGUgc2VsZWN0aW9uIGlzIG1hZGUuIE9ubHkgZmlyZXMgd2hlbiBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJzZWxlY3RhYmxlXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgc2VsZWN0YWJsZWB9PC9MaW5rVG8+e2AgaXMgdHJ1ZS5gfTwvcD5cbiAgICA8cD48ZW0gcGFyZW50TmFtZT1cInBcIj57YFRoaW5ncyBUbyBLbm93OmB9PC9lbT57YCBXaGVuIHlvdSAnZG91YmxlQ2xpY2snLCBib3RoICdjbGljaycgYW5kICdkb3VibGVDbGljaycgd2lsbCBmaXJlLiBDbGljayBvbiB0aGUgJ3Nob3dDb2RlJyBidXR0b24sIGF0IHRoZSBib3R0b20gb2YgdGhlIGV4YW1wbGUgYmVsb3csIHRvIHNlZSBob3cgeW91IGNhbiBnZXQgYXJvdW5kIHRoaXMgaXNzdWUuYH08L3A+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YDsoc2xvdEluZm86IHtcbiAgc3RhcnQ6IERhdGUsXG4gIGVuZDogRGF0ZSxcbiAgc2xvdHM6IEFycmF5PERhdGU+LFxuICBhY3Rpb246ICdzZWxlY3QnIHwgJ2NsaWNrJyB8ICdkb3VibGVDbGljaycsXG4gIHJlc291cmNlSWQ6ID9udW1iZXIsIC8vIG9ubHkgaWYgdGhlIGNhbGVuZGFyIGlzIHJlc291cmNlIHZpZXdcbiAgYm91bmRzOiA/e1xuICAgIC8vIEZvciBcInNlbGVjdFwiIGFjdGlvblxuICAgIHg6IG51bWJlcixcbiAgICB5OiBudW1iZXIsXG4gICAgdG9wOiBudW1iZXIsXG4gICAgcmlnaHQ6IG51bWJlcixcbiAgICBsZWZ0OiBudW1iZXIsXG4gICAgYm90dG9tOiBudW1iZXIsXG4gIH0sXG4gIGJveDogP3tcbiAgICAvLyBGb3IgXCJjbGlja1wiIG9yIFwiZG91YmxlQ2xpY2tcIiBhY3Rpb25zXG4gICAgY2xpZW50WDogbnVtYmVyLFxuICAgIGNsaWVudFk6IG51bWJlcixcbiAgICB4OiBudW1iZXIsXG4gICAgeTogbnVtYmVyLFxuICB9LFxufSkgPT4gYW55XG5gfTwvY29kZT48L3ByZT5cbiAgICA8aDIgey4uLntcbiAgICAgIFwiaWRcIjogXCJ3aGF0cy10aGUtZGlmZmVyZW5jZVwiXG4gICAgfX0+e2BXaGF0J3MgVGhlIERpZmZlcmVuY2U/YH08L2gyPlxuICAgIDxwPntgSG93IGlzIHRoaXMgZGlmZmVyZW50IGZyb20gYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwib24tc2VsZWN0aW5nXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgb25TZWxlY3RpbmdgfTwvTGlua1RvPntgPyBUaGF0IGlzIGEgdmVyeSBnb29kIHF1ZXN0aW9uLiBUaGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25TZWxlY3RpbmdgfTwvaW5saW5lQ29kZT57YCBtZXRob2QgaXMgb25seSBhdmFpbGFibGUgaW4gdGhlIFRpbWUgdmlld3MgKGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHdlZWtgfTwvaW5saW5lQ29kZT57YCwgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgd29yayB3ZWVrYH08L2lubGluZUNvZGU+e2AsIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGRheWB9PC9pbmxpbmVDb2RlPntgKSwgd2hlcmVhcyBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BvblNlbGVjdFNsb3RgfTwvaW5saW5lQ29kZT57YCBpcyBhbHNvIGF2YWlsYWJsZSBpbiB0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgbW9udGhgfTwvaW5saW5lQ29kZT57YCB2aWV3LiBUaGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25TZWxlY3RpbmdgfTwvaW5saW5lQ29kZT57YCBtZXRob2QgYWxsb3dzIHlvdSB0byAnY2FuY2VsJyB5b3VyIHNlbGVjdGlvbiBieSByZXR1cm5pbmcgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZmFsc2VgfTwvaW5saW5lQ29kZT57YC4gVGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG9uU2VsZWN0U2xvdGB9PC9pbmxpbmVDb2RlPntgIG1ldGhvZCByZXR1cm5zIGEgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgc2xvdEluZm9gfTwvaW5saW5lQ29kZT57YCBvYmplY3QsIGNvbnRhaW5pbmcgYSBsb3Qgb2YgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBhYm91dCB5b3VyIHNlbGVjdGlvbi5gfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLW9uLXNlbGVjdC1zbG90XCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L0NhbnZhcz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VFZmZlY3QsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL29uU2VsZWN0U2xvdC5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuZnVuY3Rpb24gYnVpbGRNZXNzYWdlKHNsb3RJbmZvKSB7XFxuICByZXR1cm4gYFtvblNlbGVjdFNsb3RdIGEgZGF0ZSBzZWxlY3Rpb24gd2FzIG1hZGUsIHBhc3NpbmcgJ3Nsb3RJbmZvJ1xcbiAgJHtKU09OLnN0cmluZ2lmeShzbG90SW5mbywgbnVsbCwgMil9YFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gT25TZWxlY3RTbG90KCkge1xcbiAgY29uc3QgY2xpY2tSZWYgPSB1c2VSZWYobnVsbClcXG5cXG4gIHVzZUVmZmVjdCgoKSA9PiB7XFxuICAgIC8qKlxcbiAgICAgKiBXaGF0IElzIFRoaXM/XFxuICAgICAqIFRoaXMgaXMgdG8gcHJldmVudCBhIG1lbW9yeSBsZWFrLCBpbiB0aGUgb2ZmIGNoYW5jZSB0aGF0IHlvdVxcbiAgICAgKiB0ZWFyZG93biB5b3VyIGludGVyZmFjZSBwcmlvciB0byB0aGUgdGltZWQgbWV0aG9kIGJlaW5nIGNhbGxlZC5cXG4gICAgICovXFxuICAgIHJldHVybiAoKSA9PiB7XFxuICAgICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcXG4gICAgfVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBvblNlbGVjdFNsb3QgPSB1c2VDYWxsYmFjaygoc2xvdEluZm8pID0+IHtcXG4gICAgLyoqXFxuICAgICAqIEhlcmUgd2UgYXJlIHdhaXRpbmcgMjUwIG1pbGxpc2Vjb25kcyAodXNlIHdoYXQgeW91IHdhbnQpIHByaW9yIHRvIGZpcmluZ1xcbiAgICAgKiBvdXIgbWV0aG9kLiBXaHk/IEJlY2F1c2UgYm90aCAnY2xpY2snIGFuZCAnZG91YmxlQ2xpY2snXFxuICAgICAqIHdvdWxkIGZpcmUsIGluIHRoZSBldmVudCBvZiBhICdkb3VibGVDbGljaycuIEJ5IGRvaW5nXFxuICAgICAqIHRoaXMsIHRoZSAnY2xpY2snIGhhbmRsZXIgaXMgb3ZlcnJpZGRlbiBieSB0aGUgJ2RvdWJsZUNsaWNrJ1xcbiAgICAgKiBhY3Rpb24uXFxuICAgICAqL1xcbiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxcbiAgICBjbGlja1JlZi5jdXJyZW50ID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xcbiAgICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2Uoc2xvdEluZm8pKVxcbiAgICB9LCAyNTApXFxuICB9LCBbXSlcXG5cXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSwgW10pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIG9uU2VsZWN0U2xvdD17b25TZWxlY3RTbG90fVxcbiAgICAgICAgc2VsZWN0YWJsZVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5PblNlbGVjdFNsb3Quc3RvcnlOYW1lID0gJ29uU2VsZWN0U2xvdCdcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiT25TZWxlY3RTbG90XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjI0fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6NjV9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoyNH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjo2NX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VFZmZlY3QsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vb25TZWxlY3RTbG90Lm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZnVuY3Rpb24gYnVpbGRNZXNzYWdlKHNsb3RJbmZvKSB7XG4gIHJldHVybiBgW29uU2VsZWN0U2xvdF0gYSBkYXRlIHNlbGVjdGlvbiB3YXMgbWFkZSwgcGFzc2luZyAnc2xvdEluZm8nXG4gICR7SlNPTi5zdHJpbmdpZnkoc2xvdEluZm8sIG51bGwsIDIpfWBcbn1cblxuZXhwb3J0IGNvbnN0IE9uU2VsZWN0U2xvdCA9IGZ1bmN0aW9uIE9uU2VsZWN0U2xvdCgpIHtcbiAgY29uc3QgY2xpY2tSZWYgPSB1c2VSZWYobnVsbClcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8qKlxuICAgICAqIFdoYXQgSXMgVGhpcz9cbiAgICAgKiBUaGlzIGlzIHRvIHByZXZlbnQgYSBtZW1vcnkgbGVhaywgaW4gdGhlIG9mZiBjaGFuY2UgdGhhdCB5b3VcbiAgICAgKiB0ZWFyZG93biB5b3VyIGludGVyZmFjZSBwcmlvciB0byB0aGUgdGltZWQgbWV0aG9kIGJlaW5nIGNhbGxlZC5cbiAgICAgKi9cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcbiAgICB9XG4gIH0sIFtdKVxuXG4gIGNvbnN0IG9uU2VsZWN0U2xvdCA9IHVzZUNhbGxiYWNrKChzbG90SW5mbykgPT4ge1xuICAgIC8qKlxuICAgICAqIEhlcmUgd2UgYXJlIHdhaXRpbmcgMjUwIG1pbGxpc2Vjb25kcyAodXNlIHdoYXQgeW91IHdhbnQpIHByaW9yIHRvIGZpcmluZ1xuICAgICAqIG91ciBtZXRob2QuIFdoeT8gQmVjYXVzZSBib3RoICdjbGljaycgYW5kICdkb3VibGVDbGljaydcbiAgICAgKiB3b3VsZCBmaXJlLCBpbiB0aGUgZXZlbnQgb2YgYSAnZG91YmxlQ2xpY2snLiBCeSBkb2luZ1xuICAgICAqIHRoaXMsIHRoZSAnY2xpY2snIGhhbmRsZXIgaXMgb3ZlcnJpZGRlbiBieSB0aGUgJ2RvdWJsZUNsaWNrJ1xuICAgICAqIGFjdGlvbi5cbiAgICAgKi9cbiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxuICAgIGNsaWNrUmVmLmN1cnJlbnQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB3aW5kb3cuYWxlcnQoYnVpbGRNZXNzYWdlKHNsb3RJbmZvKSlcbiAgICB9LCAyNTApXG4gIH0sIFtdKVxuXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgICAgPENhbGVuZGFyXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XG4gICAgICAgIG9uU2VsZWN0U2xvdD17b25TZWxlY3RTbG90fVxuICAgICAgICBzZWxlY3RhYmxlXG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59O09uU2VsZWN0U2xvdC5zdG9yeU5hbWUgPSAnb25TZWxlY3RTbG90J1xuXG5cblxuT25TZWxlY3RTbG90LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBPblNlbGVjdFNsb3QoKSB7XFxuICBjb25zdCBjbGlja1JlZiA9IHVzZVJlZihudWxsKVxcblxcbiAgdXNlRWZmZWN0KCgpID0+IHtcXG4gICAgLyoqXFxuICAgICAqIFdoYXQgSXMgVGhpcz9cXG4gICAgICogVGhpcyBpcyB0byBwcmV2ZW50IGEgbWVtb3J5IGxlYWssIGluIHRoZSBvZmYgY2hhbmNlIHRoYXQgeW91XFxuICAgICAqIHRlYXJkb3duIHlvdXIgaW50ZXJmYWNlIHByaW9yIHRvIHRoZSB0aW1lZCBtZXRob2QgYmVpbmcgY2FsbGVkLlxcbiAgICAgKi9cXG4gICAgcmV0dXJuICgpID0+IHtcXG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxcbiAgICB9XFxuICB9LCBbXSlcXG5cXG4gIGNvbnN0IG9uU2VsZWN0U2xvdCA9IHVzZUNhbGxiYWNrKChzbG90SW5mbykgPT4ge1xcbiAgICAvKipcXG4gICAgICogSGVyZSB3ZSBhcmUgd2FpdGluZyAyNTAgbWlsbGlzZWNvbmRzICh1c2Ugd2hhdCB5b3Ugd2FudCkgcHJpb3IgdG8gZmlyaW5nXFxuICAgICAqIG91ciBtZXRob2QuIFdoeT8gQmVjYXVzZSBib3RoICdjbGljaycgYW5kICdkb3VibGVDbGljaydcXG4gICAgICogd291bGQgZmlyZSwgaW4gdGhlIGV2ZW50IG9mIGEgJ2RvdWJsZUNsaWNrJy4gQnkgZG9pbmdcXG4gICAgICogdGhpcywgdGhlICdjbGljaycgaGFuZGxlciBpcyBvdmVycmlkZGVuIGJ5IHRoZSAnZG91YmxlQ2xpY2snXFxuICAgICAqIGFjdGlvbi5cXG4gICAgICovXFxuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXFxuICAgIGNsaWNrUmVmLmN1cnJlbnQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XFxuICAgICAgd2luZG93LmFsZXJ0KGJ1aWxkTWVzc2FnZShzbG90SW5mbykpXFxuICAgIH0sIDI1MClcXG4gIH0sIFtdKVxcblxcbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEpLCBbXSlcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgb25TZWxlY3RTbG90PXtvblNlbGVjdFNsb3R9XFxuICAgICAgICBzZWxlY3RhYmxlXFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVwiIH0sIC4uLk9uU2VsZWN0U2xvdC5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwib25zZWxlY3RpbmdcIlxuICAgIH19Pntgb25TZWxlY3RpbmdgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YChyYW5nZTogT2JqZWN0IHsgc3RhcnQ6IERhdGUsIGVuZDogRGF0ZSwgcmVzb3VyY2VJZDogbnVsbHxzdHJpbmd8bnVtYmVyIH0pID0+ID9ib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHJlcXVpcmVzOiBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJzZWxlY3RhYmxlXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgc2VsZWN0YWJsZWB9PC9MaW5rVG8+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQ2FsbGJhY2sgZmlyZWQgd2hlbiBkcmFnZ2luZyBhIHNlbGVjdGlvbiBpbiB0aGUgVGltZSB2aWV3cy4gT25seSBmaXJlcyB3aGVuIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInNlbGVjdGFibGVcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BzZWxlY3RhYmxlYH08L0xpbmtUbz57YCBpcyB0cnVlLmB9PC9wPlxuICAgIDxwPntgUmV0dXJuaW5nIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGZhbHNlYH08L2lubGluZUNvZGU+e2AgZnJvbSB0aGUgaGFuZGxlciB3aWxsIHByZXZlbnQgYSBzZWxlY3Rpb24uYH08L3A+XG4gICAgPGgyIHsuLi57XG4gICAgICBcImlkXCI6IFwid2hhdHMtdGhlLWRpZmZlcmVuY2VcIlxuICAgIH19PntgV2hhdCdzIFRoZSBEaWZmZXJlbmNlP2B9PC9oMj5cbiAgICA8cD57YEhvdyBpcyB0aGlzIGRpZmZlcmVudCBmcm9tIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cIm9uLXNlbGVjdC1zbG90XCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgb25TZWxlY3RTbG90YH08L0xpbmtUbz57YD8gVGhhdCBpcyBhIHZlcnkgZ29vZCBxdWVzdGlvbi4gVGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG9uU2VsZWN0aW5nYH08L2lubGluZUNvZGU+e2AgbWV0aG9kIGlzIG9ubHkgYXZhaWxhYmxlIGluIHRoZSBUaW1lIHZpZXdzIChgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2B3ZWVrYH08L2lubGluZUNvZGU+e2AsIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHdvcmsgd2Vla2B9PC9pbmxpbmVDb2RlPntgLCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BkYXlgfTwvaW5saW5lQ29kZT57YCksIHdoZXJlYXMgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25TZWxlY3RTbG90YH08L2lubGluZUNvZGU+e2AgaXMgYWxzbyBhdmFpbGFibGUgaW4gdGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG1vbnRoYH08L2lubGluZUNvZGU+e2Agdmlldy4gVGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG9uU2VsZWN0aW5nYH08L2lubGluZUNvZGU+e2AgbWV0aG9kIGFsbG93cyB5b3UgdG8gJ2NhbmNlbCcgeW91ciBzZWxlY3Rpb24gYnkgcmV0dXJuaW5nIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGZhbHNlYH08L2lubGluZUNvZGU+e2AuIFRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BvblNlbGVjdFNsb3RgfTwvaW5saW5lQ29kZT57YCBtZXRob2QgcmV0dXJucyBhIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHNsb3RJbmZvYH08L2lubGluZUNvZGU+e2Agb2JqZWN0LCBjb250YWluaW5nIGEgbG90IG9mIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgeW91ciBzZWxlY3Rpb24uYH08L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1vbi1zZWxlY3RpbmdcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvQ2FudmFzPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZUVmZmVjdCwgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL29uU2VsZWN0aW5nLm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5mdW5jdGlvbiBidWlsZE1lc3NhZ2UocmFuZ2UsIGV2ZW50TmFtZSkge1xcbiAgcmV0dXJuIGBbJHtldmVudE5hbWV9XSBhIGRhdGUgcmFuZ2Ugc2VsZWN0aW9uIHdhcyBtYWRlLCBwYXNzaW5nOlxcbiAgJHtKU09OLnN0cmluZ2lmeShyYW5nZSwgbnVsbCwgMil9YFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gT25TZWxlY3RpbmcoKSB7XFxuICBjb25zdCBjbGlja1JlZiA9IHVzZVJlZihudWxsKVxcblxcbiAgdXNlRWZmZWN0KCgpID0+IHtcXG4gICAgLyoqXFxuICAgICAqIFdoYXQgSXMgVGhpcz9cXG4gICAgICogVGhpcyBpcyB0byBwcmV2ZW50IGEgbWVtb3J5IGxlYWssIGluIHRoZSBvZmYgY2hhbmNlIHRoYXQgeW91XFxuICAgICAqIHRlYXJkb3duIHlvdXIgaW50ZXJmYWNlIHByaW9yIHRvIHRoZSB0aW1lZCBtZXRob2QgYmVpbmcgY2FsbGVkLlxcbiAgICAgKi9cXG4gICAgcmV0dXJuICgpID0+IHtcXG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxcbiAgICB9XFxuICB9LCBbXSlcXG5cXG4gIGNvbnN0IG9uU2VsZWN0U2xvdCA9IHVzZUNhbGxiYWNrKChzbG90SW5mbykgPT4ge1xcbiAgICAvKipcXG4gICAgICogSGVyZSB3ZSBhcmUgd2FpdGluZyAyNTAgbWlsbGlzZWNvbmRzICh1c2Ugd2hhdCB5b3Ugd2FudCkgcHJpb3IgdG8gZmlyaW5nXFxuICAgICAqIG91ciBtZXRob2QuIFdoeT8gQmVjYXVzZSBib3RoICdjbGljaycgYW5kICdkb3VibGVDbGljaydcXG4gICAgICogd291bGQgZmlyZSwgaW4gdGhlIGV2ZW50IG9mIGEgJ2RvdWJsZUNsaWNrJy4gQnkgZG9pbmdcXG4gICAgICogdGhpcywgdGhlICdjbGljaycgaGFuZGxlciBpcyBvdmVycmlkZGVuIGJ5IHRoZSAnZG91YmxlQ2xpY2snXFxuICAgICAqIGFjdGlvbi5cXG4gICAgICovXFxuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXFxuICAgIGNsaWNrUmVmLmN1cnJlbnQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XFxuICAgICAgd2luZG93LmFsZXJ0KGJ1aWxkTWVzc2FnZShzbG90SW5mbywgJ29uU2VsZWN0U2xvdCcpKVxcbiAgICB9LCAyNTApXFxuICB9LCBbXSlcXG5cXG4gIGNvbnN0IG9uU2VsZWN0aW5nID0gdXNlQ2FsbGJhY2soKHJhbmdlKSA9PiB7XFxuICAgIC8qKlxcbiAgICAgKiBIZXJlIHdlIGFyZSB3YWl0aW5nIDI1MCBtaWxsaXNlY29uZHMgKHVzZSB3aGF0IHlvdSB3YW50KSBwcmlvciB0byBmaXJpbmdcXG4gICAgICogb3VyIG1ldGhvZC4gV2h5PyBCZWNhdXNlIGJvdGggJ2NsaWNrJyBhbmQgJ2RvdWJsZUNsaWNrJ1xcbiAgICAgKiB3b3VsZCBmaXJlLCBpbiB0aGUgZXZlbnQgb2YgYSAnZG91YmxlQ2xpY2snLiBCeSBkb2luZ1xcbiAgICAgKiB0aGlzLCB0aGUgJ2NsaWNrJyBoYW5kbGVyIGlzIG92ZXJyaWRkZW4gYnkgdGhlICdkb3VibGVDbGljaydcXG4gICAgICogYWN0aW9uLlxcbiAgICAgKi9cXG4gICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcXG4gICAgY2xpY2tSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcXG4gICAgICB3aW5kb3cuYWxlcnQoYnVpbGRNZXNzYWdlKHJhbmdlLCAnb25TZWxlY3RpbmcnKSlcXG4gICAgfSwgMjUwKVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBkZWZhdWx0RGF0ZSA9IHVzZU1lbW8oKCkgPT4gbmV3IERhdGUoMjAxNSwgMywgMSksIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIG9uU2VsZWN0aW5nPXtvblNlbGVjdGluZ31cXG4gICAgICAgIG9uU2VsZWN0U2xvdD17b25TZWxlY3RTbG90fVxcbiAgICAgICAgc2VsZWN0YWJsZVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5PblNlbGVjdGluZy5zdG9yeU5hbWUgPSAnb25TZWxlY3RpbmcnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIk9uU2VsZWN0aW5nXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjI0fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6ODF9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoyNH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjo4MX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VFZmZlY3QsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL29uU2VsZWN0aW5nLm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZnVuY3Rpb24gYnVpbGRNZXNzYWdlKHJhbmdlLCBldmVudE5hbWUpIHtcbiAgcmV0dXJuIGBbJHtldmVudE5hbWV9XSBhIGRhdGUgcmFuZ2Ugc2VsZWN0aW9uIHdhcyBtYWRlLCBwYXNzaW5nOlxuICAke0pTT04uc3RyaW5naWZ5KHJhbmdlLCBudWxsLCAyKX1gXG59XG5cbmV4cG9ydCBjb25zdCBPblNlbGVjdGluZyA9IGZ1bmN0aW9uIE9uU2VsZWN0aW5nKCkge1xuICBjb25zdCBjbGlja1JlZiA9IHVzZVJlZihudWxsKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLyoqXG4gICAgICogV2hhdCBJcyBUaGlzP1xuICAgICAqIFRoaXMgaXMgdG8gcHJldmVudCBhIG1lbW9yeSBsZWFrLCBpbiB0aGUgb2ZmIGNoYW5jZSB0aGF0IHlvdVxuICAgICAqIHRlYXJkb3duIHlvdXIgaW50ZXJmYWNlIHByaW9yIHRvIHRoZSB0aW1lZCBtZXRob2QgYmVpbmcgY2FsbGVkLlxuICAgICAqL1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxuICAgIH1cbiAgfSwgW10pXG5cbiAgY29uc3Qgb25TZWxlY3RTbG90ID0gdXNlQ2FsbGJhY2soKHNsb3RJbmZvKSA9PiB7XG4gICAgLyoqXG4gICAgICogSGVyZSB3ZSBhcmUgd2FpdGluZyAyNTAgbWlsbGlzZWNvbmRzICh1c2Ugd2hhdCB5b3Ugd2FudCkgcHJpb3IgdG8gZmlyaW5nXG4gICAgICogb3VyIG1ldGhvZC4gV2h5PyBCZWNhdXNlIGJvdGggJ2NsaWNrJyBhbmQgJ2RvdWJsZUNsaWNrJ1xuICAgICAqIHdvdWxkIGZpcmUsIGluIHRoZSBldmVudCBvZiBhICdkb3VibGVDbGljaycuIEJ5IGRvaW5nXG4gICAgICogdGhpcywgdGhlICdjbGljaycgaGFuZGxlciBpcyBvdmVycmlkZGVuIGJ5IHRoZSAnZG91YmxlQ2xpY2snXG4gICAgICogYWN0aW9uLlxuICAgICAqL1xuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXG4gICAgY2xpY2tSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2Uoc2xvdEluZm8sICdvblNlbGVjdFNsb3QnKSlcbiAgICB9LCAyNTApXG4gIH0sIFtdKVxuXG4gIGNvbnN0IG9uU2VsZWN0aW5nID0gdXNlQ2FsbGJhY2soKHJhbmdlKSA9PiB7XG4gICAgLyoqXG4gICAgICogSGVyZSB3ZSBhcmUgd2FpdGluZyAyNTAgbWlsbGlzZWNvbmRzICh1c2Ugd2hhdCB5b3Ugd2FudCkgcHJpb3IgdG8gZmlyaW5nXG4gICAgICogb3VyIG1ldGhvZC4gV2h5PyBCZWNhdXNlIGJvdGggJ2NsaWNrJyBhbmQgJ2RvdWJsZUNsaWNrJ1xuICAgICAqIHdvdWxkIGZpcmUsIGluIHRoZSBldmVudCBvZiBhICdkb3VibGVDbGljaycuIEJ5IGRvaW5nXG4gICAgICogdGhpcywgdGhlICdjbGljaycgaGFuZGxlciBpcyBvdmVycmlkZGVuIGJ5IHRoZSAnZG91YmxlQ2xpY2snXG4gICAgICogYWN0aW9uLlxuICAgICAqL1xuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXG4gICAgY2xpY2tSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2UocmFuZ2UsICdvblNlbGVjdGluZycpKVxuICAgIH0sIDI1MClcbiAgfSwgW10pXG5cbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEpLCBbXSlcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XG4gICAgICAgIG9uU2VsZWN0aW5nPXtvblNlbGVjdGluZ31cbiAgICAgICAgb25TZWxlY3RTbG90PXtvblNlbGVjdFNsb3R9XG4gICAgICAgIHNlbGVjdGFibGVcbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gIClcbn07T25TZWxlY3Rpbmcuc3RvcnlOYW1lID0gJ29uU2VsZWN0aW5nJ1xuXG5cblxuT25TZWxlY3RpbmcucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIE9uU2VsZWN0aW5nKCkge1xcbiAgY29uc3QgY2xpY2tSZWYgPSB1c2VSZWYobnVsbClcXG5cXG4gIHVzZUVmZmVjdCgoKSA9PiB7XFxuICAgIC8qKlxcbiAgICAgKiBXaGF0IElzIFRoaXM/XFxuICAgICAqIFRoaXMgaXMgdG8gcHJldmVudCBhIG1lbW9yeSBsZWFrLCBpbiB0aGUgb2ZmIGNoYW5jZSB0aGF0IHlvdVxcbiAgICAgKiB0ZWFyZG93biB5b3VyIGludGVyZmFjZSBwcmlvciB0byB0aGUgdGltZWQgbWV0aG9kIGJlaW5nIGNhbGxlZC5cXG4gICAgICovXFxuICAgIHJldHVybiAoKSA9PiB7XFxuICAgICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcXG4gICAgfVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBvblNlbGVjdFNsb3QgPSB1c2VDYWxsYmFjaygoc2xvdEluZm8pID0+IHtcXG4gICAgLyoqXFxuICAgICAqIEhlcmUgd2UgYXJlIHdhaXRpbmcgMjUwIG1pbGxpc2Vjb25kcyAodXNlIHdoYXQgeW91IHdhbnQpIHByaW9yIHRvIGZpcmluZ1xcbiAgICAgKiBvdXIgbWV0aG9kLiBXaHk/IEJlY2F1c2UgYm90aCAnY2xpY2snIGFuZCAnZG91YmxlQ2xpY2snXFxuICAgICAqIHdvdWxkIGZpcmUsIGluIHRoZSBldmVudCBvZiBhICdkb3VibGVDbGljaycuIEJ5IGRvaW5nXFxuICAgICAqIHRoaXMsIHRoZSAnY2xpY2snIGhhbmRsZXIgaXMgb3ZlcnJpZGRlbiBieSB0aGUgJ2RvdWJsZUNsaWNrJ1xcbiAgICAgKiBhY3Rpb24uXFxuICAgICAqL1xcbiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxcbiAgICBjbGlja1JlZi5jdXJyZW50ID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xcbiAgICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2Uoc2xvdEluZm8sICdvblNlbGVjdFNsb3QnKSlcXG4gICAgfSwgMjUwKVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBvblNlbGVjdGluZyA9IHVzZUNhbGxiYWNrKChyYW5nZSkgPT4ge1xcbiAgICAvKipcXG4gICAgICogSGVyZSB3ZSBhcmUgd2FpdGluZyAyNTAgbWlsbGlzZWNvbmRzICh1c2Ugd2hhdCB5b3Ugd2FudCkgcHJpb3IgdG8gZmlyaW5nXFxuICAgICAqIG91ciBtZXRob2QuIFdoeT8gQmVjYXVzZSBib3RoICdjbGljaycgYW5kICdkb3VibGVDbGljaydcXG4gICAgICogd291bGQgZmlyZSwgaW4gdGhlIGV2ZW50IG9mIGEgJ2RvdWJsZUNsaWNrJy4gQnkgZG9pbmdcXG4gICAgICogdGhpcywgdGhlICdjbGljaycgaGFuZGxlciBpcyBvdmVycmlkZGVuIGJ5IHRoZSAnZG91YmxlQ2xpY2snXFxuICAgICAqIGFjdGlvbi5cXG4gICAgICovXFxuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXFxuICAgIGNsaWNrUmVmLmN1cnJlbnQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XFxuICAgICAgd2luZG93LmFsZXJ0KGJ1aWxkTWVzc2FnZShyYW5nZSwgJ29uU2VsZWN0aW5nJykpXFxuICAgIH0sIDI1MClcXG4gIH0sIFtdKVxcblxcbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEpLCBbXSlcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLldFRUt9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvblNlbGVjdGluZz17b25TZWxlY3Rpbmd9XFxuICAgICAgICBvblNlbGVjdFNsb3Q9e29uU2VsZWN0U2xvdH1cXG4gICAgICAgIHNlbGVjdGFibGVcXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uT25TZWxlY3RpbmcucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm9uc2hvd21vcmVcIlxuICAgIH19Pntgb25TaG93TW9yZWB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGV2ZW50czogQXJyYXlbZXZlbnQ6IE9iamVjdF0sIGRhdGU6IERhdGUpID0+IGFueWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YENhbGxiYWNrIGZpcmVkIHdoZW4gYSAre2NvdW50fSBtb3JlIGlzIGNsaWNrZWQuIFJlY2VpdmVzIGB9PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgYWxsYH08L3N0cm9uZz57YCBvZiB0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZXZlbnRzYH08L2lubGluZUNvZGU+e2AgZm9yIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BkYXRlYH08L2lubGluZUNvZGU+e2Agb24gd2hpY2ggaXQgd2FzIHNlbGVjdGVkLmB9PC9wPlxuICAgIHsvKiBSZXF1aXJlZCB3aGVuIHVzaW5nIHRoZSA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZG8tc2hvdy1tb3JlLWRyaWxsLWRvd25cIj5kb1Nob3dNb3JlRHJpbGxEb3duPC9MaW5rVG8+IHByb3BzIGFzIGBmYWxzZWAuICovfVxuICAgIDxDYW52YXMgbWR4VHlwZT1cIkNhbnZhc1wiPlxuICA8U3RvcnkgaWQ9XCJwcm9wcy0tb24tc2hvdy1tb3JlXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L0NhbnZhcz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vb25TaG93TW9yZS5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuZnVuY3Rpb24gYnVpbGRNZXNzYWdlKGNhbEV2ZW50cywgZGF0ZSkge1xcbiAgcmV0dXJuIGBbb25TaG93TW9yZV0gcmVjZWl2ZWQgJHtcXG4gICAgY2FsRXZlbnRzLmxlbmd0aFxcbiAgfSBmb3IgJHtkYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpfWBcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIE9uU2hvd01vcmUoKSB7XFxuICBjb25zdCBvblNob3dNb3JlID0gdXNlQ2FsbGJhY2soXFxuICAgIChldmVudHMsIGRhdGUpID0+IHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2UoZXZlbnRzLCBkYXRlKSksXFxuICAgIFtdXFxuICApXFxuXFxuICBjb25zdCBkZWZhdWx0RGF0ZSA9IHVzZU1lbW8oKCkgPT4gbmV3IERhdGUoMjAxNSwgMywgMSksIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvblNob3dNb3JlPXtvblNob3dNb3JlfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5PblNob3dNb3JlLnN0b3J5TmFtZSA9ICdvblNob3dNb3JlJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJPblNob3dNb3JlXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjI1fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6NDN9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoyNX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjo0M319fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9vblNob3dNb3JlLm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZnVuY3Rpb24gYnVpbGRNZXNzYWdlKGNhbEV2ZW50cywgZGF0ZSkge1xuICByZXR1cm4gYFtvblNob3dNb3JlXSByZWNlaXZlZCAke1xuICAgIGNhbEV2ZW50cy5sZW5ndGhcbiAgfSBmb3IgJHtkYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpfWBcbn1cblxuZXhwb3J0IGNvbnN0IE9uU2hvd01vcmUgPSBmdW5jdGlvbiBPblNob3dNb3JlKCkge1xuICBjb25zdCBvblNob3dNb3JlID0gdXNlQ2FsbGJhY2soXG4gICAgKGV2ZW50cywgZGF0ZSkgPT4gd2luZG93LmFsZXJ0KGJ1aWxkTWVzc2FnZShldmVudHMsIGRhdGUpKSxcbiAgICBbXVxuICApXG5cbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEpLCBbXSlcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgICAgb25TaG93TW9yZT17b25TaG93TW9yZX1cbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gIClcbn07T25TaG93TW9yZS5zdG9yeU5hbWUgPSAnb25TaG93TW9yZSdcblxuXG5cbk9uU2hvd01vcmUucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIE9uU2hvd01vcmUoKSB7XFxuICBjb25zdCBvblNob3dNb3JlID0gdXNlQ2FsbGJhY2soXFxuICAgIChldmVudHMsIGRhdGUpID0+IHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2UoZXZlbnRzLCBkYXRlKSksXFxuICAgIFtdXFxuICApXFxuXFxuICBjb25zdCBkZWZhdWx0RGF0ZSA9IHVzZU1lbW8oKCkgPT4gbmV3IERhdGUoMjAxNSwgMywgMSksIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvblNob3dNb3JlPXtvblNob3dNb3JlfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5PblNob3dNb3JlLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJvbnZpZXdcIlxuICAgIH19Pntgb25WaWV3YH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6ICdmdW5jdGlvbidgfTwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2Bjb250cm9sczogYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwidmlld1wiIG1keFR5cGU9XCJMaW5rVG9cIj57YHZpZXdgfTwvTGlua1RvPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BleGFtcGxlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgKG5ld1ZpZXcpID0+IHNldFZpZXcobmV3VmlldylgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2B2aWV3YH08L2lubGluZUNvZGU+e2AgdmFsdWUgY2hhbmdlcy4gV2hlbiBpbmNsdWRlZCBpdCBpcyB1c2VkIHRvICdjb250cm9sJyB0aGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwidmlld1wiIG1keFR5cGU9XCJMaW5rVG9cIj57YHZpZXdgfTwvTGlua1RvPntgIHByb3AgdmFsdWUuYH08L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1vbi12aWV3XCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L0NhbnZhcz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9vblZpZXcubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBPblZpZXcoKSB7XFxuICBjb25zdCBbZGF0ZSwgc2V0RGF0ZV0gPSB1c2VTdGF0ZShuZXcgRGF0ZSgyMDE1LCAzLCAxKSlcXG4gIGNvbnN0IFt2aWV3LCBzZXRWaWV3XSA9IHVzZVN0YXRlKFZpZXdzLldFRUspXFxuXFxuICBjb25zdCBvbk5hdmlnYXRlID0gdXNlQ2FsbGJhY2soKG5ld0RhdGUpID0+IHNldERhdGUobmV3RGF0ZSksIFtzZXREYXRlXSlcXG4gIGNvbnN0IG9uVmlldyA9IHVzZUNhbGxiYWNrKChuZXdWaWV3KSA9PiBzZXRWaWV3KG5ld1ZpZXcpLCBbc2V0Vmlld10pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRhdGU9e2RhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvbk5hdmlnYXRlPXtvbk5hdmlnYXRlfVxcbiAgICAgICAgb25WaWV3PXtvblZpZXd9XFxuICAgICAgICB2aWV3PXt2aWV3fVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5PblZpZXcuc3RvcnlOYW1lID0gJ29uVmlldydcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiT25WaWV3XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzh9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozOH19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL29uVmlldy5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBPblZpZXcgPSBmdW5jdGlvbiBPblZpZXcoKSB7XG4gIGNvbnN0IFtkYXRlLCBzZXREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKDIwMTUsIDMsIDEpKVxuICBjb25zdCBbdmlldywgc2V0Vmlld10gPSB1c2VTdGF0ZShWaWV3cy5XRUVLKVxuXG4gIGNvbnN0IG9uTmF2aWdhdGUgPSB1c2VDYWxsYmFjaygobmV3RGF0ZSkgPT4gc2V0RGF0ZShuZXdEYXRlKSwgW3NldERhdGVdKVxuICBjb25zdCBvblZpZXcgPSB1c2VDYWxsYmFjaygobmV3VmlldykgPT4gc2V0VmlldyhuZXdWaWV3KSwgW3NldFZpZXddKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgIDxDYWxlbmRhclxuICAgICAgICBkYXRlPXtkYXRlfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgICAgb25OYXZpZ2F0ZT17b25OYXZpZ2F0ZX1cbiAgICAgICAgb25WaWV3PXtvblZpZXd9XG4gICAgICAgIHZpZXc9e3ZpZXd9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59O09uVmlldy5zdG9yeU5hbWUgPSAnb25WaWV3J1xuXG5cblxuT25WaWV3LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBPblZpZXcoKSB7XFxuICBjb25zdCBbZGF0ZSwgc2V0RGF0ZV0gPSB1c2VTdGF0ZShuZXcgRGF0ZSgyMDE1LCAzLCAxKSlcXG4gIGNvbnN0IFt2aWV3LCBzZXRWaWV3XSA9IHVzZVN0YXRlKFZpZXdzLldFRUspXFxuXFxuICBjb25zdCBvbk5hdmlnYXRlID0gdXNlQ2FsbGJhY2soKG5ld0RhdGUpID0+IHNldERhdGUobmV3RGF0ZSksIFtzZXREYXRlXSlcXG4gIGNvbnN0IG9uVmlldyA9IHVzZUNhbGxiYWNrKChuZXdWaWV3KSA9PiBzZXRWaWV3KG5ld1ZpZXcpLCBbc2V0Vmlld10pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRhdGU9e2RhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvbk5hdmlnYXRlPXtvbk5hdmlnYXRlfVxcbiAgICAgICAgb25WaWV3PXtvblZpZXd9XFxuICAgICAgICB2aWV3PXt2aWV3fVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5PblZpZXcucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcInBvcHVwXCJcbiAgICB9fT57YHBvcHVwYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2Bib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2B0cnVlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgU2hvdyB0cnVuY2F0ZWQgZXZlbnRzIGluIGFuIG92ZXJsYXkgd2hlbiB5b3UgY2xpY2sgdGhlIFwiK2B9PGVtIHBhcmVudE5hbWU9XCJwXCI+e2B4YH08L2VtPntgIG1vcmVcIiBsaW5rLmB9PC9wPlxuICAgIDxTdG9yeSBpZD1cInByb3BzLS1wb3B1cFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9wb3B1cC5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0RGF0ZToge1xcbiAgICAgIGNvbnRyb2w6IHtcXG4gICAgICAgIHR5cGU6IG51bGwsXFxuICAgICAgfSxcXG4gICAgfSxcXG4gICAgcG9wdXA6ICdib29sZWFuJyxcXG4gIH0sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVxcblxcbmV4cG9ydCBjb25zdCBQb3B1cCA9IFRlbXBsYXRlLmJpbmQoe30pXFxuUG9wdXAuc3RvcnlOYW1lID0gJ3BvcHVwJ1xcblBvcHVwLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbiAgcG9wdXA6IHRydWUsXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJQb3B1cFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6Mjl9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjozM30sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozM319fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vcG9wdXAubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZToge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgfSxcbiAgICB9LFxuICAgIHBvcHVwOiAnYm9vbGVhbicsXG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cbiAgPC9kaXY+XG4pXG5cbmV4cG9ydCBjb25zdCBQb3B1cCA9IFRlbXBsYXRlLmJpbmQoe30pO1BvcHVwLnN0b3J5TmFtZSA9ICdwb3B1cCdcblBvcHVwLmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gIGV2ZW50czogZGVtb0V2ZW50cyxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxuICBwb3B1cDogdHJ1ZSxcbn1cblxuXG5cblBvcHVwLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcIiB9LCAuLi5Qb3B1cC5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwicG9wdXBvZmZzZXRcIlxuICAgIH19PntgcG9wdXBPZmZzZXRgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG51bWJlcnxzaGFwZSB7eDogbnVtYmVyLCB5OiBudW1iZXJ9YH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgRGlzdGFuY2UgaW4gcGl4ZWxzLCBmcm9tIHRoZSBlZGdlcyBvZiB0aGUgdmlld3BvcnQsIHRoZSBcInNob3cgbW9yZVwiIG92ZXJsYXkgc2hvdWxkIGJlIHBvc2l0aW9uZWQuYH08L3A+XG4gICAgPFN0b3J5IGlkPVwicHJvcHMtLXBvcHVwLW9mZnNldFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9wb3B1cE9mZnNldC5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0RGF0ZToge1xcbiAgICAgIGNvbnRyb2w6IHtcXG4gICAgICAgIHR5cGU6IG51bGwsXFxuICAgICAgfSxcXG4gICAgfSxcXG4gICAgcG9wdXA6ICdib29sZWFuJyxcXG4gIH0sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVxcblxcbmV4cG9ydCBjb25zdCBQb3B1cE9mZnNldCA9IFRlbXBsYXRlLmJpbmQoe30pXFxuUG9wdXBPZmZzZXQuc3RvcnlOYW1lID0gJ3BvcHVwT2Zmc2V0J1xcblBvcHVwT2Zmc2V0LmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbiAgcG9wdXA6IHRydWUsXFxuICBwb3B1cE9mZnNldDogeyB4OiAzMCwgeTogMjAgfSxcXG59XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlBvcHVwT2Zmc2V0XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjMzfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjI5fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjMzfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgeyBDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9wb3B1cE9mZnNldC5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHREYXRlOiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gICAgcG9wdXA6ICdib29sZWFuJyxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IFBvcHVwT2Zmc2V0ID0gVGVtcGxhdGUuYmluZCh7fSk7UG9wdXBPZmZzZXQuc3RvcnlOYW1lID0gJ3BvcHVwT2Zmc2V0J1xuUG9wdXBPZmZzZXQuYXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXG4gIHBvcHVwOiB0cnVlLFxuICBwb3B1cE9mZnNldDogeyB4OiAzMCwgeTogMjAgfSxcbn1cblxuXG5cblBvcHVwT2Zmc2V0LnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcIiB9LCAuLi5Qb3B1cE9mZnNldC5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcInJlc291cmNlZ3JvdXBpbmdsYXlvdXRcIlxuICAgIH19PntgcmVzb3VyY2VHcm91cGluZ0xheW91dGB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgYm9vbGVhbmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiAnZmFsc2UnYH08L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BEZXRlcm1pbmVzIHdoZXRoZXIgZ3JvdXBlZCByZXNvdXJjZXMgc2hvdWxkIGJlIGRpc3BsYXllZCBpbiBhIGxheW91dCB0aGF0IG9yZ2FuaXplcyB0aGVtIGZyb20gUmVzb3VyY2UgPiBEYXkgdG8gRGF5ID4gUmVzb3VyY2UuYH08L3A+XG4gICAgPHA+e2BGb3IgZXhhbXBsZWB9PC9wPlxuICAgIDxwcmU+PGNvZGUgcGFyZW50TmFtZT1cInByZVwiIHsuLi57XG4gICAgICAgIFwiY2xhc3NOYW1lXCI6IFwibGFuZ3VhZ2UtbWRcIlxuICAgICAgfX0+e2ByZXNvdXJjZUdyb3VwaW5nTGF5b3V0PXtmYWxzZX1cblJlc291cmNlIDFcbiAgRGF5IDFcbiAgICBFdmVudCAxXG4gICAgRXZlbnQgMlxuICBEYXkgMlxuICAgIEV2ZW50IDNcbiAgICBFdmVudCA0XG5SZXNvdXJjZSAyXG4gIERheSAzXG4gICAgRXZlbnQgNVxuICAgIEV2ZW50IDZcbiAgRGF5IDRcbiAgICBFdmVudCA3XG4gICAgRXZlbnQgOFxuXG5yZXNvdXJjZUdyb3VwaW5nTGF5b3V0PXt0cnVlfVxuRGF5IDFcbiAgUmVzb3VyY2UgMVxuICAgIEV2ZW50IDFcbiAgICBFdmVudCAyXG4gIFJlc291cmNlIDJcbiAgICBFdmVudCAzXG4gICAgRXZlbnQgNFxuRGF5IDJcbiAgUmVzb3VyY2UgMVxuICAgIEV2ZW50IDVcbiAgICBFdmVudCA2XG4gIFJlc291cmNlIDJcbiAgICBFdmVudCA3XG4gICAgRXZlbnQgOFxuYH08L2NvZGU+PC9wcmU+XG4gICAgPFN0b3J5IGlkPVwicHJvcHMtLXJlc291cmNlLWdyb3VwaW5nLWxheW91dFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IHsgQ2FsZW5kYXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IHsgcmVzb3VyY2VBY2Nlc3NvclN0b3J5QXJncyB9IGZyb20gJy4vc3RvcnlEZWZhdWx0cydcXG5pbXBvcnQgbWR4IGZyb20gJy4vcmVzb3VyY2VHcm91cGluZ0xheW91dC5tZHgnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0RGF0ZTogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuY29uc3QgcmVzb3VyY2VzID0gW1xcbiAgeyByZXNvdXJjZUlkOiAxLCByZXNvdXJjZVRpdGxlOiAnQm9hcmQgcm9vbScgfSxcXG4gIHsgcmVzb3VyY2VJZDogMiwgcmVzb3VyY2VUaXRsZTogJ1RyYWluaW5nIHJvb20nIH0sXFxuICB7IHJlc291cmNlSWQ6IDMsIHJlc291cmNlVGl0bGU6ICdNZWV0aW5nIHJvb20gMScgfSxcXG4gIHsgcmVzb3VyY2VJZDogNCwgcmVzb3VyY2VUaXRsZTogJ01lZXRpbmcgcm9vbSAyJyB9LFxcbl1cXG5cXG5sZXQgZXZlbnRJZCA9IDBcXG5jb25zdCBldmVudHMgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiAyMCB9LCAoXywgaykgPT4gaykuZmxhdE1hcCgoaSkgPT4ge1xcbiAgY29uc3QgY3VycmVudFJlc291cmNlID0gcmVzb3VyY2VzW2kgJSByZXNvdXJjZXMubGVuZ3RoXVxcbiAgY29uc3QgZGF5RGlmZiA9IGkgJSA3XFxuXFxuICByZXR1cm4gQXJyYXkuZnJvbSh7IGxlbmd0aDogNSB9LCAoXywgaikgPT4gKHtcXG4gICAgaWQ6IGV2ZW50SWQrKyxcXG4gICAgdGl0bGU6IGBFdmVudCAke2kgKyBqfSBfICR7Y3VycmVudFJlc291cmNlLnJlc291cmNlVGl0bGV9YCxcXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTgsIDAsIDI5ICsgZGF5RGlmZiwgOSArIChqICUgNCksIDAsIDApLFxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTgsIDAsIDI5ICsgZGF5RGlmZiwgMTEgKyAoaiAlIDQpLCAwLCAwKSxcXG4gICAgcmVzb3VyY2VJZDogY3VycmVudFJlc291cmNlLnJlc291cmNlSWQsXFxuICB9KSlcXG59KVxcbmV4cG9ydCBjb25zdCBSZXNvdXJjZUdyb3VwaW5nTGF5b3V0ID0gVGVtcGxhdGUuYmluZCh7fSlcXG5SZXNvdXJjZUdyb3VwaW5nTGF5b3V0LnN0b3J5TmFtZSA9ICdyZXNvdXJjZUdyb3VwaW5nTGF5b3V0J1xcblJlc291cmNlR3JvdXBpbmdMYXlvdXQuYXJncyA9IHtcXG4gIC4uLnJlc291cmNlQWNjZXNzb3JTdG9yeUFyZ3MsXFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxOCwgMCwgMjkpLFxcbiAgcmVzb3VyY2VHcm91cGluZ0xheW91dDogdHJ1ZSxcXG4gIHJlc291cmNlSWRBY2Nlc3NvcjogJ3Jlc291cmNlSWQnLFxcbiAgcmVzb3VyY2VUaXRsZUFjY2Vzc29yOiAncmVzb3VyY2VUaXRsZScsXFxuICByZXNvdXJjZXMsXFxuICBldmVudHMsXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJSZXNvdXJjZUdyb3VwaW5nTGF5b3V0XCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyMX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjI1fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjIxfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjI1fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQ2FsZW5kYXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgeyByZXNvdXJjZUFjY2Vzc29yU3RvcnlBcmdzIH0gZnJvbSAnLi9zdG9yeURlZmF1bHRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL3Jlc291cmNlR3JvdXBpbmdMYXlvdXQubWR4J1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHREYXRlOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cbiAgPC9kaXY+XG4pXG5cbmNvbnN0IHJlc291cmNlcyA9IFtcbiAgeyByZXNvdXJjZUlkOiAxLCByZXNvdXJjZVRpdGxlOiAnQm9hcmQgcm9vbScgfSxcbiAgeyByZXNvdXJjZUlkOiAyLCByZXNvdXJjZVRpdGxlOiAnVHJhaW5pbmcgcm9vbScgfSxcbiAgeyByZXNvdXJjZUlkOiAzLCByZXNvdXJjZVRpdGxlOiAnTWVldGluZyByb29tIDEnIH0sXG4gIHsgcmVzb3VyY2VJZDogNCwgcmVzb3VyY2VUaXRsZTogJ01lZXRpbmcgcm9vbSAyJyB9LFxuXVxuXG5sZXQgZXZlbnRJZCA9IDBcbmNvbnN0IGV2ZW50cyA9IEFycmF5LmZyb20oeyBsZW5ndGg6IDIwIH0sIChfLCBrKSA9PiBrKS5mbGF0TWFwKChpKSA9PiB7XG4gIGNvbnN0IGN1cnJlbnRSZXNvdXJjZSA9IHJlc291cmNlc1tpICUgcmVzb3VyY2VzLmxlbmd0aF1cbiAgY29uc3QgZGF5RGlmZiA9IGkgJSA3XG5cbiAgcmV0dXJuIEFycmF5LmZyb20oeyBsZW5ndGg6IDUgfSwgKF8sIGopID0+ICh7XG4gICAgaWQ6IGV2ZW50SWQrKyxcbiAgICB0aXRsZTogYEV2ZW50ICR7aSArIGp9IF8gJHtjdXJyZW50UmVzb3VyY2UucmVzb3VyY2VUaXRsZX1gLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE4LCAwLCAyOSArIGRheURpZmYsIDkgKyAoaiAlIDQpLCAwLCAwKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTgsIDAsIDI5ICsgZGF5RGlmZiwgMTEgKyAoaiAlIDQpLCAwLCAwKSxcbiAgICByZXNvdXJjZUlkOiBjdXJyZW50UmVzb3VyY2UucmVzb3VyY2VJZCxcbiAgfSkpXG59KVxuZXhwb3J0IGNvbnN0IFJlc291cmNlR3JvdXBpbmdMYXlvdXQgPSBUZW1wbGF0ZS5iaW5kKHt9KTtSZXNvdXJjZUdyb3VwaW5nTGF5b3V0LnN0b3J5TmFtZSA9ICdyZXNvdXJjZUdyb3VwaW5nTGF5b3V0J1xuUmVzb3VyY2VHcm91cGluZ0xheW91dC5hcmdzID0ge1xuICAuLi5yZXNvdXJjZUFjY2Vzc29yU3RvcnlBcmdzLFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxOCwgMCwgMjkpLFxuICByZXNvdXJjZUdyb3VwaW5nTGF5b3V0OiB0cnVlLFxuICByZXNvdXJjZUlkQWNjZXNzb3I6ICdyZXNvdXJjZUlkJyxcbiAgcmVzb3VyY2VUaXRsZUFjY2Vzc29yOiAncmVzb3VyY2VUaXRsZScsXG4gIHJlc291cmNlcyxcbiAgZXZlbnRzLFxufVxuXG5cblxuUmVzb3VyY2VHcm91cGluZ0xheW91dC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uUmVzb3VyY2VHcm91cGluZ0xheW91dC5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwicmVzb3VyY2VpZGFjY2Vzc29yXCJcbiAgICB9fT57YHJlc291cmNlSWRBY2Nlc3NvcmB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgc3RyaW5nIHwgZnVuY3Rpb24gKHJlc291cmNlOiBPYmplY3QpID0+IHN0cmluZyB8IG51bWJlciAvLyBtdXN0IGJlIHVuaXF1ZWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFByb3ZpZGVzIGEgdW5pcXVlIGlkZW50aWZpZXIsIG9yIGFuIGFycmF5IG9mIHVuaXF1ZSBpZGVudGlmaWVycywgZm9yIGVhY2ggcmVzb3VyY2UgaW4gdGhlIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInJlc291cmNlc1wiIG1keFR5cGU9XCJMaW5rVG9cIj57YHJlc291cmNlc2B9PC9MaW5rVG8+e2AgYXJyYXlgfTwvcD5cbiAgICA8U3RvcnkgaWQ9XCJwcm9wcy0tcmVzb3VyY2UtaWQtYWNjZXNzb3JcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCB7IENhbGVuZGFyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCB7IHJlc291cmNlQWNjZXNzb3JTdG9yeUFyZ3MgfSBmcm9tICcuL3N0b3J5RGVmYXVsdHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL3Jlc291cmNlSWRBY2Nlc3Nvci5tZHgnXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0RGF0ZToge1xcbiAgICAgIGNvbnRyb2w6IHtcXG4gICAgICAgIHR5cGU6IG51bGwsXFxuICAgICAgfSxcXG4gICAgfSxcXG4gICAgZGVmYXVsdFZpZXc6IHtcXG4gICAgICBjb250cm9sOiB7XFxuICAgICAgICB0eXBlOiBudWxsLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICB9LFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcXG5cXG5leHBvcnQgY29uc3QgUmVzb3VyY2VJZEFjY2Vzc29yID0gVGVtcGxhdGUuYmluZCh7fSlcXG5SZXNvdXJjZUlkQWNjZXNzb3Iuc3RvcnlOYW1lID0gJ3Jlc291cmNlSWRBY2Nlc3NvcidcXG5SZXNvdXJjZUlkQWNjZXNzb3IuYXJncyA9IHJlc291cmNlQWNjZXNzb3JTdG9yeUFyZ3NcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiUmVzb3VyY2VJZEFjY2Vzc29yXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjozMH0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjM0fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjMwfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjM0fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQ2FsZW5kYXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgeyByZXNvdXJjZUFjY2Vzc29yU3RvcnlBcmdzIH0gZnJvbSAnLi9zdG9yeURlZmF1bHRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL3Jlc291cmNlSWRBY2Nlc3Nvci5tZHgnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIGFyZ1R5cGVzOiB7XG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgZGVmYXVsdERhdGU6IHtcbiAgICAgIGNvbnRyb2w6IHtcbiAgICAgICAgdHlwZTogbnVsbCxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBkZWZhdWx0Vmlldzoge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgY29uc3QgUmVzb3VyY2VJZEFjY2Vzc29yID0gVGVtcGxhdGUuYmluZCh7fSk7UmVzb3VyY2VJZEFjY2Vzc29yLnN0b3J5TmFtZSA9ICdyZXNvdXJjZUlkQWNjZXNzb3InXG5SZXNvdXJjZUlkQWNjZXNzb3IuYXJncyA9IHJlc291cmNlQWNjZXNzb3JTdG9yeUFyZ3NcblxuXG5cblJlc291cmNlSWRBY2Nlc3Nvci5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uUmVzb3VyY2VJZEFjY2Vzc29yLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJyZXNvdXJjZXRpdGxlYWNjZXNzb3JcIlxuICAgIH19PntgcmVzb3VyY2VUaXRsZUFjY2Vzc29yYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BzdHJpbmcgfCBmdW5jdGlvbiAocmVzb3VyY2U6IE9iamVjdCkgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgUHJvdmlkZXMgYSBodW1hbiByZWFkYWJsZSBuYW1lIGZvciB0aGUgcmVzb3VyY2Ugb2JqZWN0LCB1c2VkIGluIGhlYWRlcnMuYH08L3A+XG4gICAgPFN0b3J5IGlkPVwicHJvcHMtLXJlc291cmNlLXRpdGxlLWFjY2Vzc29yXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgeyBDYWxlbmRhciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgeyByZXNvdXJjZUFjY2Vzc29yU3RvcnlBcmdzIH0gZnJvbSAnLi9zdG9yeURlZmF1bHRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9yZXNvdXJjZVRpdGxlQWNjZXNzb3IubWR4J1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZGVmYXVsdERhdGU6IHtcXG4gICAgICBjb250cm9sOiB7XFxuICAgICAgICB0eXBlOiBudWxsLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICAgIGRlZmF1bHRWaWV3OiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IFJlc291cmNlVGl0bGVBY2Nlc3NvciA9IFRlbXBsYXRlLmJpbmQoe30pXFxuUmVzb3VyY2VUaXRsZUFjY2Vzc29yLnN0b3J5TmFtZSA9ICdyZXNvdXJjZVRpdGxlQWNjZXNzb3InXFxuUmVzb3VyY2VUaXRsZUFjY2Vzc29yLmFyZ3MgPSByZXNvdXJjZUFjY2Vzc29yU3RvcnlBcmdzXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlJlc291cmNlVGl0bGVBY2Nlc3NvclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzB9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjozNH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjozMH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozNH19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IENhbGVuZGFyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IHsgcmVzb3VyY2VBY2Nlc3NvclN0b3J5QXJncyB9IGZyb20gJy4vc3RvcnlEZWZhdWx0cydcbmltcG9ydCBtZHggZnJvbSAnLi9yZXNvdXJjZVRpdGxlQWNjZXNzb3IubWR4J1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHREYXRlOiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gICAgZGVmYXVsdFZpZXc6IHtcbiAgICAgIGNvbnRyb2w6IHtcbiAgICAgICAgdHlwZTogbnVsbCxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IFJlc291cmNlVGl0bGVBY2Nlc3NvciA9IFRlbXBsYXRlLmJpbmQoe30pO1Jlc291cmNlVGl0bGVBY2Nlc3Nvci5zdG9yeU5hbWUgPSAncmVzb3VyY2VUaXRsZUFjY2Vzc29yJ1xuUmVzb3VyY2VUaXRsZUFjY2Vzc29yLmFyZ3MgPSByZXNvdXJjZUFjY2Vzc29yU3RvcnlBcmdzXG5cblxuXG5SZXNvdXJjZVRpdGxlQWNjZXNzb3IucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLlJlc291cmNlVGl0bGVBY2Nlc3Nvci5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwicmVzb3VyY2VzXCJcbiAgICB9fT57YHJlc291cmNlc2B9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgYXJyYXlPZihSZXNvdXJjZSlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BBbiBhcnJheSBvZiByZXNvdXJjZSBvYmplY3RzIHRoYXQgbWFwIGV2ZW50cyB0byBhIHNwZWNpZmljIHJlc291cmNlLiBSZXNvdXJjZSBvYmplY3RzLCBsaWtlIGV2ZW50cywgY2FuIGJlIGFueSBzaGFwZSBvciBoYXZlIGFueSBwcm9wZXJ0aWVzLCBidXQgc2hvdWxkIGJlIHVuaXF1bHkgaWRlbnRpZmlhYmxlIHZpYSB0aGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwicmVzb3VyY2UtaWQtYWNjZXNzb3JcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2ByZXNvdXJjZUlkQWNjZXNzb3JgfTwvTGlua1RvPntgLCBhcyB3ZWxsIGFzIGEgXCJ0aXRsZVwiIG9yIG5hbWUgYXMgcHJvdmlkZWQgYnkgdGhlIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInJlc291cmNlLXRpdGxlLWFjY2Vzc29yXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgcmVzb3VyY2VUaXRsZUFjY2Vzc29yYH08L0xpbmtUbz57YCBwcm9wLmB9PC9wPlxuICAgIDxwcmU+PGNvZGUgcGFyZW50TmFtZT1cInByZVwiIHsuLi57XG4gICAgICAgIFwiY2xhc3NOYW1lXCI6IFwibGFuZ3VhZ2UtanNcIlxuICAgICAgfX0+e2BSZXNvdXJjZSB7XG4gIGlkOiBzdHJpbmcgfCBudW1iZXIsIC8vIG11c3QgYmUgdW5pcXVlXG4gIHRpdGxlOiBzdHJpbmdcbn1cbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxTdG9yeSBpZD1cInByb3BzLS1yZXNvdXJjZXNcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCByZXNvdXJjZURhdGEgZnJvbSAnLi4vcmVzb3VyY2VzL3Jlc291cmNlRXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9yZXNvdXJjZXMubWR4J1xcblxcbmNvbnN0IHsgZXZlbnRzOiByZXNvdXJjZUV2ZW50cywgbGlzdDogcmVzb3VyY2VzIH0gPSByZXNvdXJjZURhdGFcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBhcmdUeXBlczoge1xcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHREYXRlOiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgICBkZWZhdWx0Vmlldzoge1xcbiAgICAgIGNvbnRyb2w6IHtcXG4gICAgICAgIHR5cGU6IG51bGwsXFxuICAgICAgfSxcXG4gICAgfSxcXG4gIH0sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVxcblxcbmV4cG9ydCBjb25zdCBSZXNvdXJjZXMgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcblJlc291cmNlcy5zdG9yeU5hbWUgPSAncmVzb3VyY2VzJ1xcblJlc291cmNlcy5hcmdzID0ge1xcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDQpLFxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLkRBWSxcXG4gIGV2ZW50czogcmVzb3VyY2VFdmVudHMsXFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXFxuICByZXNvdXJjZXMsXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJSZXNvdXJjZXNcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjM1fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzl9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzV9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzl9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IHJlc291cmNlRGF0YSBmcm9tICcuLi9yZXNvdXJjZXMvcmVzb3VyY2VFdmVudHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vcmVzb3VyY2VzLm1keCdcblxuY29uc3QgeyBldmVudHM6IHJlc291cmNlRXZlbnRzLCBsaXN0OiByZXNvdXJjZXMgfSA9IHJlc291cmNlRGF0YVxuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZToge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGRlZmF1bHRWaWV3OiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cbiAgPC9kaXY+XG4pXG5cbmV4cG9ydCBjb25zdCBSZXNvdXJjZXMgPSBUZW1wbGF0ZS5iaW5kKHt9KTtSZXNvdXJjZXMuc3RvcnlOYW1lID0gJ3Jlc291cmNlcydcblJlc291cmNlcy5hcmdzID0ge1xuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgNCksXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5EQVksXG4gIGV2ZW50czogcmVzb3VyY2VFdmVudHMsXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcbiAgcmVzb3VyY2VzLFxufVxuXG5cblxuUmVzb3VyY2VzLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCIoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcIiB9LCAuLi5SZXNvdXJjZXMucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcInJ0bFwiXG4gICAgfX0+e2BydGxgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZhbHNlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgU3dpdGNoIHRoZSBjYWxlbmRhciB0byBhIHJpZ2h0LXRvLWxlZnQgcmVhZCBkaXJlY3Rpb24uIEJlc3QgaWYgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIHlvdXIgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwibG9jYWxpemVyXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgbG9jYWxpemVyYH08L0xpbmtUbz57YCBhbmQgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwibWVzc2FnZXNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BtZXNzYWdlc2B9PC9MaW5rVG8+e2AgcHJvcHMuYH08L3A+XG4gICAgPHA+e2BTZWUgdGhlIGB9PExpbmtUbyBraW5kPVwiZXhhbXBsZXNcIiBzdG9yeT1cImV4YW1wbGUtNVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YExvY2FsaXphdGlvbiBFeGFtcGxlYH08L0xpbmtUbz57YCBmb3IgYW5vdGhlciBleGFtcGxlIG9mIGNvbWJpbmluZyBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BydGxgfTwvaW5saW5lQ29kZT57YCwgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgbG9jYWxpemVyYH08L2lubGluZUNvZGU+e2AsIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGN1bHR1cmVgfTwvaW5saW5lQ29kZT57YCBhbmQgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgbWVzc2FnZXNgfTwvaW5saW5lQ29kZT57YC5gfTwvcD5cbiAgICA8U3RvcnkgaWQ9XCJwcm9wcy0tcmlnaHQtdG8tbGVmdFwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9ydGwubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZGVmYXVsdERhdGU6IHtcXG4gICAgICBjb250cm9sOiB7XFxuICAgICAgICB0eXBlOiBudWxsLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICAgIHJ0bDogJ2Jvb2xlYW4nLFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbi8vIFRPRE86IGxvY2FsaXplIGV4YW1wbGUgZm9yIEFyYWJpY1xcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IFJpZ2h0VG9MZWZ0ID0gVGVtcGxhdGUuYmluZCh7fSlcXG5SaWdodFRvTGVmdC5zdG9yeU5hbWUgPSAncnRsJ1xcblJpZ2h0VG9MZWZ0LmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbiAgcnRsOiB0cnVlLFxcbiAgbWVzc2FnZXM6IHtcXG4gICAgd2VlazogJ9ij2LPYqNmI2LknLFxcbiAgICB3b3JrX3dlZWs6ICfYo9iz2KjZiNi5INin2YTYudmF2YQnLFxcbiAgICBkYXk6ICfZitmI2YUnLFxcbiAgICBtb250aDogJ9i02YfYsScsXFxuICAgIHByZXZpb3VzOiAn2LPYp9io2YInLFxcbiAgICBuZXh0OiAn2KfZhNiq2KfZhNmKJyxcXG4gICAgdG9kYXk6ICfYp9mE2YrZiNmFJyxcXG4gICAgYWdlbmRhOiAn2KzYr9mI2YQg2KPYudmF2KfZhCcsXFxuXFxuICAgIHNob3dNb3JlOiAodG90YWwpID0+IGArJHt0b3RhbH0g2KXYttin2YHZimAsXFxuICB9LFxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiUmlnaHRUb0xlZnRcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjMwfSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MzR9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzB9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MzR9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL3J0bC5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBhcmdUeXBlczoge1xuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGV2ZW50czogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHREYXRlOiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gICAgcnRsOiAnYm9vbGVhbicsXG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuLy8gVE9ETzogbG9jYWxpemUgZXhhbXBsZSBmb3IgQXJhYmljXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IFJpZ2h0VG9MZWZ0ID0gVGVtcGxhdGUuYmluZCh7fSk7UmlnaHRUb0xlZnQuc3RvcnlOYW1lID0gJ3J0bCdcblJpZ2h0VG9MZWZ0LmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gIGV2ZW50czogZGVtb0V2ZW50cyxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxuICBydGw6IHRydWUsXG4gIG1lc3NhZ2VzOiB7XG4gICAgd2VlazogJ9ij2LPYqNmI2LknLFxuICAgIHdvcmtfd2VlazogJ9ij2LPYqNmI2Lkg2KfZhNi52YXZhCcsXG4gICAgZGF5OiAn2YrZiNmFJyxcbiAgICBtb250aDogJ9i02YfYsScsXG4gICAgcHJldmlvdXM6ICfYs9in2KjZgicsXG4gICAgbmV4dDogJ9in2YTYqtin2YTZiicsXG4gICAgdG9kYXk6ICfYp9mE2YrZiNmFJyxcbiAgICBhZ2VuZGE6ICfYrNiv2YjZhCDYo9i52YXYp9mEJyxcblxuICAgIHNob3dNb3JlOiAodG90YWwpID0+IGArJHt0b3RhbH0g2KXYttin2YHZimAsXG4gIH0sXG59XG5cblxuXG5SaWdodFRvTGVmdC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uUmlnaHRUb0xlZnQucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcInNjcm9sbHRvdGltZVwiXG4gICAgfX0+e2BzY3JvbGxUb1RpbWVgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGluc3RhbmNlT2YoRGF0ZSlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG5ldyBEYXRlKClgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BEZXRlcm1pbmVzIGhvdyBmYXIgZG93biB0aGUgc2Nyb2xsIHBhbmUgaXMgaW5pdGlhbGx5IHNjcm9sbGVkIGRvd24uYH08L3A+XG4gICAgPFN0b3J5IGlkPVwicHJvcHMtLXNjcm9sbC10by10aW1lXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9zY3JvbGxUb1RpbWUubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0RGF0ZTogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBkZWZhdWx0VmlldzogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgc2Nyb2xsVG9UaW1lOiB7IGNvbnRyb2w6IHsgdHlwZTogJ2RhdGUnIH0gfSxcXG4gIH0sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVxcblxcbmV4cG9ydCBjb25zdCBTY3JvbGxUb1RpbWUgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcblNjcm9sbFRvVGltZS5zdG9yeU5hbWUgPSAnc2Nyb2xsVG9UaW1lJ1xcblNjcm9sbFRvVGltZS5hcmdzID0ge1xcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbiAgc2Nyb2xsVG9UaW1lOiBuZXcgRGF0ZSgxOTcyLCAwLCAxLCAyMiksXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJTY3JvbGxUb1RpbWVcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjI2fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MzB9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjZ9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MzB9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9zY3JvbGxUb1RpbWUubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZTogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHRWaWV3OiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgc2Nyb2xsVG9UaW1lOiB7IGNvbnRyb2w6IHsgdHlwZTogJ2RhdGUnIH0gfSxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IFNjcm9sbFRvVGltZSA9IFRlbXBsYXRlLmJpbmQoe30pO1Njcm9sbFRvVGltZS5zdG9yeU5hbWUgPSAnc2Nyb2xsVG9UaW1lJ1xuU2Nyb2xsVG9UaW1lLmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxuICBldmVudHM6IGRlbW9FdmVudHMsXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcbiAgc2Nyb2xsVG9UaW1lOiBuZXcgRGF0ZSgxOTcyLCAwLCAxLCAyMiksXG59XG5cblxuXG5TY3JvbGxUb1RpbWUucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLlNjcm9sbFRvVGltZS5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwic2VsZWN0YWJsZVwiXG4gICAgfX0+e2BzZWxlY3RhYmxlYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2Bib29sZWFuIHwgJ2lnbm9yZUV2ZW50cydgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BBbGxvd3MgbW91c2Ugc2VsZWN0aW9uIG9mIHJhbmdlcyBvZiBkYXRlcy90aW1lcy5gfTwvcD5cbiAgICA8cD57YFRoZSAnaWdub3JlRXZlbnRzJyBvcHRpb24gcHJldmVudHMgc2VsZWN0aW9uIGNvZGUgZnJvbSBydW5uaW5nIHdoZW4gYSBkcmFnIGJlZ2lucyBvdmVyIGFuIGV2ZW50LiBVc2VmdWwgd2hlbiB5b3Ugd2FudCBjdXN0b20gZXZlbnQgY2xpY2sgb3IgZHJhZyBsb2dpY2B9PC9wPlxuICAgIDxDYW52YXMgbWR4VHlwZT1cIkNhbnZhc1wiPlxuICA8U3RvcnkgaWQ9XCJwcm9wcy0tc2VsZWN0YWJsZVwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlRWZmZWN0LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9zZWxlY3RhYmxlLm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5mdW5jdGlvbiBidWlsZE1lc3NhZ2Uoc2xvdEluZm8pIHtcXG4gIHJldHVybiBgW29uU2VsZWN0U2xvdF0gYSBkYXRlIHNlbGVjdGlvbiB3YXMgbWFkZSwgcGFzc2luZyAnc2xvdEluZm8nXFxuICAke0pTT04uc3RyaW5naWZ5KHNsb3RJbmZvLCBudWxsLCAyKX1gXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBTZWxlY3RhYmxlKCkge1xcbiAgY29uc3QgY2xpY2tSZWYgPSB1c2VSZWYobnVsbClcXG5cXG4gIHVzZUVmZmVjdCgoKSA9PiB7XFxuICAgIC8qKlxcbiAgICAgKiBXaGF0IElzIFRoaXM/XFxuICAgICAqIFRoaXMgaXMgdG8gcHJldmVudCBhIG1lbW9yeSBsZWFrLCBpbiB0aGUgb2ZmIGNoYW5jZSB0aGF0IHlvdVxcbiAgICAgKiB0ZWFyZG93biB5b3VyIGludGVyZmFjZSBwcmlvciB0byB0aGUgdGltZWQgbWV0aG9kIGJlaW5nIGNhbGxlZC5cXG4gICAgICovXFxuICAgIHJldHVybiAoKSA9PiB7XFxuICAgICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcXG4gICAgfVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBvblNlbGVjdFNsb3QgPSB1c2VDYWxsYmFjaygoc2xvdEluZm8pID0+IHtcXG4gICAgLyoqXFxuICAgICAqIEhlcmUgd2UgYXJlIHdhaXRpbmcgMjUwIG1pbGxpc2Vjb25kcyBwcmlvciB0byBmaXJpbmdcXG4gICAgICogb3VyIG1ldGhvZC4gV2h5PyBCZWNhdXNlIGJvdGggJ2NsaWNrJyBhbmQgJ2RvdWJsZUNsaWNrJ1xcbiAgICAgKiB3b3VsZCBmaXJlLCBpbiB0aGUgZXZlbnQgb2YgYSAnZG91YmxlQ2xpY2snLiBCeSBkb2luZ1xcbiAgICAgKiB0aGlzLCB0aGUgJ2NsaWNrJyBoYW5kbGVyIGlzIG92ZXJyaWRkZW4gYnkgdGhlICdkb3VibGVDbGljaydcXG4gICAgICogYWN0aW9uLlxcbiAgICAgKi9cXG4gICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcXG4gICAgY2xpY2tSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcXG4gICAgICB3aW5kb3cuYWxlcnQoYnVpbGRNZXNzYWdlKHNsb3RJbmZvKSlcXG4gICAgfSwgMjUwKVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBkZWZhdWx0RGF0ZSA9IHVzZU1lbW8oKCkgPT4gbmV3IERhdGUoMjAxNSwgMywgMSksIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvblNlbGVjdFNsb3Q9e29uU2VsZWN0U2xvdH1cXG4gICAgICAgIHNlbGVjdGFibGVcXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuU2VsZWN0YWJsZS5zdG9yeU5hbWUgPSAnc2VsZWN0YWJsZSdcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiU2VsZWN0YWJsZVwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoyNH0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjY1fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MjR9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6NjV9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlRWZmZWN0LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL3NlbGVjdGFibGUubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5mdW5jdGlvbiBidWlsZE1lc3NhZ2Uoc2xvdEluZm8pIHtcbiAgcmV0dXJuIGBbb25TZWxlY3RTbG90XSBhIGRhdGUgc2VsZWN0aW9uIHdhcyBtYWRlLCBwYXNzaW5nICdzbG90SW5mbydcbiAgJHtKU09OLnN0cmluZ2lmeShzbG90SW5mbywgbnVsbCwgMil9YFxufVxuXG5leHBvcnQgY29uc3QgU2VsZWN0YWJsZSA9IGZ1bmN0aW9uIFNlbGVjdGFibGUoKSB7XG4gIGNvbnN0IGNsaWNrUmVmID0gdXNlUmVmKG51bGwpXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvKipcbiAgICAgKiBXaGF0IElzIFRoaXM/XG4gICAgICogVGhpcyBpcyB0byBwcmV2ZW50IGEgbWVtb3J5IGxlYWssIGluIHRoZSBvZmYgY2hhbmNlIHRoYXQgeW91XG4gICAgICogdGVhcmRvd24geW91ciBpbnRlcmZhY2UgcHJpb3IgdG8gdGhlIHRpbWVkIG1ldGhvZCBiZWluZyBjYWxsZWQuXG4gICAgICovXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXG4gICAgfVxuICB9LCBbXSlcblxuICBjb25zdCBvblNlbGVjdFNsb3QgPSB1c2VDYWxsYmFjaygoc2xvdEluZm8pID0+IHtcbiAgICAvKipcbiAgICAgKiBIZXJlIHdlIGFyZSB3YWl0aW5nIDI1MCBtaWxsaXNlY29uZHMgcHJpb3IgdG8gZmlyaW5nXG4gICAgICogb3VyIG1ldGhvZC4gV2h5PyBCZWNhdXNlIGJvdGggJ2NsaWNrJyBhbmQgJ2RvdWJsZUNsaWNrJ1xuICAgICAqIHdvdWxkIGZpcmUsIGluIHRoZSBldmVudCBvZiBhICdkb3VibGVDbGljaycuIEJ5IGRvaW5nXG4gICAgICogdGhpcywgdGhlICdjbGljaycgaGFuZGxlciBpcyBvdmVycmlkZGVuIGJ5IHRoZSAnZG91YmxlQ2xpY2snXG4gICAgICogYWN0aW9uLlxuICAgICAqL1xuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXG4gICAgY2xpY2tSZWYuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2Uoc2xvdEluZm8pKVxuICAgIH0sIDI1MClcbiAgfSwgW10pXG5cbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEpLCBbXSlcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgICAgb25TZWxlY3RTbG90PXtvblNlbGVjdFNsb3R9XG4gICAgICAgIHNlbGVjdGFibGVcbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gIClcbn07U2VsZWN0YWJsZS5zdG9yeU5hbWUgPSAnc2VsZWN0YWJsZSdcblxuXG5cblNlbGVjdGFibGUucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcImZ1bmN0aW9uIFNlbGVjdGFibGUoKSB7XFxuICBjb25zdCBjbGlja1JlZiA9IHVzZVJlZihudWxsKVxcblxcbiAgdXNlRWZmZWN0KCgpID0+IHtcXG4gICAgLyoqXFxuICAgICAqIFdoYXQgSXMgVGhpcz9cXG4gICAgICogVGhpcyBpcyB0byBwcmV2ZW50IGEgbWVtb3J5IGxlYWssIGluIHRoZSBvZmYgY2hhbmNlIHRoYXQgeW91XFxuICAgICAqIHRlYXJkb3duIHlvdXIgaW50ZXJmYWNlIHByaW9yIHRvIHRoZSB0aW1lZCBtZXRob2QgYmVpbmcgY2FsbGVkLlxcbiAgICAgKi9cXG4gICAgcmV0dXJuICgpID0+IHtcXG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxcbiAgICB9XFxuICB9LCBbXSlcXG5cXG4gIGNvbnN0IG9uU2VsZWN0U2xvdCA9IHVzZUNhbGxiYWNrKChzbG90SW5mbykgPT4ge1xcbiAgICAvKipcXG4gICAgICogSGVyZSB3ZSBhcmUgd2FpdGluZyAyNTAgbWlsbGlzZWNvbmRzIHByaW9yIHRvIGZpcmluZ1xcbiAgICAgKiBvdXIgbWV0aG9kLiBXaHk/IEJlY2F1c2UgYm90aCAnY2xpY2snIGFuZCAnZG91YmxlQ2xpY2snXFxuICAgICAqIHdvdWxkIGZpcmUsIGluIHRoZSBldmVudCBvZiBhICdkb3VibGVDbGljaycuIEJ5IGRvaW5nXFxuICAgICAqIHRoaXMsIHRoZSAnY2xpY2snIGhhbmRsZXIgaXMgb3ZlcnJpZGRlbiBieSB0aGUgJ2RvdWJsZUNsaWNrJ1xcbiAgICAgKiBhY3Rpb24uXFxuICAgICAqL1xcbiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxcbiAgICBjbGlja1JlZi5jdXJyZW50ID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xcbiAgICAgIHdpbmRvdy5hbGVydChidWlsZE1lc3NhZ2Uoc2xvdEluZm8pKVxcbiAgICB9LCAyNTApXFxuICB9LCBbXSlcXG5cXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSwgW10pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIG9uU2VsZWN0U2xvdD17b25TZWxlY3RTbG90fVxcbiAgICAgICAgc2VsZWN0YWJsZVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5TZWxlY3RhYmxlLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJzZWxlY3RlZFwiXG4gICAgfX0+e2BzZWxlY3RlZGB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgRXZlbnQ6IE9iamVjdGB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRoZSBzZWxlY3RlZCBldmVudCwgaWYgYW55LiBCeSBkZWZhdWx0LCBCaWcgQ2FsZW5kYXIgJ2NvbnRyb2xzJyB0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgc2VsZWN0ZWRgfTwvaW5saW5lQ29kZT57YCAoaGlnaGxpZ2h0ZWQpIGV2ZW50IGluIHRoZSBkaXNwbGF5LiBZb3UgY2FuIHVzZSB0aGlzIHByb3AgdG8gY29udHJvbCB3aGljaCBldmVudCBpcyBoaWdobGlnaHRlZC4gVGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHNlbGVjdGVkYH08L2lubGluZUNvZGU+e2AgZXZlbnQgbXVzdCBiZSBhIG9iamVjdCByZWZlcmVuY2UgdG8gdGhlIGV2ZW50IHdpdGhpbiB0aGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZXZlbnRzXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgZXZlbnRzYH08L0xpbmtUbz57YCBhcnJheS5gfTwvcD5cbiAgICA8cD57YE9mdGVuIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJvbi1zZWxlY3QtZXZlbnRcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BPblNlbGVjdEV2ZW50YH08L0xpbmtUbz57YCBhbmQvb3IgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwib24tZG91YmxlLWNsaWNrLWV2ZW50XCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgb25Eb3VibGVDbGlja0V2ZW50YH08L0xpbmtUbz57YC5gfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLXNlbGVjdGVkXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L0NhbnZhcz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlRWZmZWN0LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9zZWxlY3RlZC5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIFNlbGVjdGVkKCkge1xcbiAgY29uc3QgW3NlbGVjdGVkLCBzZXRTZWxlY3RlZF0gPSB1c2VTdGF0ZSgoKSA9PiB7XFxuICAgIC8vIGxldCdzIG1ha2UgYW4gaW5pdGlhbCBzZWxlY3Rpb25cXG4gICAgcmV0dXJuIGRlbW9FdmVudHMuZmluZChcXG4gICAgICAoZXZlbnQpID0+IGV2ZW50LnRpdGxlID09PSAnSXRhZXdvbiBIYWxsb3dlZW4gTWVldGluZydcXG4gICAgKVxcbiAgfSlcXG4gIGNvbnN0IGNsaWNrUmVmID0gdXNlUmVmKG51bGwpXFxuXFxuICB1c2VFZmZlY3QoKCkgPT4ge1xcbiAgICAvKipcXG4gICAgICogV2hhdCBJcyBUaGlzP1xcbiAgICAgKiBUaGlzIGlzIHRvIHByZXZlbnQgYSBtZW1vcnkgbGVhaywgaW4gdGhlIG9mZiBjaGFuY2UgdGhhdCB5b3VcXG4gICAgICogdGVhcmRvd24geW91ciBpbnRlcmZhY2UgcHJpb3IgdG8gdGhlIHRpbWVkIG1ldGhvZCBiZWluZyBjYWxsZWQuXFxuICAgICAqL1xcbiAgICByZXR1cm4gKCkgPT4ge1xcbiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2xpY2tSZWY/LmN1cnJlbnQpXFxuICAgIH1cXG4gIH0sIFtdKVxcblxcbiAgY29uc3Qgb25TZWxlY3RFdmVudCA9IHVzZUNhbGxiYWNrKFxcbiAgICAoY2FsRXZlbnQpID0+IHtcXG4gICAgICAvKipcXG4gICAgICAgKiBIZXJlIHdlIGFyZSB3YWl0aW5nIDI1MCBtaWxsaXNlY29uZHMgKHVzZSB3aGF0IHlvdSB3YW50KSBwcmlvciB0byBmaXJpbmdcXG4gICAgICAgKiBvdXIgbWV0aG9kLiBXaHk/IEJlY2F1c2UgYm90aCAnY2xpY2snIGFuZCAnZG91YmxlQ2xpY2snXFxuICAgICAgICogd291bGQgZmlyZSwgaW4gdGhlIGV2ZW50IG9mIGEgJ2RvdWJsZUNsaWNrJy4gQnkgZG9pbmdcXG4gICAgICAgKiB0aGlzLCB0aGUgJ2NsaWNrJyBoYW5kbGVyIGlzIG92ZXJyaWRkZW4gYnkgdGhlICdkb3VibGVDbGljaydcXG4gICAgICAgKiBhY3Rpb24uXFxuICAgICAgICovXFxuICAgICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcXG4gICAgICBjbGlja1JlZi5jdXJyZW50ID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xcbiAgICAgICAgc2V0U2VsZWN0ZWQoY2FsRXZlbnQpXFxuICAgICAgfSwgMjUwKVxcbiAgICB9LFxcbiAgICBbc2V0U2VsZWN0ZWRdXFxuICApXFxuXFxuICBjb25zdCBkZWZhdWx0RGF0ZSA9IHVzZU1lbW8oKCkgPT4gbmV3IERhdGUoMjAxNSwgMywgMSksIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgICBvblNlbGVjdEV2ZW50PXtvblNlbGVjdEV2ZW50fVxcbiAgICAgICAgc2VsZWN0ZWQ9e3NlbGVjdGVkfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5TZWxlY3RlZC5zdG9yeU5hbWUgPSAnc2VsZWN0ZWQnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlNlbGVjdGVkXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6Njl9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjo2OX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlRWZmZWN0LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL3NlbGVjdGVkLm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IFNlbGVjdGVkID0gZnVuY3Rpb24gU2VsZWN0ZWQoKSB7XG4gIGNvbnN0IFtzZWxlY3RlZCwgc2V0U2VsZWN0ZWRdID0gdXNlU3RhdGUoKCkgPT4ge1xuICAgIC8vIGxldCdzIG1ha2UgYW4gaW5pdGlhbCBzZWxlY3Rpb25cbiAgICByZXR1cm4gZGVtb0V2ZW50cy5maW5kKFxuICAgICAgKGV2ZW50KSA9PiBldmVudC50aXRsZSA9PT0gJ0l0YWV3b24gSGFsbG93ZWVuIE1lZXRpbmcnXG4gICAgKVxuICB9KVxuICBjb25zdCBjbGlja1JlZiA9IHVzZVJlZihudWxsKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLyoqXG4gICAgICogV2hhdCBJcyBUaGlzP1xuICAgICAqIFRoaXMgaXMgdG8gcHJldmVudCBhIG1lbW9yeSBsZWFrLCBpbiB0aGUgb2ZmIGNoYW5jZSB0aGF0IHlvdVxuICAgICAqIHRlYXJkb3duIHlvdXIgaW50ZXJmYWNlIHByaW9yIHRvIHRoZSB0aW1lZCBtZXRob2QgYmVpbmcgY2FsbGVkLlxuICAgICAqL1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxuICAgIH1cbiAgfSwgW10pXG5cbiAgY29uc3Qgb25TZWxlY3RFdmVudCA9IHVzZUNhbGxiYWNrKFxuICAgIChjYWxFdmVudCkgPT4ge1xuICAgICAgLyoqXG4gICAgICAgKiBIZXJlIHdlIGFyZSB3YWl0aW5nIDI1MCBtaWxsaXNlY29uZHMgKHVzZSB3aGF0IHlvdSB3YW50KSBwcmlvciB0byBmaXJpbmdcbiAgICAgICAqIG91ciBtZXRob2QuIFdoeT8gQmVjYXVzZSBib3RoICdjbGljaycgYW5kICdkb3VibGVDbGljaydcbiAgICAgICAqIHdvdWxkIGZpcmUsIGluIHRoZSBldmVudCBvZiBhICdkb3VibGVDbGljaycuIEJ5IGRvaW5nXG4gICAgICAgKiB0aGlzLCB0aGUgJ2NsaWNrJyBoYW5kbGVyIGlzIG92ZXJyaWRkZW4gYnkgdGhlICdkb3VibGVDbGljaydcbiAgICAgICAqIGFjdGlvbi5cbiAgICAgICAqL1xuICAgICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcbiAgICAgIGNsaWNrUmVmLmN1cnJlbnQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHNldFNlbGVjdGVkKGNhbEV2ZW50KVxuICAgICAgfSwgMjUwKVxuICAgIH0sXG4gICAgW3NldFNlbGVjdGVkXVxuICApXG5cbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEpLCBbXSlcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgICAgb25TZWxlY3RFdmVudD17b25TZWxlY3RFdmVudH1cbiAgICAgICAgc2VsZWN0ZWQ9e3NlbGVjdGVkfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtTZWxlY3RlZC5zdG9yeU5hbWUgPSAnc2VsZWN0ZWQnXG5cblxuXG5TZWxlY3RlZC5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gU2VsZWN0ZWQoKSB7XFxuICBjb25zdCBbc2VsZWN0ZWQsIHNldFNlbGVjdGVkXSA9IHVzZVN0YXRlKCgpID0+IHtcXG4gICAgLy8gbGV0J3MgbWFrZSBhbiBpbml0aWFsIHNlbGVjdGlvblxcbiAgICByZXR1cm4gZGVtb0V2ZW50cy5maW5kKFxcbiAgICAgIChldmVudCkgPT4gZXZlbnQudGl0bGUgPT09ICdJdGFld29uIEhhbGxvd2VlbiBNZWV0aW5nJ1xcbiAgICApXFxuICB9KVxcbiAgY29uc3QgY2xpY2tSZWYgPSB1c2VSZWYobnVsbClcXG5cXG4gIHVzZUVmZmVjdCgoKSA9PiB7XFxuICAgIC8qKlxcbiAgICAgKiBXaGF0IElzIFRoaXM/XFxuICAgICAqIFRoaXMgaXMgdG8gcHJldmVudCBhIG1lbW9yeSBsZWFrLCBpbiB0aGUgb2ZmIGNoYW5jZSB0aGF0IHlvdVxcbiAgICAgKiB0ZWFyZG93biB5b3VyIGludGVyZmFjZSBwcmlvciB0byB0aGUgdGltZWQgbWV0aG9kIGJlaW5nIGNhbGxlZC5cXG4gICAgICovXFxuICAgIHJldHVybiAoKSA9PiB7XFxuICAgICAgd2luZG93LmNsZWFyVGltZW91dChjbGlja1JlZj8uY3VycmVudClcXG4gICAgfVxcbiAgfSwgW10pXFxuXFxuICBjb25zdCBvblNlbGVjdEV2ZW50ID0gdXNlQ2FsbGJhY2soXFxuICAgIChjYWxFdmVudCkgPT4ge1xcbiAgICAgIC8qKlxcbiAgICAgICAqIEhlcmUgd2UgYXJlIHdhaXRpbmcgMjUwIG1pbGxpc2Vjb25kcyAodXNlIHdoYXQgeW91IHdhbnQpIHByaW9yIHRvIGZpcmluZ1xcbiAgICAgICAqIG91ciBtZXRob2QuIFdoeT8gQmVjYXVzZSBib3RoICdjbGljaycgYW5kICdkb3VibGVDbGljaydcXG4gICAgICAgKiB3b3VsZCBmaXJlLCBpbiB0aGUgZXZlbnQgb2YgYSAnZG91YmxlQ2xpY2snLiBCeSBkb2luZ1xcbiAgICAgICAqIHRoaXMsIHRoZSAnY2xpY2snIGhhbmRsZXIgaXMgb3ZlcnJpZGRlbiBieSB0aGUgJ2RvdWJsZUNsaWNrJ1xcbiAgICAgICAqIGFjdGlvbi5cXG4gICAgICAgKi9cXG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNsaWNrUmVmPy5jdXJyZW50KVxcbiAgICAgIGNsaWNrUmVmLmN1cnJlbnQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XFxuICAgICAgICBzZXRTZWxlY3RlZChjYWxFdmVudClcXG4gICAgICB9LCAyNTApXFxuICAgIH0sXFxuICAgIFtzZXRTZWxlY3RlZF1cXG4gIClcXG5cXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxKSwgW10pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIG9uU2VsZWN0RXZlbnQ9e29uU2VsZWN0RXZlbnR9XFxuICAgICAgICBzZWxlY3RlZD17c2VsZWN0ZWR9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVwiIH0sIC4uLlNlbGVjdGVkLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJzaG93YWxsZXZlbnRzXCJcbiAgICB9fT57YHNob3dBbGxFdmVudHNgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZhbHNlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgRGlzcGxheXMgYWxsIGV2ZW50cyBvbiB0aGUgbW9udGggdmlldyBpbnN0ZWFkIG9mIGhhdmluZyBzb21lIGhpZGRlbiBiZWhpbmQgK3tjb3VudH0gbW9yZS4gVGhpcyB3aWxsIGNhdXNlIHRoZSByb3dzIGluIHRoZSBtb250aCB2aWV3IHRvIGJlIHNjcm9sbGFibGUgaWYgdGhlIG51bWJlciBvZiBldmVudHMgZXhjZWVkIHRoZSBoZWlnaHQgb2YgdGhlIHJvdy5gfTwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLXNob3ctYWxsLWV2ZW50c1wiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9zaG93QWxsRXZlbnRzLm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBhcmdUeXBlczoge1xcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHREYXRlOiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgICBzaG93QWxsRXZlbnRzOiAnYm9vbGVhbicsXFxuICB9LFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcXG5cXG5leHBvcnQgY29uc3QgU2hvd0FsbEV2ZW50cyA9IFRlbXBsYXRlLmJpbmQoe30pXFxuU2hvd0FsbEV2ZW50cy5zdG9yeU5hbWUgPSAnc2hvd0FsbEV2ZW50cydcXG5TaG93QWxsRXZlbnRzLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbiAgc2hvd0FsbEV2ZW50czogdHJ1ZSxcXG59XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlNob3dBbGxFdmVudHNcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjI5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MzN9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6Mjl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MzN9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL3Nob3dBbGxFdmVudHMubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZToge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgfSxcbiAgICB9LFxuICAgIHNob3dBbGxFdmVudHM6ICdib29sZWFuJyxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IFNob3dBbGxFdmVudHMgPSBUZW1wbGF0ZS5iaW5kKHt9KTtTaG93QWxsRXZlbnRzLnN0b3J5TmFtZSA9ICdzaG93QWxsRXZlbnRzJ1xuU2hvd0FsbEV2ZW50cy5hcmdzID0ge1xuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxuICBldmVudHM6IGRlbW9FdmVudHMsXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcbiAgc2hvd0FsbEV2ZW50czogdHJ1ZSxcbn1cblxuXG5cblNob3dBbGxFdmVudHMucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLlNob3dBbGxFdmVudHMucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcInNob3dtdWx0aWRheXRpbWVzXCJcbiAgICB9fT57YHNob3dNdWx0aURheVRpbWVzYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2Bib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmYWxzZWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFN1cHBvcnQgdG8gc2hvdyBtdWx0aS1kYXkgZXZlbnRzIHdpdGggc3BlY2lmaWMgc3RhcnQgYW5kIGVuZCB0aW1lcyBpbiB0aGUgbWFpbiB0aW1lIGdyaWQgKHJhdGhlciB0aGFuIGluIHRoZSBhbGwgZGF5IGhlYWRlcikuYH08L3A+XG4gICAgPHA+PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgTm90ZTogVGhpcyBtYXkgY2F1c2UgY2FsZW5kYXJzIHdpdGggc2V2ZXJhbCBldmVudHMgdG8gbG9vayB2ZXJ5IGJ1c3kgaW4gdGhlIHdlZWsgYW5kIGRheSB2aWV3cy5gfTwvc3Ryb25nPjwvcD5cbiAgICA8U3RvcnkgaWQ9XCJwcm9wcy0tc2hvdy1tdWx0aS1kYXktdGltZXNcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBtZHggZnJvbSAnLi9zaG93TXVsdGlEYXlUaW1lcy5tZHgnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgYXJnVHlwZXM6IHtcXG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHREYXRlOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHRWaWV3OiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIG1heDogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBzaG93TXVsdGlEYXlUaW1lczogJ2Jvb2xlYW4nLFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IFNob3dNdWx0aURheVRpbWVzID0gVGVtcGxhdGUuYmluZCh7fSlcXG5TaG93TXVsdGlEYXlUaW1lcy5zdG9yeU5hbWUgPSAnc2hvd011bHRpRGF5VGltZXMnXFxuU2hvd011bHRpRGF5VGltZXMuYXJncyA9IHtcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE2LCAxMSwgNCksXFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcXG4gIGV2ZW50czogW1xcbiAgICB7XFxuICAgICAgdGl0bGU6ICdzdGFydCBvZiB0aGUgd2VlaycsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDExLCA0LCAxNSksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMSwgNSwgMyksXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ3NpbmdsZSBkYXkgbG9uZ2VyIHRoYW4gbWF4JyxcXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNiwgMTEsIDQsIDE1KSxcXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDExLCA0LCAyMywgMzApLFxcbiAgICB9LFxcbiAgICB7XFxuICAgICAgdGl0bGU6ICdlbmQgb2YgdGhlIHdlZWsnLFxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE2LCAxMSwgMyksXFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE2LCAxMSwgMyksXFxuICAgIH0sXFxuICAgIHtcXG4gICAgICB0aXRsZTogJ21pZGRsZScsXFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDExLCA2KSxcXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDExLCA2KSxcXG4gICAgfSxcXG4gIF0sXFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXFxuICBtYXg6IG1vbWVudCgpLmVuZE9mKCdkYXknKS5hZGQoLTEsICdob3VycycpLnRvRGF0ZSgpLFxcbiAgc2hvd011bHRpRGF5VGltZXM6IHRydWUsXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJTaG93TXVsdGlEYXlUaW1lc1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjV9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoyOX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyOX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgbWR4IGZyb20gJy4vc2hvd011bHRpRGF5VGltZXMubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZTogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxuICAgIGRlZmF1bHRWaWV3OiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgbWF4OiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgc2hvd011bHRpRGF5VGltZXM6ICdib29sZWFuJyxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IFNob3dNdWx0aURheVRpbWVzID0gVGVtcGxhdGUuYmluZCh7fSk7U2hvd011bHRpRGF5VGltZXMuc3RvcnlOYW1lID0gJ3Nob3dNdWx0aURheVRpbWVzJ1xuU2hvd011bHRpRGF5VGltZXMuYXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTYsIDExLCA0KSxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXG4gIGV2ZW50czogW1xuICAgIHtcbiAgICAgIHRpdGxlOiAnc3RhcnQgb2YgdGhlIHdlZWsnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDExLCA0LCAxNSksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDExLCA1LCAzKSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnc2luZ2xlIGRheSBsb25nZXIgdGhhbiBtYXgnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDExLCA0LCAxNSksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDExLCA0LCAyMywgMzApLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdlbmQgb2YgdGhlIHdlZWsnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDExLCAzKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTEsIDMpLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdtaWRkbGUnLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDExLCA2KSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNiwgMTEsIDYpLFxuICAgIH0sXG4gIF0sXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcbiAgbWF4OiBtb21lbnQoKS5lbmRPZignZGF5JykuYWRkKC0xLCAnaG91cnMnKS50b0RhdGUoKSxcbiAgc2hvd011bHRpRGF5VGltZXM6IHRydWUsXG59XG5cblxuXG5TaG93TXVsdGlEYXlUaW1lcy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uU2hvd011bHRpRGF5VGltZXMucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcInNsb3Rncm91cHByb3BnZXR0ZXJcIlxuICAgIH19Pntgc2xvdEdyb3VwUHJvcEdldHRlcmB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGdyb3VwOiBEYXRlW10pID0+IHsgc3R5bGU/OiBPYmplY3QgfWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YE9wdGlvbmFsbHkgcHJvdmlkZSBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhbiBvYmplY3Qgb2YgY2xhc3NOYW1lIG9yIHN0eWxlIHByb3BzIHRvIGJlIGFwcGxpZWQgdG8gdGhlIHRpbWUtc2xvdCBub2RlLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YENhdXRpb24hIFN0eWxlcyB0aGF0IGNoYW5nZSBsYXlvdXQgb3IgcG9zaXRpb24gbWF5IGJyZWFrIHRoZSBjYWxlbmRhciBpbiB1bmV4cGVjdGVkIHdheXMuYH08L3N0cm9uZz48L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1zbG90LWdyb3VwLXByb3AtZ2V0dGVyXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L0NhbnZhcz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL3Nsb3RHcm91cFByb3BHZXR0ZXIubWR4J1xcbmltcG9ydCAnLi4vcmVzb3VyY2VzL3Byb3BHZXR0ZXIuc2NzcydcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gU2xvdEdyb3VwUHJvcEdldHRlcigpIHtcXG4gIGNvbnN0IHNsb3RHcm91cFByb3BHZXR0ZXIgPSB1c2VDYWxsYmFjayhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBzdHlsZToge1xcbiAgICAgICAgbWluSGVpZ2h0OiA2MCxcXG4gICAgICB9LFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cXG4gICAgICAgIHNsb3RHcm91cFByb3BHZXR0ZXI9e3Nsb3RHcm91cFByb3BHZXR0ZXJ9XFxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XFxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVxcblNsb3RHcm91cFByb3BHZXR0ZXIuc3RvcnlOYW1lID0gJ3Nsb3RHcm91cFByb3BHZXR0ZXInXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlNsb3RHcm91cFByb3BHZXR0ZXJcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjcsXCJsaW5lXCI6MjB9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjo0M30sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjo3LFwibGluZVwiOjIwfSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjQzfX19O1xuICAgIFxuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi9zbG90R3JvdXBQcm9wR2V0dGVyLm1keCdcbmltcG9ydCAnLi4vcmVzb3VyY2VzL3Byb3BHZXR0ZXIuc2NzcydcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IFNsb3RHcm91cFByb3BHZXR0ZXIgPSBmdW5jdGlvbiBTbG90R3JvdXBQcm9wR2V0dGVyKCkge1xuICBjb25zdCBzbG90R3JvdXBQcm9wR2V0dGVyID0gdXNlQ2FsbGJhY2soXG4gICAgKCkgPT4gKHtcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIG1pbkhlaWdodDogNjAsXG4gICAgICB9LFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICBjb25zdCBkZWZhdWx0RGF0ZSA9IHVzZU1lbW8oKCkgPT4gbmV3IERhdGUoMjAxNSwgMywgMTMpLCBbXSlcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cbiAgICAgICAgc2xvdEdyb3VwUHJvcEdldHRlcj17c2xvdEdyb3VwUHJvcEdldHRlcn1cbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59O1Nsb3RHcm91cFByb3BHZXR0ZXIuc3RvcnlOYW1lID0gJ3Nsb3RHcm91cFByb3BHZXR0ZXInXG5cblxuXG5TbG90R3JvdXBQcm9wR2V0dGVyLnBhcmFtZXRlcnMgPSB7IHN0b3J5U291cmNlOiB7IHNvdXJjZTogXCJmdW5jdGlvbiBTbG90R3JvdXBQcm9wR2V0dGVyKCkge1xcbiAgY29uc3Qgc2xvdEdyb3VwUHJvcEdldHRlciA9IHVzZUNhbGxiYWNrKFxcbiAgICAoKSA9PiAoe1xcbiAgICAgIHN0eWxlOiB7XFxuICAgICAgICBtaW5IZWlnaHQ6IDYwLFxcbiAgICAgIH0sXFxuICAgIH0pLFxcbiAgICBbXVxcbiAgKVxcblxcbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSwgW10pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxcbiAgICAgICAgc2xvdEdyb3VwUHJvcEdldHRlcj17c2xvdEdyb3VwUHJvcEdldHRlcn1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XCIgfSwgLi4uU2xvdEdyb3VwUHJvcEdldHRlci5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwic2xvdHByb3BnZXR0ZXJcIlxuICAgIH19Pntgc2xvdFByb3BHZXR0ZXJgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChkYXRlOiBEYXRlKSA9PiB7Y2xhc3NOYW1lPzogc3RyaW5nLCBzdHlsZT86IE9iamVjdH1gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BPcHRpb25hbGx5IHByb3ZpZGUgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gb2JqZWN0IG9mIGNsYXNzTmFtZSBvciBzdHlsZSBwcm9wcyB0byBiZSBhcHBsaWVkIHRvIHRoZSB0aGUgdGltZS1zbG90IG5vZGUuYH08L3A+XG4gICAgPHA+PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgQ2F1dGlvbiFgfTwvc3Ryb25nPntgIFN0eWxlcyB0aGF0IGNoYW5nZSBsYXlvdXQgb3IgcG9zaXRpb24gbWF5IGJyZWFrIHRoZSBjYWxlbmRhciBpbiB1bmV4cGVjdGVkIHdheXMuYH08L3A+XG4gICAgPENhbnZhcyBtZHhUeXBlPVwiQ2FudmFzXCI+XG4gIDxTdG9yeSBpZD1cInByb3BzLS1zbG90LXByb3AtZ2V0dGVyXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L0NhbnZhcz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjaywgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL3Nsb3RQcm9wR2V0dGVyLm1keCdcXG5pbXBvcnQgJy4uL3Jlc291cmNlcy9wcm9wR2V0dGVyLnNjc3MnXFxuXFxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgdGl0bGU6ICdwcm9wcycsXFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuZXhwb3J0IGZ1bmN0aW9uIFNsb3RQcm9wR2V0dGVyKCkge1xcbiAgY29uc3Qgc2xvdFByb3BHZXR0ZXIgPSB1c2VDYWxsYmFjayhcXG4gICAgKGRhdGUpID0+ICh7XFxuICAgICAgY2xhc3NOYW1lOiAnc2xvdERlZmF1bHQnLFxcbiAgICAgIC4uLihtb21lbnQoZGF0ZSkuaG91cigpIDwgOCAmJiB7XFxuICAgICAgICBzdHlsZToge1xcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdwb3dkZXJibHVlJyxcXG4gICAgICAgICAgY29sb3I6ICdibGFjaycsXFxuICAgICAgICB9LFxcbiAgICAgIH0pLFxcbiAgICAgIC4uLihtb21lbnQoZGF0ZSkuaG91cigpID4gMTIgJiYge1xcbiAgICAgICAgc3R5bGU6IHtcXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnZGFya2dyZWVuJyxcXG4gICAgICAgICAgY29sb3I6ICd3aGl0ZScsXFxuICAgICAgICB9LFxcbiAgICAgIH0pLFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksIFtdKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XFxuICAgICAgICBkZWZhdWx0Vmlldz17Vmlld3MuV0VFS31cXG4gICAgICAgIHNsb3RQcm9wR2V0dGVyPXtzbG90UHJvcEdldHRlcn1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuU2xvdFByb3BHZXR0ZXIuc3RvcnlOYW1lID0gJ3Nsb3RQcm9wR2V0dGVyJ1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJTbG90UHJvcEdldHRlclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoyMH0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjUzfSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MjB9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6NTN9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL3Nsb3RQcm9wR2V0dGVyLm1keCdcbmltcG9ydCAnLi4vcmVzb3VyY2VzL3Byb3BHZXR0ZXIuc2NzcydcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IFNsb3RQcm9wR2V0dGVyID0gZnVuY3Rpb24gU2xvdFByb3BHZXR0ZXIoKSB7XG4gIGNvbnN0IHNsb3RQcm9wR2V0dGVyID0gdXNlQ2FsbGJhY2soXG4gICAgKGRhdGUpID0+ICh7XG4gICAgICBjbGFzc05hbWU6ICdzbG90RGVmYXVsdCcsXG4gICAgICAuLi4obW9tZW50KGRhdGUpLmhvdXIoKSA8IDggJiYge1xuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3Bvd2RlcmJsdWUnLFxuICAgICAgICAgIGNvbG9yOiAnYmxhY2snLFxuICAgICAgICB9LFxuICAgICAgfSksXG4gICAgICAuLi4obW9tZW50KGRhdGUpLmhvdXIoKSA+IDEyICYmIHtcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdkYXJrZ3JlZW4nLFxuICAgICAgICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgICAgICB9LFxuICAgICAgfSksXG4gICAgfSksXG4gICAgW11cbiAgKVxuXG4gIGNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksIFtdKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgIDxDYWxlbmRhclxuICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxuICAgICAgICBzbG90UHJvcEdldHRlcj17c2xvdFByb3BHZXR0ZXJ9XG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtTbG90UHJvcEdldHRlci5zdG9yeU5hbWUgPSAnc2xvdFByb3BHZXR0ZXInXG5cblxuXG5TbG90UHJvcEdldHRlci5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gU2xvdFByb3BHZXR0ZXIoKSB7XFxuICBjb25zdCBzbG90UHJvcEdldHRlciA9IHVzZUNhbGxiYWNrKFxcbiAgICAoZGF0ZSkgPT4gKHtcXG4gICAgICBjbGFzc05hbWU6ICdzbG90RGVmYXVsdCcsXFxuICAgICAgLi4uKG1vbWVudChkYXRlKS5ob3VyKCkgPCA4ICYmIHtcXG4gICAgICAgIHN0eWxlOiB7XFxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3Bvd2RlcmJsdWUnLFxcbiAgICAgICAgICBjb2xvcjogJ2JsYWNrJyxcXG4gICAgICAgIH0sXFxuICAgICAgfSksXFxuICAgICAgLi4uKG1vbWVudChkYXRlKS5ob3VyKCkgPiAxMiAmJiB7XFxuICAgICAgICBzdHlsZToge1xcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdkYXJrZ3JlZW4nLFxcbiAgICAgICAgICBjb2xvcjogJ3doaXRlJyxcXG4gICAgICAgIH0sXFxuICAgICAgfSksXFxuICAgIH0pLFxcbiAgICBbXVxcbiAgKVxcblxcbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSwgW10pXFxuXFxuICByZXR1cm4gKFxcbiAgICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgICA8Q2FsZW5kYXJcXG4gICAgICAgIGRlZmF1bHREYXRlPXtkZWZhdWx0RGF0ZX1cXG4gICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5XRUVLfVxcbiAgICAgICAgc2xvdFByb3BHZXR0ZXI9e3Nsb3RQcm9wR2V0dGVyfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5TbG90UHJvcEdldHRlci5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwic3RhcnRhY2Nlc3NvclwiXG4gICAgfX0+e2BzdGFydEFjY2Vzc29yYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BzdHJpbmcgfCBmdW5jdGlvbiAoZXZlbnQ6IE9iamVjdCkgPT4gRGF0ZWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiAnc3RhcnQnYH08L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BUaGUgc3RhcnQgZGF0ZS90aW1lIG9mIHRoZSBldmVudC4gTXVzdCByZXNvbHZlIHRvIGEgSmF2YVNjcmlwdCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BEYXRlYH08L2lubGluZUNvZGU+e2Agb2JqZWN0LmB9PC9wPlxuICAgIDxTdG9yeSBpZD1cInByb3BzLS1zdGFydC1hY2Nlc3NvclwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IHsgQ2FsZW5kYXIgfSBmcm9tICcuLi8uLi9zcmMnXFxuaW1wb3J0IHsgYWNjZXNzb3JTdG9yeUFyZ3MgfSBmcm9tICcuL3N0b3J5RGVmYXVsdHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL3N0YXJ0QWNjZXNzb3IubWR4J1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZGVmYXVsdERhdGU6IHtcXG4gICAgICBjb250cm9sOiB7XFxuICAgICAgICB0eXBlOiBudWxsLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICB9LFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcXG5cXG5leHBvcnQgY29uc3QgU3RhcnRBY2Nlc3NvciA9IFRlbXBsYXRlLmJpbmQoe30pXFxuU3RhcnRBY2Nlc3Nvci5zdG9yeU5hbWUgPSAnc3RhcnRBY2Nlc3NvcidcXG5TdGFydEFjY2Vzc29yLmFyZ3MgPSBhY2Nlc3NvclN0b3J5QXJnc1xcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJTdGFydEFjY2Vzc29yXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjI5fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjE3LFwibGluZVwiOjI1fSxcImVuZEJvZHlcIjp7XCJjb2xcIjoxLFwibGluZVwiOjI5fX19O1xuICAgIFxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgQ2FsZW5kYXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgeyBhY2Nlc3NvclN0b3J5QXJncyB9IGZyb20gJy4vc3RvcnlEZWZhdWx0cydcbmltcG9ydCBtZHggZnJvbSAnLi9zdGFydEFjY2Vzc29yLm1keCdcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZToge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgY29uc3QgU3RhcnRBY2Nlc3NvciA9IFRlbXBsYXRlLmJpbmQoe30pO1N0YXJ0QWNjZXNzb3Iuc3RvcnlOYW1lID0gJ3N0YXJ0QWNjZXNzb3InXG5TdGFydEFjY2Vzc29yLmFyZ3MgPSBhY2Nlc3NvclN0b3J5QXJnc1xuXG5cblxuU3RhcnRBY2Nlc3Nvci5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uU3RhcnRBY2Nlc3Nvci5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwic3RlcFwiXG4gICAgfX0+e2BzdGVwYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BudW1iZXJgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YDMwYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgRGV0ZXJtaW5lcyB0aGUgc2VsZWN0YWJsZSB0aW1lIGluY3JlbWVudHMgaW4gd2VlayBhbmQgZGF5IHZpZXdzYH08L3A+XG4gICAgPFN0b3J5IGlkPVwicHJvcHMtLXN0ZXBcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL3N0ZXAubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZGVmYXVsdERhdGU6IHtcXG4gICAgICBjb250cm9sOiB7XFxuICAgICAgICB0eXBlOiBudWxsLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICAgIGRlZmF1bHRWaWV3OiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgICBzdGVwOiAnbnVtYmVyJyxcXG4gIH0sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVxcblxcbmV4cG9ydCBjb25zdCBTdGVwID0gVGVtcGxhdGUuYmluZCh7fSlcXG5TdGVwLnN0b3J5TmFtZSA9ICdzdGVwJ1xcblN0ZXAuYXJncyA9IHtcXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXFxuICBkZWZhdWx0VmlldzogVmlld3MuV0VFSyxcXG4gIGV2ZW50czogZGVtb0V2ZW50cyxcXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcXG4gIHN0ZXA6IDE1LFxcbn1cXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiU3RlcFwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzR9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjozOH0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjozNH0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozOH19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL3N0ZXAubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZToge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGRlZmF1bHRWaWV3OiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gICAgc3RlcDogJ251bWJlcicsXG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiPlxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cbiAgPC9kaXY+XG4pXG5cbmV4cG9ydCBjb25zdCBTdGVwID0gVGVtcGxhdGUuYmluZCh7fSk7U3RlcC5zdG9yeU5hbWUgPSAnc3RlcCdcblN0ZXAuYXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcbiAgZGVmYXVsdFZpZXc6IFZpZXdzLldFRUssXG4gIGV2ZW50czogZGVtb0V2ZW50cyxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxuICBzdGVwOiAxNSxcbn1cblxuXG5cblN0ZXAucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLlN0ZXAucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcInRpbWVzbG90c1wiXG4gICAgfX0+e2B0aW1lc2xvdHNgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG51bWJlcmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRoZSBudW1iZXIgb2Ygc2xvdHMgcGVyIFwic2VjdGlvblwiIGluIHRoZSB0aW1lIGdyaWQgdmlld3MuIEFkanVzdCB3aXRoIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInN0ZXBcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BzdGVwYH08L0xpbmtUbz57YCB0byBjaGFuZ2UgdGhlIGRlZmF1bHQgb2YgMSBob3VyIGxvbmcgZ3JvdXBzLCB3aXRoIDMwIG1pbnV0ZSBzbG90cy5gfTwvcD5cbiAgICA8U3RvcnkgaWQ9XCJwcm9wcy0tdGltZXNsb3RzXCIgbWR4VHlwZT1cIlN0b3J5XCIgLz5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTsiLCJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuICAgIC8vIEB0cy1ub2NoZWNrXG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX1NUT1JZX18gPSBcImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcXG5pbXBvcnQgeyBDYWxlbmRhciwgVmlld3MsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi90aW1lc2xvdHMubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZGVmYXVsdERhdGU6IHtcXG4gICAgICBjb250cm9sOiB7XFxuICAgICAgICB0eXBlOiBudWxsLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICAgIGRlZmF1bHRWaWV3OiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgICBzdGVwOiAnbnVtYmVyJyxcXG4gICAgdGltZXNsb3RzOiAnbnVtYmVyJyxcXG4gIH0sXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVxcblxcbmV4cG9ydCBjb25zdCBUaW1lc2xvdHMgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcblRpbWVzbG90cy5zdG9yeU5hbWUgPSAndGltZXNsb3RzJ1xcblRpbWVzbG90cy5hcmdzID0ge1xcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbiAgc3RlcDogMTUsXFxuICB0aW1lc2xvdHM6IDQsXFxufVxcblwiO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19MT0NBVElPTlNfTUFQX18gPSB7XCJUaW1lc2xvdHNcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjM1fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzl9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MzV9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzl9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi90aW1lc2xvdHMubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZToge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGRlZmF1bHRWaWV3OiB7XG4gICAgICBjb250cm9sOiB7XG4gICAgICAgIHR5cGU6IG51bGwsXG4gICAgICB9LFxuICAgIH0sXG4gICAgc3RlcDogJ251bWJlcicsXG4gICAgdGltZXNsb3RzOiAnbnVtYmVyJyxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IFRpbWVzbG90cyA9IFRlbXBsYXRlLmJpbmQoe30pO1RpbWVzbG90cy5zdG9yeU5hbWUgPSAndGltZXNsb3RzJ1xuVGltZXNsb3RzLmFyZ3MgPSB7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gIGRlZmF1bHRWaWV3OiBWaWV3cy5XRUVLLFxuICBldmVudHM6IGRlbW9FdmVudHMsXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcbiAgc3RlcDogMTUsXG4gIHRpbWVzbG90czogNCxcbn1cblxuXG5cblRpbWVzbG90cy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXCIgfSwgLi4uVGltZXNsb3RzLnBhcmFtZXRlcnMgfTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBDYW52YXMsIFN0b3J5IH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJ0aXRsZWFjY2Vzc29yXCJcbiAgICB9fT57YHRpdGxlQWNjZXNzb3JgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YHN0cmluZyB8IGZ1bmN0aW9uIChldmVudDogT2JqZWN0KSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogJ3RpdGxlJ2B9PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQWNjZXNzb3IgZm9yIHRoZSBldmVudCB0aXRsZSwgdXNlZCB0byBkaXNwbGF5IGV2ZW50IGluZm9ybWF0aW9uLiBTaG91bGQgcmVzb2x2ZSB0byBhIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHJlbmRlcmFibGVgfTwvaW5saW5lQ29kZT57YCB2YWx1ZS5gfTwvcD5cbiAgICA8U3RvcnkgaWQ9XCJwcm9wcy0tdGl0bGUtYWNjZXNzb3JcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCB7IENhbGVuZGFyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCB7IGFjY2Vzc29yU3RvcnlBcmdzIH0gZnJvbSAnLi9zdG9yeURlZmF1bHRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi90aXRsZUFjY2Vzc29yLm1keCdcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBhcmdUeXBlczoge1xcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHREYXRlOiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgfSxcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcXG4gIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XFxuICA8L2Rpdj5cXG4pXFxuXFxuZXhwb3J0IGNvbnN0IFRpdGxlQWNjZXNzb3IgPSBUZW1wbGF0ZS5iaW5kKHt9KVxcblRpdGxlQWNjZXNzb3Iuc3RvcnlOYW1lID0gJ3RpdGxlQWNjZXNzb3InXFxuVGl0bGVBY2Nlc3Nvci5hcmdzID0gYWNjZXNzb3JTdG9yeUFyZ3NcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiVGl0bGVBY2Nlc3NvclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjV9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoyOX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyOX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IENhbGVuZGFyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IHsgYWNjZXNzb3JTdG9yeUFyZ3MgfSBmcm9tICcuL3N0b3J5RGVmYXVsdHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vdGl0bGVBY2Nlc3Nvci5tZHgnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIGFyZ1R5cGVzOiB7XG4gICAgbG9jYWxpemVyOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXG4gICAgZGVmYXVsdERhdGU6IHtcbiAgICAgIGNvbnRyb2w6IHtcbiAgICAgICAgdHlwZTogbnVsbCxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IFRpdGxlQWNjZXNzb3IgPSBUZW1wbGF0ZS5iaW5kKHt9KTtUaXRsZUFjY2Vzc29yLnN0b3J5TmFtZSA9ICd0aXRsZUFjY2Vzc29yJ1xuVGl0bGVBY2Nlc3Nvci5hcmdzID0gYWNjZXNzb3JTdG9yeUFyZ3NcblxuXG5cblRpdGxlQWNjZXNzb3IucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLlRpdGxlQWNjZXNzb3IucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcInRvb2xiYXJcIlxuICAgIH19PntgdG9vbGJhcmB9PC9oMT5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgYm9vbGVhbmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgdHJ1ZWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YERldGVybWluZXMgd2hldGhlciB0aGUgdG9vbGJhciBpcyBkaXNwbGF5ZWRgfTwvcD5cbiAgICA8U3RvcnkgaWQ9XCJwcm9wcy0tdG9vbGJhclwiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXFxuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXFxuaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJy4uLy4uL3NyYydcXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi90b29sYmFyLm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBhcmdUeXBlczoge1xcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZXZlbnRzOiB7IGNvbnRyb2w6IHsgdHlwZTogbnVsbCB9IH0sXFxuICAgIGRlZmF1bHREYXRlOiB7XFxuICAgICAgY29udHJvbDoge1xcbiAgICAgICAgdHlwZTogbnVsbCxcXG4gICAgICB9LFxcbiAgICB9LFxcbiAgICB0b29sYmFyOiAnYm9vbGVhbicsXFxuICB9LFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcXG5cXG5leHBvcnQgY29uc3QgVG9vbGJhciA9IFRlbXBsYXRlLmJpbmQoe30pXFxuVG9vbGJhci5zdG9yeU5hbWUgPSAndG9vbGJhcidcXG5Ub29sYmFyLmFyZ3MgPSB7XFxuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxcbiAgZXZlbnRzOiBkZW1vRXZlbnRzLFxcbiAgbG9jYWxpemVyOiBtTG9jYWxpemVyLFxcbiAgdG9vbGJhcjogdHJ1ZSxcXG59XFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlRvb2xiYXJcIjp7XCJzdGFydExvY1wiOntcImNvbFwiOjE3LFwibGluZVwiOjI5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6MzN9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6Mjl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6MzN9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICcuLi8uLi9zcmMnXG5pbXBvcnQgZGVtb0V2ZW50cyBmcm9tICcuLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IG1keCBmcm9tICcuL3Rvb2xiYXIubWR4J1xuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZToge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgfSxcbiAgICB9LFxuICAgIHRvb2xiYXI6ICdib29sZWFuJyxcbiAgfSxcbiAgcGFyYW1ldGVyczoge1xuICAgIGRvY3M6IHtcbiAgICAgIHBhZ2U6IG1keCxcbiAgICB9LFxuICB9LFxufVxuXG5jb25zdCBUZW1wbGF0ZSA9IChhcmdzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IFRvb2xiYXIgPSBUZW1wbGF0ZS5iaW5kKHt9KTtUb29sYmFyLnN0b3J5TmFtZSA9ICd0b29sYmFyJ1xuVG9vbGJhci5hcmdzID0ge1xuICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMTMpLFxuICBldmVudHM6IGRlbW9FdmVudHMsXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcbiAgdG9vbGJhcjogdHJ1ZSxcbn1cblxuXG5cblRvb2xiYXIucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLlRvb2xiYXIucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcInRvb2x0aXBhY2Nlc3NvclwiXG4gICAgfX0+e2B0b29sdGlwQWNjZXNzb3JgfTwvaDE+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YHN0cmluZyB8IGZ1bmN0aW9uIChldmVudDogT2JqZWN0KSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogJ3RpdGxlJ2B9PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQWNjZXNzb3IgZm9yIHRoZSBldmVudCB0b29sdGlwLCB1c2VkIHRvIGRpc3BsYXkgZXZlbnQgaW5mb3JtYXRpb24uIFNob3VsZCByZXNvbHZlIHRvIGEgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgcmVuZGVyYWJsZWB9PC9pbmxpbmVDb2RlPntgIHZhbHVlLiBSZW1vdmVzIHRoZSB0b29sdGlwIGlmIG51bGwuYH08L3A+XG4gICAgPFN0b3J5IGlkPVwicHJvcHMtLXRvb2x0aXAtYWNjZXNzb3JcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xcbmltcG9ydCB7IENhbGVuZGFyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCB7IGFjY2Vzc29yU3RvcnlBcmdzIH0gZnJvbSAnLi9zdG9yeURlZmF1bHRzJ1xcbmltcG9ydCBtZHggZnJvbSAnLi90b29sdGlwQWNjZXNzb3IubWR4J1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIGFyZ1R5cGVzOiB7XFxuICAgIGxvY2FsaXplcjogeyBjb250cm9sOiB7IHR5cGU6IG51bGwgfSB9LFxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcXG4gICAgZGVmYXVsdERhdGU6IHtcXG4gICAgICBjb250cm9sOiB7XFxuICAgICAgICB0eXBlOiBudWxsLFxcbiAgICAgIH0sXFxuICAgIH0sXFxuICB9LFxcbiAgcGFyYW1ldGVyczoge1xcbiAgICBkb2NzOiB7XFxuICAgICAgcGFnZTogbWR4LFxcbiAgICB9LFxcbiAgfSxcXG59XFxuXFxuY29uc3QgVGVtcGxhdGUgPSAoYXJncykgPT4gKFxcbiAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgIDxDYWxlbmRhciB7Li4uYXJnc30gLz5cXG4gIDwvZGl2PlxcbilcXG5cXG5leHBvcnQgY29uc3QgVG9vbHRpcEFjY2Vzc29yID0gVGVtcGxhdGUuYmluZCh7fSlcXG5Ub29sdGlwQWNjZXNzb3Iuc3RvcnlOYW1lID0gJ3Rvb2x0aXBBY2Nlc3NvcidcXG5Ub29sdGlwQWNjZXNzb3IuYXJncyA9IGFjY2Vzc29yU3RvcnlBcmdzXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIlRvb2x0aXBBY2Nlc3NvclwiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6MTcsXCJsaW5lXCI6MjV9LFwiZW5kTG9jXCI6e1wiY29sXCI6MSxcImxpbmVcIjoyOX0sXCJzdGFydEJvZHlcIjp7XCJjb2xcIjoxNyxcImxpbmVcIjoyNX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjoyOX19fTtcbiAgICBcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IENhbGVuZGFyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IHsgYWNjZXNzb3JTdG9yeUFyZ3MgfSBmcm9tICcuL3N0b3J5RGVmYXVsdHMnXG5pbXBvcnQgbWR4IGZyb20gJy4vdG9vbHRpcEFjY2Vzc29yLm1keCdcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ3Byb3BzJyxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcbiAgYXJnVHlwZXM6IHtcbiAgICBsb2NhbGl6ZXI6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBldmVudHM6IHsgY29udHJvbDogeyB0eXBlOiBudWxsIH0gfSxcbiAgICBkZWZhdWx0RGF0ZToge1xuICAgICAgY29udHJvbDoge1xuICAgICAgICB0eXBlOiBudWxsLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmNvbnN0IFRlbXBsYXRlID0gKGFyZ3MpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICA8Q2FsZW5kYXIgey4uLmFyZ3N9IC8+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgY29uc3QgVG9vbHRpcEFjY2Vzc29yID0gVGVtcGxhdGUuYmluZCh7fSk7VG9vbHRpcEFjY2Vzc29yLnN0b3J5TmFtZSA9ICd0b29sdGlwQWNjZXNzb3InXG5Ub29sdGlwQWNjZXNzb3IuYXJncyA9IGFjY2Vzc29yU3RvcnlBcmdzXG5cblxuXG5Ub29sdGlwQWNjZXNzb3IucGFyYW1ldGVycyA9IHsgc3RvcnlTb3VyY2U6IHsgc291cmNlOiBcIihhcmdzKSA9PiAoXFxuICA8ZGl2IGNsYXNzTmFtZT1cXFwiaGVpZ2h0NjAwXFxcIj5cXG4gICAgPENhbGVuZGFyIHsuLi5hcmdzfSAvPlxcbiAgPC9kaXY+XFxuKVwiIH0sIC4uLlRvb2x0aXBBY2Nlc3Nvci5wYXJhbWV0ZXJzIH07IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgQ2FudmFzLCBTdG9yeSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwidmlld1wiXG4gICAgfX0+e2B2aWV3YH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YFZpZXdzLk1PTlRIIChtb250aHx3ZWVrfHdvcmtfd2Vla3xkYXl8YWdlbmRhKWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2Bjb250cm9sbGVkIGJ5OiBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJvbi12aWV3XCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgb25WaWV3YH08L0xpbmtUbz48L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BUaGUgY3VycmVudCB2aWV3IHZhbHVlIG9mIHRoZSBjYWxlbmRhci4gRGV0ZXJtaW5lcyB0aGUgdmlzaWJsZSAndmlldycuXG5JZiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2B2aWV3YH08L2lubGluZUNvZGU+e2AgaXMgb21pdHRlZCB0aGVuIGl0IGlzIGRlZmF1bHRlZCB0byAnbW9udGgnLmB9PC9wPlxuICAgIDxwPntgVGhpcyBpcyBhIGNvbnRyb2xsYWJsZSBwcm9wLCB3aGVuIHVzaW5nIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cIm9uLXZpZXdcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BvblZpZXdgfTwvTGlua1RvPjwvcD5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLXZpZXdcIiBtZHhUeXBlPVwiU3RvcnlcIiAvPlxuICAgIDwvQ2FudmFzPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOyIsIlxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgLy8gQHRzLW5vY2hlY2tcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fU1RPUllfXyA9IFwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL3ZpZXcubWR4J1xcblxcbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gIHRpdGxlOiAncHJvcHMnLFxcbiAgY29tcG9uZW50OiBDYWxlbmRhcixcXG4gIHBhcmFtZXRlcnM6IHtcXG4gICAgZG9jczoge1xcbiAgICAgIHBhZ2U6IG1keCxcXG4gICAgfSxcXG4gIH0sXFxufVxcblxcbmV4cG9ydCBmdW5jdGlvbiBWaWV3KCkge1xcbiAgY29uc3QgW2RhdGUsIHNldERhdGVdID0gdXNlU3RhdGUobmV3IERhdGUoMjAxNSwgMywgMSkpXFxuICBjb25zdCBbdmlldywgc2V0Vmlld10gPSB1c2VTdGF0ZShWaWV3cy5XRUVLKVxcblxcbiAgY29uc3Qgb25OYXZpZ2F0ZSA9IHVzZUNhbGxiYWNrKChuZXdEYXRlKSA9PiBzZXREYXRlKG5ld0RhdGUpLCBbc2V0RGF0ZV0pXFxuICBjb25zdCBvblZpZXcgPSB1c2VDYWxsYmFjaygobmV3VmlldykgPT4gc2V0VmlldyhuZXdWaWV3KSwgW3NldFZpZXddKVxcblxcbiAgcmV0dXJuIChcXG4gICAgPGRpdiBjbGFzc05hbWU9XFxcImhlaWdodDYwMFxcXCI+XFxuICAgICAgPENhbGVuZGFyXFxuICAgICAgICBkYXRlPXtkYXRlfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgb25OYXZpZ2F0ZT17b25OYXZpZ2F0ZX1cXG4gICAgICAgIG9uVmlldz17b25WaWV3fVxcbiAgICAgICAgdmlldz17dmlld31cXG4gICAgICAvPlxcbiAgICA8L2Rpdj5cXG4gIClcXG59XFxuVmlldy5zdG9yeU5hbWUgPSAndmlldydcXG5cIjtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgdmFyIF9fTE9DQVRJT05TX01BUF9fID0ge1wiVmlld1wiOntcInN0YXJ0TG9jXCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRMb2NcIjp7XCJjb2xcIjoxLFwibGluZVwiOjM4fSxcInN0YXJ0Qm9keVwiOntcImNvbFwiOjcsXCJsaW5lXCI6MTl9LFwiZW5kQm9keVwiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzh9fX07XG4gICAgXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi92aWV3Lm1keCdcblxuY29uc3QgbUxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdwcm9wcycsXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBkb2NzOiB7XG4gICAgICBwYWdlOiBtZHgsXG4gICAgfSxcbiAgfSxcbn1cblxuZXhwb3J0IGNvbnN0IFZpZXcgPSBmdW5jdGlvbiBWaWV3KCkge1xuICBjb25zdCBbZGF0ZSwgc2V0RGF0ZV0gPSB1c2VTdGF0ZShuZXcgRGF0ZSgyMDE1LCAzLCAxKSlcbiAgY29uc3QgW3ZpZXcsIHNldFZpZXddID0gdXNlU3RhdGUoVmlld3MuV0VFSylcblxuICBjb25zdCBvbk5hdmlnYXRlID0gdXNlQ2FsbGJhY2soKG5ld0RhdGUpID0+IHNldERhdGUobmV3RGF0ZSksIFtzZXREYXRlXSlcbiAgY29uc3Qgb25WaWV3ID0gdXNlQ2FsbGJhY2soKG5ld1ZpZXcpID0+IHNldFZpZXcobmV3VmlldyksIFtzZXRWaWV3XSlcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGF0ZT17ZGF0ZX1cbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxuICAgICAgICBsb2NhbGl6ZXI9e21Mb2NhbGl6ZXJ9XG4gICAgICAgIG9uTmF2aWdhdGU9e29uTmF2aWdhdGV9XG4gICAgICAgIG9uVmlldz17b25WaWV3fVxuICAgICAgICB2aWV3PXt2aWV3fVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtWaWV3LnN0b3J5TmFtZSA9ICd2aWV3J1xuXG5cblxuVmlldy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gVmlldygpIHtcXG4gIGNvbnN0IFtkYXRlLCBzZXREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKDIwMTUsIDMsIDEpKVxcbiAgY29uc3QgW3ZpZXcsIHNldFZpZXddID0gdXNlU3RhdGUoVmlld3MuV0VFSylcXG5cXG4gIGNvbnN0IG9uTmF2aWdhdGUgPSB1c2VDYWxsYmFjaygobmV3RGF0ZSkgPT4gc2V0RGF0ZShuZXdEYXRlKSwgW3NldERhdGVdKVxcbiAgY29uc3Qgb25WaWV3ID0gdXNlQ2FsbGJhY2soKG5ld1ZpZXcpID0+IHNldFZpZXcobmV3VmlldyksIFtzZXRWaWV3XSlcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGF0ZT17ZGF0ZX1cXG4gICAgICAgIGV2ZW50cz17ZGVtb0V2ZW50c31cXG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cXG4gICAgICAgIG9uTmF2aWdhdGU9e29uTmF2aWdhdGV9XFxuICAgICAgICBvblZpZXc9e29uVmlld31cXG4gICAgICAgIHZpZXc9e3ZpZXd9XFxuICAgICAgLz5cXG4gICAgPC9kaXY+XFxuICApXFxufVwiIH0sIC4uLlZpZXcucGFyYW1ldGVycyB9OyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IENhbnZhcywgU3RvcnkgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcInZpZXdzXCJcbiAgICB9fT57YHZpZXdzYH08L2gxPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BWaWV3cyAoJ21vbnRoJ3wnd2Vlayd8J3dvcmtfd2Vlayd8J2RheSd8J2FnZW5kYScpYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2Bbdmlld3MuTU9OVEgsIHZpZXdzLldFRUssIHZpZXdzLkRBWSwgdmlld3MuQUdFTkRBXWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEFuIGFycmF5IG9mIGJ1aWx0LWluIHZpZXcgbmFtZXMgdG8gYWxsb3cgdGhlIGNhbGVuZGFyIHRvIGRpc3BsYXkuIGFjY2VwdHMgZWl0aGVyIGFuIGFycmF5IG9mIGJ1aWx0aW4gdmlldyBuYW1lcyxgfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19Pntgdmlld3M9e1snbW9udGgnLCAnZGF5JywgJ2FnZW5kYSddfVxuYH08L2NvZGU+PC9wcmU+XG4gICAgPHA+e2BvciBhbiBvYmplY3QgaGFzaCBvZiB0aGUgdmlldyBuYW1lIGFuZCB0aGUgY29tcG9uZW50IChvciBib29sZWFuIGZvciBidWlsdGluKS5gfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19Pntgdmlld3M9e3tcbiAgbW9udGg6IHRydWUsXG4gIHdlZWs6IGZhbHNlLFxuICBteXdlZWs6IFdvcmtXZWVrVmlld0NvbXBvbmVudCxcbn19XG5gfTwvY29kZT48L3ByZT5cbiAgICA8cD57YEN1c3RvbSB2aWV3cyBjYW4gYmUgYW55IFJlYWN0IGNvbXBvbmVudCwgdGhhdCBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgaW50ZXJmYWNlOmB9PC9wPlxuICAgIDxwcmU+PGNvZGUgcGFyZW50TmFtZT1cInByZVwiIHsuLi57XG4gICAgICAgIFwiY2xhc3NOYW1lXCI6IFwibGFuZ3VhZ2UtanNcIlxuICAgICAgfX0+e2BpbnRlcmZhY2UgVmlldyB7XG4gIHN0YXRpYyB0aXRsZShkYXRlOiBEYXRlLCB7IGZvcm1hdHM6IERhdGVGb3JtYXRbXSwgY3VsdHVyZTogc3RyaW5nPywgLi4ucHJvcHMgfSk6IHN0cmluZ1xuICBzdGF0aWMgbmF2aWdhdGUoZGF0ZTogRGF0ZSwgYWN0aW9uOiAnUFJFVicgfCAnTkVYVCcgfCAnREFURScpOiBEYXRlXG59XG5gfTwvY29kZT48L3ByZT5cbiAgICA8Q2FudmFzIG1keFR5cGU9XCJDYW52YXNcIj5cbiAgPFN0b3J5IGlkPVwicHJvcHMtLWNhbC12aWV3c1wiIG1keFR5cGU9XCJTdG9yeVwiIC8+XG4gICAgPC9DYW52YXM+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7IiwiXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgICAvLyBAdHMtbm9jaGVja1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICB2YXIgX19TVE9SWV9fID0gXCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0J1xcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXFxuaW1wb3J0IG1keCBmcm9tICcuL3ZpZXdzLm1keCdcXG5cXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICB0aXRsZTogJ3Byb3BzJyxcXG4gIGNvbXBvbmVudDogQ2FsZW5kYXIsXFxuICBwYXJhbWV0ZXJzOiB7XFxuICAgIGRvY3M6IHtcXG4gICAgICBwYWdlOiBtZHgsXFxuICAgIH0sXFxuICB9LFxcbn1cXG5cXG5leHBvcnQgZnVuY3Rpb24gQ2FsVmlld3MoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCB2aWV3cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMSksXFxuICAgICAgdmlld3M6IFtWaWV3cy5NT05USCwgVmlld3MuREFZLCBWaWV3cy5BR0VOREFdLFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgdmlld3M9e3ZpZXdzfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cXG5DYWxWaWV3cy5zdG9yeU5hbWUgPSAndmlld3MnXFxuXCI7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHZhciBfX0xPQ0FUSU9OU19NQVBfXyA9IHtcIkNhbFZpZXdzXCI6e1wic3RhcnRMb2NcIjp7XCJjb2xcIjo3LFwibGluZVwiOjE5fSxcImVuZExvY1wiOntcImNvbFwiOjEsXCJsaW5lXCI6Mzh9LFwic3RhcnRCb2R5XCI6e1wiY29sXCI6NyxcImxpbmVcIjoxOX0sXCJlbmRCb2R5XCI6e1wiY29sXCI6MSxcImxpbmVcIjozOH19fTtcbiAgICBcbmltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuaW1wb3J0IGRlbW9FdmVudHMgZnJvbSAnLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCBtZHggZnJvbSAnLi92aWV3cy5tZHgnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAncHJvcHMnLFxuICBjb21wb25lbnQ6IENhbGVuZGFyLFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgZG9jczoge1xuICAgICAgcGFnZTogbWR4LFxuICAgIH0sXG4gIH0sXG59XG5cbmV4cG9ydCBjb25zdCBDYWxWaWV3cyA9IGZ1bmN0aW9uIENhbFZpZXdzKCkge1xuICBjb25zdCB7IGRlZmF1bHREYXRlLCB2aWV3cyB9ID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDEpLFxuICAgICAgdmlld3M6IFtWaWV3cy5NT05USCwgVmlld3MuREFZLCBWaWV3cy5BR0VOREFdLFxuICAgIH0pLFxuICAgIFtdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICA8Q2FsZW5kYXJcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICBldmVudHM9e2RlbW9FdmVudHN9XG4gICAgICAgIGxvY2FsaXplcj17bUxvY2FsaXplcn1cbiAgICAgICAgdmlld3M9e3ZpZXdzfVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKVxufTtDYWxWaWV3cy5zdG9yeU5hbWUgPSAndmlld3MnXG5cblxuXG5DYWxWaWV3cy5wYXJhbWV0ZXJzID0geyBzdG9yeVNvdXJjZTogeyBzb3VyY2U6IFwiZnVuY3Rpb24gQ2FsVmlld3MoKSB7XFxuICBjb25zdCB7IGRlZmF1bHREYXRlLCB2aWV3cyB9ID0gdXNlTWVtbyhcXG4gICAgKCkgPT4gKHtcXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMSksXFxuICAgICAgdmlld3M6IFtWaWV3cy5NT05USCwgVmlld3MuREFZLCBWaWV3cy5BR0VOREFdLFxcbiAgICB9KSxcXG4gICAgW11cXG4gIClcXG5cXG4gIHJldHVybiAoXFxuICAgIDxkaXYgY2xhc3NOYW1lPVxcXCJoZWlnaHQ2MDBcXFwiPlxcbiAgICAgIDxDYWxlbmRhclxcbiAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxcbiAgICAgICAgZXZlbnRzPXtkZW1vRXZlbnRzfVxcbiAgICAgICAgbG9jYWxpemVyPXttTG9jYWxpemVyfVxcbiAgICAgICAgdmlld3M9e3ZpZXdzfVxcbiAgICAgIC8+XFxuICAgIDwvZGl2PlxcbiAgKVxcbn1cIiB9LCAuLi5DYWxWaWV3cy5wYXJhbWV0ZXJzIH07IiwiaW1wb3J0IE5vb3BXcmFwcGVyIGZyb20gJy4vTm9vcFdyYXBwZXInXG5cbmV4cG9ydCBkZWZhdWx0IE5vb3BXcmFwcGVyXG4iLCJpbXBvcnQgUmVhY3QsIHsgY3JlYXRlUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4J1xuXG5pbXBvcnQgeyBub3RpZnkgfSBmcm9tICcuL3V0aWxzL2hlbHBlcnMnXG5pbXBvcnQgeyBkYXRlQ2VsbFNlbGVjdGlvbiwgZ2V0U2xvdEF0WCwgcG9pbnRJbkJveCB9IGZyb20gJy4vdXRpbHMvc2VsZWN0aW9uJ1xuaW1wb3J0IFNlbGVjdGlvbiwgeyBnZXRCb3VuZHNGb3JOb2RlLCBpc0V2ZW50LCBpc1Nob3dNb3JlIH0gZnJvbSAnLi9TZWxlY3Rpb24nXG5cbmNsYXNzIEJhY2tncm91bmRDZWxscyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzLCBjb250ZXh0KSB7XG4gICAgc3VwZXIocHJvcHMsIGNvbnRleHQpXG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgc2VsZWN0aW5nOiBmYWxzZSxcbiAgICB9XG4gICAgdGhpcy5jb250YWluZXJSZWYgPSBjcmVhdGVSZWYoKVxuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5wcm9wcy5zZWxlY3RhYmxlICYmIHRoaXMuX3NlbGVjdGFibGUoKVxuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5fdGVhcmRvd25TZWxlY3RhYmxlKClcbiAgfVxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAoIXByZXZQcm9wcy5zZWxlY3RhYmxlICYmIHRoaXMucHJvcHMuc2VsZWN0YWJsZSkgdGhpcy5fc2VsZWN0YWJsZSgpXG5cbiAgICBpZiAocHJldlByb3BzLnNlbGVjdGFibGUgJiYgIXRoaXMucHJvcHMuc2VsZWN0YWJsZSlcbiAgICAgIHRoaXMuX3RlYXJkb3duU2VsZWN0YWJsZSgpXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgbGV0IHtcbiAgICAgIHJhbmdlLFxuICAgICAgZ2V0Tm93LFxuICAgICAgZ2V0dGVycyxcbiAgICAgIGRhdGU6IGN1cnJlbnREYXRlLFxuICAgICAgY29tcG9uZW50czogeyBkYXRlQ2VsbFdyYXBwZXI6IFdyYXBwZXIgfSxcbiAgICAgIGxvY2FsaXplcixcbiAgICB9ID0gdGhpcy5wcm9wc1xuICAgIGxldCB7IHNlbGVjdGluZywgc3RhcnRJZHgsIGVuZElkeCB9ID0gdGhpcy5zdGF0ZVxuICAgIGxldCBjdXJyZW50ID0gZ2V0Tm93KClcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInJiYy1yb3ctYmdcIiByZWY9e3RoaXMuY29udGFpbmVyUmVmfT5cbiAgICAgICAge3JhbmdlLm1hcCgoZGF0ZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICBsZXQgc2VsZWN0ZWQgPSBzZWxlY3RpbmcgJiYgaW5kZXggPj0gc3RhcnRJZHggJiYgaW5kZXggPD0gZW5kSWR4XG4gICAgICAgICAgY29uc3QgeyBjbGFzc05hbWUsIHN0eWxlIH0gPSBnZXR0ZXJzLmRheVByb3AoZGF0ZSlcblxuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8V3JhcHBlciBrZXk9e2luZGV4fSB2YWx1ZT17ZGF0ZX0gcmFuZ2U9e3JhbmdlfT5cbiAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIHN0eWxlPXtzdHlsZX1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Nsc3goXG4gICAgICAgICAgICAgICAgICAncmJjLWRheS1iZycsXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgICAgICAgICAgICBzZWxlY3RlZCAmJiAncmJjLXNlbGVjdGVkLWNlbGwnLFxuICAgICAgICAgICAgICAgICAgbG9jYWxpemVyLmlzU2FtZURhdGUoZGF0ZSwgY3VycmVudCkgJiYgJ3JiYy10b2RheScsXG4gICAgICAgICAgICAgICAgICBjdXJyZW50RGF0ZSAmJlxuICAgICAgICAgICAgICAgICAgICBsb2NhbGl6ZXIubmVxKGN1cnJlbnREYXRlLCBkYXRlLCAnbW9udGgnKSAmJlxuICAgICAgICAgICAgICAgICAgICAncmJjLW9mZi1yYW5nZS1iZydcbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9XcmFwcGVyPlxuICAgICAgICAgIClcbiAgICAgICAgfSl9XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cblxuICBfc2VsZWN0YWJsZSgpIHtcbiAgICBsZXQgbm9kZSA9IHRoaXMuY29udGFpbmVyUmVmLmN1cnJlbnRcbiAgICBsZXQgc2VsZWN0b3IgPSAodGhpcy5fc2VsZWN0b3IgPSBuZXcgU2VsZWN0aW9uKHRoaXMucHJvcHMuY29udGFpbmVyLCB7XG4gICAgICBsb25nUHJlc3NUaHJlc2hvbGQ6IHRoaXMucHJvcHMubG9uZ1ByZXNzVGhyZXNob2xkLFxuICAgIH0pKVxuXG4gICAgbGV0IHNlbGVjdG9yQ2xpY2tzSGFuZGxlciA9IChwb2ludCwgYWN0aW9uVHlwZSkgPT4ge1xuICAgICAgaWYgKCFpc0V2ZW50KG5vZGUsIHBvaW50KSAmJiAhaXNTaG93TW9yZShub2RlLCBwb2ludCkpIHtcbiAgICAgICAgbGV0IHJvd0JveCA9IGdldEJvdW5kc0Zvck5vZGUobm9kZSlcbiAgICAgICAgbGV0IHsgcmFuZ2UsIHJ0bCB9ID0gdGhpcy5wcm9wc1xuXG4gICAgICAgIGlmIChwb2ludEluQm94KHJvd0JveCwgcG9pbnQpKSB7XG4gICAgICAgICAgbGV0IGN1cnJlbnRDZWxsID0gZ2V0U2xvdEF0WChyb3dCb3gsIHBvaW50LngsIHJ0bCwgcmFuZ2UubGVuZ3RoKVxuXG4gICAgICAgICAgdGhpcy5fc2VsZWN0U2xvdCh7XG4gICAgICAgICAgICBzdGFydElkeDogY3VycmVudENlbGwsXG4gICAgICAgICAgICBlbmRJZHg6IGN1cnJlbnRDZWxsLFxuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb25UeXBlLFxuICAgICAgICAgICAgYm94OiBwb2ludCxcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2luaXRpYWwgPSB7fVxuICAgICAgdGhpcy5zZXRTdGF0ZSh7IHNlbGVjdGluZzogZmFsc2UgfSlcbiAgICB9XG5cbiAgICBzZWxlY3Rvci5vbignc2VsZWN0aW5nJywgKGJveCkgPT4ge1xuICAgICAgbGV0IHsgcmFuZ2UsIHJ0bCB9ID0gdGhpcy5wcm9wc1xuXG4gICAgICBsZXQgc3RhcnRJZHggPSAtMVxuICAgICAgbGV0IGVuZElkeCA9IC0xXG5cbiAgICAgIGlmICghdGhpcy5zdGF0ZS5zZWxlY3RpbmcpIHtcbiAgICAgICAgbm90aWZ5KHRoaXMucHJvcHMub25TZWxlY3RTdGFydCwgW2JveF0pXG4gICAgICAgIHRoaXMuX2luaXRpYWwgPSB7IHg6IGJveC54LCB5OiBib3gueSB9XG4gICAgICB9XG4gICAgICBpZiAoc2VsZWN0b3IuaXNTZWxlY3RlZChub2RlKSkge1xuICAgICAgICBsZXQgbm9kZUJveCA9IGdldEJvdW5kc0Zvck5vZGUobm9kZSlcbiAgICAgICAgOyh7IHN0YXJ0SWR4LCBlbmRJZHggfSA9IGRhdGVDZWxsU2VsZWN0aW9uKFxuICAgICAgICAgIHRoaXMuX2luaXRpYWwsXG4gICAgICAgICAgbm9kZUJveCxcbiAgICAgICAgICBib3gsXG4gICAgICAgICAgcmFuZ2UubGVuZ3RoLFxuICAgICAgICAgIHJ0bFxuICAgICAgICApKVxuICAgICAgfVxuXG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgc2VsZWN0aW5nOiB0cnVlLFxuICAgICAgICBzdGFydElkeCxcbiAgICAgICAgZW5kSWR4LFxuICAgICAgfSlcbiAgICB9KVxuXG4gICAgc2VsZWN0b3Iub24oJ2JlZm9yZVNlbGVjdCcsIChib3gpID0+IHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnNlbGVjdGFibGUgIT09ICdpZ25vcmVFdmVudHMnKSByZXR1cm5cblxuICAgICAgcmV0dXJuICFpc0V2ZW50KHRoaXMuY29udGFpbmVyUmVmLmN1cnJlbnQsIGJveClcbiAgICB9KVxuXG4gICAgc2VsZWN0b3Iub24oJ2NsaWNrJywgKHBvaW50KSA9PiBzZWxlY3RvckNsaWNrc0hhbmRsZXIocG9pbnQsICdjbGljaycpKVxuXG4gICAgc2VsZWN0b3Iub24oJ2RvdWJsZUNsaWNrJywgKHBvaW50KSA9PlxuICAgICAgc2VsZWN0b3JDbGlja3NIYW5kbGVyKHBvaW50LCAnZG91YmxlQ2xpY2snKVxuICAgIClcblxuICAgIHNlbGVjdG9yLm9uKCdzZWxlY3QnLCAoYm91bmRzKSA9PiB7XG4gICAgICB0aGlzLl9zZWxlY3RTbG90KHsgLi4udGhpcy5zdGF0ZSwgYWN0aW9uOiAnc2VsZWN0JywgYm91bmRzIH0pXG4gICAgICB0aGlzLl9pbml0aWFsID0ge31cbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBzZWxlY3Rpbmc6IGZhbHNlIH0pXG4gICAgICBub3RpZnkodGhpcy5wcm9wcy5vblNlbGVjdEVuZCwgW3RoaXMuc3RhdGVdKVxuICAgIH0pXG4gIH1cblxuICBfdGVhcmRvd25TZWxlY3RhYmxlKCkge1xuICAgIGlmICghdGhpcy5fc2VsZWN0b3IpIHJldHVyblxuICAgIHRoaXMuX3NlbGVjdG9yLnRlYXJkb3duKClcbiAgICB0aGlzLl9zZWxlY3RvciA9IG51bGxcbiAgfVxuXG4gIF9zZWxlY3RTbG90KHsgZW5kSWR4LCBzdGFydElkeCwgYWN0aW9uLCBib3VuZHMsIGJveCB9KSB7XG4gICAgaWYgKGVuZElkeCAhPT0gLTEgJiYgc3RhcnRJZHggIT09IC0xKVxuICAgICAgdGhpcy5wcm9wcy5vblNlbGVjdFNsb3QgJiZcbiAgICAgICAgdGhpcy5wcm9wcy5vblNlbGVjdFNsb3Qoe1xuICAgICAgICAgIHN0YXJ0OiBzdGFydElkeCxcbiAgICAgICAgICBlbmQ6IGVuZElkeCxcbiAgICAgICAgICBhY3Rpb24sXG4gICAgICAgICAgYm91bmRzLFxuICAgICAgICAgIGJveCxcbiAgICAgICAgICByZXNvdXJjZUlkOiB0aGlzLnByb3BzLnJlc291cmNlSWQsXG4gICAgICAgIH0pXG4gIH1cbn1cblxuQmFja2dyb3VuZENlbGxzLnByb3BUeXBlcyA9IHtcbiAgZGF0ZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG4gIGdldE5vdzogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcblxuICBnZXR0ZXJzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGNvbXBvbmVudHM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICBjb250YWluZXI6IFByb3BUeXBlcy5mdW5jLFxuICBkYXlQcm9wR2V0dGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgc2VsZWN0YWJsZTogUHJvcFR5cGVzLm9uZU9mKFt0cnVlLCBmYWxzZSwgJ2lnbm9yZUV2ZW50cyddKSxcbiAgbG9uZ1ByZXNzVGhyZXNob2xkOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gIG9uU2VsZWN0U2xvdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgb25TZWxlY3RFbmQ6IFByb3BUeXBlcy5mdW5jLFxuICBvblNlbGVjdFN0YXJ0OiBQcm9wVHlwZXMuZnVuYyxcblxuICByYW5nZTogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSkpLFxuICBydGw6IFByb3BUeXBlcy5ib29sLFxuICB0eXBlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICByZXNvdXJjZUlkOiBQcm9wVHlwZXMuYW55LFxuXG4gIGxvY2FsaXplcjogUHJvcFR5cGVzLmFueSxcbn1cblxuZXhwb3J0IGRlZmF1bHQgQmFja2dyb3VuZENlbGxzXG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4J1xuaW1wb3J0IEV2ZW50Um93TWl4aW4gZnJvbSAnLi9FdmVudFJvd01peGluJ1xuaW1wb3J0IHsgZXZlbnRMZXZlbHMgfSBmcm9tICcuL3V0aWxzL2V2ZW50TGV2ZWxzJ1xuaW1wb3J0IHJhbmdlIGZyb20gJ2xvZGFzaC9yYW5nZSdcblxubGV0IGlzU2VnbWVudEluU2xvdCA9IChzZWcsIHNsb3QpID0+IHNlZy5sZWZ0IDw9IHNsb3QgJiYgc2VnLnJpZ2h0ID49IHNsb3RcbmxldCBldmVudHNJblNsb3QgPSAoc2VnbWVudHMsIHNsb3QpID0+XG4gIHNlZ21lbnRzLmZpbHRlcigoc2VnKSA9PiBpc1NlZ21lbnRJblNsb3Qoc2VnLCBzbG90KSkubWFwKChzZWcpID0+IHNlZy5ldmVudClcblxuY2xhc3MgRXZlbnRFbmRpbmdSb3cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgbGV0IHtcbiAgICAgIHNlZ21lbnRzLFxuICAgICAgc2xvdE1ldHJpY3M6IHsgc2xvdHMgfSxcbiAgICB9ID0gdGhpcy5wcm9wc1xuICAgIGxldCByb3dTZWdtZW50cyA9IGV2ZW50TGV2ZWxzKHNlZ21lbnRzKS5sZXZlbHNbMF1cblxuICAgIGxldCBjdXJyZW50ID0gMSxcbiAgICAgIGxhc3RFbmQgPSAxLFxuICAgICAgcm93ID0gW11cblxuICAgIHdoaWxlIChjdXJyZW50IDw9IHNsb3RzKSB7XG4gICAgICBsZXQga2V5ID0gJ19sdmxfJyArIGN1cnJlbnRcblxuICAgICAgbGV0IHsgZXZlbnQsIGxlZnQsIHJpZ2h0LCBzcGFuIH0gPVxuICAgICAgICByb3dTZWdtZW50cy5maWx0ZXIoKHNlZykgPT4gaXNTZWdtZW50SW5TbG90KHNlZywgY3VycmVudCkpWzBdIHx8IHt9IC8vZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgICBpZiAoIWV2ZW50KSB7XG4gICAgICAgIGN1cnJlbnQrK1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBsZXQgZ2FwID0gTWF0aC5tYXgoMCwgbGVmdCAtIGxhc3RFbmQpXG5cbiAgICAgIGlmICh0aGlzLmNhblJlbmRlclNsb3RFdmVudChsZWZ0LCBzcGFuKSkge1xuICAgICAgICBsZXQgY29udGVudCA9IEV2ZW50Um93TWl4aW4ucmVuZGVyRXZlbnQodGhpcy5wcm9wcywgZXZlbnQpXG5cbiAgICAgICAgaWYgKGdhcCkge1xuICAgICAgICAgIHJvdy5wdXNoKEV2ZW50Um93TWl4aW4ucmVuZGVyU3BhbihzbG90cywgZ2FwLCBrZXkgKyAnX2dhcCcpKVxuICAgICAgICB9XG5cbiAgICAgICAgcm93LnB1c2goRXZlbnRSb3dNaXhpbi5yZW5kZXJTcGFuKHNsb3RzLCBzcGFuLCBrZXksIGNvbnRlbnQpKVxuXG4gICAgICAgIGxhc3RFbmQgPSBjdXJyZW50ID0gcmlnaHQgKyAxXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoZ2FwKSB7XG4gICAgICAgICAgcm93LnB1c2goRXZlbnRSb3dNaXhpbi5yZW5kZXJTcGFuKHNsb3RzLCBnYXAsIGtleSArICdfZ2FwJykpXG4gICAgICAgIH1cblxuICAgICAgICByb3cucHVzaChcbiAgICAgICAgICBFdmVudFJvd01peGluLnJlbmRlclNwYW4oXG4gICAgICAgICAgICBzbG90cyxcbiAgICAgICAgICAgIDEsXG4gICAgICAgICAgICBrZXksXG4gICAgICAgICAgICB0aGlzLnJlbmRlclNob3dNb3JlKHNlZ21lbnRzLCBjdXJyZW50KVxuICAgICAgICAgIClcbiAgICAgICAgKVxuICAgICAgICBsYXN0RW5kID0gY3VycmVudCA9IGN1cnJlbnQgKyAxXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwicmJjLXJvd1wiPntyb3d9PC9kaXY+XG4gIH1cblxuICBjYW5SZW5kZXJTbG90RXZlbnQoc2xvdCwgc3Bhbikge1xuICAgIGxldCB7IHNlZ21lbnRzIH0gPSB0aGlzLnByb3BzXG5cbiAgICByZXR1cm4gcmFuZ2Uoc2xvdCwgc2xvdCArIHNwYW4pLmV2ZXJ5KChzKSA9PiB7XG4gICAgICBjb25zdCBjb3VudCA9IGV2ZW50c0luU2xvdChzZWdtZW50cywgcykubGVuZ3RoXG5cbiAgICAgIHJldHVybiBjb3VudCA9PT0gMVxuICAgIH0pXG4gIH1cblxuICByZW5kZXJTaG93TW9yZShzZWdtZW50cywgc2xvdCkge1xuICAgIGxldCB7IGxvY2FsaXplciwgc2xvdE1ldHJpY3MsIGNvbXBvbmVudHMgfSA9IHRoaXMucHJvcHNcbiAgICBjb25zdCBldmVudHMgPSBzbG90TWV0cmljcy5nZXRFdmVudHNGb3JTbG90KHNsb3QpXG4gICAgY29uc3QgcmVtYWluaW5nRXZlbnRzID0gZXZlbnRzSW5TbG90KHNlZ21lbnRzLCBzbG90KVxuICAgIGNvbnN0IGNvdW50ID0gcmVtYWluaW5nRXZlbnRzLmxlbmd0aFxuXG4gICAgaWYgKGNvbXBvbmVudHM/LnNob3dNb3JlKSB7XG4gICAgICBjb25zdCBTaG93TW9yZSA9IGNvbXBvbmVudHMuc2hvd01vcmVcbiAgICAgIC8vIFRoZSByZWNlaXZlZCBzbG90IHNlZW1zIHRvIGJlIDEtYmFzZWQsIGJ1dCB0aGUgcmFuZ2Ugd2UgdXNlIHRvIHB1bGwgdGhlIGRhdGUgaXMgMC1iYXNlZFxuICAgICAgY29uc3Qgc2xvdERhdGUgPSBzbG90TWV0cmljcy5nZXREYXRlRm9yU2xvdChzbG90IC0gMSlcblxuICAgICAgcmV0dXJuIGNvdW50ID8gKFxuICAgICAgICA8U2hvd01vcmVcbiAgICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgICBzbG90RGF0ZT17c2xvdERhdGV9XG4gICAgICAgICAgc2xvdD17c2xvdH1cbiAgICAgICAgICBjb3VudD17Y291bnR9XG4gICAgICAgICAgZXZlbnRzPXtldmVudHN9XG4gICAgICAgICAgcmVtYWluaW5nRXZlbnRzPXtyZW1haW5pbmdFdmVudHN9XG4gICAgICAgIC8+XG4gICAgICApIDogKFxuICAgICAgICBmYWxzZVxuICAgICAgKVxuICAgIH1cblxuICAgIHJldHVybiBjb3VudCA/IChcbiAgICAgIDxidXR0b25cbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgIGtleT17J3NtXycgKyBzbG90fVxuICAgICAgICBjbGFzc05hbWU9e2Nsc3goJ3JiYy1idXR0b24tbGluaycsICdyYmMtc2hvdy1tb3JlJyl9XG4gICAgICAgIG9uQ2xpY2s9eyhlKSA9PiB0aGlzLnNob3dNb3JlKHNsb3QsIGUpfVxuICAgICAgPlxuICAgICAgICB7bG9jYWxpemVyLm1lc3NhZ2VzLnNob3dNb3JlKGNvdW50LCByZW1haW5pbmdFdmVudHMsIGV2ZW50cyl9XG4gICAgICA8L2J1dHRvbj5cbiAgICApIDogKFxuICAgICAgZmFsc2VcbiAgICApXG4gIH1cblxuICBzaG93TW9yZShzbG90LCBlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKVxuICAgIHRoaXMucHJvcHMub25TaG93TW9yZShzbG90LCBlLnRhcmdldClcbiAgfVxufVxuXG5FdmVudEVuZGluZ1Jvdy5wcm9wVHlwZXMgPSB7XG4gIHNlZ21lbnRzOiBQcm9wVHlwZXMuYXJyYXksXG4gIHNsb3RzOiBQcm9wVHlwZXMubnVtYmVyLFxuICBvblNob3dNb3JlOiBQcm9wVHlwZXMuZnVuYyxcbiAgLi4uRXZlbnRSb3dNaXhpbi5wcm9wVHlwZXMsXG59XG5cbkV2ZW50RW5kaW5nUm93LmRlZmF1bHRQcm9wcyA9IHtcbiAgLi4uRXZlbnRSb3dNaXhpbi5kZWZhdWx0UHJvcHMsXG59XG5cbmV4cG9ydCBkZWZhdWx0IEV2ZW50RW5kaW5nUm93XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmNvbnN0IFNjcm9sbGFibGVXZWVrV3JhcHBlciA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwicmJjLXJvdy1jb250ZW50LXNjcm9sbC1jb250YWluZXJcIj57Y2hpbGRyZW59PC9kaXY+XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNjcm9sbGFibGVXZWVrV3JhcHBlclxuIiwiaW1wb3J0IG1lbW9pemUgZnJvbSAnbWVtb2l6ZS1vbmUnXG5pbXBvcnQgeyBldmVudFNlZ21lbnRzLCBlbmRPZlJhbmdlLCBldmVudExldmVscyB9IGZyb20gJy4vZXZlbnRMZXZlbHMnXG5cbmxldCBpc1NlZ21lbnRJblNsb3QgPSAoc2VnLCBzbG90KSA9PiBzZWcubGVmdCA8PSBzbG90ICYmIHNlZy5yaWdodCA+PSBzbG90XG5cbmNvbnN0IGlzRXF1YWwgPSAoYSwgYikgPT5cbiAgYVswXS5yYW5nZSA9PT0gYlswXS5yYW5nZSAmJiBhWzBdLmV2ZW50cyA9PT0gYlswXS5ldmVudHNcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNsb3RNZXRyaWNzKCkge1xuICByZXR1cm4gbWVtb2l6ZSgob3B0aW9ucykgPT4ge1xuICAgIGNvbnN0IHsgcmFuZ2UsIGV2ZW50cywgbWF4Um93cywgbWluUm93cywgYWNjZXNzb3JzLCBsb2NhbGl6ZXIgfSA9IG9wdGlvbnNcbiAgICBsZXQgeyBmaXJzdCwgbGFzdCB9ID0gZW5kT2ZSYW5nZSh7IGRhdGVSYW5nZTogcmFuZ2UsIGxvY2FsaXplciB9KVxuXG4gICAgbGV0IHNlZ21lbnRzID0gZXZlbnRzLm1hcCgoZXZ0KSA9PlxuICAgICAgZXZlbnRTZWdtZW50cyhldnQsIHJhbmdlLCBhY2Nlc3NvcnMsIGxvY2FsaXplcilcbiAgICApXG5cbiAgICBsZXQgeyBsZXZlbHMsIGV4dHJhIH0gPSBldmVudExldmVscyhzZWdtZW50cywgTWF0aC5tYXgobWF4Um93cyAtIDEsIDEpKVxuICAgIC8vIFN1YnRyYWN0IDEgZnJvbSBtaW5Sb3dzIHRvIG5vdCBpbmNsdWRlIHNob3dNb3JlIGJ1dHRvbiByb3cgd2hlblxuICAgIC8vIGl0IHdvdWxkIGJlIHJlbmRlcmVkXG4gICAgY29uc3QgbWluRXZlbnRSb3dzID0gZXh0cmEubGVuZ3RoID4gMCA/IG1pblJvd3MgLSAxIDogbWluUm93c1xuICAgIHdoaWxlIChsZXZlbHMubGVuZ3RoIDwgbWluRXZlbnRSb3dzKSBsZXZlbHMucHVzaChbXSlcblxuICAgIHJldHVybiB7XG4gICAgICBmaXJzdCxcbiAgICAgIGxhc3QsXG5cbiAgICAgIGxldmVscyxcbiAgICAgIGV4dHJhLFxuICAgICAgcmFuZ2UsXG4gICAgICBzbG90czogcmFuZ2UubGVuZ3RoLFxuXG4gICAgICBjbG9uZShhcmdzKSB7XG4gICAgICAgIGNvbnN0IG1ldHJpY3MgPSBnZXRTbG90TWV0cmljcygpXG4gICAgICAgIHJldHVybiBtZXRyaWNzKHsgLi4ub3B0aW9ucywgLi4uYXJncyB9KVxuICAgICAgfSxcblxuICAgICAgZ2V0RGF0ZUZvclNsb3Qoc2xvdE51bWJlcikge1xuICAgICAgICByZXR1cm4gcmFuZ2Vbc2xvdE51bWJlcl1cbiAgICAgIH0sXG5cbiAgICAgIGdldFNsb3RGb3JEYXRlKGRhdGUpIHtcbiAgICAgICAgcmV0dXJuIHJhbmdlLmZpbmQoKHIpID0+IGxvY2FsaXplci5pc1NhbWVEYXRlKHIsIGRhdGUpKVxuICAgICAgfSxcblxuICAgICAgZ2V0RXZlbnRzRm9yU2xvdChzbG90KSB7XG4gICAgICAgIHJldHVybiBzZWdtZW50c1xuICAgICAgICAgIC5maWx0ZXIoKHNlZykgPT4gaXNTZWdtZW50SW5TbG90KHNlZywgc2xvdCkpXG4gICAgICAgICAgLm1hcCgoc2VnKSA9PiBzZWcuZXZlbnQpXG4gICAgICB9LFxuXG4gICAgICBjb250aW51ZXNQcmlvcihldmVudCkge1xuICAgICAgICByZXR1cm4gbG9jYWxpemVyLmNvbnRpbnVlc1ByaW9yKGFjY2Vzc29ycy5zdGFydChldmVudCksIGZpcnN0KVxuICAgICAgfSxcblxuICAgICAgY29udGludWVzQWZ0ZXIoZXZlbnQpIHtcbiAgICAgICAgY29uc3Qgc3RhcnQgPSBhY2Nlc3NvcnMuc3RhcnQoZXZlbnQpXG4gICAgICAgIGNvbnN0IGVuZCA9IGFjY2Vzc29ycy5lbmQoZXZlbnQpXG4gICAgICAgIHJldHVybiBsb2NhbGl6ZXIuY29udGludWVzQWZ0ZXIoc3RhcnQsIGVuZCwgbGFzdClcbiAgICAgIH0sXG4gICAgfVxuICB9LCBpc0VxdWFsKVxufVxuIiwiaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZVJlZiB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCdcbmltcG9ydCBnZXRIZWlnaHQgZnJvbSAnZG9tLWhlbHBlcnMvaGVpZ2h0J1xuaW1wb3J0IHFzYSBmcm9tICdkb20taGVscGVycy9xdWVyeVNlbGVjdG9yQWxsJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuXG5pbXBvcnQgQmFja2dyb3VuZENlbGxzIGZyb20gJy4vQmFja2dyb3VuZENlbGxzJ1xuaW1wb3J0IEV2ZW50Um93IGZyb20gJy4vRXZlbnRSb3cnXG5pbXBvcnQgRXZlbnRFbmRpbmdSb3cgZnJvbSAnLi9FdmVudEVuZGluZ1JvdydcbmltcG9ydCBOb29wV3JhcHBlciBmcm9tICcuL05vb3BXcmFwcGVyJ1xuaW1wb3J0IFNjcm9sbGFibGVXZWVrV3JhcHBlciBmcm9tICcuL1Njcm9sbGFibGVXZWVrV3JhcHBlcidcbmltcG9ydCAqIGFzIERhdGVTbG90TWV0cmljcyBmcm9tICcuL3V0aWxzL0RhdGVTbG90TWV0cmljcydcblxuY2xhc3MgRGF0ZUNvbnRlbnRSb3cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgc3VwZXIoLi4uYXJncylcblxuICAgIHRoaXMuY29udGFpbmVyUmVmID0gY3JlYXRlUmVmKClcbiAgICB0aGlzLmhlYWRpbmdSb3dSZWYgPSBjcmVhdGVSZWYoKVxuICAgIHRoaXMuZXZlbnRSb3dSZWYgPSBjcmVhdGVSZWYoKVxuXG4gICAgdGhpcy5zbG90TWV0cmljcyA9IERhdGVTbG90TWV0cmljcy5nZXRTbG90TWV0cmljcygpXG4gIH1cblxuICBoYW5kbGVTZWxlY3RTbG90ID0gKHNsb3QpID0+IHtcbiAgICBjb25zdCB7IHJhbmdlLCBvblNlbGVjdFNsb3QgfSA9IHRoaXMucHJvcHNcblxuICAgIG9uU2VsZWN0U2xvdChyYW5nZS5zbGljZShzbG90LnN0YXJ0LCBzbG90LmVuZCArIDEpLCBzbG90KVxuICB9XG5cbiAgaGFuZGxlU2hvd01vcmUgPSAoc2xvdCwgdGFyZ2V0KSA9PiB7XG4gICAgY29uc3QgeyByYW5nZSwgb25TaG93TW9yZSB9ID0gdGhpcy5wcm9wc1xuICAgIGxldCBtZXRyaWNzID0gdGhpcy5zbG90TWV0cmljcyh0aGlzLnByb3BzKVxuICAgIGxldCByb3cgPSBxc2EodGhpcy5jb250YWluZXJSZWYuY3VycmVudCwgJy5yYmMtcm93LWJnJylbMF1cblxuICAgIGxldCBjZWxsXG4gICAgaWYgKHJvdykgY2VsbCA9IHJvdy5jaGlsZHJlbltzbG90IC0gMV1cblxuICAgIGxldCBldmVudHMgPSBtZXRyaWNzLmdldEV2ZW50c0ZvclNsb3Qoc2xvdClcbiAgICBvblNob3dNb3JlKGV2ZW50cywgcmFuZ2Vbc2xvdCAtIDFdLCBjZWxsLCBzbG90LCB0YXJnZXQpXG4gIH1cblxuICBnZXRDb250YWluZXIgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBjb250YWluZXIgfSA9IHRoaXMucHJvcHNcbiAgICByZXR1cm4gY29udGFpbmVyID8gY29udGFpbmVyKCkgOiB0aGlzLmNvbnRhaW5lclJlZi5jdXJyZW50XG4gIH1cblxuICBnZXRSb3dMaW1pdCgpIHtcbiAgICAvKiBHdWVzc2luZyB0aGlzIG9ubHkgZ2V0cyBjYWxsZWQgb24gdGhlIGR1bW15Um93ICovXG4gICAgY29uc3QgZXZlbnRIZWlnaHQgPSBnZXRIZWlnaHQodGhpcy5ldmVudFJvd1JlZi5jdXJyZW50LCB0cnVlKVxuICAgIGNvbnN0IGhlYWRpbmdIZWlnaHQgPSB0aGlzLmhlYWRpbmdSb3dSZWY/LmN1cnJlbnRcbiAgICAgID8gZ2V0SGVpZ2h0KHRoaXMuaGVhZGluZ1Jvd1JlZi5jdXJyZW50LCB0cnVlKVxuICAgICAgOiAwXG4gICAgY29uc3QgZXZlbnRTcGFjZSA9XG4gICAgICBnZXRIZWlnaHQodGhpcy5jb250YWluZXJSZWYuY3VycmVudCwgdHJ1ZSkgLSBoZWFkaW5nSGVpZ2h0XG5cbiAgICByZXR1cm4gTWF0aC5tYXgoTWF0aC5mbG9vcihldmVudFNwYWNlIC8gZXZlbnRIZWlnaHQpLCAxKVxuICB9XG5cbiAgcmVuZGVySGVhZGluZ0NlbGwgPSAoZGF0ZSwgaW5kZXgpID0+IHtcbiAgICBsZXQgeyByZW5kZXJIZWFkZXIsIGdldE5vdywgbG9jYWxpemVyIH0gPSB0aGlzLnByb3BzXG5cbiAgICByZXR1cm4gcmVuZGVySGVhZGVyKHtcbiAgICAgIGRhdGUsXG4gICAgICBrZXk6IGBoZWFkZXJfJHtpbmRleH1gLFxuICAgICAgY2xhc3NOYW1lOiBjbHN4KFxuICAgICAgICAncmJjLWRhdGUtY2VsbCcsXG4gICAgICAgIGxvY2FsaXplci5pc1NhbWVEYXRlKGRhdGUsIGdldE5vdygpKSAmJiAncmJjLW5vdydcbiAgICAgICksXG4gICAgfSlcbiAgfVxuXG4gIHJlbmRlckR1bW15ID0gKCkgPT4ge1xuICAgIGxldCB7IGNsYXNzTmFtZSwgcmFuZ2UsIHJlbmRlckhlYWRlciwgc2hvd0FsbEV2ZW50cyB9ID0gdGhpcy5wcm9wc1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSByZWY9e3RoaXMuY29udGFpbmVyUmVmfT5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzTmFtZT17Y2xzeChcbiAgICAgICAgICAgICdyYmMtcm93LWNvbnRlbnQnLFxuICAgICAgICAgICAgc2hvd0FsbEV2ZW50cyAmJiAncmJjLXJvdy1jb250ZW50LXNjcm9sbGFibGUnXG4gICAgICAgICAgKX1cbiAgICAgICAgPlxuICAgICAgICAgIHtyZW5kZXJIZWFkZXIgJiYgKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyYmMtcm93XCIgcmVmPXt0aGlzLmhlYWRpbmdSb3dSZWZ9PlxuICAgICAgICAgICAgICB7cmFuZ2UubWFwKHRoaXMucmVuZGVySGVhZGluZ0NlbGwpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJiYy1yb3dcIiByZWY9e3RoaXMuZXZlbnRSb3dSZWZ9PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyYmMtcm93LXNlZ21lbnRcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyYmMtZXZlbnRcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJiYy1ldmVudC1jb250ZW50XCI+Jm5ic3A7PC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGRhdGUsXG4gICAgICBydGwsXG4gICAgICByYW5nZSxcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIHNlbGVjdGVkLFxuICAgICAgc2VsZWN0YWJsZSxcbiAgICAgIHJlbmRlckZvck1lYXN1cmUsXG5cbiAgICAgIGFjY2Vzc29ycyxcbiAgICAgIGdldHRlcnMsXG4gICAgICBjb21wb25lbnRzLFxuXG4gICAgICBnZXROb3csXG4gICAgICByZW5kZXJIZWFkZXIsXG4gICAgICBvblNlbGVjdCxcbiAgICAgIGxvY2FsaXplcixcbiAgICAgIG9uU2VsZWN0U3RhcnQsXG4gICAgICBvblNlbGVjdEVuZCxcbiAgICAgIG9uRG91YmxlQ2xpY2ssXG4gICAgICBvbktleVByZXNzLFxuICAgICAgcmVzb3VyY2VJZCxcbiAgICAgIGxvbmdQcmVzc1RocmVzaG9sZCxcbiAgICAgIGlzQWxsRGF5LFxuICAgICAgcmVzaXphYmxlLFxuICAgICAgc2hvd0FsbEV2ZW50cyxcbiAgICB9ID0gdGhpcy5wcm9wc1xuXG4gICAgaWYgKHJlbmRlckZvck1lYXN1cmUpIHJldHVybiB0aGlzLnJlbmRlckR1bW15KClcblxuICAgIGxldCBtZXRyaWNzID0gdGhpcy5zbG90TWV0cmljcyh0aGlzLnByb3BzKVxuICAgIGxldCB7IGxldmVscywgZXh0cmEgfSA9IG1ldHJpY3NcblxuICAgIGxldCBTY3JvbGxhYmxlV2Vla0NvbXBvbmVudCA9IHNob3dBbGxFdmVudHNcbiAgICAgID8gU2Nyb2xsYWJsZVdlZWtXcmFwcGVyXG4gICAgICA6IE5vb3BXcmFwcGVyXG4gICAgbGV0IFdlZWtXcmFwcGVyID0gY29tcG9uZW50cy53ZWVrV3JhcHBlclxuXG4gICAgY29uc3QgZXZlbnRSb3dQcm9wcyA9IHtcbiAgICAgIHNlbGVjdGVkLFxuICAgICAgYWNjZXNzb3JzLFxuICAgICAgZ2V0dGVycyxcbiAgICAgIGxvY2FsaXplcixcbiAgICAgIGNvbXBvbmVudHMsXG4gICAgICBvblNlbGVjdCxcbiAgICAgIG9uRG91YmxlQ2xpY2ssXG4gICAgICBvbktleVByZXNzLFxuICAgICAgcmVzb3VyY2VJZCxcbiAgICAgIHNsb3RNZXRyaWNzOiBtZXRyaWNzLFxuICAgICAgcmVzaXphYmxlLFxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSByb2xlPVwicm93Z3JvdXBcIiByZWY9e3RoaXMuY29udGFpbmVyUmVmfT5cbiAgICAgICAgPEJhY2tncm91bmRDZWxsc1xuICAgICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICAgIGRhdGU9e2RhdGV9XG4gICAgICAgICAgZ2V0Tm93PXtnZXROb3d9XG4gICAgICAgICAgcnRsPXtydGx9XG4gICAgICAgICAgcmFuZ2U9e3JhbmdlfVxuICAgICAgICAgIHNlbGVjdGFibGU9e3NlbGVjdGFibGV9XG4gICAgICAgICAgY29udGFpbmVyPXt0aGlzLmdldENvbnRhaW5lcn1cbiAgICAgICAgICBnZXR0ZXJzPXtnZXR0ZXJzfVxuICAgICAgICAgIG9uU2VsZWN0U3RhcnQ9e29uU2VsZWN0U3RhcnR9XG4gICAgICAgICAgb25TZWxlY3RFbmQ9e29uU2VsZWN0RW5kfVxuICAgICAgICAgIG9uU2VsZWN0U2xvdD17dGhpcy5oYW5kbGVTZWxlY3RTbG90fVxuICAgICAgICAgIGNvbXBvbmVudHM9e2NvbXBvbmVudHN9XG4gICAgICAgICAgbG9uZ1ByZXNzVGhyZXNob2xkPXtsb25nUHJlc3NUaHJlc2hvbGR9XG4gICAgICAgICAgcmVzb3VyY2VJZD17cmVzb3VyY2VJZH1cbiAgICAgICAgLz5cblxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICAgICAgJ3JiYy1yb3ctY29udGVudCcsXG4gICAgICAgICAgICBzaG93QWxsRXZlbnRzICYmICdyYmMtcm93LWNvbnRlbnQtc2Nyb2xsYWJsZSdcbiAgICAgICAgICApfVxuICAgICAgICAgIHJvbGU9XCJyb3dcIlxuICAgICAgICA+XG4gICAgICAgICAge3JlbmRlckhlYWRlciAmJiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJiYy1yb3cgXCIgcmVmPXt0aGlzLmhlYWRpbmdSb3dSZWZ9PlxuICAgICAgICAgICAgICB7cmFuZ2UubWFwKHRoaXMucmVuZGVySGVhZGluZ0NlbGwpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8U2Nyb2xsYWJsZVdlZWtDb21wb25lbnQ+XG4gICAgICAgICAgICA8V2Vla1dyYXBwZXJcbiAgICAgICAgICAgICAgaXNBbGxEYXk9e2lzQWxsRGF5fVxuICAgICAgICAgICAgICB7Li4uZXZlbnRSb3dQcm9wc31cbiAgICAgICAgICAgICAgcnRsPXt0aGlzLnByb3BzLnJ0bH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2xldmVscy5tYXAoKHNlZ3MsIGlkeCkgPT4gKFxuICAgICAgICAgICAgICAgIDxFdmVudFJvdyBrZXk9e2lkeH0gc2VnbWVudHM9e3NlZ3N9IHsuLi5ldmVudFJvd1Byb3BzfSAvPlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgeyEhZXh0cmEubGVuZ3RoICYmIChcbiAgICAgICAgICAgICAgICA8RXZlbnRFbmRpbmdSb3dcbiAgICAgICAgICAgICAgICAgIHNlZ21lbnRzPXtleHRyYX1cbiAgICAgICAgICAgICAgICAgIG9uU2hvd01vcmU9e3RoaXMuaGFuZGxlU2hvd01vcmV9XG4gICAgICAgICAgICAgICAgICB7Li4uZXZlbnRSb3dQcm9wc31cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9XZWVrV3JhcHBlcj5cbiAgICAgICAgICA8L1Njcm9sbGFibGVXZWVrQ29tcG9uZW50PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuXG5EYXRlQ29udGVudFJvdy5wcm9wVHlwZXMgPSB7XG4gIGRhdGU6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuICBldmVudHM6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICByYW5nZTogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG5cbiAgcnRsOiBQcm9wVHlwZXMuYm9vbCxcbiAgcmVzaXphYmxlOiBQcm9wVHlwZXMuYm9vbCxcbiAgcmVzb3VyY2VJZDogUHJvcFR5cGVzLmFueSxcbiAgcmVuZGVyRm9yTWVhc3VyZTogUHJvcFR5cGVzLmJvb2wsXG4gIHJlbmRlckhlYWRlcjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgY29udGFpbmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgc2VsZWN0ZWQ6IFByb3BUeXBlcy5vYmplY3QsXG4gIHNlbGVjdGFibGU6IFByb3BUeXBlcy5vbmVPZihbdHJ1ZSwgZmFsc2UsICdpZ25vcmVFdmVudHMnXSksXG4gIGxvbmdQcmVzc1RocmVzaG9sZDogUHJvcFR5cGVzLm51bWJlcixcblxuICBvblNob3dNb3JlOiBQcm9wVHlwZXMuZnVuYyxcbiAgc2hvd0FsbEV2ZW50czogUHJvcFR5cGVzLmJvb2wsXG4gIG9uU2VsZWN0U2xvdDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25TZWxlY3RFbmQ6IFByb3BUeXBlcy5mdW5jLFxuICBvblNlbGVjdFN0YXJ0OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Eb3VibGVDbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uS2V5UHJlc3M6IFByb3BUeXBlcy5mdW5jLFxuICBkYXlQcm9wR2V0dGVyOiBQcm9wVHlwZXMuZnVuYyxcblxuICBnZXROb3c6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGlzQWxsRGF5OiBQcm9wVHlwZXMuYm9vbCxcblxuICBhY2Nlc3NvcnM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgY29tcG9uZW50czogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBnZXR0ZXJzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGxvY2FsaXplcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuXG4gIG1pblJvd3M6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgbWF4Um93czogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxufVxuXG5EYXRlQ29udGVudFJvdy5kZWZhdWx0UHJvcHMgPSB7XG4gIG1pblJvd3M6IDAsXG4gIG1heFJvd3M6IEluZmluaXR5LFxufVxuXG5leHBvcnQgZGVmYXVsdCBEYXRlQ29udGVudFJvd1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCdcblxuY2xhc3MgRXZlbnRDZWxsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGxldCB7XG4gICAgICBzdHlsZSxcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIGV2ZW50LFxuICAgICAgc2VsZWN0ZWQsXG4gICAgICBpc0FsbERheSxcbiAgICAgIG9uU2VsZWN0LFxuICAgICAgb25Eb3VibGVDbGljayxcbiAgICAgIG9uS2V5UHJlc3MsXG4gICAgICBsb2NhbGl6ZXIsXG4gICAgICBjb250aW51ZXNQcmlvcixcbiAgICAgIGNvbnRpbnVlc0FmdGVyLFxuICAgICAgYWNjZXNzb3JzLFxuICAgICAgZ2V0dGVycyxcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgY29tcG9uZW50czogeyBldmVudDogRXZlbnQsIGV2ZW50V3JhcHBlcjogRXZlbnRXcmFwcGVyIH0sXG4gICAgICBzbG90U3RhcnQsXG4gICAgICBzbG90RW5kLFxuICAgICAgLi4ucHJvcHNcbiAgICB9ID0gdGhpcy5wcm9wc1xuICAgIGRlbGV0ZSBwcm9wcy5yZXNpemFibGVcblxuICAgIGxldCB0aXRsZSA9IGFjY2Vzc29ycy50aXRsZShldmVudClcbiAgICBsZXQgdG9vbHRpcCA9IGFjY2Vzc29ycy50b29sdGlwKGV2ZW50KVxuICAgIGxldCBlbmQgPSBhY2Nlc3NvcnMuZW5kKGV2ZW50KVxuICAgIGxldCBzdGFydCA9IGFjY2Vzc29ycy5zdGFydChldmVudClcbiAgICBsZXQgYWxsRGF5ID0gYWNjZXNzb3JzLmFsbERheShldmVudClcblxuICAgIGxldCBzaG93QXNBbGxEYXkgPVxuICAgICAgaXNBbGxEYXkgfHxcbiAgICAgIGFsbERheSB8fFxuICAgICAgbG9jYWxpemVyLmRpZmYoc3RhcnQsIGxvY2FsaXplci5jZWlsKGVuZCwgJ2RheScpLCAnZGF5JykgPiAxXG5cbiAgICBsZXQgdXNlclByb3BzID0gZ2V0dGVycy5ldmVudFByb3AoZXZlbnQsIHN0YXJ0LCBlbmQsIHNlbGVjdGVkKVxuXG4gICAgY29uc3QgY29udGVudCA9IChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmJjLWV2ZW50LWNvbnRlbnRcIiB0aXRsZT17dG9vbHRpcCB8fCB1bmRlZmluZWR9PlxuICAgICAgICB7RXZlbnQgPyAoXG4gICAgICAgICAgPEV2ZW50XG4gICAgICAgICAgICBldmVudD17ZXZlbnR9XG4gICAgICAgICAgICBjb250aW51ZXNQcmlvcj17Y29udGludWVzUHJpb3J9XG4gICAgICAgICAgICBjb250aW51ZXNBZnRlcj17Y29udGludWVzQWZ0ZXJ9XG4gICAgICAgICAgICB0aXRsZT17dGl0bGV9XG4gICAgICAgICAgICBpc0FsbERheT17YWxsRGF5fVxuICAgICAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XG4gICAgICAgICAgICBzbG90U3RhcnQ9e3Nsb3RTdGFydH1cbiAgICAgICAgICAgIHNsb3RFbmQ9e3Nsb3RFbmR9XG4gICAgICAgICAgLz5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICB0aXRsZVxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxFdmVudFdyYXBwZXIgey4uLnRoaXMucHJvcHN9IHR5cGU9XCJkYXRlXCI+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgc3R5bGU9e3sgLi4udXNlclByb3BzLnN0eWxlLCAuLi5zdHlsZSB9fVxuICAgICAgICAgIGNsYXNzTmFtZT17Y2xzeCgncmJjLWV2ZW50JywgY2xhc3NOYW1lLCB1c2VyUHJvcHMuY2xhc3NOYW1lLCB7XG4gICAgICAgICAgICAncmJjLXNlbGVjdGVkJzogc2VsZWN0ZWQsXG4gICAgICAgICAgICAncmJjLWV2ZW50LWFsbGRheSc6IHNob3dBc0FsbERheSxcbiAgICAgICAgICAgICdyYmMtZXZlbnQtY29udGludWVzLXByaW9yJzogY29udGludWVzUHJpb3IsXG4gICAgICAgICAgICAncmJjLWV2ZW50LWNvbnRpbnVlcy1hZnRlcic6IGNvbnRpbnVlc0FmdGVyLFxuICAgICAgICAgIH0pfVxuICAgICAgICAgIG9uQ2xpY2s9eyhlKSA9PiBvblNlbGVjdCAmJiBvblNlbGVjdChldmVudCwgZSl9XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17KGUpID0+IG9uRG91YmxlQ2xpY2sgJiYgb25Eb3VibGVDbGljayhldmVudCwgZSl9XG4gICAgICAgICAgb25LZXlEb3duPXsoZSkgPT4gb25LZXlQcmVzcyAmJiBvbktleVByZXNzKGV2ZW50LCBlKX1cbiAgICAgICAgPlxuICAgICAgICAgIHt0eXBlb2YgY2hpbGRyZW4gPT09ICdmdW5jdGlvbicgPyBjaGlsZHJlbihjb250ZW50KSA6IGNvbnRlbnR9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9FdmVudFdyYXBwZXI+XG4gICAgKVxuICB9XG59XG5cbkV2ZW50Q2VsbC5wcm9wVHlwZXMgPSB7XG4gIGV2ZW50OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIHNsb3RTdGFydDogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG4gIHNsb3RFbmQ6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuXG4gIHJlc2l6YWJsZTogUHJvcFR5cGVzLmJvb2wsXG4gIHNlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgaXNBbGxEYXk6IFByb3BUeXBlcy5ib29sLFxuICBjb250aW51ZXNQcmlvcjogUHJvcFR5cGVzLmJvb2wsXG4gIGNvbnRpbnVlc0FmdGVyOiBQcm9wVHlwZXMuYm9vbCxcblxuICBhY2Nlc3NvcnM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgY29tcG9uZW50czogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBnZXR0ZXJzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGxvY2FsaXplcjogUHJvcFR5cGVzLm9iamVjdCxcblxuICBvblNlbGVjdDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uRG91YmxlQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICBvbktleVByZXNzOiBQcm9wVHlwZXMuZnVuYyxcbn1cblxuZXhwb3J0IGRlZmF1bHQgRXZlbnRDZWxsXG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4J1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IEV2ZW50Um93TWl4aW4gZnJvbSAnLi9FdmVudFJvd01peGluJ1xuXG5jbGFzcyBFdmVudFJvdyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBsZXQge1xuICAgICAgc2VnbWVudHMsXG4gICAgICBzbG90TWV0cmljczogeyBzbG90cyB9LFxuICAgICAgY2xhc3NOYW1lLFxuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICBsZXQgbGFzdEVuZCA9IDFcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xzeChjbGFzc05hbWUsICdyYmMtcm93Jyl9PlxuICAgICAgICB7c2VnbWVudHMucmVkdWNlKChyb3csIHsgZXZlbnQsIGxlZnQsIHJpZ2h0LCBzcGFuIH0sIGxpKSA9PiB7XG4gICAgICAgICAgbGV0IGtleSA9ICdfbHZsXycgKyBsaVxuICAgICAgICAgIGxldCBnYXAgPSBsZWZ0IC0gbGFzdEVuZFxuXG4gICAgICAgICAgbGV0IGNvbnRlbnQgPSBFdmVudFJvd01peGluLnJlbmRlckV2ZW50KHRoaXMucHJvcHMsIGV2ZW50KVxuXG4gICAgICAgICAgaWYgKGdhcCkgcm93LnB1c2goRXZlbnRSb3dNaXhpbi5yZW5kZXJTcGFuKHNsb3RzLCBnYXAsIGAke2tleX1fZ2FwYCkpXG5cbiAgICAgICAgICByb3cucHVzaChFdmVudFJvd01peGluLnJlbmRlclNwYW4oc2xvdHMsIHNwYW4sIGtleSwgY29udGVudCkpXG5cbiAgICAgICAgICBsYXN0RW5kID0gcmlnaHQgKyAxXG5cbiAgICAgICAgICByZXR1cm4gcm93XG4gICAgICAgIH0sIFtdKX1cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuXG5FdmVudFJvdy5wcm9wVHlwZXMgPSB7XG4gIHNlZ21lbnRzOiBQcm9wVHlwZXMuYXJyYXksXG4gIC4uLkV2ZW50Um93TWl4aW4ucHJvcFR5cGVzLFxufVxuXG5FdmVudFJvdy5kZWZhdWx0UHJvcHMgPSB7XG4gIC4uLkV2ZW50Um93TWl4aW4uZGVmYXVsdFByb3BzLFxufVxuXG5leHBvcnQgZGVmYXVsdCBFdmVudFJvd1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IEV2ZW50Q2VsbCBmcm9tICcuL0V2ZW50Q2VsbCdcbmltcG9ydCB7IGlzU2VsZWN0ZWQgfSBmcm9tICcuL3V0aWxzL3NlbGVjdGlvbidcblxuLyogZXNsaW50LWRpc2FibGUgcmVhY3QvcHJvcC10eXBlcyAqL1xuZXhwb3J0IGRlZmF1bHQge1xuICBwcm9wVHlwZXM6IHtcbiAgICBzbG90TWV0cmljczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuXG4gICAgc2VsZWN0ZWQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgaXNBbGxEYXk6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgYWNjZXNzb3JzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgbG9jYWxpemVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgY29tcG9uZW50czogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIGdldHRlcnM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICAgIG9uU2VsZWN0OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkRvdWJsZUNsaWNrOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbktleVByZXNzOiBQcm9wVHlwZXMuZnVuYyxcbiAgfSxcblxuICBkZWZhdWx0UHJvcHM6IHtcbiAgICBzZWdtZW50czogW10sXG4gICAgc2VsZWN0ZWQ6IHt9LFxuICB9LFxuXG4gIHJlbmRlckV2ZW50KHByb3BzLCBldmVudCkge1xuICAgIGxldCB7XG4gICAgICBzZWxlY3RlZCxcbiAgICAgIGlzQWxsRGF5OiBfLFxuICAgICAgYWNjZXNzb3JzLFxuICAgICAgZ2V0dGVycyxcbiAgICAgIG9uU2VsZWN0LFxuICAgICAgb25Eb3VibGVDbGljayxcbiAgICAgIG9uS2V5UHJlc3MsXG4gICAgICBsb2NhbGl6ZXIsXG4gICAgICBzbG90TWV0cmljcyxcbiAgICAgIGNvbXBvbmVudHMsXG4gICAgICByZXNpemFibGUsXG4gICAgfSA9IHByb3BzXG5cbiAgICBsZXQgY29udGludWVzUHJpb3IgPSBzbG90TWV0cmljcy5jb250aW51ZXNQcmlvcihldmVudClcbiAgICBsZXQgY29udGludWVzQWZ0ZXIgPSBzbG90TWV0cmljcy5jb250aW51ZXNBZnRlcihldmVudClcblxuICAgIHJldHVybiAoXG4gICAgICA8RXZlbnRDZWxsXG4gICAgICAgIGV2ZW50PXtldmVudH1cbiAgICAgICAgZ2V0dGVycz17Z2V0dGVyc31cbiAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XG4gICAgICAgIGFjY2Vzc29ycz17YWNjZXNzb3JzfVxuICAgICAgICBjb21wb25lbnRzPXtjb21wb25lbnRzfVxuICAgICAgICBvblNlbGVjdD17b25TZWxlY3R9XG4gICAgICAgIG9uRG91YmxlQ2xpY2s9e29uRG91YmxlQ2xpY2t9XG4gICAgICAgIG9uS2V5UHJlc3M9e29uS2V5UHJlc3N9XG4gICAgICAgIGNvbnRpbnVlc1ByaW9yPXtjb250aW51ZXNQcmlvcn1cbiAgICAgICAgY29udGludWVzQWZ0ZXI9e2NvbnRpbnVlc0FmdGVyfVxuICAgICAgICBzbG90U3RhcnQ9e3Nsb3RNZXRyaWNzLmZpcnN0fVxuICAgICAgICBzbG90RW5kPXtzbG90TWV0cmljcy5sYXN0fVxuICAgICAgICBzZWxlY3RlZD17aXNTZWxlY3RlZChldmVudCwgc2VsZWN0ZWQpfVxuICAgICAgICByZXNpemFibGU9e3Jlc2l6YWJsZX1cbiAgICAgIC8+XG4gICAgKVxuICB9LFxuXG4gIHJlbmRlclNwYW4oc2xvdHMsIGxlbiwga2V5LCBjb250ZW50ID0gJyAnKSB7XG4gICAgbGV0IHBlciA9IChNYXRoLmFicyhsZW4pIC8gc2xvdHMpICogMTAwICsgJyUnXG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICBrZXk9e2tleX1cbiAgICAgICAgY2xhc3NOYW1lPVwicmJjLXJvdy1zZWdtZW50XCJcbiAgICAgICAgLy8gSUUxMC8xMSBuZWVkIG1heC13aWR0aC4gZmxleC1iYXNpcyBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZ1xuICAgICAgICBzdHlsZT17eyBXZWJraXRGbGV4QmFzaXM6IHBlciwgZmxleEJhc2lzOiBwZXIsIG1heFdpZHRoOiBwZXIgfX1cbiAgICAgID5cbiAgICAgICAge2NvbnRlbnR9XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH0sXG59XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmNvbnN0IEhlYWRlciA9ICh7IGxhYmVsIH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8c3BhbiByb2xlPVwiY29sdW1uaGVhZGVyXCIgYXJpYS1zb3J0PVwibm9uZVwiPlxuICAgICAge2xhYmVsfVxuICAgIDwvc3Bhbj5cbiAgKVxufVxuXG5IZWFkZXIucHJvcFR5cGVzID0ge1xuICBsYWJlbDogUHJvcFR5cGVzLm5vZGUsXG59XG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlclxuIiwiZnVuY3Rpb24gTm9vcFdyYXBwZXIocHJvcHMpIHtcbiAgcmV0dXJuIHByb3BzLmNoaWxkcmVuXG59XG5cbmV4cG9ydCBkZWZhdWx0IE5vb3BXcmFwcGVyXG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG5pbXBvcnQgUmVhY3QsIHsgdXNlTGF5b3V0RWZmZWN0IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5cbmltcG9ydCB1c2VDbGlja091dHNpZGUgZnJvbSAnLi9ob29rcy91c2VDbGlja091dHNpZGUnXG5pbXBvcnQgRXZlbnRDZWxsIGZyb20gJy4vRXZlbnRDZWxsJ1xuaW1wb3J0IHsgaXNTZWxlY3RlZCB9IGZyb20gJy4vdXRpbHMvc2VsZWN0aW9uJ1xuXG5mdW5jdGlvbiBQb3Aoe1xuICBjb250YWluZXJSZWYsXG4gIGFjY2Vzc29ycyxcbiAgZ2V0dGVycyxcbiAgc2VsZWN0ZWQsXG4gIGNvbXBvbmVudHMsXG4gIGxvY2FsaXplcixcbiAgc2hvdyxcbiAgZXZlbnRzLFxuICBzbG90U3RhcnQsXG4gIHNsb3RFbmQsXG4gIG9uU2VsZWN0LFxuICBvbkRvdWJsZUNsaWNrLFxuICBvbktleVByZXNzLFxuICBoYW5kbGVEcmFnU3RhcnQsXG4gIHBvcHBlclJlZixcbiAgdGFyZ2V0LFxuICBvZmZzZXQsXG59KSB7XG4gIHVzZUNsaWNrT3V0c2lkZSh7IHJlZjogcG9wcGVyUmVmLCBjYWxsYmFjazogc2hvdyB9KVxuICB1c2VMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghcG9wcGVyUmVmLmN1cnJlbnQgfHwgIWNvbnRhaW5lclJlZi5jdXJyZW50IHx8ICF0YXJnZXQpIHJldHVyblxuXG4gICAgY29uc3QgcG9wdXBXaWR0aCA9IDI1MFxuXG4gICAgY29uc3QgdGFyZ2V0UmVjdCA9IHRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgIGNvbnN0IGNvbnRhaW5lclJlY3QgPSBjb250YWluZXJSZWYuY3VycmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgIGNvbnN0IHBvcHBlclJlY3QgPSBwb3BwZXJSZWYuY3VycmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgIGNvbnN0IHBhcmVudE9mUG9wcGVyID0gcG9wcGVyUmVmLmN1cnJlbnQucGFyZW50RWxlbWVudFxuICAgIGNvbnN0IHJiY0RheUJnID0gcGFyZW50T2ZQb3BwZXIucXVlcnlTZWxlY3RvcignLnJiYy1kYXktYmcnKVxuXG4gICAgY29uc3QgdG9wT2Zmc2V0ID1cbiAgICAgIHRhcmdldFJlY3QuYm90dG9tICsgb2Zmc2V0LnkgPiBjb250YWluZXJSZWN0LmJvdHRvbSArIHdpbmRvdy5zY3JvbGxZXG4gICAgICAgID8gdGFyZ2V0UmVjdC50b3AgLSBwb3BwZXJSZWN0LmhlaWdodCAtIG9mZnNldC55ICsgd2luZG93LnNjcm9sbFlcbiAgICAgICAgOiB0YXJnZXRSZWN0LmJvdHRvbSArIG9mZnNldC55ICsgd2luZG93LnNjcm9sbFlcblxuICAgIGNvbnN0IGxlZnRPZmZzZXQgPVxuICAgICAgdGFyZ2V0UmVjdC5yaWdodCArIHBvcHVwV2lkdGggPiBjb250YWluZXJSZWN0LnJpZ2h0XG4gICAgICAgID8gdGFyZ2V0UmVjdC5sZWZ0IC0gcG9wdXBXaWR0aCArIHRhcmdldFJlY3Qud2lkdGhcbiAgICAgICAgOiB0YXJnZXRSZWN0LmxlZnRcblxuICAgIGlmIChyYmNEYXlCZykge1xuICAgICAgY29uc3QgcmJjRGF5QmdXaWR0aCA9IHJiY0RheUJnLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoXG5cbiAgICAgIGlmIChyYmNEYXlCZ1dpZHRoICYmIHJiY0RheUJnV2lkdGggPiAwKSB7XG4gICAgICAgIHBvcHBlclJlZi5jdXJyZW50LnN0eWxlLm1pbldpZHRoID0gYCR7cmJjRGF5QmdXaWR0aH1weGBcbiAgICAgIH1cbiAgICB9XG5cbiAgICBwb3BwZXJSZWYuY3VycmVudC5zdHlsZS50b3AgPSBgJHt0b3BPZmZzZXR9cHhgXG4gICAgcG9wcGVyUmVmLmN1cnJlbnQuc3R5bGUubGVmdCA9IGAke2xlZnRPZmZzZXR9cHhgXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICB9LCBbb2Zmc2V0LngsIG9mZnNldC55LCB0YXJnZXQsIGNvbnRhaW5lclJlZiwgcG9wcGVyUmVmXSlcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwicmJjLW92ZXJsYXlcIiByZWY9e3BvcHBlclJlZn0+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInJiYy1vdmVybGF5LWhlYWRlclwiPlxuICAgICAgICB7bG9jYWxpemVyLmZvcm1hdChzbG90U3RhcnQsICdkYXlIZWFkZXJGb3JtYXQnKX1cbiAgICAgIDwvZGl2PlxuICAgICAge2V2ZW50cy5tYXAoKGV2ZW50LCBpZHgpID0+IChcbiAgICAgICAgPEV2ZW50Q2VsbFxuICAgICAgICAgIGtleT17aWR4fVxuICAgICAgICAgIHR5cGU9XCJwb3B1cFwiXG4gICAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XG4gICAgICAgICAgZXZlbnQ9e2V2ZW50fVxuICAgICAgICAgIGdldHRlcnM9e2dldHRlcnN9XG4gICAgICAgICAgb25TZWxlY3Q9e29uU2VsZWN0fVxuICAgICAgICAgIGFjY2Vzc29ycz17YWNjZXNzb3JzfVxuICAgICAgICAgIGNvbXBvbmVudHM9e2NvbXBvbmVudHN9XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17b25Eb3VibGVDbGlja31cbiAgICAgICAgICBvbktleVByZXNzPXtvbktleVByZXNzfVxuICAgICAgICAgIGNvbnRpbnVlc1ByaW9yPXtsb2NhbGl6ZXIubHQoYWNjZXNzb3JzLmVuZChldmVudCksIHNsb3RTdGFydCwgJ2RheScpfVxuICAgICAgICAgIGNvbnRpbnVlc0FmdGVyPXtsb2NhbGl6ZXIuZ3RlKGFjY2Vzc29ycy5zdGFydChldmVudCksIHNsb3RFbmQsICdkYXknKX1cbiAgICAgICAgICBzbG90U3RhcnQ9e3Nsb3RTdGFydH1cbiAgICAgICAgICBzbG90RW5kPXtzbG90RW5kfVxuICAgICAgICAgIHNlbGVjdGVkPXtpc1NlbGVjdGVkKGV2ZW50LCBzZWxlY3RlZCl9XG4gICAgICAgICAgZHJhZ2dhYmxlPXt0cnVlfVxuICAgICAgICAgIG9uRHJhZ1N0YXJ0PXsoKSA9PiBoYW5kbGVEcmFnU3RhcnQoZXZlbnQpfVxuICAgICAgICAgIG9uRHJhZ0VuZD17KCkgPT4gc2hvdygpfVxuICAgICAgICAvPlxuICAgICAgKSl9XG4gICAgPC9kaXY+XG4gIClcbn1cblxuY29uc3QgUG9wdXAgPSBSZWFjdC5mb3J3YXJkUmVmKChwcm9wcywgcmVmKSA9PiAoXG4gIDxQb3Agey4uLnByb3BzfSBwb3BwZXJSZWY9e3JlZn0gLz5cbikpXG5Qb3B1cC5wcm9wVHlwZXMgPSB7XG4gIGFjY2Vzc29yczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBnZXR0ZXJzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIHNlbGVjdGVkOiBQcm9wVHlwZXMub2JqZWN0LFxuICBjb21wb25lbnRzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGxvY2FsaXplcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBwb3NpdGlvbjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBzaG93OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBldmVudHM6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICBzbG90U3RhcnQ6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLmlzUmVxdWlyZWQsXG4gIHNsb3RFbmQ6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuICBvblNlbGVjdDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uRG91YmxlQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICBvbktleVByZXNzOiBQcm9wVHlwZXMuZnVuYyxcbiAgaGFuZGxlRHJhZ1N0YXJ0OiBQcm9wVHlwZXMuZnVuYyxcbiAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIG9mZnNldDogUHJvcFR5cGVzLnNoYXBlKHsgeDogUHJvcFR5cGVzLm51bWJlciwgeTogUHJvcFR5cGVzLm51bWJlciB9KSxcbn1cbmV4cG9ydCBkZWZhdWx0IFBvcHVwXG4iLCJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlQ2xpY2tPdXRzaWRlKHsgcmVmLCBjYWxsYmFjayB9KSB7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlQ2xpY2tPdXRzaWRlID0gKGUpID0+IHtcbiAgICAgIGlmIChyZWYuY3VycmVudCAmJiAhcmVmLmN1cnJlbnQuY29udGFpbnMoZS50YXJnZXQpKSB7XG4gICAgICAgIGNhbGxiYWNrKClcbiAgICAgIH1cbiAgICB9XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgaGFuZGxlQ2xpY2tPdXRzaWRlKVxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBoYW5kbGVDbGlja091dHNpZGUpXG4gICAgfVxuICB9LCBbcmVmLCBjYWxsYmFja10pXG59XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBPdmVybGF5IH0gZnJvbSAncmVhY3Qtb3ZlcmxheXMnXG5pbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cCdcblxuZnVuY3Rpb24gQ2FsT3ZlcmxheSh7XG4gIGNvbnRhaW5lclJlZixcbiAgcG9wdXBPZmZzZXQgPSA1LFxuICBvdmVybGF5LFxuICBhY2Nlc3NvcnMsXG4gIGxvY2FsaXplcixcbiAgY29tcG9uZW50cyxcbiAgZ2V0dGVycyxcbiAgc2VsZWN0ZWQsXG4gIGhhbmRsZVNlbGVjdEV2ZW50LFxuICBoYW5kbGVEb3VibGVDbGlja0V2ZW50LFxuICBoYW5kbGVLZXlQcmVzc0V2ZW50LFxuICBoYW5kbGVEcmFnU3RhcnQsXG4gIG9uSGlkZSxcbiAgb3ZlcmxheURpc3BsYXksXG59KSB7XG4gIGNvbnN0IHBvcHBlclJlZiA9IHVzZVJlZihudWxsKVxuICBpZiAoIW92ZXJsYXkucG9zaXRpb24pIHJldHVybiBudWxsXG5cbiAgbGV0IG9mZnNldCA9IHBvcHVwT2Zmc2V0XG4gIGlmICghaXNOYU4ocG9wdXBPZmZzZXQpKSB7XG4gICAgb2Zmc2V0ID0geyB4OiBwb3B1cE9mZnNldCwgeTogcG9wdXBPZmZzZXQgfVxuICB9XG5cbiAgY29uc3QgeyBwb3NpdGlvbiwgZXZlbnRzLCBkYXRlLCBlbmQgfSA9IG92ZXJsYXlcbiAgcmV0dXJuIChcbiAgICA8T3ZlcmxheVxuICAgICAgcm9vdENsb3NlXG4gICAgICBmbGlwXG4gICAgICBzaG93XG4gICAgICBwbGFjZW1lbnQ9XCJib3R0b21cIlxuICAgICAgb25IaWRlPXtvbkhpZGV9XG4gICAgICB0YXJnZXQ9e292ZXJsYXkudGFyZ2V0fVxuICAgID5cbiAgICAgIHsoeyBwcm9wcyB9KSA9PiAoXG4gICAgICAgIDxQb3B1cFxuICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICBjb250YWluZXJSZWY9e2NvbnRhaW5lclJlZn1cbiAgICAgICAgICByZWY9e3BvcHBlclJlZn1cbiAgICAgICAgICB0YXJnZXQ9e292ZXJsYXkudGFyZ2V0fVxuICAgICAgICAgIG9mZnNldD17b2Zmc2V0fVxuICAgICAgICAgIGFjY2Vzc29ycz17YWNjZXNzb3JzfVxuICAgICAgICAgIGdldHRlcnM9e2dldHRlcnN9XG4gICAgICAgICAgc2VsZWN0ZWQ9e3NlbGVjdGVkfVxuICAgICAgICAgIGNvbXBvbmVudHM9e2NvbXBvbmVudHN9XG4gICAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XG4gICAgICAgICAgcG9zaXRpb249e3Bvc2l0aW9ufVxuICAgICAgICAgIHNob3c9e292ZXJsYXlEaXNwbGF5fVxuICAgICAgICAgIGV2ZW50cz17ZXZlbnRzfVxuICAgICAgICAgIHNsb3RTdGFydD17ZGF0ZX1cbiAgICAgICAgICBzbG90RW5kPXtlbmR9XG4gICAgICAgICAgb25TZWxlY3Q9e2hhbmRsZVNlbGVjdEV2ZW50fVxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e2hhbmRsZURvdWJsZUNsaWNrRXZlbnR9XG4gICAgICAgICAgb25LZXlQcmVzcz17aGFuZGxlS2V5UHJlc3NFdmVudH1cbiAgICAgICAgICBoYW5kbGVEcmFnU3RhcnQ9e2hhbmRsZURyYWdTdGFydH1cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgPC9PdmVybGF5PlxuICApXG59XG5cbmNvbnN0IFBvcE92ZXJsYXkgPSBSZWFjdC5mb3J3YXJkUmVmKChwcm9wcywgcmVmKSA9PiAoXG4gIDxDYWxPdmVybGF5IHsuLi5wcm9wc30gY29udGFpbmVyUmVmPXtyZWZ9IC8+XG4pKVxuXG5Qb3BPdmVybGF5LnByb3BUeXBlcyA9IHtcbiAgcG9wdXBPZmZzZXQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFByb3BUeXBlcy5udW1iZXIsXG4gICAgUHJvcFR5cGVzLnNoYXBlKHsgeDogUHJvcFR5cGVzLm51bWJlciwgeTogUHJvcFR5cGVzLm51bWJlciB9KSxcbiAgXSksXG4gIG92ZXJsYXk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgcG9zaXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgZXZlbnRzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgZGF0ZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG4gICAgZW5kOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKSxcbiAgfSksXG4gIGFjY2Vzc29yczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgY29tcG9uZW50czogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBnZXR0ZXJzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIHNlbGVjdGVkOiBQcm9wVHlwZXMub2JqZWN0LFxuICBoYW5kbGVTZWxlY3RFdmVudDogUHJvcFR5cGVzLmZ1bmMsXG4gIGhhbmRsZURvdWJsZUNsaWNrRXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICBoYW5kbGVLZXlQcmVzc0V2ZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgaGFuZGxlRHJhZ1N0YXJ0OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25IaWRlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb3ZlcmxheURpc3BsYXk6IFByb3BUeXBlcy5mdW5jLFxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3BPdmVybGF5XG4iLCJpbXBvcnQgY29udGFpbnMgZnJvbSAnZG9tLWhlbHBlcnMvY29udGFpbnMnXG5pbXBvcnQgY2xvc2VzdCBmcm9tICdkb20taGVscGVycy9jbG9zZXN0J1xuaW1wb3J0IGxpc3RlbiBmcm9tICdkb20taGVscGVycy9saXN0ZW4nXG5cbmZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlciwgdGFyZ2V0ID0gZG9jdW1lbnQpIHtcbiAgcmV0dXJuIGxpc3Rlbih0YXJnZXQsIHR5cGUsIGhhbmRsZXIsIHsgcGFzc2l2ZTogZmFsc2UgfSlcbn1cblxuZnVuY3Rpb24gaXNPdmVyQ29udGFpbmVyKGNvbnRhaW5lciwgeCwgeSkge1xuICByZXR1cm4gIWNvbnRhaW5lciB8fCBjb250YWlucyhjb250YWluZXIsIGRvY3VtZW50LmVsZW1lbnRGcm9tUG9pbnQoeCwgeSkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRFdmVudE5vZGVGcm9tUG9pbnQobm9kZSwgeyBjbGllbnRYLCBjbGllbnRZIH0pIHtcbiAgbGV0IHRhcmdldCA9IGRvY3VtZW50LmVsZW1lbnRGcm9tUG9pbnQoY2xpZW50WCwgY2xpZW50WSlcbiAgcmV0dXJuIGNsb3Nlc3QodGFyZ2V0LCAnLnJiYy1ldmVudCcsIG5vZGUpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTaG93TW9yZU5vZGVGcm9tUG9pbnQobm9kZSwgeyBjbGllbnRYLCBjbGllbnRZIH0pIHtcbiAgbGV0IHRhcmdldCA9IGRvY3VtZW50LmVsZW1lbnRGcm9tUG9pbnQoY2xpZW50WCwgY2xpZW50WSlcbiAgcmV0dXJuIGNsb3Nlc3QodGFyZ2V0LCAnLnJiYy1zaG93LW1vcmUnLCBub2RlKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNFdmVudChub2RlLCBib3VuZHMpIHtcbiAgcmV0dXJuICEhZ2V0RXZlbnROb2RlRnJvbVBvaW50KG5vZGUsIGJvdW5kcylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU2hvd01vcmUobm9kZSwgYm91bmRzKSB7XG4gIHJldHVybiAhIWdldFNob3dNb3JlTm9kZUZyb21Qb2ludChub2RlLCBib3VuZHMpXG59XG5cbmZ1bmN0aW9uIGdldEV2ZW50Q29vcmRpbmF0ZXMoZSkge1xuICBsZXQgdGFyZ2V0ID0gZVxuXG4gIGlmIChlLnRvdWNoZXMgJiYgZS50b3VjaGVzLmxlbmd0aCkge1xuICAgIHRhcmdldCA9IGUudG91Y2hlc1swXVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBjbGllbnRYOiB0YXJnZXQuY2xpZW50WCxcbiAgICBjbGllbnRZOiB0YXJnZXQuY2xpZW50WSxcbiAgICBwYWdlWDogdGFyZ2V0LnBhZ2VYLFxuICAgIHBhZ2VZOiB0YXJnZXQucGFnZVksXG4gIH1cbn1cblxuY29uc3QgY2xpY2tUb2xlcmFuY2UgPSA1XG5jb25zdCBjbGlja0ludGVydmFsID0gMjUwXG5cbmNsYXNzIFNlbGVjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIG5vZGUsXG4gICAgeyBnbG9iYWwgPSBmYWxzZSwgbG9uZ1ByZXNzVGhyZXNob2xkID0gMjUwLCB2YWxpZENvbnRhaW5lcnMgPSBbXSB9ID0ge31cbiAgKSB7XG4gICAgdGhpcy5faW5pdGlhbEV2ZW50ID0gbnVsbFxuICAgIHRoaXMuc2VsZWN0aW5nID0gZmFsc2VcbiAgICB0aGlzLmlzRGV0YWNoZWQgPSBmYWxzZVxuICAgIHRoaXMuY29udGFpbmVyID0gbm9kZVxuICAgIHRoaXMuZ2xvYmFsTW91c2UgPSAhbm9kZSB8fCBnbG9iYWxcbiAgICB0aGlzLmxvbmdQcmVzc1RocmVzaG9sZCA9IGxvbmdQcmVzc1RocmVzaG9sZFxuICAgIHRoaXMudmFsaWRDb250YWluZXJzID0gdmFsaWRDb250YWluZXJzXG5cbiAgICB0aGlzLl9saXN0ZW5lcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpXG5cbiAgICB0aGlzLl9oYW5kbGVJbml0aWFsRXZlbnQgPSB0aGlzLl9oYW5kbGVJbml0aWFsRXZlbnQuYmluZCh0aGlzKVxuICAgIHRoaXMuX2hhbmRsZU1vdmVFdmVudCA9IHRoaXMuX2hhbmRsZU1vdmVFdmVudC5iaW5kKHRoaXMpXG4gICAgdGhpcy5faGFuZGxlVGVybWluYXRpbmdFdmVudCA9IHRoaXMuX2hhbmRsZVRlcm1pbmF0aW5nRXZlbnQuYmluZCh0aGlzKVxuICAgIHRoaXMuX2tleUxpc3RlbmVyID0gdGhpcy5fa2V5TGlzdGVuZXIuYmluZCh0aGlzKVxuICAgIHRoaXMuX2Ryb3BGcm9tT3V0c2lkZUxpc3RlbmVyID0gdGhpcy5fZHJvcEZyb21PdXRzaWRlTGlzdGVuZXIuYmluZCh0aGlzKVxuICAgIHRoaXMuX2RyYWdPdmVyRnJvbU91dHNpZGVMaXN0ZW5lciA9XG4gICAgICB0aGlzLl9kcmFnT3ZlckZyb21PdXRzaWRlTGlzdGVuZXIuYmluZCh0aGlzKVxuXG4gICAgLy8gRml4ZXMgYW4gaU9TIDEwIGJ1ZyB3aGVyZSBzY3JvbGxpbmcgY291bGQgbm90IGJlIHByZXZlbnRlZCBvbiB0aGUgd2luZG93LlxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9tZXRhZml6enkvZmxpY2tpdHkvaXNzdWVzLzQ1NyNpc3N1ZWNvbW1lbnQtMjU0NTAxMzU2XG4gICAgdGhpcy5fcmVtb3ZlVG91Y2hNb3ZlV2luZG93TGlzdGVuZXIgPSBhZGRFdmVudExpc3RlbmVyKFxuICAgICAgJ3RvdWNobW92ZScsXG4gICAgICAoKSA9PiB7fSxcbiAgICAgIHdpbmRvd1xuICAgIClcbiAgICB0aGlzLl9yZW1vdmVLZXlEb3duTGlzdGVuZXIgPSBhZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5fa2V5TGlzdGVuZXIpXG4gICAgdGhpcy5fcmVtb3ZlS2V5VXBMaXN0ZW5lciA9IGFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5fa2V5TGlzdGVuZXIpXG4gICAgdGhpcy5fcmVtb3ZlRHJvcEZyb21PdXRzaWRlTGlzdGVuZXIgPSBhZGRFdmVudExpc3RlbmVyKFxuICAgICAgJ2Ryb3AnLFxuICAgICAgdGhpcy5fZHJvcEZyb21PdXRzaWRlTGlzdGVuZXJcbiAgICApXG4gICAgdGhpcy5fcmVtb3ZlRHJhZ092ZXJGcm9tT3V0c2lkZUxpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICdkcmFnb3ZlcicsXG4gICAgICB0aGlzLl9kcmFnT3ZlckZyb21PdXRzaWRlTGlzdGVuZXJcbiAgICApXG4gICAgdGhpcy5fYWRkSW5pdGlhbEV2ZW50TGlzdGVuZXIoKVxuICB9XG5cbiAgb24odHlwZSwgaGFuZGxlcikge1xuICAgIGxldCBoYW5kbGVycyA9IHRoaXMuX2xpc3RlbmVyc1t0eXBlXSB8fCAodGhpcy5fbGlzdGVuZXJzW3R5cGVdID0gW10pXG5cbiAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpXG5cbiAgICByZXR1cm4ge1xuICAgICAgcmVtb3ZlKCkge1xuICAgICAgICBsZXQgaWR4ID0gaGFuZGxlcnMuaW5kZXhPZihoYW5kbGVyKVxuICAgICAgICBpZiAoaWR4ICE9PSAtMSkgaGFuZGxlcnMuc3BsaWNlKGlkeCwgMSlcbiAgICAgIH0sXG4gICAgfVxuICB9XG5cbiAgZW1pdCh0eXBlLCAuLi5hcmdzKSB7XG4gICAgbGV0IHJlc3VsdFxuICAgIGxldCBoYW5kbGVycyA9IHRoaXMuX2xpc3RlbmVyc1t0eXBlXSB8fCBbXVxuICAgIGhhbmRsZXJzLmZvckVhY2goKGZuKSA9PiB7XG4gICAgICBpZiAocmVzdWx0ID09PSB1bmRlZmluZWQpIHJlc3VsdCA9IGZuKC4uLmFyZ3MpXG4gICAgfSlcbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cblxuICB0ZWFyZG93bigpIHtcbiAgICB0aGlzLl9pbml0aWFsRXZlbnQgPSBudWxsXG4gICAgdGhpcy5faW5pdGlhbEV2ZW50RGF0YSA9IG51bGxcbiAgICB0aGlzLl9zZWxlY3RSZWN0ID0gbnVsbFxuICAgIHRoaXMuc2VsZWN0aW5nID0gZmFsc2VcbiAgICB0aGlzLl9sYXN0Q2xpY2tEYXRhID0gbnVsbFxuICAgIHRoaXMuaXNEZXRhY2hlZCA9IHRydWVcbiAgICB0aGlzLl9saXN0ZW5lcnMgPSBPYmplY3QuY3JlYXRlKG51bGwpXG4gICAgdGhpcy5fcmVtb3ZlVG91Y2hNb3ZlV2luZG93TGlzdGVuZXIgJiYgdGhpcy5fcmVtb3ZlVG91Y2hNb3ZlV2luZG93TGlzdGVuZXIoKVxuICAgIHRoaXMuX3JlbW92ZUluaXRpYWxFdmVudExpc3RlbmVyICYmIHRoaXMuX3JlbW92ZUluaXRpYWxFdmVudExpc3RlbmVyKClcbiAgICB0aGlzLl9yZW1vdmVFbmRMaXN0ZW5lciAmJiB0aGlzLl9yZW1vdmVFbmRMaXN0ZW5lcigpXG4gICAgdGhpcy5fb25Fc2NMaXN0ZW5lciAmJiB0aGlzLl9vbkVzY0xpc3RlbmVyKClcbiAgICB0aGlzLl9yZW1vdmVNb3ZlTGlzdGVuZXIgJiYgdGhpcy5fcmVtb3ZlTW92ZUxpc3RlbmVyKClcbiAgICB0aGlzLl9yZW1vdmVLZXlVcExpc3RlbmVyICYmIHRoaXMuX3JlbW92ZUtleVVwTGlzdGVuZXIoKVxuICAgIHRoaXMuX3JlbW92ZUtleURvd25MaXN0ZW5lciAmJiB0aGlzLl9yZW1vdmVLZXlEb3duTGlzdGVuZXIoKVxuICAgIHRoaXMuX3JlbW92ZURyb3BGcm9tT3V0c2lkZUxpc3RlbmVyICYmIHRoaXMuX3JlbW92ZURyb3BGcm9tT3V0c2lkZUxpc3RlbmVyKClcbiAgICB0aGlzLl9yZW1vdmVEcmFnT3ZlckZyb21PdXRzaWRlTGlzdGVuZXIgJiZcbiAgICAgIHRoaXMuX3JlbW92ZURyYWdPdmVyRnJvbU91dHNpZGVMaXN0ZW5lcigpXG4gIH1cblxuICBpc1NlbGVjdGVkKG5vZGUpIHtcbiAgICBsZXQgYm94ID0gdGhpcy5fc2VsZWN0UmVjdFxuXG4gICAgaWYgKCFib3ggfHwgIXRoaXMuc2VsZWN0aW5nKSByZXR1cm4gZmFsc2VcblxuICAgIHJldHVybiBvYmplY3RzQ29sbGlkZShib3gsIGdldEJvdW5kc0Zvck5vZGUobm9kZSkpXG4gIH1cblxuICBmaWx0ZXIoaXRlbXMpIHtcbiAgICBsZXQgYm94ID0gdGhpcy5fc2VsZWN0UmVjdFxuXG4gICAgLy9ub3Qgc2VsZWN0aW5nXG4gICAgaWYgKCFib3ggfHwgIXRoaXMuc2VsZWN0aW5nKSByZXR1cm4gW11cblxuICAgIHJldHVybiBpdGVtcy5maWx0ZXIodGhpcy5pc1NlbGVjdGVkLCB0aGlzKVxuICB9XG5cbiAgLy8gQWRkcyBhIGxpc3RlbmVyIHRoYXQgd2lsbCBjYWxsIHRoZSBoYW5kbGVyIG9ubHkgYWZ0ZXIgdGhlIHVzZXIgaGFzIHByZXNzZWQgb24gdGhlIHNjcmVlblxuICAvLyB3aXRob3V0IG1vdmluZyB0aGVpciBmaW5nZXIgZm9yIDI1MG1zLlxuICBfYWRkTG9uZ1ByZXNzTGlzdGVuZXIoaGFuZGxlciwgaW5pdGlhbEV2ZW50KSB7XG4gICAgbGV0IHRpbWVyID0gbnVsbFxuICAgIGxldCByZW1vdmVUb3VjaE1vdmVMaXN0ZW5lciA9IG51bGxcbiAgICBsZXQgcmVtb3ZlVG91Y2hFbmRMaXN0ZW5lciA9IG51bGxcbiAgICBjb25zdCBoYW5kbGVUb3VjaFN0YXJ0ID0gKGluaXRpYWxFdmVudCkgPT4ge1xuICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgY2xlYW51cCgpXG4gICAgICAgIGhhbmRsZXIoaW5pdGlhbEV2ZW50KVxuICAgICAgfSwgdGhpcy5sb25nUHJlc3NUaHJlc2hvbGQpXG4gICAgICByZW1vdmVUb3VjaE1vdmVMaXN0ZW5lciA9IGFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsICgpID0+IGNsZWFudXAoKSlcbiAgICAgIHJlbW92ZVRvdWNoRW5kTGlzdGVuZXIgPSBhZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsICgpID0+IGNsZWFudXAoKSlcbiAgICB9XG4gICAgY29uc3QgcmVtb3ZlVG91Y2hTdGFydExpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICd0b3VjaHN0YXJ0JyxcbiAgICAgIGhhbmRsZVRvdWNoU3RhcnRcbiAgICApXG4gICAgY29uc3QgY2xlYW51cCA9ICgpID0+IHtcbiAgICAgIGlmICh0aW1lcikge1xuICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpXG4gICAgICB9XG4gICAgICBpZiAocmVtb3ZlVG91Y2hNb3ZlTGlzdGVuZXIpIHtcbiAgICAgICAgcmVtb3ZlVG91Y2hNb3ZlTGlzdGVuZXIoKVxuICAgICAgfVxuICAgICAgaWYgKHJlbW92ZVRvdWNoRW5kTGlzdGVuZXIpIHtcbiAgICAgICAgcmVtb3ZlVG91Y2hFbmRMaXN0ZW5lcigpXG4gICAgICB9XG5cbiAgICAgIHRpbWVyID0gbnVsbFxuICAgICAgcmVtb3ZlVG91Y2hNb3ZlTGlzdGVuZXIgPSBudWxsXG4gICAgICByZW1vdmVUb3VjaEVuZExpc3RlbmVyID0gbnVsbFxuICAgIH1cblxuICAgIGlmIChpbml0aWFsRXZlbnQpIHtcbiAgICAgIGhhbmRsZVRvdWNoU3RhcnQoaW5pdGlhbEV2ZW50KVxuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjbGVhbnVwKClcbiAgICAgIHJlbW92ZVRvdWNoU3RhcnRMaXN0ZW5lcigpXG4gICAgfVxuICB9XG5cbiAgLy8gTGlzdGVuIGZvciBtb3VzZWRvd24gYW5kIHRvdWNoc3RhcnQgZXZlbnRzLiBXaGVuIG9uZSBpcyByZWNlaXZlZCwgZGlzYWJsZSB0aGUgb3RoZXIgYW5kIHNldHVwXG4gIC8vIGZ1dHVyZSBldmVudCBoYW5kbGluZyBiYXNlZCBvbiB0aGUgdHlwZSBvZiBldmVudC5cbiAgX2FkZEluaXRpYWxFdmVudExpc3RlbmVyKCkge1xuICAgIGNvbnN0IHJlbW92ZU1vdXNlRG93bkxpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgKGUpID0+IHtcbiAgICAgIHRoaXMuX3JlbW92ZUluaXRpYWxFdmVudExpc3RlbmVyKClcbiAgICAgIHRoaXMuX2hhbmRsZUluaXRpYWxFdmVudChlKVxuICAgICAgdGhpcy5fcmVtb3ZlSW5pdGlhbEV2ZW50TGlzdGVuZXIgPSBhZGRFdmVudExpc3RlbmVyKFxuICAgICAgICAnbW91c2Vkb3duJyxcbiAgICAgICAgdGhpcy5faGFuZGxlSW5pdGlhbEV2ZW50XG4gICAgICApXG4gICAgfSlcbiAgICBjb25zdCByZW1vdmVUb3VjaFN0YXJ0TGlzdGVuZXIgPSBhZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgKGUpID0+IHtcbiAgICAgIHRoaXMuX3JlbW92ZUluaXRpYWxFdmVudExpc3RlbmVyKClcbiAgICAgIHRoaXMuX3JlbW92ZUluaXRpYWxFdmVudExpc3RlbmVyID0gdGhpcy5fYWRkTG9uZ1ByZXNzTGlzdGVuZXIoXG4gICAgICAgIHRoaXMuX2hhbmRsZUluaXRpYWxFdmVudCxcbiAgICAgICAgZVxuICAgICAgKVxuICAgIH0pXG5cbiAgICB0aGlzLl9yZW1vdmVJbml0aWFsRXZlbnRMaXN0ZW5lciA9ICgpID0+IHtcbiAgICAgIHJlbW92ZU1vdXNlRG93bkxpc3RlbmVyKClcbiAgICAgIHJlbW92ZVRvdWNoU3RhcnRMaXN0ZW5lcigpXG4gICAgfVxuICB9XG5cbiAgX2Ryb3BGcm9tT3V0c2lkZUxpc3RlbmVyKGUpIHtcbiAgICBjb25zdCB7IHBhZ2VYLCBwYWdlWSwgY2xpZW50WCwgY2xpZW50WSB9ID0gZ2V0RXZlbnRDb29yZGluYXRlcyhlKVxuXG4gICAgdGhpcy5lbWl0KCdkcm9wRnJvbU91dHNpZGUnLCB7XG4gICAgICB4OiBwYWdlWCxcbiAgICAgIHk6IHBhZ2VZLFxuICAgICAgY2xpZW50WDogY2xpZW50WCxcbiAgICAgIGNsaWVudFk6IGNsaWVudFksXG4gICAgfSlcblxuICAgIGUucHJldmVudERlZmF1bHQoKVxuICB9XG5cbiAgX2RyYWdPdmVyRnJvbU91dHNpZGVMaXN0ZW5lcihlKSB7XG4gICAgY29uc3QgeyBwYWdlWCwgcGFnZVksIGNsaWVudFgsIGNsaWVudFkgfSA9IGdldEV2ZW50Q29vcmRpbmF0ZXMoZSlcblxuICAgIHRoaXMuZW1pdCgnZHJhZ092ZXJGcm9tT3V0c2lkZScsIHtcbiAgICAgIHg6IHBhZ2VYLFxuICAgICAgeTogcGFnZVksXG4gICAgICBjbGllbnRYOiBjbGllbnRYLFxuICAgICAgY2xpZW50WTogY2xpZW50WSxcbiAgICB9KVxuXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gIH1cblxuICBfaGFuZGxlSW5pdGlhbEV2ZW50KGUpIHtcbiAgICB0aGlzLl9pbml0aWFsRXZlbnQgPSBlXG4gICAgaWYgKHRoaXMuaXNEZXRhY2hlZCkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgY29uc3QgeyBjbGllbnRYLCBjbGllbnRZLCBwYWdlWCwgcGFnZVkgfSA9IGdldEV2ZW50Q29vcmRpbmF0ZXMoZSlcbiAgICBsZXQgbm9kZSA9IHRoaXMuY29udGFpbmVyKCksXG4gICAgICBjb2xsaWRlcyxcbiAgICAgIG9mZnNldERhdGFcblxuICAgIC8vIFJpZ2h0IGNsaWNrc1xuICAgIGlmIChcbiAgICAgIGUud2hpY2ggPT09IDMgfHxcbiAgICAgIGUuYnV0dG9uID09PSAyIHx8XG4gICAgICAhaXNPdmVyQ29udGFpbmVyKG5vZGUsIGNsaWVudFgsIGNsaWVudFkpXG4gICAgKVxuICAgICAgcmV0dXJuXG5cbiAgICBpZiAoIXRoaXMuZ2xvYmFsTW91c2UgJiYgbm9kZSAmJiAhY29udGFpbnMobm9kZSwgZS50YXJnZXQpKSB7XG4gICAgICBsZXQgeyB0b3AsIGxlZnQsIGJvdHRvbSwgcmlnaHQgfSA9IG5vcm1hbGl6ZURpc3RhbmNlKDApXG5cbiAgICAgIG9mZnNldERhdGEgPSBnZXRCb3VuZHNGb3JOb2RlKG5vZGUpXG5cbiAgICAgIGNvbGxpZGVzID0gb2JqZWN0c0NvbGxpZGUoXG4gICAgICAgIHtcbiAgICAgICAgICB0b3A6IG9mZnNldERhdGEudG9wIC0gdG9wLFxuICAgICAgICAgIGxlZnQ6IG9mZnNldERhdGEubGVmdCAtIGxlZnQsXG4gICAgICAgICAgYm90dG9tOiBvZmZzZXREYXRhLmJvdHRvbSArIGJvdHRvbSxcbiAgICAgICAgICByaWdodDogb2Zmc2V0RGF0YS5yaWdodCArIHJpZ2h0LFxuICAgICAgICB9LFxuICAgICAgICB7IHRvcDogcGFnZVksIGxlZnQ6IHBhZ2VYIH1cbiAgICAgIClcblxuICAgICAgaWYgKCFjb2xsaWRlcykgcmV0dXJuXG4gICAgfVxuXG4gICAgbGV0IHJlc3VsdCA9IHRoaXMuZW1pdChcbiAgICAgICdiZWZvcmVTZWxlY3QnLFxuICAgICAgKHRoaXMuX2luaXRpYWxFdmVudERhdGEgPSB7XG4gICAgICAgIGlzVG91Y2g6IC9edG91Y2gvLnRlc3QoZS50eXBlKSxcbiAgICAgICAgeDogcGFnZVgsXG4gICAgICAgIHk6IHBhZ2VZLFxuICAgICAgICBjbGllbnRYLFxuICAgICAgICBjbGllbnRZLFxuICAgICAgfSlcbiAgICApXG5cbiAgICBpZiAocmVzdWx0ID09PSBmYWxzZSkgcmV0dXJuXG5cbiAgICBzd2l0Y2ggKGUudHlwZSkge1xuICAgICAgY2FzZSAnbW91c2Vkb3duJzpcbiAgICAgICAgdGhpcy5fcmVtb3ZlRW5kTGlzdGVuZXIgPSBhZGRFdmVudExpc3RlbmVyKFxuICAgICAgICAgICdtb3VzZXVwJyxcbiAgICAgICAgICB0aGlzLl9oYW5kbGVUZXJtaW5hdGluZ0V2ZW50XG4gICAgICAgIClcbiAgICAgICAgdGhpcy5fb25Fc2NMaXN0ZW5lciA9IGFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgJ2tleWRvd24nLFxuICAgICAgICAgIHRoaXMuX2hhbmRsZVRlcm1pbmF0aW5nRXZlbnRcbiAgICAgICAgKVxuICAgICAgICB0aGlzLl9yZW1vdmVNb3ZlTGlzdGVuZXIgPSBhZGRFdmVudExpc3RlbmVyKFxuICAgICAgICAgICdtb3VzZW1vdmUnLFxuICAgICAgICAgIHRoaXMuX2hhbmRsZU1vdmVFdmVudFxuICAgICAgICApXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlICd0b3VjaHN0YXJ0JzpcbiAgICAgICAgdGhpcy5faGFuZGxlTW92ZUV2ZW50KGUpXG4gICAgICAgIHRoaXMuX3JlbW92ZUVuZExpc3RlbmVyID0gYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgICAndG91Y2hlbmQnLFxuICAgICAgICAgIHRoaXMuX2hhbmRsZVRlcm1pbmF0aW5nRXZlbnRcbiAgICAgICAgKVxuICAgICAgICB0aGlzLl9yZW1vdmVNb3ZlTGlzdGVuZXIgPSBhZGRFdmVudExpc3RlbmVyKFxuICAgICAgICAgICd0b3VjaG1vdmUnLFxuICAgICAgICAgIHRoaXMuX2hhbmRsZU1vdmVFdmVudFxuICAgICAgICApXG4gICAgICAgIGJyZWFrXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIC8vIENoZWNrIHdoZXRoZXIgcHJvdmlkZWQgZXZlbnQgdGFyZ2V0IGVsZW1lbnRcbiAgLy8gLSBpcyBjb250YWluZWQgd2l0aGluIGEgdmFsaWQgY29udGFpbmVyXG4gIF9pc1dpdGhpblZhbGlkQ29udGFpbmVyKGUpIHtcbiAgICBjb25zdCBldmVudFRhcmdldCA9IGUudGFyZ2V0XG4gICAgY29uc3QgY29udGFpbmVycyA9IHRoaXMudmFsaWRDb250YWluZXJzXG5cbiAgICBpZiAoIWNvbnRhaW5lcnMgfHwgIWNvbnRhaW5lcnMubGVuZ3RoIHx8ICFldmVudFRhcmdldCkge1xuICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICByZXR1cm4gY29udGFpbmVycy5zb21lKCh0YXJnZXQpID0+ICEhZXZlbnRUYXJnZXQuY2xvc2VzdCh0YXJnZXQpKVxuICB9XG5cbiAgX2hhbmRsZVRlcm1pbmF0aW5nRXZlbnQoZSkge1xuICAgIGNvbnN0IHNlbGVjdGluZyA9IHRoaXMuc2VsZWN0aW5nXG4gICAgY29uc3QgYm91bmRzID0gdGhpcy5fc2VsZWN0UmVjdFxuICAgIC8vIElmIGl0J3Mgbm90IGluIHNlbGVjdGluZyBzdGF0ZSwgaXQncyBhIGNsaWNrIGV2ZW50XG4gICAgaWYgKCFzZWxlY3RpbmcgJiYgZS50eXBlLmluY2x1ZGVzKCdrZXknKSkge1xuICAgICAgZSA9IHRoaXMuX2luaXRpYWxFdmVudFxuICAgIH1cblxuICAgIHRoaXMuc2VsZWN0aW5nID0gZmFsc2VcbiAgICB0aGlzLl9yZW1vdmVFbmRMaXN0ZW5lciAmJiB0aGlzLl9yZW1vdmVFbmRMaXN0ZW5lcigpXG4gICAgdGhpcy5fcmVtb3ZlTW92ZUxpc3RlbmVyICYmIHRoaXMuX3JlbW92ZU1vdmVMaXN0ZW5lcigpXG5cbiAgICB0aGlzLl9zZWxlY3RSZWN0ID0gbnVsbFxuICAgIHRoaXMuX2luaXRpYWxFdmVudCA9IG51bGxcbiAgICB0aGlzLl9pbml0aWFsRXZlbnREYXRhID0gbnVsbFxuICAgIGlmICghZSkgcmV0dXJuXG5cbiAgICBsZXQgaW5Sb290ID0gIXRoaXMuY29udGFpbmVyIHx8IGNvbnRhaW5zKHRoaXMuY29udGFpbmVyKCksIGUudGFyZ2V0KVxuICAgIGxldCBpc1dpdGhpblZhbGlkQ29udGFpbmVyID0gdGhpcy5faXNXaXRoaW5WYWxpZENvbnRhaW5lcihlKVxuXG4gICAgaWYgKGUua2V5ID09PSAnRXNjYXBlJyB8fCAhaXNXaXRoaW5WYWxpZENvbnRhaW5lcikge1xuICAgICAgcmV0dXJuIHRoaXMuZW1pdCgncmVzZXQnKVxuICAgIH1cblxuICAgIGlmICghc2VsZWN0aW5nICYmIGluUm9vdCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2hhbmRsZUNsaWNrRXZlbnQoZSlcbiAgICB9XG5cbiAgICAvLyBVc2VyIGRyYWctY2xpY2tlZCBpbiB0aGUgU2VsZWN0YWJsZSBhcmVhXG4gICAgaWYgKHNlbGVjdGluZykgcmV0dXJuIHRoaXMuZW1pdCgnc2VsZWN0JywgYm91bmRzKVxuXG4gICAgcmV0dXJuIHRoaXMuZW1pdCgncmVzZXQnKVxuICB9XG5cbiAgX2hhbmRsZUNsaWNrRXZlbnQoZSkge1xuICAgIGNvbnN0IHsgcGFnZVgsIHBhZ2VZLCBjbGllbnRYLCBjbGllbnRZIH0gPSBnZXRFdmVudENvb3JkaW5hdGVzKGUpXG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKClcblxuICAgIGlmIChcbiAgICAgIHRoaXMuX2xhc3RDbGlja0RhdGEgJiZcbiAgICAgIG5vdyAtIHRoaXMuX2xhc3RDbGlja0RhdGEudGltZXN0YW1wIDwgY2xpY2tJbnRlcnZhbFxuICAgICkge1xuICAgICAgLy8gRG91YmxlIGNsaWNrIGV2ZW50XG4gICAgICB0aGlzLl9sYXN0Q2xpY2tEYXRhID0gbnVsbFxuICAgICAgcmV0dXJuIHRoaXMuZW1pdCgnZG91YmxlQ2xpY2snLCB7XG4gICAgICAgIHg6IHBhZ2VYLFxuICAgICAgICB5OiBwYWdlWSxcbiAgICAgICAgY2xpZW50WDogY2xpZW50WCxcbiAgICAgICAgY2xpZW50WTogY2xpZW50WSxcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gQ2xpY2sgZXZlbnRcbiAgICB0aGlzLl9sYXN0Q2xpY2tEYXRhID0ge1xuICAgICAgdGltZXN0YW1wOiBub3csXG4gICAgfVxuICAgIHJldHVybiB0aGlzLmVtaXQoJ2NsaWNrJywge1xuICAgICAgeDogcGFnZVgsXG4gICAgICB5OiBwYWdlWSxcbiAgICAgIGNsaWVudFg6IGNsaWVudFgsXG4gICAgICBjbGllbnRZOiBjbGllbnRZLFxuICAgIH0pXG4gIH1cblxuICBfaGFuZGxlTW92ZUV2ZW50KGUpIHtcbiAgICBpZiAodGhpcy5faW5pdGlhbEV2ZW50RGF0YSA9PT0gbnVsbCB8fCB0aGlzLmlzRGV0YWNoZWQpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGxldCB7IHgsIHkgfSA9IHRoaXMuX2luaXRpYWxFdmVudERhdGFcbiAgICBjb25zdCB7IHBhZ2VYLCBwYWdlWSB9ID0gZ2V0RXZlbnRDb29yZGluYXRlcyhlKVxuICAgIGxldCB3ID0gTWF0aC5hYnMoeCAtIHBhZ2VYKVxuICAgIGxldCBoID0gTWF0aC5hYnMoeSAtIHBhZ2VZKVxuXG4gICAgbGV0IGxlZnQgPSBNYXRoLm1pbihwYWdlWCwgeCksXG4gICAgICB0b3AgPSBNYXRoLm1pbihwYWdlWSwgeSksXG4gICAgICBvbGQgPSB0aGlzLnNlbGVjdGluZ1xuICAgIGNvbnN0IGNsaWNrID0gdGhpcy5pc0NsaWNrKHBhZ2VYLCBwYWdlWSlcbiAgICAvLyBQcmV2ZW50IGVtaXR0aW5nIHNlbGVjdFN0YXJ0IGV2ZW50IHVudGlsIG1vdXNlIGlzIG1vdmVkLlxuICAgIC8vIGluIENocm9tZSBvbiBXaW5kb3dzLCBtb3VzZU1vdmUgZXZlbnQgbWF5IGJlIGZpcmVkIGp1c3QgYWZ0ZXIgbW91c2VEb3duIGV2ZW50LlxuICAgIGlmIChjbGljayAmJiAhb2xkICYmICEodyB8fCBoKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKCFvbGQgJiYgIWNsaWNrKSB7XG4gICAgICB0aGlzLmVtaXQoJ3NlbGVjdFN0YXJ0JywgdGhpcy5faW5pdGlhbEV2ZW50RGF0YSlcbiAgICB9XG5cbiAgICBpZiAoIWNsaWNrKSB7XG4gICAgICB0aGlzLnNlbGVjdGluZyA9IHRydWVcbiAgICAgIHRoaXMuX3NlbGVjdFJlY3QgPSB7XG4gICAgICAgIHRvcCxcbiAgICAgICAgbGVmdCxcbiAgICAgICAgeDogcGFnZVgsXG4gICAgICAgIHk6IHBhZ2VZLFxuICAgICAgICByaWdodDogbGVmdCArIHcsXG4gICAgICAgIGJvdHRvbTogdG9wICsgaCxcbiAgICAgIH1cbiAgICAgIHRoaXMuZW1pdCgnc2VsZWN0aW5nJywgdGhpcy5fc2VsZWN0UmVjdClcbiAgICB9XG5cbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgfVxuXG4gIF9rZXlMaXN0ZW5lcihlKSB7XG4gICAgdGhpcy5jdHJsID0gZS5tZXRhS2V5IHx8IGUuY3RybEtleVxuICB9XG5cbiAgaXNDbGljayhwYWdlWCwgcGFnZVkpIHtcbiAgICBsZXQgeyB4LCB5LCBpc1RvdWNoIH0gPSB0aGlzLl9pbml0aWFsRXZlbnREYXRhXG4gICAgcmV0dXJuIChcbiAgICAgICFpc1RvdWNoICYmXG4gICAgICBNYXRoLmFicyhwYWdlWCAtIHgpIDw9IGNsaWNrVG9sZXJhbmNlICYmXG4gICAgICBNYXRoLmFicyhwYWdlWSAtIHkpIDw9IGNsaWNrVG9sZXJhbmNlXG4gICAgKVxuICB9XG59XG5cbi8qKlxuICogUmVzb2x2ZSB0aGUgZGlzYW5jZSBwcm9wIGZyb20gZWl0aGVyIGFuIEludCBvciBhbiBPYmplY3RcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXplRGlzdGFuY2UoZGlzdGFuY2UgPSAwKSB7XG4gIGlmICh0eXBlb2YgZGlzdGFuY2UgIT09ICdvYmplY3QnKVxuICAgIGRpc3RhbmNlID0ge1xuICAgICAgdG9wOiBkaXN0YW5jZSxcbiAgICAgIGxlZnQ6IGRpc3RhbmNlLFxuICAgICAgcmlnaHQ6IGRpc3RhbmNlLFxuICAgICAgYm90dG9tOiBkaXN0YW5jZSxcbiAgICB9XG5cbiAgcmV0dXJuIGRpc3RhbmNlXG59XG5cbi8qKlxuICogR2l2ZW4gdHdvIG9iamVjdHMgY29udGFpbmluZyBcInRvcFwiLCBcImxlZnRcIiwgXCJvZmZzZXRXaWR0aFwiIGFuZCBcIm9mZnNldEhlaWdodFwiXG4gKiBwcm9wZXJ0aWVzLCBkZXRlcm1pbmUgaWYgdGhleSBjb2xsaWRlLlxuICogQHBhcmFtICB7T2JqZWN0fEhUTUxFbGVtZW50fSBhXG4gKiBAcGFyYW0gIHtPYmplY3R8SFRNTEVsZW1lbnR9IGJcbiAqIEByZXR1cm4ge2Jvb2x9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvYmplY3RzQ29sbGlkZShub2RlQSwgbm9kZUIsIHRvbGVyYW5jZSA9IDApIHtcbiAgbGV0IHtcbiAgICB0b3A6IGFUb3AsXG4gICAgbGVmdDogYUxlZnQsXG4gICAgcmlnaHQ6IGFSaWdodCA9IGFMZWZ0LFxuICAgIGJvdHRvbTogYUJvdHRvbSA9IGFUb3AsXG4gIH0gPSBnZXRCb3VuZHNGb3JOb2RlKG5vZGVBKVxuICBsZXQge1xuICAgIHRvcDogYlRvcCxcbiAgICBsZWZ0OiBiTGVmdCxcbiAgICByaWdodDogYlJpZ2h0ID0gYkxlZnQsXG4gICAgYm90dG9tOiBiQm90dG9tID0gYlRvcCxcbiAgfSA9IGdldEJvdW5kc0Zvck5vZGUobm9kZUIpXG5cbiAgcmV0dXJuICEoXG4gICAgLy8gJ2EnIGJvdHRvbSBkb2Vzbid0IHRvdWNoICdiJyB0b3BcbiAgICAoXG4gICAgICBhQm90dG9tIC0gdG9sZXJhbmNlIDwgYlRvcCB8fFxuICAgICAgLy8gJ2EnIHRvcCBkb2Vzbid0IHRvdWNoICdiJyBib3R0b21cbiAgICAgIGFUb3AgKyB0b2xlcmFuY2UgPiBiQm90dG9tIHx8XG4gICAgICAvLyAnYScgcmlnaHQgZG9lc24ndCB0b3VjaCAnYicgbGVmdFxuICAgICAgYVJpZ2h0IC0gdG9sZXJhbmNlIDwgYkxlZnQgfHxcbiAgICAgIC8vICdhJyBsZWZ0IGRvZXNuJ3QgdG91Y2ggJ2InIHJpZ2h0XG4gICAgICBhTGVmdCArIHRvbGVyYW5jZSA+IGJSaWdodFxuICAgIClcbiAgKVxufVxuXG4vKipcbiAqIEdpdmVuIGEgbm9kZSwgZ2V0IGV2ZXJ5dGhpbmcgbmVlZGVkIHRvIGNhbGN1bGF0ZSBpdHMgYm91bmRhcmllc1xuICogQHBhcmFtICB7SFRNTEVsZW1lbnR9IG5vZGVcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJvdW5kc0Zvck5vZGUobm9kZSkge1xuICBpZiAoIW5vZGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KSByZXR1cm4gbm9kZVxuXG4gIGxldCByZWN0ID0gbm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcbiAgICBsZWZ0ID0gcmVjdC5sZWZ0ICsgcGFnZU9mZnNldCgnbGVmdCcpLFxuICAgIHRvcCA9IHJlY3QudG9wICsgcGFnZU9mZnNldCgndG9wJylcblxuICByZXR1cm4ge1xuICAgIHRvcCxcbiAgICBsZWZ0LFxuICAgIHJpZ2h0OiAobm9kZS5vZmZzZXRXaWR0aCB8fCAwKSArIGxlZnQsXG4gICAgYm90dG9tOiAobm9kZS5vZmZzZXRIZWlnaHQgfHwgMCkgKyB0b3AsXG4gIH1cbn1cblxuZnVuY3Rpb24gcGFnZU9mZnNldChkaXIpIHtcbiAgaWYgKGRpciA9PT0gJ2xlZnQnKSByZXR1cm4gd2luZG93LnBhZ2VYT2Zmc2V0IHx8IGRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdCB8fCAwXG4gIGlmIChkaXIgPT09ICd0b3AnKSByZXR1cm4gd2luZG93LnBhZ2VZT2Zmc2V0IHx8IGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wIHx8IDBcbn1cbmV4cG9ydCBkZWZhdWx0IFNlbGVjdGlvblxuIiwiY29uc3QgZ2V0S2V5ID0gKHsgbWluLCBtYXgsIHN0ZXAsIHNsb3RzLCBsb2NhbGl6ZXIgfSkgPT5cbiAgYCR7K2xvY2FsaXplci5zdGFydE9mKG1pbiwgJ21pbnV0ZXMnKX1gICtcbiAgYCR7K2xvY2FsaXplci5zdGFydE9mKG1heCwgJ21pbnV0ZXMnKX1gICtcbiAgYCR7c3RlcH0tJHtzbG90c31gXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTbG90TWV0cmljcyh7XG4gIG1pbjogc3RhcnQsXG4gIG1heDogZW5kLFxuICBzdGVwLFxuICB0aW1lc2xvdHMsXG4gIGxvY2FsaXplcixcbn0pIHtcbiAgY29uc3Qga2V5ID0gZ2V0S2V5KHsgc3RhcnQsIGVuZCwgc3RlcCwgdGltZXNsb3RzLCBsb2NhbGl6ZXIgfSlcblxuICAvLyBEU1QgZGlmZmVyZW5jZXMgYXJlIGhhbmRsZWQgaW5zaWRlIHRoZSBsb2NhbGl6ZXJcbiAgY29uc3QgdG90YWxNaW4gPSAxICsgbG9jYWxpemVyLmdldFRvdGFsTWluKHN0YXJ0LCBlbmQpXG4gIGNvbnN0IG1pbnV0ZXNGcm9tTWlkbmlnaHQgPSBsb2NhbGl6ZXIuZ2V0TWludXRlc0Zyb21NaWRuaWdodChzdGFydClcbiAgY29uc3QgbnVtR3JvdXBzID0gTWF0aC5jZWlsKCh0b3RhbE1pbiAtIDEpIC8gKHN0ZXAgKiB0aW1lc2xvdHMpKVxuICBjb25zdCBudW1TbG90cyA9IG51bUdyb3VwcyAqIHRpbWVzbG90c1xuXG4gIGNvbnN0IGdyb3VwcyA9IG5ldyBBcnJheShudW1Hcm91cHMpXG4gIGNvbnN0IHNsb3RzID0gbmV3IEFycmF5KG51bVNsb3RzKVxuICAvLyBFYWNoIHNsb3QgZGF0ZSBpcyBjcmVhdGVkIGZyb20gXCJ6ZXJvXCIsIGluc3RlYWQgb2YgYWRkaW5nIGBzdGVwYCB0b1xuICAvLyB0aGUgcHJldmlvdXMgb25lLCBpbiBvcmRlciB0byBhdm9pZCBEU1Qgb2RkaXRpZXNcbiAgZm9yIChsZXQgZ3JwID0gMDsgZ3JwIDwgbnVtR3JvdXBzOyBncnArKykge1xuICAgIGdyb3Vwc1tncnBdID0gbmV3IEFycmF5KHRpbWVzbG90cylcblxuICAgIGZvciAobGV0IHNsb3QgPSAwOyBzbG90IDwgdGltZXNsb3RzOyBzbG90KyspIHtcbiAgICAgIGNvbnN0IHNsb3RJZHggPSBncnAgKiB0aW1lc2xvdHMgKyBzbG90XG4gICAgICBjb25zdCBtaW5Gcm9tU3RhcnQgPSBzbG90SWR4ICogc3RlcFxuICAgICAgLy8gQSBkYXRlIHdpdGggdG90YWwgbWludXRlcyBjYWxjdWxhdGVkIGZyb20gdGhlIHN0YXJ0IG9mIHRoZSBkYXlcbiAgICAgIHNsb3RzW3Nsb3RJZHhdID0gZ3JvdXBzW2dycF1bc2xvdF0gPSBsb2NhbGl6ZXIuZ2V0U2xvdERhdGUoXG4gICAgICAgIHN0YXJ0LFxuICAgICAgICBtaW51dGVzRnJvbU1pZG5pZ2h0LFxuICAgICAgICBtaW5Gcm9tU3RhcnRcbiAgICAgIClcbiAgICB9XG4gIH1cblxuICAvLyBOZWNlc3NhcnkgdG8gYmUgYWJsZSB0byBzZWxlY3QgdXAgdW50aWwgdGhlIGxhc3QgdGltZXNsb3QgaW4gYSBkYXlcbiAgY29uc3QgbGFzdFNsb3RNaW5Gcm9tU3RhcnQgPSBzbG90cy5sZW5ndGggKiBzdGVwXG4gIHNsb3RzLnB1c2goXG4gICAgbG9jYWxpemVyLmdldFNsb3REYXRlKHN0YXJ0LCBtaW51dGVzRnJvbU1pZG5pZ2h0LCBsYXN0U2xvdE1pbkZyb21TdGFydClcbiAgKVxuXG4gIGZ1bmN0aW9uIHBvc2l0aW9uRnJvbURhdGUoZGF0ZSkge1xuICAgIGNvbnN0IGRpZmYgPVxuICAgICAgbG9jYWxpemVyLmRpZmYoc3RhcnQsIGRhdGUsICdtaW51dGVzJykgK1xuICAgICAgbG9jYWxpemVyLmdldERzdE9mZnNldChzdGFydCwgZGF0ZSlcbiAgICByZXR1cm4gTWF0aC5taW4oZGlmZiwgdG90YWxNaW4pXG4gIH1cblxuICByZXR1cm4ge1xuICAgIGdyb3VwcyxcbiAgICB1cGRhdGUoYXJncykge1xuICAgICAgaWYgKGdldEtleShhcmdzKSAhPT0ga2V5KSByZXR1cm4gZ2V0U2xvdE1ldHJpY3MoYXJncylcbiAgICAgIHJldHVybiB0aGlzXG4gICAgfSxcblxuICAgIGRhdGVJc0luR3JvdXAoZGF0ZSwgZ3JvdXBJbmRleCkge1xuICAgICAgY29uc3QgbmV4dEdyb3VwID0gZ3JvdXBzW2dyb3VwSW5kZXggKyAxXVxuICAgICAgcmV0dXJuIGxvY2FsaXplci5pblJhbmdlKFxuICAgICAgICBkYXRlLFxuICAgICAgICBncm91cHNbZ3JvdXBJbmRleF1bMF0sXG4gICAgICAgIG5leHRHcm91cCA/IG5leHRHcm91cFswXSA6IGVuZCxcbiAgICAgICAgJ21pbnV0ZXMnXG4gICAgICApXG4gICAgfSxcblxuICAgIG5leHRTbG90KHNsb3QpIHtcbiAgICAgIC8vIFdlIGNhbm5vdCBndWFyYW50ZWUgdGhhdCB0aGUgc2xvdCBvYmplY3QgbXVzdCBiZSBpbiBzbG90cyxcbiAgICAgIC8vIGJlY2F1c2UgYWZ0ZXIgZWFjaCB1cGRhdGUsIGEgbmV3IHNsb3RzIGFycmF5IHdpbGwgYmUgY3JlYXRlZC5cbiAgICAgIGxldCBuZXh0ID1cbiAgICAgICAgc2xvdHNbXG4gICAgICAgICAgTWF0aC5taW4oXG4gICAgICAgICAgICBzbG90cy5maW5kSW5kZXgoKHMpID0+IHMgPT09IHNsb3QgfHwgbG9jYWxpemVyLmVxKHMsIHNsb3QpKSArIDEsXG4gICAgICAgICAgICBzbG90cy5sZW5ndGggLSAxXG4gICAgICAgICAgKVxuICAgICAgICBdXG4gICAgICAvLyBpbiB0aGUgY2FzZSBvZiB0aGUgbGFzdCBzbG90IHdlIHdvbid0IGEgbG9uZyBlbm91Z2ggcmFuZ2Ugc28gbWFudWFsbHkgZ2V0IGl0XG4gICAgICBpZiAobG9jYWxpemVyLmVxKG5leHQsIHNsb3QpKSBuZXh0ID0gbG9jYWxpemVyLmFkZChzbG90LCBzdGVwLCAnbWludXRlcycpXG4gICAgICByZXR1cm4gbmV4dFxuICAgIH0sXG4gICAgY2xvc2VzdFNsb3RUb1Bvc2l0aW9uKHBlcmNlbnQpIHtcbiAgICAgIGNvbnN0IHNsb3QgPSBNYXRoLm1pbihcbiAgICAgICAgc2xvdHMubGVuZ3RoIC0gMSxcbiAgICAgICAgTWF0aC5tYXgoMCwgTWF0aC5mbG9vcihwZXJjZW50ICogbnVtU2xvdHMpKVxuICAgICAgKVxuICAgICAgcmV0dXJuIHNsb3RzW3Nsb3RdXG4gICAgfSxcblxuICAgIGNsb3Nlc3RTbG90RnJvbVBvaW50KHBvaW50LCBib3VuZGFyeVJlY3QpIHtcbiAgICAgIGxldCByYW5nZSA9IE1hdGguYWJzKGJvdW5kYXJ5UmVjdC50b3AgLSBib3VuZGFyeVJlY3QuYm90dG9tKVxuICAgICAgcmV0dXJuIHRoaXMuY2xvc2VzdFNsb3RUb1Bvc2l0aW9uKChwb2ludC55IC0gYm91bmRhcnlSZWN0LnRvcCkgLyByYW5nZSlcbiAgICB9LFxuXG4gICAgY2xvc2VzdFNsb3RGcm9tRGF0ZShkYXRlLCBvZmZzZXQgPSAwKSB7XG4gICAgICBpZiAobG9jYWxpemVyLmx0KGRhdGUsIHN0YXJ0LCAnbWludXRlcycpKSByZXR1cm4gc2xvdHNbMF1cbiAgICAgIGlmIChsb2NhbGl6ZXIuZ3QoZGF0ZSwgZW5kLCAnbWludXRlcycpKSByZXR1cm4gc2xvdHNbc2xvdHMubGVuZ3RoIC0gMV1cblxuICAgICAgY29uc3QgZGlmZk1pbnMgPSBsb2NhbGl6ZXIuZGlmZihzdGFydCwgZGF0ZSwgJ21pbnV0ZXMnKVxuICAgICAgcmV0dXJuIHNsb3RzWyhkaWZmTWlucyAtIChkaWZmTWlucyAlIHN0ZXApKSAvIHN0ZXAgKyBvZmZzZXRdXG4gICAgfSxcblxuICAgIHN0YXJ0c0JlZm9yZURheShkYXRlKSB7XG4gICAgICByZXR1cm4gbG9jYWxpemVyLmx0KGRhdGUsIHN0YXJ0LCAnZGF5JylcbiAgICB9LFxuXG4gICAgc3RhcnRzQWZ0ZXJEYXkoZGF0ZSkge1xuICAgICAgcmV0dXJuIGxvY2FsaXplci5ndChkYXRlLCBlbmQsICdkYXknKVxuICAgIH0sXG5cbiAgICBzdGFydHNCZWZvcmUoZGF0ZSkge1xuICAgICAgcmV0dXJuIGxvY2FsaXplci5sdChsb2NhbGl6ZXIubWVyZ2Uoc3RhcnQsIGRhdGUpLCBzdGFydCwgJ21pbnV0ZXMnKVxuICAgIH0sXG5cbiAgICBzdGFydHNBZnRlcihkYXRlKSB7XG4gICAgICByZXR1cm4gbG9jYWxpemVyLmd0KGxvY2FsaXplci5tZXJnZShlbmQsIGRhdGUpLCBlbmQsICdtaW51dGVzJylcbiAgICB9LFxuXG4gICAgZ2V0UmFuZ2UocmFuZ2VTdGFydCwgcmFuZ2VFbmQsIGlnbm9yZU1pbiwgaWdub3JlTWF4KSB7XG4gICAgICBpZiAoIWlnbm9yZU1pbilcbiAgICAgICAgcmFuZ2VTdGFydCA9IGxvY2FsaXplci5taW4oZW5kLCBsb2NhbGl6ZXIubWF4KHN0YXJ0LCByYW5nZVN0YXJ0KSlcbiAgICAgIGlmICghaWdub3JlTWF4KVxuICAgICAgICByYW5nZUVuZCA9IGxvY2FsaXplci5taW4oZW5kLCBsb2NhbGl6ZXIubWF4KHN0YXJ0LCByYW5nZUVuZCkpXG5cbiAgICAgIGNvbnN0IHJhbmdlU3RhcnRNaW4gPSBwb3NpdGlvbkZyb21EYXRlKHJhbmdlU3RhcnQpXG4gICAgICBjb25zdCByYW5nZUVuZE1pbiA9IHBvc2l0aW9uRnJvbURhdGUocmFuZ2VFbmQpXG4gICAgICBjb25zdCB0b3AgPVxuICAgICAgICByYW5nZUVuZE1pbiA+IHN0ZXAgKiBudW1TbG90cyAmJiAhbG9jYWxpemVyLmVxKGVuZCwgcmFuZ2VFbmQpXG4gICAgICAgICAgPyAoKHJhbmdlU3RhcnRNaW4gLSBzdGVwKSAvIChzdGVwICogbnVtU2xvdHMpKSAqIDEwMFxuICAgICAgICAgIDogKHJhbmdlU3RhcnRNaW4gLyAoc3RlcCAqIG51bVNsb3RzKSkgKiAxMDBcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdG9wLFxuICAgICAgICBoZWlnaHQ6IChyYW5nZUVuZE1pbiAvIChzdGVwICogbnVtU2xvdHMpKSAqIDEwMCAtIHRvcCxcbiAgICAgICAgc3RhcnQ6IHBvc2l0aW9uRnJvbURhdGUocmFuZ2VTdGFydCksXG4gICAgICAgIHN0YXJ0RGF0ZTogcmFuZ2VTdGFydCxcbiAgICAgICAgZW5kOiBwb3NpdGlvbkZyb21EYXRlKHJhbmdlRW5kKSxcbiAgICAgICAgZW5kRGF0ZTogcmFuZ2VFbmQsXG4gICAgICB9XG4gICAgfSxcblxuICAgIGdldEN1cnJlbnRUaW1lUG9zaXRpb24ocmFuZ2VTdGFydCkge1xuICAgICAgY29uc3QgcmFuZ2VTdGFydE1pbiA9IHBvc2l0aW9uRnJvbURhdGUocmFuZ2VTdGFydClcbiAgICAgIGNvbnN0IHRvcCA9IChyYW5nZVN0YXJ0TWluIC8gKHN0ZXAgKiBudW1TbG90cykpICogMTAwXG5cbiAgICAgIHJldHVybiB0b3BcbiAgICB9LFxuICB9XG59XG4iLCJpbXBvcnQgc29ydEJ5IGZyb20gJ2xvZGFzaC9zb3J0QnknXG5cbmNsYXNzIEV2ZW50IHtcbiAgY29uc3RydWN0b3IoZGF0YSwgeyBhY2Nlc3NvcnMsIHNsb3RNZXRyaWNzIH0pIHtcbiAgICBjb25zdCB7IHN0YXJ0LCBzdGFydERhdGUsIGVuZCwgZW5kRGF0ZSwgdG9wLCBoZWlnaHQgfSA9XG4gICAgICBzbG90TWV0cmljcy5nZXRSYW5nZShhY2Nlc3NvcnMuc3RhcnQoZGF0YSksIGFjY2Vzc29ycy5lbmQoZGF0YSkpXG5cbiAgICB0aGlzLnN0YXJ0ID0gc3RhcnRcbiAgICB0aGlzLmVuZCA9IGVuZFxuICAgIHRoaXMuc3RhcnRNcyA9ICtzdGFydERhdGVcbiAgICB0aGlzLmVuZE1zID0gK2VuZERhdGVcbiAgICB0aGlzLnRvcCA9IHRvcFxuICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0XG4gICAgdGhpcy5kYXRhID0gZGF0YVxuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBldmVudCdzIHdpZHRoIHdpdGhvdXQgYW55IG92ZXJsYXAuXG4gICAqL1xuICBnZXQgX3dpZHRoKCkge1xuICAgIC8vIFRoZSBjb250YWluZXIgZXZlbnQncyB3aWR0aCBpcyBkZXRlcm1pbmVkIGJ5IHRoZSBtYXhpbXVtIG51bWJlciBvZlxuICAgIC8vIGV2ZW50cyBpbiBhbnkgb2YgaXRzIHJvd3MuXG4gICAgaWYgKHRoaXMucm93cykge1xuICAgICAgY29uc3QgY29sdW1ucyA9XG4gICAgICAgIHRoaXMucm93cy5yZWR1Y2UoXG4gICAgICAgICAgKG1heCwgcm93KSA9PiBNYXRoLm1heChtYXgsIHJvdy5sZWF2ZXMubGVuZ3RoICsgMSksIC8vIGFkZCBpdHNlbGZcbiAgICAgICAgICAwXG4gICAgICAgICkgKyAxIC8vIGFkZCB0aGUgY29udGFpbmVyXG5cbiAgICAgIHJldHVybiAxMDAgLyBjb2x1bW5zXG4gICAgfVxuXG4gICAgLy8gVGhlIHJvdyBldmVudCdzIHdpZHRoIGlzIHRoZSBzcGFjZSBsZWZ0IGJ5IHRoZSBjb250YWluZXIsIGRpdmlkZWRcbiAgICAvLyBhbW9uZyBpdHNlbGYgYW5kIGl0cyBsZWF2ZXMuXG4gICAgaWYgKHRoaXMubGVhdmVzKSB7XG4gICAgICBjb25zdCBhdmFpbGFibGVXaWR0aCA9IDEwMCAtIHRoaXMuY29udGFpbmVyLl93aWR0aFxuICAgICAgcmV0dXJuIGF2YWlsYWJsZVdpZHRoIC8gKHRoaXMubGVhdmVzLmxlbmd0aCArIDEpXG4gICAgfVxuXG4gICAgLy8gVGhlIGxlYWYgZXZlbnQncyB3aWR0aCBpcyBkZXRlcm1pbmVkIGJ5IGl0cyByb3cncyB3aWR0aFxuICAgIHJldHVybiB0aGlzLnJvdy5fd2lkdGhcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgZXZlbnQncyBjYWxjdWxhdGVkIHdpZHRoLCBwb3NzaWJseSB3aXRoIGV4dHJhIHdpZHRoIGFkZGVkIGZvclxuICAgKiBvdmVybGFwcGluZyBlZmZlY3QuXG4gICAqL1xuICBnZXQgd2lkdGgoKSB7XG4gICAgY29uc3Qgbm9PdmVybGFwID0gdGhpcy5fd2lkdGhcbiAgICBjb25zdCBvdmVybGFwID0gTWF0aC5taW4oMTAwLCB0aGlzLl93aWR0aCAqIDEuNylcblxuICAgIC8vIENvbnRhaW5lcnMgY2FuIGFsd2F5cyBncm93LlxuICAgIGlmICh0aGlzLnJvd3MpIHtcbiAgICAgIHJldHVybiBvdmVybGFwXG4gICAgfVxuXG4gICAgLy8gUm93cyBjYW4gZ3JvdyBpZiB0aGV5IGhhdmUgbGVhdmVzLlxuICAgIGlmICh0aGlzLmxlYXZlcykge1xuICAgICAgcmV0dXJuIHRoaXMubGVhdmVzLmxlbmd0aCA+IDAgPyBvdmVybGFwIDogbm9PdmVybGFwXG4gICAgfVxuXG4gICAgLy8gTGVhdmVzIGNhbiBncm93IHVubGVzcyB0aGV5J3JlIHRoZSBsYXN0IGl0ZW0gaW4gYSByb3cuXG4gICAgY29uc3QgeyBsZWF2ZXMgfSA9IHRoaXMucm93XG4gICAgY29uc3QgaW5kZXggPSBsZWF2ZXMuaW5kZXhPZih0aGlzKVxuICAgIHJldHVybiBpbmRleCA9PT0gbGVhdmVzLmxlbmd0aCAtIDEgPyBub092ZXJsYXAgOiBvdmVybGFwXG4gIH1cblxuICBnZXQgeE9mZnNldCgpIHtcbiAgICAvLyBDb250YWluZXJzIGhhdmUgbm8gb2Zmc2V0LlxuICAgIGlmICh0aGlzLnJvd3MpIHJldHVybiAwXG5cbiAgICAvLyBSb3dzIGFsd2F5cyBzdGFydCB3aGVyZSB0aGVpciBjb250YWluZXIgZW5kcy5cbiAgICBpZiAodGhpcy5sZWF2ZXMpIHJldHVybiB0aGlzLmNvbnRhaW5lci5fd2lkdGhcblxuICAgIC8vIExlYXZlcyBhcmUgc3ByZWFkIG91dCBldmVubHkgb24gdGhlIHNwYWNlIGxlZnQgYnkgaXRzIHJvdy5cbiAgICBjb25zdCB7IGxlYXZlcywgeE9mZnNldCwgX3dpZHRoIH0gPSB0aGlzLnJvd1xuICAgIGNvbnN0IGluZGV4ID0gbGVhdmVzLmluZGV4T2YodGhpcykgKyAxXG4gICAgcmV0dXJuIHhPZmZzZXQgKyBpbmRleCAqIF93aWR0aFxuICB9XG59XG5cbi8qKlxuICogUmV0dXJuIHRydWUgaWYgZXZlbnQgYSBhbmQgYiBpcyBjb25zaWRlcmVkIHRvIGJlIG9uIHRoZSBzYW1lIHJvdy5cbiAqL1xuZnVuY3Rpb24gb25TYW1lUm93KGEsIGIsIG1pbmltdW1TdGFydERpZmZlcmVuY2UpIHtcbiAgcmV0dXJuIChcbiAgICAvLyBPY2N1cGllcyB0aGUgc2FtZSBzdGFydCBzbG90LlxuICAgIE1hdGguYWJzKGIuc3RhcnQgLSBhLnN0YXJ0KSA8IG1pbmltdW1TdGFydERpZmZlcmVuY2UgfHxcbiAgICAvLyBBJ3Mgc3RhcnQgc2xvdCBvdmVybGFwcyB3aXRoIGIncyBlbmQgc2xvdC5cbiAgICAoYi5zdGFydCA+IGEuc3RhcnQgJiYgYi5zdGFydCA8IGEuZW5kKVxuICApXG59XG5cbmZ1bmN0aW9uIHNvcnRCeVJlbmRlcihldmVudHMpIHtcbiAgY29uc3Qgc29ydGVkQnlUaW1lID0gc29ydEJ5KGV2ZW50cywgWydzdGFydE1zJywgKGUpID0+IC1lLmVuZE1zXSlcblxuICBjb25zdCBzb3J0ZWQgPSBbXVxuICB3aGlsZSAoc29ydGVkQnlUaW1lLmxlbmd0aCA+IDApIHtcbiAgICBjb25zdCBldmVudCA9IHNvcnRlZEJ5VGltZS5zaGlmdCgpXG4gICAgc29ydGVkLnB1c2goZXZlbnQpXG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNvcnRlZEJ5VGltZS5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgdGVzdCA9IHNvcnRlZEJ5VGltZVtpXVxuXG4gICAgICAvLyBTdGlsbCBpbnNpZGUgdGhpcyBldmVudCwgbG9vayBmb3IgbmV4dC5cbiAgICAgIGlmIChldmVudC5lbmRNcyA+IHRlc3Quc3RhcnRNcykgY29udGludWVcblxuICAgICAgLy8gV2UndmUgZm91bmQgdGhlIGZpcnN0IGV2ZW50IG9mIHRoZSBuZXh0IGV2ZW50IGdyb3VwLlxuICAgICAgLy8gSWYgdGhhdCBldmVudCBpcyBub3QgcmlnaHQgbmV4dCB0byBvdXIgY3VycmVudCBldmVudCwgd2UgaGF2ZSB0b1xuICAgICAgLy8gbW92ZSBpdCBoZXJlLlxuICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgIGNvbnN0IGV2ZW50ID0gc29ydGVkQnlUaW1lLnNwbGljZShpLCAxKVswXVxuICAgICAgICBzb3J0ZWQucHVzaChldmVudClcbiAgICAgIH1cblxuICAgICAgLy8gV2UndmUgYWxyZWFkeSBmb3VuZCB0aGUgbmV4dCBldmVudCBncm91cCwgc28gc3RvcCBsb29raW5nLlxuICAgICAgYnJlYWtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc29ydGVkXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFN0eWxlZEV2ZW50cyh7XG4gIGV2ZW50cyxcbiAgbWluaW11bVN0YXJ0RGlmZmVyZW5jZSxcbiAgc2xvdE1ldHJpY3MsXG4gIGFjY2Vzc29ycyxcbn0pIHtcbiAgLy8gQ3JlYXRlIHByb3h5IGV2ZW50cyBhbmQgb3JkZXIgdGhlbSBzbyB0aGF0IHdlIGRvbid0IGhhdmVcbiAgLy8gdG8gZmlkZGxlIHdpdGggei1pbmRleGVzLlxuICBjb25zdCBwcm94aWVzID0gZXZlbnRzLm1hcChcbiAgICAoZXZlbnQpID0+IG5ldyBFdmVudChldmVudCwgeyBzbG90TWV0cmljcywgYWNjZXNzb3JzIH0pXG4gIClcbiAgY29uc3QgZXZlbnRzSW5SZW5kZXJPcmRlciA9IHNvcnRCeVJlbmRlcihwcm94aWVzKVxuXG4gIC8vIEdyb3VwIG92ZXJsYXBwaW5nIGV2ZW50cywgd2hpbGUga2VlcGluZyBvcmRlci5cbiAgLy8gRXZlcnkgZXZlbnQgaXMgYWx3YXlzIG9uZSBvZjogY29udGFpbmVyLCByb3cgb3IgbGVhZi5cbiAgLy8gQ29udGFpbmVycyBjYW4gY29udGFpbiByb3dzLCBhbmQgcm93cyBjYW4gY29udGFpbiBsZWF2ZXMuXG4gIGNvbnN0IGNvbnRhaW5lckV2ZW50cyA9IFtdXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZXZlbnRzSW5SZW5kZXJPcmRlci5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGV2ZW50ID0gZXZlbnRzSW5SZW5kZXJPcmRlcltpXVxuXG4gICAgLy8gQ2hlY2sgaWYgdGhpcyBldmVudCBjYW4gZ28gaW50byBhIGNvbnRhaW5lciBldmVudC5cbiAgICBjb25zdCBjb250YWluZXIgPSBjb250YWluZXJFdmVudHMuZmluZChcbiAgICAgIChjKSA9PlxuICAgICAgICBjLmVuZCA+IGV2ZW50LnN0YXJ0IHx8XG4gICAgICAgIE1hdGguYWJzKGV2ZW50LnN0YXJ0IC0gYy5zdGFydCkgPCBtaW5pbXVtU3RhcnREaWZmZXJlbmNlXG4gICAgKVxuXG4gICAgLy8gQ291bGRuJ3QgZmluZCBhIGNvbnRhaW5lciDigJQgdGhhdCBtZWFucyB0aGlzIGV2ZW50IGlzIGEgY29udGFpbmVyLlxuICAgIGlmICghY29udGFpbmVyKSB7XG4gICAgICBldmVudC5yb3dzID0gW11cbiAgICAgIGNvbnRhaW5lckV2ZW50cy5wdXNoKGV2ZW50KVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICAvLyBGb3VuZCBhIGNvbnRhaW5lciBmb3IgdGhlIGV2ZW50LlxuICAgIGV2ZW50LmNvbnRhaW5lciA9IGNvbnRhaW5lclxuXG4gICAgLy8gQ2hlY2sgaWYgdGhlIGV2ZW50IGNhbiBiZSBwbGFjZWQgaW4gYW4gZXhpc3Rpbmcgcm93LlxuICAgIC8vIFN0YXJ0IGxvb2tpbmcgZnJvbSBiZWhpbmQuXG4gICAgbGV0IHJvdyA9IG51bGxcbiAgICBmb3IgKGxldCBqID0gY29udGFpbmVyLnJvd3MubGVuZ3RoIC0gMTsgIXJvdyAmJiBqID49IDA7IGotLSkge1xuICAgICAgaWYgKG9uU2FtZVJvdyhjb250YWluZXIucm93c1tqXSwgZXZlbnQsIG1pbmltdW1TdGFydERpZmZlcmVuY2UpKSB7XG4gICAgICAgIHJvdyA9IGNvbnRhaW5lci5yb3dzW2pdXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHJvdykge1xuICAgICAgLy8gRm91bmQgYSByb3csIHNvIGFkZCBpdC5cbiAgICAgIHJvdy5sZWF2ZXMucHVzaChldmVudClcbiAgICAgIGV2ZW50LnJvdyA9IHJvd1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBDb3VsZG4ndCBmaW5kIGEgcm93IOKAkyB0aGF0IG1lYW5zIHRoaXMgZXZlbnQgaXMgYSByb3cuXG4gICAgICBldmVudC5sZWF2ZXMgPSBbXVxuICAgICAgY29udGFpbmVyLnJvd3MucHVzaChldmVudClcbiAgICB9XG4gIH1cblxuICAvLyBSZXR1cm4gdGhlIG9yaWdpbmFsIGV2ZW50cywgYWxvbmcgd2l0aCB0aGVpciBzdHlsZXMuXG4gIHJldHVybiBldmVudHNJblJlbmRlck9yZGVyLm1hcCgoZXZlbnQpID0+ICh7XG4gICAgZXZlbnQ6IGV2ZW50LmRhdGEsXG4gICAgc3R5bGU6IHtcbiAgICAgIHRvcDogZXZlbnQudG9wLFxuICAgICAgaGVpZ2h0OiBldmVudC5oZWlnaHQsXG4gICAgICB3aWR0aDogZXZlbnQud2lkdGgsXG4gICAgICB4T2Zmc2V0OiBNYXRoLm1heCgwLCBldmVudC54T2Zmc2V0KSxcbiAgICB9LFxuICB9KSlcbn1cbiIsImltcG9ydCBvdmVybGFwIGZyb20gJy4vb3ZlcmxhcCdcblxuZnVuY3Rpb24gZ2V0TWF4SWR4REZTKG5vZGUsIG1heElkeCwgdmlzaXRlZCkge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG5vZGUuZnJpZW5kcy5sZW5ndGg7ICsraSkge1xuICAgIGlmICh2aXNpdGVkLmluZGV4T2Yobm9kZS5mcmllbmRzW2ldKSA+IC0xKSBjb250aW51ZVxuICAgIG1heElkeCA9IG1heElkeCA+IG5vZGUuZnJpZW5kc1tpXS5pZHggPyBtYXhJZHggOiBub2RlLmZyaWVuZHNbaV0uaWR4XG4gICAgLy8gVE9ETyA6IHRyYWNlIGl0IGJ5IG5vdCBvYmplY3QgYnV0IGtpbmRhIGluZGV4IG9yIHNvbWV0aGluZyBmb3IgcGVyZm9ybWFuY2VcbiAgICB2aXNpdGVkLnB1c2gobm9kZS5mcmllbmRzW2ldKVxuICAgIGNvbnN0IG5ld0lkeCA9IGdldE1heElkeERGUyhub2RlLmZyaWVuZHNbaV0sIG1heElkeCwgdmlzaXRlZClcbiAgICBtYXhJZHggPSBtYXhJZHggPiBuZXdJZHggPyBtYXhJZHggOiBuZXdJZHhcbiAgfVxuICByZXR1cm4gbWF4SWR4XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICh7XG4gIGV2ZW50cyxcbiAgbWluaW11bVN0YXJ0RGlmZmVyZW5jZSxcbiAgc2xvdE1ldHJpY3MsXG4gIGFjY2Vzc29ycyxcbn0pIHtcbiAgY29uc3Qgc3R5bGVkRXZlbnRzID0gb3ZlcmxhcCh7XG4gICAgZXZlbnRzLFxuICAgIG1pbmltdW1TdGFydERpZmZlcmVuY2UsXG4gICAgc2xvdE1ldHJpY3MsXG4gICAgYWNjZXNzb3JzLFxuICB9KVxuXG4gIHN0eWxlZEV2ZW50cy5zb3J0KChhLCBiKSA9PiB7XG4gICAgYSA9IGEuc3R5bGVcbiAgICBiID0gYi5zdHlsZVxuICAgIGlmIChhLnRvcCAhPT0gYi50b3ApIHJldHVybiBhLnRvcCA+IGIudG9wID8gMSA6IC0xXG4gICAgZWxzZSBpZiAoYS5oZWlnaHQgIT09IGIuaGVpZ2h0KVxuICAgICAgcmV0dXJuIGEudG9wICsgYS5oZWlnaHQgPCBiLnRvcCArIGIuaGVpZ2h0ID8gMSA6IC0xXG4gICAgZWxzZSByZXR1cm4gMFxuICB9KVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3R5bGVkRXZlbnRzLmxlbmd0aDsgKytpKSB7XG4gICAgc3R5bGVkRXZlbnRzW2ldLmZyaWVuZHMgPSBbXVxuICAgIGRlbGV0ZSBzdHlsZWRFdmVudHNbaV0uc3R5bGUubGVmdFxuICAgIGRlbGV0ZSBzdHlsZWRFdmVudHNbaV0uc3R5bGUubGVmdFxuICAgIGRlbGV0ZSBzdHlsZWRFdmVudHNbaV0uaWR4XG4gICAgZGVsZXRlIHN0eWxlZEV2ZW50c1tpXS5zaXplXG4gIH1cblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0eWxlZEV2ZW50cy5sZW5ndGggLSAxOyArK2kpIHtcbiAgICBjb25zdCBzZTEgPSBzdHlsZWRFdmVudHNbaV1cbiAgICBjb25zdCB5MSA9IHNlMS5zdHlsZS50b3BcbiAgICBjb25zdCB5MiA9IHNlMS5zdHlsZS50b3AgKyBzZTEuc3R5bGUuaGVpZ2h0XG5cbiAgICBmb3IgKGxldCBqID0gaSArIDE7IGogPCBzdHlsZWRFdmVudHMubGVuZ3RoOyArK2opIHtcbiAgICAgIGNvbnN0IHNlMiA9IHN0eWxlZEV2ZW50c1tqXVxuICAgICAgY29uc3QgeTMgPSBzZTIuc3R5bGUudG9wXG4gICAgICBjb25zdCB5NCA9IHNlMi5zdHlsZS50b3AgKyBzZTIuc3R5bGUuaGVpZ2h0XG5cbiAgICAgIGlmIChcbiAgICAgICAgKHkzID49IHkxICYmIHk0IDw9IHkyKSB8fFxuICAgICAgICAoeTQgPiB5MSAmJiB5NCA8PSB5MikgfHxcbiAgICAgICAgKHkzID49IHkxICYmIHkzIDwgeTIpXG4gICAgICApIHtcbiAgICAgICAgLy8gVE9ETyA6IGhhc2htYXAgd291bGQgYmUgZWZmZWN0aXZlIGZvciBwZXJmb3JtYW5jZVxuICAgICAgICBzZTEuZnJpZW5kcy5wdXNoKHNlMilcbiAgICAgICAgc2UyLmZyaWVuZHMucHVzaChzZTEpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHlsZWRFdmVudHMubGVuZ3RoOyArK2kpIHtcbiAgICBjb25zdCBzZSA9IHN0eWxlZEV2ZW50c1tpXVxuICAgIGNvbnN0IGJpdG1hcCA9IFtdXG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCAxMDA7ICsraikgYml0bWFwLnB1c2goMSkgLy8gMSBtZWFucyBhdmFpbGFibGVcblxuICAgIGZvciAobGV0IGogPSAwOyBqIDwgc2UuZnJpZW5kcy5sZW5ndGg7ICsrailcbiAgICAgIGlmIChzZS5mcmllbmRzW2pdLmlkeCAhPT0gdW5kZWZpbmVkKSBiaXRtYXBbc2UuZnJpZW5kc1tqXS5pZHhdID0gMCAvLyAwIG1lYW5zIHJlc2VydmVkXG5cbiAgICBzZS5pZHggPSBiaXRtYXAuaW5kZXhPZigxKVxuICB9XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHlsZWRFdmVudHMubGVuZ3RoOyArK2kpIHtcbiAgICBsZXQgc2l6ZSA9IDBcblxuICAgIGlmIChzdHlsZWRFdmVudHNbaV0uc2l6ZSkgY29udGludWVcblxuICAgIGNvbnN0IGFsbEZyaWVuZHMgPSBbXVxuICAgIGNvbnN0IG1heElkeCA9IGdldE1heElkeERGUyhzdHlsZWRFdmVudHNbaV0sIDAsIGFsbEZyaWVuZHMpXG4gICAgc2l6ZSA9IDEwMCAvIChtYXhJZHggKyAxKVxuICAgIHN0eWxlZEV2ZW50c1tpXS5zaXplID0gc2l6ZVxuXG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBhbGxGcmllbmRzLmxlbmd0aDsgKytqKSBhbGxGcmllbmRzW2pdLnNpemUgPSBzaXplXG4gIH1cblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0eWxlZEV2ZW50cy5sZW5ndGg7ICsraSkge1xuICAgIGNvbnN0IGUgPSBzdHlsZWRFdmVudHNbaV1cbiAgICBlLnN0eWxlLmxlZnQgPSBlLmlkeCAqIGUuc2l6ZVxuXG4gICAgLy8gc3RyZXRjaCB0byBtYXhpbXVtXG4gICAgbGV0IG1heElkeCA9IDBcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGUuZnJpZW5kcy5sZW5ndGg7ICsraikge1xuICAgICAgY29uc3QgaWR4ID0gZS5mcmllbmRzW2pdLmlkeFxuICAgICAgbWF4SWR4ID0gbWF4SWR4ID4gaWR4ID8gbWF4SWR4IDogaWR4XG4gICAgfVxuICAgIGlmIChtYXhJZHggPD0gZS5pZHgpIGUuc2l6ZSA9IDEwMCAtIGUuaWR4ICogZS5zaXplXG5cbiAgICAvLyBwYWRkaW5nIGJldHdlZW4gZXZlbnRzXG4gICAgLy8gZm9yIHRoaXMgZmVhdHVyZSwgYHdpZHRoYCBpcyBub3QgcGVyY2VudGFnZSBiYXNlZCB1bml0IGFueW1vcmVcbiAgICAvLyBpdCB3aWxsIGJlIHVzZWQgd2l0aCBjYWxjKClcbiAgICBjb25zdCBwYWRkaW5nID0gZS5pZHggPT09IDAgPyAwIDogM1xuICAgIGUuc3R5bGUud2lkdGggPSBgY2FsYygke2Uuc2l6ZX0lIC0gJHtwYWRkaW5nfXB4KWBcbiAgICBlLnN0eWxlLmhlaWdodCA9IGBjYWxjKCR7ZS5zdHlsZS5oZWlnaHR9JSAtIDJweClgXG4gICAgZS5zdHlsZS54T2Zmc2V0ID0gYGNhbGMoJHtlLnN0eWxlLmxlZnR9JSArICR7cGFkZGluZ31weClgXG4gIH1cblxuICByZXR1cm4gc3R5bGVkRXZlbnRzXG59XG4iLCIvKmVzbGludCBuby11bnVzZWQtdmFyczogXCJvZmZcIiovXG5cbmltcG9ydCBvdmVybGFwIGZyb20gJy4vbGF5b3V0LWFsZ29yaXRobXMvb3ZlcmxhcCdcbmltcG9ydCBub092ZXJsYXAgZnJvbSAnLi9sYXlvdXQtYWxnb3JpdGhtcy9uby1vdmVybGFwJ1xuXG5jb25zdCBEZWZhdWx0QWxnb3JpdGhtcyA9IHtcbiAgb3ZlcmxhcDogb3ZlcmxhcCxcbiAgJ25vLW92ZXJsYXAnOiBub092ZXJsYXAsXG59XG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb24oYSkge1xuICByZXR1cm4gISEoYSAmJiBhLmNvbnN0cnVjdG9yICYmIGEuY2FsbCAmJiBhLmFwcGx5KVxufVxuXG4vL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFN0eWxlZEV2ZW50cyh7XG4gIGV2ZW50cyxcbiAgbWluaW11bVN0YXJ0RGlmZmVyZW5jZSxcbiAgc2xvdE1ldHJpY3MsXG4gIGFjY2Vzc29ycyxcbiAgZGF5TGF5b3V0QWxnb3JpdGhtLCAvLyBvbmUgb2YgRGVmYXVsdEFsZ29yaXRobXMga2V5c1xuICAvLyBvciBjdXN0b20gZnVuY3Rpb25cbn0pIHtcbiAgbGV0IGFsZ29yaXRobSA9IGRheUxheW91dEFsZ29yaXRobVxuXG4gIGlmIChkYXlMYXlvdXRBbGdvcml0aG0gaW4gRGVmYXVsdEFsZ29yaXRobXMpXG4gICAgYWxnb3JpdGhtID0gRGVmYXVsdEFsZ29yaXRobXNbZGF5TGF5b3V0QWxnb3JpdGhtXVxuXG4gIGlmICghaXNGdW5jdGlvbihhbGdvcml0aG0pKSB7XG4gICAgLy8gaW52YWxpZCBhbGdvcml0aG1cbiAgICByZXR1cm4gW11cbiAgfVxuXG4gIHJldHVybiBhbGdvcml0aG0uYXBwbHkodGhpcywgYXJndW1lbnRzKVxufVxuIiwiaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcblxuaW1wb3J0IEJhY2tncm91bmRXcmFwcGVyIGZyb20gJy4vQmFja2dyb3VuZFdyYXBwZXInXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpbWVTbG90R3JvdXAgZXh0ZW5kcyBDb21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgcmVuZGVyU2xvdCxcbiAgICAgIHJlc291cmNlLFxuICAgICAgZ3JvdXAsXG4gICAgICBnZXR0ZXJzLFxuICAgICAgY29tcG9uZW50czogeyB0aW1lU2xvdFdyYXBwZXI6IFdyYXBwZXIgPSBCYWNrZ3JvdW5kV3JhcHBlciB9ID0ge30sXG4gICAgfSA9IHRoaXMucHJvcHNcblxuICAgIGNvbnN0IGdyb3VwUHJvcHMgPSBnZXR0ZXJzID8gZ2V0dGVycy5zbG90R3JvdXBQcm9wKGdyb3VwKSA6IHt9XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmJjLXRpbWVzbG90LWdyb3VwXCIgey4uLmdyb3VwUHJvcHN9PlxuICAgICAgICB7Z3JvdXAubWFwKCh2YWx1ZSwgaWR4KSA9PiB7XG4gICAgICAgICAgY29uc3Qgc2xvdFByb3BzID0gZ2V0dGVycyA/IGdldHRlcnMuc2xvdFByb3AodmFsdWUsIHJlc291cmNlKSA6IHt9XG4gICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxXcmFwcGVyIGtleT17aWR4fSB2YWx1ZT17dmFsdWV9IHJlc291cmNlPXtyZXNvdXJjZX0+XG4gICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICB7Li4uc2xvdFByb3BzfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xzeCgncmJjLXRpbWUtc2xvdCcsIHNsb3RQcm9wcy5jbGFzc05hbWUpfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3JlbmRlclNsb3QgJiYgcmVuZGVyU2xvdCh2YWx1ZSwgaWR4KX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L1dyYXBwZXI+XG4gICAgICAgICAgKVxuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuXG5UaW1lU2xvdEdyb3VwLnByb3BUeXBlcyA9IHtcbiAgcmVuZGVyU2xvdDogUHJvcFR5cGVzLmZ1bmMsXG4gIGdyb3VwOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgcmVzb3VyY2U6IFByb3BUeXBlcy5hbnksXG4gIGNvbXBvbmVudHM6IFByb3BUeXBlcy5vYmplY3QsXG4gIGdldHRlcnM6IFByb3BUeXBlcy5vYmplY3QsXG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmNvbnN0IERheUNvbHVtbldyYXBwZXIgPSAoeyBjaGlsZHJlbiwgY2xhc3NOYW1lLCBzdHlsZSwgaW5uZXJSZWYgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWV9IHN0eWxlPXtzdHlsZX0gcmVmPXtpbm5lclJlZn0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIHJlZikgPT4gKFxuICA8RGF5Q29sdW1uV3JhcHBlciB7Li4ucHJvcHN9IGlubmVyUmVmPXtyZWZ9IC8+XG4pKVxuIiwiaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZVJlZiB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCdcblxuaW1wb3J0IFNlbGVjdGlvbiwgeyBnZXRCb3VuZHNGb3JOb2RlLCBpc0V2ZW50IH0gZnJvbSAnLi9TZWxlY3Rpb24nXG5pbXBvcnQgKiBhcyBUaW1lU2xvdFV0aWxzIGZyb20gJy4vdXRpbHMvVGltZVNsb3RzJ1xuaW1wb3J0IHsgaXNTZWxlY3RlZCB9IGZyb20gJy4vdXRpbHMvc2VsZWN0aW9uJ1xuXG5pbXBvcnQgeyBub3RpZnkgfSBmcm9tICcuL3V0aWxzL2hlbHBlcnMnXG5pbXBvcnQgKiBhcyBEYXlFdmVudExheW91dCBmcm9tICcuL3V0aWxzL0RheUV2ZW50TGF5b3V0J1xuaW1wb3J0IFRpbWVTbG90R3JvdXAgZnJvbSAnLi9UaW1lU2xvdEdyb3VwJ1xuaW1wb3J0IFRpbWVHcmlkRXZlbnQgZnJvbSAnLi9UaW1lR3JpZEV2ZW50J1xuaW1wb3J0IHsgRGF5TGF5b3V0QWxnb3JpdGhtUHJvcFR5cGUgfSBmcm9tICcuL3V0aWxzL3Byb3BUeXBlcydcblxuaW1wb3J0IERheUNvbHVtbldyYXBwZXIgZnJvbSAnLi9EYXlDb2x1bW5XcmFwcGVyJ1xuXG5jbGFzcyBEYXlDb2x1bW4gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0ZSA9IHsgc2VsZWN0aW5nOiBmYWxzZSwgdGltZUluZGljYXRvclBvc2l0aW9uOiBudWxsIH1cbiAgaW50ZXJ2YWxUcmlnZ2VyZWQgPSBmYWxzZVxuXG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICBzdXBlciguLi5hcmdzKVxuXG4gICAgdGhpcy5zbG90TWV0cmljcyA9IFRpbWVTbG90VXRpbHMuZ2V0U2xvdE1ldHJpY3ModGhpcy5wcm9wcylcbiAgICB0aGlzLmNvbnRhaW5lclJlZiA9IGNyZWF0ZVJlZigpXG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLnByb3BzLnNlbGVjdGFibGUgJiYgdGhpcy5fc2VsZWN0YWJsZSgpXG5cbiAgICBpZiAodGhpcy5wcm9wcy5pc05vdykge1xuICAgICAgdGhpcy5zZXRUaW1lSW5kaWNhdG9yUG9zaXRpb25VcGRhdGVJbnRlcnZhbCgpXG4gICAgfVxuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5fdGVhcmRvd25TZWxlY3RhYmxlKClcbiAgICB0aGlzLmNsZWFyVGltZUluZGljYXRvckludGVydmFsKClcbiAgfVxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMsIHByZXZTdGF0ZSkge1xuICAgIGlmICh0aGlzLnByb3BzLnNlbGVjdGFibGUgJiYgIXByZXZQcm9wcy5zZWxlY3RhYmxlKSB0aGlzLl9zZWxlY3RhYmxlKClcbiAgICBpZiAoIXRoaXMucHJvcHMuc2VsZWN0YWJsZSAmJiBwcmV2UHJvcHMuc2VsZWN0YWJsZSlcbiAgICAgIHRoaXMuX3RlYXJkb3duU2VsZWN0YWJsZSgpXG5cbiAgICBjb25zdCB7IGdldE5vdywgaXNOb3csIGxvY2FsaXplciwgZGF0ZSwgbWluLCBtYXggfSA9IHRoaXMucHJvcHNcbiAgICBjb25zdCBnZXROb3dDaGFuZ2VkID0gbG9jYWxpemVyLm5lcShwcmV2UHJvcHMuZ2V0Tm93KCksIGdldE5vdygpLCAnbWludXRlcycpXG5cbiAgICBpZiAocHJldlByb3BzLmlzTm93ICE9PSBpc05vdyB8fCBnZXROb3dDaGFuZ2VkKSB7XG4gICAgICB0aGlzLmNsZWFyVGltZUluZGljYXRvckludGVydmFsKClcblxuICAgICAgaWYgKGlzTm93KSB7XG4gICAgICAgIGNvbnN0IHRhaWwgPVxuICAgICAgICAgICFnZXROb3dDaGFuZ2VkICYmXG4gICAgICAgICAgbG9jYWxpemVyLmVxKHByZXZQcm9wcy5kYXRlLCBkYXRlLCAnbWludXRlcycpICYmXG4gICAgICAgICAgcHJldlN0YXRlLnRpbWVJbmRpY2F0b3JQb3NpdGlvbiA9PT0gdGhpcy5zdGF0ZS50aW1lSW5kaWNhdG9yUG9zaXRpb25cblxuICAgICAgICB0aGlzLnNldFRpbWVJbmRpY2F0b3JQb3NpdGlvblVwZGF0ZUludGVydmFsKHRhaWwpXG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChcbiAgICAgIGlzTm93ICYmXG4gICAgICAobG9jYWxpemVyLm5lcShwcmV2UHJvcHMubWluLCBtaW4sICdtaW51dGVzJykgfHxcbiAgICAgICAgbG9jYWxpemVyLm5lcShwcmV2UHJvcHMubWF4LCBtYXgsICdtaW51dGVzJykpXG4gICAgKSB7XG4gICAgICB0aGlzLnBvc2l0aW9uVGltZUluZGljYXRvcigpXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB0YWlsIHtCb29sZWFufSAtIHdoZXRoZXIgYHBvc2l0aW9uVGltZUluZGljYXRvcmAgY2FsbCBzaG91bGQgYmVcbiAgICogICBkZWZlcnJlZCBvciBjYWxsZWQgdXBvbiBzZXR0aW5nIGludGVydmFsIChgdHJ1ZWAgLSBpZiBkZWZlcnJlZCk7XG4gICAqL1xuICBzZXRUaW1lSW5kaWNhdG9yUG9zaXRpb25VcGRhdGVJbnRlcnZhbCh0YWlsID0gZmFsc2UpIHtcbiAgICBpZiAoIXRoaXMuaW50ZXJ2YWxUcmlnZ2VyZWQgJiYgIXRhaWwpIHtcbiAgICAgIHRoaXMucG9zaXRpb25UaW1lSW5kaWNhdG9yKClcbiAgICB9XG5cbiAgICB0aGlzLl90aW1lSW5kaWNhdG9yVGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuaW50ZXJ2YWxUcmlnZ2VyZWQgPSB0cnVlXG4gICAgICB0aGlzLnBvc2l0aW9uVGltZUluZGljYXRvcigpXG4gICAgICB0aGlzLnNldFRpbWVJbmRpY2F0b3JQb3NpdGlvblVwZGF0ZUludGVydmFsKClcbiAgICB9LCA2MDAwMClcbiAgfVxuXG4gIGNsZWFyVGltZUluZGljYXRvckludGVydmFsKCkge1xuICAgIHRoaXMuaW50ZXJ2YWxUcmlnZ2VyZWQgPSBmYWxzZVxuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5fdGltZUluZGljYXRvclRpbWVvdXQpXG4gIH1cblxuICBwb3NpdGlvblRpbWVJbmRpY2F0b3IoKSB7XG4gICAgY29uc3QgeyBtaW4sIG1heCwgZ2V0Tm93IH0gPSB0aGlzLnByb3BzXG4gICAgY29uc3QgY3VycmVudCA9IGdldE5vdygpXG5cbiAgICBpZiAoY3VycmVudCA+PSBtaW4gJiYgY3VycmVudCA8PSBtYXgpIHtcbiAgICAgIGNvbnN0IHRvcCA9IHRoaXMuc2xvdE1ldHJpY3MuZ2V0Q3VycmVudFRpbWVQb3NpdGlvbihjdXJyZW50KVxuICAgICAgdGhpcy5pbnRlcnZhbFRyaWdnZXJlZCA9IHRydWVcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyB0aW1lSW5kaWNhdG9yUG9zaXRpb246IHRvcCB9KVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNsZWFyVGltZUluZGljYXRvckludGVydmFsKClcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgZGF0ZSxcbiAgICAgIG1heCxcbiAgICAgIHJ0bCxcbiAgICAgIGlzTm93LFxuICAgICAgcmVzb3VyY2UsXG4gICAgICBhY2Nlc3NvcnMsXG4gICAgICBsb2NhbGl6ZXIsXG4gICAgICBnZXR0ZXJzOiB7IGRheVByb3AsIC4uLmdldHRlcnMgfSxcbiAgICAgIGNvbXBvbmVudHM6IHsgZXZlbnRDb250YWluZXJXcmFwcGVyOiBFdmVudENvbnRhaW5lciwgLi4uY29tcG9uZW50cyB9LFxuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICB0aGlzLnNsb3RNZXRyaWNzID0gdGhpcy5zbG90TWV0cmljcy51cGRhdGUodGhpcy5wcm9wcylcblxuICAgIGxldCB7IHNsb3RNZXRyaWNzIH0gPSB0aGlzXG4gICAgbGV0IHsgc2VsZWN0aW5nLCB0b3AsIGhlaWdodCwgc3RhcnREYXRlLCBlbmREYXRlIH0gPSB0aGlzLnN0YXRlXG5cbiAgICBsZXQgc2VsZWN0RGF0ZXMgPSB7IHN0YXJ0OiBzdGFydERhdGUsIGVuZDogZW5kRGF0ZSB9XG5cbiAgICBjb25zdCB7IGNsYXNzTmFtZSwgc3R5bGUgfSA9IGRheVByb3AobWF4LCByZXNvdXJjZSlcblxuICAgIGNvbnN0IERheUNvbHVtbldyYXBwZXJDb21wb25lbnQgPVxuICAgICAgY29tcG9uZW50cy5kYXlDb2x1bW5XcmFwcGVyIHx8IERheUNvbHVtbldyYXBwZXJcblxuICAgIHJldHVybiAoXG4gICAgICA8RGF5Q29sdW1uV3JhcHBlckNvbXBvbmVudFxuICAgICAgICByZWY9e3RoaXMuY29udGFpbmVyUmVmfVxuICAgICAgICBkYXRlPXtkYXRlfVxuICAgICAgICBzdHlsZT17c3R5bGV9XG4gICAgICAgIGNsYXNzTmFtZT17Y2xzeChcbiAgICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgICAgJ3JiYy1kYXktc2xvdCcsXG4gICAgICAgICAgJ3JiYy10aW1lLWNvbHVtbicsXG4gICAgICAgICAgaXNOb3cgJiYgJ3JiYy1ub3cnLFxuICAgICAgICAgIGlzTm93ICYmICdyYmMtdG9kYXknLCAvLyBXSFlcbiAgICAgICAgICBzZWxlY3RpbmcgJiYgJ3JiYy1zbG90LXNlbGVjdGluZydcbiAgICAgICAgKX1cbiAgICAgICAgc2xvdE1ldHJpY3M9e3Nsb3RNZXRyaWNzfVxuICAgICAgICByZXNvdXJjZT17cmVzb3VyY2V9XG4gICAgICA+XG4gICAgICAgIHtzbG90TWV0cmljcy5ncm91cHMubWFwKChncnAsIGlkeCkgPT4gKFxuICAgICAgICAgIDxUaW1lU2xvdEdyb3VwXG4gICAgICAgICAgICBrZXk9e2lkeH1cbiAgICAgICAgICAgIGdyb3VwPXtncnB9XG4gICAgICAgICAgICByZXNvdXJjZT17cmVzb3VyY2V9XG4gICAgICAgICAgICBnZXR0ZXJzPXtnZXR0ZXJzfVxuICAgICAgICAgICAgY29tcG9uZW50cz17Y29tcG9uZW50c31cbiAgICAgICAgICAvPlxuICAgICAgICApKX1cbiAgICAgICAgPEV2ZW50Q29udGFpbmVyXG4gICAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XG4gICAgICAgICAgcmVzb3VyY2U9e3Jlc291cmNlfVxuICAgICAgICAgIGFjY2Vzc29ycz17YWNjZXNzb3JzfVxuICAgICAgICAgIGdldHRlcnM9e2dldHRlcnN9XG4gICAgICAgICAgY29tcG9uZW50cz17Y29tcG9uZW50c31cbiAgICAgICAgICBzbG90TWV0cmljcz17c2xvdE1ldHJpY3N9XG4gICAgICAgID5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xzeCgncmJjLWV2ZW50cy1jb250YWluZXInLCBydGwgJiYgJ3J0bCcpfT5cbiAgICAgICAgICAgIHt0aGlzLnJlbmRlckV2ZW50cyh7XG4gICAgICAgICAgICAgIGV2ZW50czogdGhpcy5wcm9wcy5iYWNrZ3JvdW5kRXZlbnRzLFxuICAgICAgICAgICAgICBpc0JhY2tncm91bmRFdmVudDogdHJ1ZSxcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAge3RoaXMucmVuZGVyRXZlbnRzKHsgZXZlbnRzOiB0aGlzLnByb3BzLmV2ZW50cyB9KX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9FdmVudENvbnRhaW5lcj5cblxuICAgICAgICB7c2VsZWN0aW5nICYmIChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJiYy1zbG90LXNlbGVjdGlvblwiIHN0eWxlPXt7IHRvcCwgaGVpZ2h0IH19PlxuICAgICAgICAgICAgPHNwYW4+e2xvY2FsaXplci5mb3JtYXQoc2VsZWN0RGF0ZXMsICdzZWxlY3RSYW5nZUZvcm1hdCcpfTwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgICAge2lzTm93ICYmIHRoaXMuaW50ZXJ2YWxUcmlnZ2VyZWQgJiYgKFxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInJiYy1jdXJyZW50LXRpbWUtaW5kaWNhdG9yXCJcbiAgICAgICAgICAgIHN0eWxlPXt7IHRvcDogYCR7dGhpcy5zdGF0ZS50aW1lSW5kaWNhdG9yUG9zaXRpb259JWAgfX1cbiAgICAgICAgICAvPlxuICAgICAgICApfVxuICAgICAgPC9EYXlDb2x1bW5XcmFwcGVyQ29tcG9uZW50PlxuICAgIClcbiAgfVxuXG4gIHJlbmRlckV2ZW50cyA9ICh7IGV2ZW50cywgaXNCYWNrZ3JvdW5kRXZlbnQgfSkgPT4ge1xuICAgIGxldCB7XG4gICAgICBydGwsXG4gICAgICBzZWxlY3RlZCxcbiAgICAgIGFjY2Vzc29ycyxcbiAgICAgIGxvY2FsaXplcixcbiAgICAgIGdldHRlcnMsXG4gICAgICBjb21wb25lbnRzLFxuICAgICAgc3RlcCxcbiAgICAgIHRpbWVzbG90cyxcbiAgICAgIGRheUxheW91dEFsZ29yaXRobSxcbiAgICAgIHJlc2l6YWJsZSxcbiAgICB9ID0gdGhpcy5wcm9wc1xuXG4gICAgY29uc3QgeyBzbG90TWV0cmljcyB9ID0gdGhpc1xuICAgIGNvbnN0IHsgbWVzc2FnZXMgfSA9IGxvY2FsaXplclxuXG4gICAgbGV0IHN0eWxlZEV2ZW50cyA9IERheUV2ZW50TGF5b3V0LmdldFN0eWxlZEV2ZW50cyh7XG4gICAgICBldmVudHMsXG4gICAgICBhY2Nlc3NvcnMsXG4gICAgICBzbG90TWV0cmljcyxcbiAgICAgIG1pbmltdW1TdGFydERpZmZlcmVuY2U6IE1hdGguY2VpbCgoc3RlcCAqIHRpbWVzbG90cykgLyAyKSxcbiAgICAgIGRheUxheW91dEFsZ29yaXRobSxcbiAgICB9KVxuXG4gICAgcmV0dXJuIHN0eWxlZEV2ZW50cy5tYXAoKHsgZXZlbnQsIHN0eWxlIH0sIGlkeCkgPT4ge1xuICAgICAgbGV0IGVuZCA9IGFjY2Vzc29ycy5lbmQoZXZlbnQpXG4gICAgICBsZXQgc3RhcnQgPSBhY2Nlc3NvcnMuc3RhcnQoZXZlbnQpXG4gICAgICBsZXQga2V5ID0gYWNjZXNzb3JzLmV2ZW50SWQoZXZlbnQpID8/ICdldnRfJyArIGlkeFxuICAgICAgbGV0IGZvcm1hdCA9ICdldmVudFRpbWVSYW5nZUZvcm1hdCdcbiAgICAgIGxldCBsYWJlbFxuXG4gICAgICBjb25zdCBzdGFydHNCZWZvcmVEYXkgPSBzbG90TWV0cmljcy5zdGFydHNCZWZvcmVEYXkoc3RhcnQpXG4gICAgICBjb25zdCBzdGFydHNBZnRlckRheSA9IHNsb3RNZXRyaWNzLnN0YXJ0c0FmdGVyRGF5KGVuZClcblxuICAgICAgaWYgKHN0YXJ0c0JlZm9yZURheSkgZm9ybWF0ID0gJ2V2ZW50VGltZVJhbmdlRW5kRm9ybWF0J1xuICAgICAgZWxzZSBpZiAoc3RhcnRzQWZ0ZXJEYXkpIGZvcm1hdCA9ICdldmVudFRpbWVSYW5nZVN0YXJ0Rm9ybWF0J1xuXG4gICAgICBpZiAoc3RhcnRzQmVmb3JlRGF5ICYmIHN0YXJ0c0FmdGVyRGF5KSBsYWJlbCA9IG1lc3NhZ2VzLmFsbERheVxuICAgICAgZWxzZSBsYWJlbCA9IGxvY2FsaXplci5mb3JtYXQoeyBzdGFydCwgZW5kIH0sIGZvcm1hdClcblxuICAgICAgbGV0IGNvbnRpbnVlc1ByaW9yID0gc3RhcnRzQmVmb3JlRGF5IHx8IHNsb3RNZXRyaWNzLnN0YXJ0c0JlZm9yZShzdGFydClcbiAgICAgIGxldCBjb250aW51ZXNBZnRlciA9IHN0YXJ0c0FmdGVyRGF5IHx8IHNsb3RNZXRyaWNzLnN0YXJ0c0FmdGVyKGVuZClcblxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPFRpbWVHcmlkRXZlbnRcbiAgICAgICAgICBzdHlsZT17c3R5bGV9XG4gICAgICAgICAgZXZlbnQ9e2V2ZW50fVxuICAgICAgICAgIGxhYmVsPXtsYWJlbH1cbiAgICAgICAgICBrZXk9e2tleX1cbiAgICAgICAgICBnZXR0ZXJzPXtnZXR0ZXJzfVxuICAgICAgICAgIHJ0bD17cnRsfVxuICAgICAgICAgIGNvbXBvbmVudHM9e2NvbXBvbmVudHN9XG4gICAgICAgICAgY29udGludWVzUHJpb3I9e2NvbnRpbnVlc1ByaW9yfVxuICAgICAgICAgIGNvbnRpbnVlc0FmdGVyPXtjb250aW51ZXNBZnRlcn1cbiAgICAgICAgICBhY2Nlc3NvcnM9e2FjY2Vzc29yc31cbiAgICAgICAgICByZXNvdXJjZT17dGhpcy5wcm9wcy5yZXNvdXJjZX1cbiAgICAgICAgICBzZWxlY3RlZD17aXNTZWxlY3RlZChldmVudCwgc2VsZWN0ZWQpfVxuICAgICAgICAgIG9uQ2xpY2s9eyhlKSA9PlxuICAgICAgICAgICAgdGhpcy5fc2VsZWN0KFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgLi4uZXZlbnQsXG4gICAgICAgICAgICAgICAgLi4uKHRoaXMucHJvcHMucmVzb3VyY2UgJiYge1xuICAgICAgICAgICAgICAgICAgc291cmNlUmVzb3VyY2U6IHRoaXMucHJvcHMucmVzb3VyY2UsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLi4uKGlzQmFja2dyb3VuZEV2ZW50ICYmIHsgaXNCYWNrZ3JvdW5kRXZlbnQ6IHRydWUgfSksXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGVcbiAgICAgICAgICAgIClcbiAgICAgICAgICB9XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17KGUpID0+IHRoaXMuX2RvdWJsZUNsaWNrKGV2ZW50LCBlKX1cbiAgICAgICAgICBpc0JhY2tncm91bmRFdmVudD17aXNCYWNrZ3JvdW5kRXZlbnR9XG4gICAgICAgICAgb25LZXlQcmVzcz17KGUpID0+IHRoaXMuX2tleVByZXNzKGV2ZW50LCBlKX1cbiAgICAgICAgICByZXNpemFibGU9e3Jlc2l6YWJsZX1cbiAgICAgICAgLz5cbiAgICAgIClcbiAgICB9KVxuICB9XG5cbiAgX3NlbGVjdGFibGUgPSAoKSA9PiB7XG4gICAgbGV0IG5vZGUgPSB0aGlzLmNvbnRhaW5lclJlZi5jdXJyZW50XG4gICAgY29uc3QgeyBsb25nUHJlc3NUaHJlc2hvbGQsIGxvY2FsaXplciB9ID0gdGhpcy5wcm9wc1xuICAgIGxldCBzZWxlY3RvciA9ICh0aGlzLl9zZWxlY3RvciA9IG5ldyBTZWxlY3Rpb24oKCkgPT4gbm9kZSwge1xuICAgICAgbG9uZ1ByZXNzVGhyZXNob2xkOiBsb25nUHJlc3NUaHJlc2hvbGQsXG4gICAgfSkpXG5cbiAgICBsZXQgbWF5YmVTZWxlY3QgPSAoYm94KSA9PiB7XG4gICAgICBsZXQgb25TZWxlY3RpbmcgPSB0aGlzLnByb3BzLm9uU2VsZWN0aW5nXG4gICAgICBsZXQgY3VycmVudCA9IHRoaXMuc3RhdGUgfHwge31cbiAgICAgIGxldCBzdGF0ZSA9IHNlbGVjdGlvblN0YXRlKGJveClcbiAgICAgIGxldCB7IHN0YXJ0RGF0ZTogc3RhcnQsIGVuZERhdGU6IGVuZCB9ID0gc3RhdGVcblxuICAgICAgaWYgKG9uU2VsZWN0aW5nKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICAobG9jYWxpemVyLmVxKGN1cnJlbnQuc3RhcnREYXRlLCBzdGFydCwgJ21pbnV0ZXMnKSAmJlxuICAgICAgICAgICAgbG9jYWxpemVyLmVxKGN1cnJlbnQuZW5kRGF0ZSwgZW5kLCAnbWludXRlcycpKSB8fFxuICAgICAgICAgIG9uU2VsZWN0aW5nKHsgc3RhcnQsIGVuZCwgcmVzb3VyY2VJZDogdGhpcy5wcm9wcy5yZXNvdXJjZSB9KSA9PT0gZmFsc2VcbiAgICAgICAgKVxuICAgICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBpZiAoXG4gICAgICAgIHRoaXMuc3RhdGUuc3RhcnQgIT09IHN0YXRlLnN0YXJ0IHx8XG4gICAgICAgIHRoaXMuc3RhdGUuZW5kICE9PSBzdGF0ZS5lbmQgfHxcbiAgICAgICAgdGhpcy5zdGF0ZS5zZWxlY3RpbmcgIT09IHN0YXRlLnNlbGVjdGluZ1xuICAgICAgKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoc3RhdGUpXG4gICAgICB9XG4gICAgfVxuXG4gICAgbGV0IHNlbGVjdGlvblN0YXRlID0gKHBvaW50KSA9PiB7XG4gICAgICBsZXQgY3VycmVudFNsb3QgPSB0aGlzLnNsb3RNZXRyaWNzLmNsb3Nlc3RTbG90RnJvbVBvaW50KFxuICAgICAgICBwb2ludCxcbiAgICAgICAgZ2V0Qm91bmRzRm9yTm9kZShub2RlKVxuICAgICAgKVxuXG4gICAgICBpZiAoIXRoaXMuc3RhdGUuc2VsZWN0aW5nKSB7XG4gICAgICAgIHRoaXMuX2luaXRpYWxTbG90ID0gY3VycmVudFNsb3RcbiAgICAgIH1cblxuICAgICAgbGV0IGluaXRpYWxTbG90ID0gdGhpcy5faW5pdGlhbFNsb3RcbiAgICAgIGlmIChsb2NhbGl6ZXIubHRlKGluaXRpYWxTbG90LCBjdXJyZW50U2xvdCkpIHtcbiAgICAgICAgY3VycmVudFNsb3QgPSB0aGlzLnNsb3RNZXRyaWNzLm5leHRTbG90KGN1cnJlbnRTbG90KVxuICAgICAgfSBlbHNlIGlmIChsb2NhbGl6ZXIuZ3QoaW5pdGlhbFNsb3QsIGN1cnJlbnRTbG90KSkge1xuICAgICAgICBpbml0aWFsU2xvdCA9IHRoaXMuc2xvdE1ldHJpY3MubmV4dFNsb3QoaW5pdGlhbFNsb3QpXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHNlbGVjdFJhbmdlID0gdGhpcy5zbG90TWV0cmljcy5nZXRSYW5nZShcbiAgICAgICAgbG9jYWxpemVyLm1pbihpbml0aWFsU2xvdCwgY3VycmVudFNsb3QpLFxuICAgICAgICBsb2NhbGl6ZXIubWF4KGluaXRpYWxTbG90LCBjdXJyZW50U2xvdClcbiAgICAgIClcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc2VsZWN0UmFuZ2UsXG4gICAgICAgIHNlbGVjdGluZzogdHJ1ZSxcblxuICAgICAgICB0b3A6IGAke3NlbGVjdFJhbmdlLnRvcH0lYCxcbiAgICAgICAgaGVpZ2h0OiBgJHtzZWxlY3RSYW5nZS5oZWlnaHR9JWAsXG4gICAgICB9XG4gICAgfVxuXG4gICAgbGV0IHNlbGVjdG9yQ2xpY2tzSGFuZGxlciA9IChib3gsIGFjdGlvblR5cGUpID0+IHtcbiAgICAgIGlmICghaXNFdmVudCh0aGlzLmNvbnRhaW5lclJlZi5jdXJyZW50LCBib3gpKSB7XG4gICAgICAgIGNvbnN0IHsgc3RhcnREYXRlLCBlbmREYXRlIH0gPSBzZWxlY3Rpb25TdGF0ZShib3gpXG4gICAgICAgIHRoaXMuX3NlbGVjdFNsb3Qoe1xuICAgICAgICAgIHN0YXJ0RGF0ZSxcbiAgICAgICAgICBlbmREYXRlLFxuICAgICAgICAgIGFjdGlvbjogYWN0aW9uVHlwZSxcbiAgICAgICAgICBib3gsXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgICB0aGlzLnNldFN0YXRlKHsgc2VsZWN0aW5nOiBmYWxzZSB9KVxuICAgIH1cblxuICAgIHNlbGVjdG9yLm9uKCdzZWxlY3RpbmcnLCBtYXliZVNlbGVjdClcbiAgICBzZWxlY3Rvci5vbignc2VsZWN0U3RhcnQnLCBtYXliZVNlbGVjdClcblxuICAgIHNlbGVjdG9yLm9uKCdiZWZvcmVTZWxlY3QnLCAoYm94KSA9PiB7XG4gICAgICBpZiAodGhpcy5wcm9wcy5zZWxlY3RhYmxlICE9PSAnaWdub3JlRXZlbnRzJykgcmV0dXJuXG5cbiAgICAgIHJldHVybiAhaXNFdmVudCh0aGlzLmNvbnRhaW5lclJlZi5jdXJyZW50LCBib3gpXG4gICAgfSlcblxuICAgIHNlbGVjdG9yLm9uKCdjbGljaycsIChib3gpID0+IHNlbGVjdG9yQ2xpY2tzSGFuZGxlcihib3gsICdjbGljaycpKVxuXG4gICAgc2VsZWN0b3Iub24oJ2RvdWJsZUNsaWNrJywgKGJveCkgPT5cbiAgICAgIHNlbGVjdG9yQ2xpY2tzSGFuZGxlcihib3gsICdkb3VibGVDbGljaycpXG4gICAgKVxuXG4gICAgc2VsZWN0b3Iub24oJ3NlbGVjdCcsIChib3VuZHMpID0+IHtcbiAgICAgIGlmICh0aGlzLnN0YXRlLnNlbGVjdGluZykge1xuICAgICAgICB0aGlzLl9zZWxlY3RTbG90KHsgLi4udGhpcy5zdGF0ZSwgYWN0aW9uOiAnc2VsZWN0JywgYm91bmRzIH0pXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBzZWxlY3Rpbmc6IGZhbHNlIH0pXG4gICAgICB9XG4gICAgfSlcblxuICAgIHNlbGVjdG9yLm9uKCdyZXNldCcsICgpID0+IHtcbiAgICAgIGlmICh0aGlzLnN0YXRlLnNlbGVjdGluZykge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgc2VsZWN0aW5nOiBmYWxzZSB9KVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBfdGVhcmRvd25TZWxlY3RhYmxlID0gKCkgPT4ge1xuICAgIGlmICghdGhpcy5fc2VsZWN0b3IpIHJldHVyblxuICAgIHRoaXMuX3NlbGVjdG9yLnRlYXJkb3duKClcbiAgICB0aGlzLl9zZWxlY3RvciA9IG51bGxcbiAgfVxuXG4gIF9zZWxlY3RTbG90ID0gKHsgc3RhcnREYXRlLCBlbmREYXRlLCBhY3Rpb24sIGJvdW5kcywgYm94IH0pID0+IHtcbiAgICBsZXQgY3VycmVudCA9IHN0YXJ0RGF0ZSxcbiAgICAgIHNsb3RzID0gW11cblxuICAgIHdoaWxlICh0aGlzLnByb3BzLmxvY2FsaXplci5sdGUoY3VycmVudCwgZW5kRGF0ZSkpIHtcbiAgICAgIHNsb3RzLnB1c2goY3VycmVudClcbiAgICAgIGN1cnJlbnQgPSBuZXcgRGF0ZSgrY3VycmVudCArIHRoaXMucHJvcHMuc3RlcCAqIDYwICogMTAwMCkgLy8gdXNpbmcgRGF0ZSBlbnN1cmVzIG5vdCB0byBjcmVhdGUgYW4gZW5kbGVzcyBsb29wIHRoZSBkYXkgRFNUIGJlZ2luc1xuICAgIH1cblxuICAgIG5vdGlmeSh0aGlzLnByb3BzLm9uU2VsZWN0U2xvdCwge1xuICAgICAgc2xvdHMsXG4gICAgICBzdGFydDogc3RhcnREYXRlLFxuICAgICAgZW5kOiBlbmREYXRlLFxuICAgICAgcmVzb3VyY2VJZDogdGhpcy5wcm9wcy5yZXNvdXJjZSxcbiAgICAgIGFjdGlvbixcbiAgICAgIGJvdW5kcyxcbiAgICAgIGJveCxcbiAgICB9KVxuICB9XG5cbiAgX3NlbGVjdCA9ICguLi5hcmdzKSA9PiB7XG4gICAgbm90aWZ5KHRoaXMucHJvcHMub25TZWxlY3RFdmVudCwgYXJncylcbiAgfVxuXG4gIF9kb3VibGVDbGljayA9ICguLi5hcmdzKSA9PiB7XG4gICAgbm90aWZ5KHRoaXMucHJvcHMub25Eb3VibGVDbGlja0V2ZW50LCBhcmdzKVxuICB9XG5cbiAgX2tleVByZXNzID0gKC4uLmFyZ3MpID0+IHtcbiAgICBub3RpZnkodGhpcy5wcm9wcy5vbktleVByZXNzRXZlbnQsIGFyZ3MpXG4gIH1cbn1cblxuRGF5Q29sdW1uLnByb3BUeXBlcyA9IHtcbiAgZXZlbnRzOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgYmFja2dyb3VuZEV2ZW50czogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gIHN0ZXA6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgZGF0ZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSkuaXNSZXF1aXJlZCxcbiAgbWluOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKS5pc1JlcXVpcmVkLFxuICBtYXg6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLmlzUmVxdWlyZWQsXG4gIGdldE5vdzogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgaXNOb3c6IFByb3BUeXBlcy5ib29sLFxuXG4gIHJ0bDogUHJvcFR5cGVzLmJvb2wsXG4gIHJlc2l6YWJsZTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgYWNjZXNzb3JzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGNvbXBvbmVudHM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgZ2V0dGVyczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICBzaG93TXVsdGlEYXlUaW1lczogUHJvcFR5cGVzLmJvb2wsXG4gIGN1bHR1cmU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHRpbWVzbG90czogUHJvcFR5cGVzLm51bWJlcixcblxuICBzZWxlY3RlZDogUHJvcFR5cGVzLm9iamVjdCxcbiAgc2VsZWN0YWJsZTogUHJvcFR5cGVzLm9uZU9mKFt0cnVlLCBmYWxzZSwgJ2lnbm9yZUV2ZW50cyddKSxcbiAgZXZlbnRPZmZzZXQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIGxvbmdQcmVzc1RocmVzaG9sZDogUHJvcFR5cGVzLm51bWJlcixcblxuICBvblNlbGVjdGluZzogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0U2xvdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgb25TZWxlY3RFdmVudDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgb25Eb3VibGVDbGlja0V2ZW50OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBvbktleVByZXNzRXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgZHJhZ1Rocm91Z2hFdmVudHM6IFByb3BUeXBlcy5ib29sLFxuICByZXNvdXJjZTogUHJvcFR5cGVzLmFueSxcblxuICBkYXlMYXlvdXRBbGdvcml0aG06IERheUxheW91dEFsZ29yaXRobVByb3BUeXBlLFxufVxuXG5EYXlDb2x1bW4uZGVmYXVsdFByb3BzID0ge1xuICBkcmFnVGhyb3VnaEV2ZW50czogdHJ1ZSxcbiAgdGltZXNsb3RzOiAyLFxufVxuXG5leHBvcnQgZGVmYXVsdCBEYXlDb2x1bW5cbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuY29uc3QgUmVzb3VyY2VIZWFkZXIgPSAoeyBsYWJlbCB9KSA9PiB7XG4gIHJldHVybiA8UmVhY3QuRnJhZ21lbnQ+e2xhYmVsfTwvUmVhY3QuRnJhZ21lbnQ+XG59XG5cblJlc291cmNlSGVhZGVyLnByb3BUeXBlcyA9IHtcbiAgbGFiZWw6IFByb3BUeXBlcy5ub2RlLFxuICBpbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgcmVzb3VyY2U6IFByb3BUeXBlcy5vYmplY3QsXG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlc291cmNlSGVhZGVyXG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4J1xuaW1wb3J0IHNjcm9sbGJhclNpemUgZnJvbSAnZG9tLWhlbHBlcnMvc2Nyb2xsYmFyU2l6ZSdcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW1wb3J0IERhdGVDb250ZW50Um93IGZyb20gJy4vRGF0ZUNvbnRlbnRSb3cnXG5pbXBvcnQgSGVhZGVyIGZyb20gJy4vSGVhZGVyJ1xuaW1wb3J0IFJlc291cmNlSGVhZGVyIGZyb20gJy4vUmVzb3VyY2VIZWFkZXInXG5pbXBvcnQgeyBub3RpZnkgfSBmcm9tICcuL3V0aWxzL2hlbHBlcnMnXG5cbmNsYXNzIFRpbWVHcmlkSGVhZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgaGFuZGxlSGVhZGVyQ2xpY2sgPSAoZGF0ZSwgdmlldywgZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIG5vdGlmeSh0aGlzLnByb3BzLm9uRHJpbGxEb3duLCBbZGF0ZSwgdmlld10pXG4gIH1cblxuICByZW5kZXJIZWFkZXJDZWxscyhyYW5nZSkge1xuICAgIGxldCB7XG4gICAgICBsb2NhbGl6ZXIsXG4gICAgICBnZXREcmlsbGRvd25WaWV3LFxuICAgICAgZ2V0Tm93LFxuICAgICAgZ2V0dGVyczogeyBkYXlQcm9wIH0sXG4gICAgICBjb21wb25lbnRzOiB7IGhlYWRlcjogSGVhZGVyQ29tcG9uZW50ID0gSGVhZGVyIH0sXG4gICAgfSA9IHRoaXMucHJvcHNcblxuICAgIGNvbnN0IHRvZGF5ID0gZ2V0Tm93KClcblxuICAgIHJldHVybiByYW5nZS5tYXAoKGRhdGUsIGkpID0+IHtcbiAgICAgIGxldCBkcmlsbGRvd25WaWV3ID0gZ2V0RHJpbGxkb3duVmlldyhkYXRlKVxuICAgICAgbGV0IGxhYmVsID0gbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnZGF5Rm9ybWF0JylcblxuICAgICAgY29uc3QgeyBjbGFzc05hbWUsIHN0eWxlIH0gPSBkYXlQcm9wKGRhdGUpXG5cbiAgICAgIGxldCBoZWFkZXIgPSAoXG4gICAgICAgIDxIZWFkZXJDb21wb25lbnQgZGF0ZT17ZGF0ZX0gbGFiZWw9e2xhYmVsfSBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cbiAgICAgIClcblxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGtleT17aX1cbiAgICAgICAgICBzdHlsZT17c3R5bGV9XG4gICAgICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICAgICAgJ3JiYy1oZWFkZXInLFxuICAgICAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAgICAgbG9jYWxpemVyLmlzU2FtZURhdGUoZGF0ZSwgdG9kYXkpICYmICdyYmMtdG9kYXknXG4gICAgICAgICAgKX1cbiAgICAgICAgPlxuICAgICAgICAgIHtkcmlsbGRvd25WaWV3ID8gKFxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicmJjLWJ1dHRvbi1saW5rXCJcbiAgICAgICAgICAgICAgb25DbGljaz17KGUpID0+IHRoaXMuaGFuZGxlSGVhZGVyQ2xpY2soZGF0ZSwgZHJpbGxkb3duVmlldywgZSl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtoZWFkZXJ9XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPHNwYW4+e2hlYWRlcn08L3NwYW4+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApXG4gICAgfSlcbiAgfVxuICByZW5kZXJSb3cgPSAocmVzb3VyY2UpID0+IHtcbiAgICBsZXQge1xuICAgICAgZXZlbnRzLFxuICAgICAgcnRsLFxuICAgICAgc2VsZWN0YWJsZSxcbiAgICAgIGdldE5vdyxcbiAgICAgIHJhbmdlLFxuICAgICAgZ2V0dGVycyxcbiAgICAgIGxvY2FsaXplcixcbiAgICAgIGFjY2Vzc29ycyxcbiAgICAgIGNvbXBvbmVudHMsXG4gICAgICByZXNpemFibGUsXG4gICAgfSA9IHRoaXMucHJvcHNcblxuICAgIGNvbnN0IHJlc291cmNlSWQgPSBhY2Nlc3NvcnMucmVzb3VyY2VJZChyZXNvdXJjZSlcbiAgICBsZXQgZXZlbnRzVG9EaXNwbGF5ID0gcmVzb3VyY2VcbiAgICAgID8gZXZlbnRzLmZpbHRlcigoZXZlbnQpID0+IGFjY2Vzc29ycy5yZXNvdXJjZShldmVudCkgPT09IHJlc291cmNlSWQpXG4gICAgICA6IGV2ZW50c1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxEYXRlQ29udGVudFJvd1xuICAgICAgICBpc0FsbERheVxuICAgICAgICBydGw9e3J0bH1cbiAgICAgICAgZ2V0Tm93PXtnZXROb3d9XG4gICAgICAgIG1pblJvd3M9ezJ9XG4gICAgICAgIC8vIEFkZCArMSB0byBpbmNsdWRlIHNob3dNb3JlIGJ1dHRvbiByb3cgaW4gdGhlIHJvdyBsaW1pdFxuICAgICAgICBtYXhSb3dzPXt0aGlzLnByb3BzLmFsbERheU1heFJvd3MgKyAxfVxuICAgICAgICByYW5nZT17cmFuZ2V9XG4gICAgICAgIGV2ZW50cz17ZXZlbnRzVG9EaXNwbGF5fVxuICAgICAgICByZXNvdXJjZUlkPXtyZXNvdXJjZUlkfVxuICAgICAgICBjbGFzc05hbWU9XCJyYmMtYWxsZGF5LWNlbGxcIlxuICAgICAgICBzZWxlY3RhYmxlPXtzZWxlY3RhYmxlfVxuICAgICAgICBzZWxlY3RlZD17dGhpcy5wcm9wcy5zZWxlY3RlZH1cbiAgICAgICAgY29tcG9uZW50cz17Y29tcG9uZW50c31cbiAgICAgICAgYWNjZXNzb3JzPXthY2Nlc3NvcnN9XG4gICAgICAgIGdldHRlcnM9e2dldHRlcnN9XG4gICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICBvblNlbGVjdD17dGhpcy5wcm9wcy5vblNlbGVjdEV2ZW50fVxuICAgICAgICBvblNob3dNb3JlPXt0aGlzLnByb3BzLm9uU2hvd01vcmV9XG4gICAgICAgIG9uRG91YmxlQ2xpY2s9e3RoaXMucHJvcHMub25Eb3VibGVDbGlja0V2ZW50fVxuICAgICAgICBvbktleVByZXNzPXt0aGlzLnByb3BzLm9uS2V5UHJlc3NFdmVudH1cbiAgICAgICAgb25TZWxlY3RTbG90PXt0aGlzLnByb3BzLm9uU2VsZWN0U2xvdH1cbiAgICAgICAgbG9uZ1ByZXNzVGhyZXNob2xkPXt0aGlzLnByb3BzLmxvbmdQcmVzc1RocmVzaG9sZH1cbiAgICAgICAgcmVzaXphYmxlPXtyZXNpemFibGV9XG4gICAgICAvPlxuICAgIClcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBsZXQge1xuICAgICAgd2lkdGgsXG4gICAgICBydGwsXG4gICAgICByZXNvdXJjZXMsXG4gICAgICByYW5nZSxcbiAgICAgIGV2ZW50cyxcbiAgICAgIGdldE5vdyxcbiAgICAgIGFjY2Vzc29ycyxcbiAgICAgIHNlbGVjdGFibGUsXG4gICAgICBjb21wb25lbnRzLFxuICAgICAgZ2V0dGVycyxcbiAgICAgIHNjcm9sbFJlZixcbiAgICAgIGxvY2FsaXplcixcbiAgICAgIGlzT3ZlcmZsb3dpbmcsXG4gICAgICBjb21wb25lbnRzOiB7XG4gICAgICAgIHRpbWVHdXR0ZXJIZWFkZXI6IFRpbWVHdXR0ZXJIZWFkZXIsXG4gICAgICAgIHJlc291cmNlSGVhZGVyOiBSZXNvdXJjZUhlYWRlckNvbXBvbmVudCA9IFJlc291cmNlSGVhZGVyLFxuICAgICAgfSxcbiAgICAgIHJlc2l6YWJsZSxcbiAgICB9ID0gdGhpcy5wcm9wc1xuXG4gICAgbGV0IHN0eWxlID0ge31cbiAgICBpZiAoaXNPdmVyZmxvd2luZykge1xuICAgICAgc3R5bGVbcnRsID8gJ21hcmdpbkxlZnQnIDogJ21hcmdpblJpZ2h0J10gPSBgJHtzY3JvbGxiYXJTaXplKCkgLSAxfXB4YFxuICAgIH1cblxuICAgIGNvbnN0IGdyb3VwZWRFdmVudHMgPSByZXNvdXJjZXMuZ3JvdXBFdmVudHMoZXZlbnRzKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICByZWY9e3Njcm9sbFJlZn1cbiAgICAgICAgY2xhc3NOYW1lPXtjbHN4KCdyYmMtdGltZS1oZWFkZXInLCBpc092ZXJmbG93aW5nICYmICdyYmMtb3ZlcmZsb3dpbmcnKX1cbiAgICAgID5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzTmFtZT1cInJiYy1sYWJlbCByYmMtdGltZS1oZWFkZXItZ3V0dGVyXCJcbiAgICAgICAgICBzdHlsZT17eyB3aWR0aCwgbWluV2lkdGg6IHdpZHRoLCBtYXhXaWR0aDogd2lkdGggfX1cbiAgICAgICAgPlxuICAgICAgICAgIHtUaW1lR3V0dGVySGVhZGVyICYmIDxUaW1lR3V0dGVySGVhZGVyIC8+fVxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICB7cmVzb3VyY2VzLm1hcCgoW2lkLCByZXNvdXJjZV0sIGlkeCkgPT4gKFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmJjLXRpbWUtaGVhZGVyLWNvbnRlbnRcIiBrZXk9e2lkIHx8IGlkeH0+XG4gICAgICAgICAgICB7cmVzb3VyY2UgJiYgKFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJiYy1yb3cgcmJjLXJvdy1yZXNvdXJjZVwiIGtleT17YHJlc291cmNlXyR7aWR4fWB9PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmJjLWhlYWRlclwiPlxuICAgICAgICAgICAgICAgICAgPFJlc291cmNlSGVhZGVyQ29tcG9uZW50XG4gICAgICAgICAgICAgICAgICAgIGluZGV4PXtpZHh9XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsPXthY2Nlc3NvcnMucmVzb3VyY2VUaXRsZShyZXNvdXJjZSl9XG4gICAgICAgICAgICAgICAgICAgIHJlc291cmNlPXtyZXNvdXJjZX1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgcmJjLXJvdyByYmMtdGltZS1oZWFkZXItY2VsbCR7XG4gICAgICAgICAgICAgICAgcmFuZ2UubGVuZ3RoIDw9IDEgPyAnIHJiYy10aW1lLWhlYWRlci1jZWxsLXNpbmdsZS1kYXknIDogJydcbiAgICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt0aGlzLnJlbmRlckhlYWRlckNlbGxzKHJhbmdlKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPERhdGVDb250ZW50Um93XG4gICAgICAgICAgICAgIGlzQWxsRGF5XG4gICAgICAgICAgICAgIHJ0bD17cnRsfVxuICAgICAgICAgICAgICBnZXROb3c9e2dldE5vd31cbiAgICAgICAgICAgICAgbWluUm93cz17Mn1cbiAgICAgICAgICAgICAgLy8gQWRkICsxIHRvIGluY2x1ZGUgc2hvd01vcmUgYnV0dG9uIHJvdyBpbiB0aGUgcm93IGxpbWl0XG4gICAgICAgICAgICAgIG1heFJvd3M9e3RoaXMucHJvcHMuYWxsRGF5TWF4Um93cyArIDF9XG4gICAgICAgICAgICAgIHJhbmdlPXtyYW5nZX1cbiAgICAgICAgICAgICAgZXZlbnRzPXtncm91cGVkRXZlbnRzLmdldChpZCkgfHwgW119XG4gICAgICAgICAgICAgIHJlc291cmNlSWQ9e3Jlc291cmNlICYmIGlkfVxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJyYmMtYWxsZGF5LWNlbGxcIlxuICAgICAgICAgICAgICBzZWxlY3RhYmxlPXtzZWxlY3RhYmxlfVxuICAgICAgICAgICAgICBzZWxlY3RlZD17dGhpcy5wcm9wcy5zZWxlY3RlZH1cbiAgICAgICAgICAgICAgY29tcG9uZW50cz17Y29tcG9uZW50c31cbiAgICAgICAgICAgICAgYWNjZXNzb3JzPXthY2Nlc3NvcnN9XG4gICAgICAgICAgICAgIGdldHRlcnM9e2dldHRlcnN9XG4gICAgICAgICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICAgICAgICBvblNlbGVjdD17dGhpcy5wcm9wcy5vblNlbGVjdEV2ZW50fVxuICAgICAgICAgICAgICBvblNob3dNb3JlPXt0aGlzLnByb3BzLm9uU2hvd01vcmV9XG4gICAgICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e3RoaXMucHJvcHMub25Eb3VibGVDbGlja0V2ZW50fVxuICAgICAgICAgICAgICBvbktleURvd249e3RoaXMucHJvcHMub25LZXlQcmVzc0V2ZW50fVxuICAgICAgICAgICAgICBvblNlbGVjdFNsb3Q9e3RoaXMucHJvcHMub25TZWxlY3RTbG90fVxuICAgICAgICAgICAgICBsb25nUHJlc3NUaHJlc2hvbGQ9e3RoaXMucHJvcHMubG9uZ1ByZXNzVGhyZXNob2xkfVxuICAgICAgICAgICAgICByZXNpemFibGU9e3Jlc2l6YWJsZX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICkpfVxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG5cblRpbWVHcmlkSGVhZGVyLnByb3BUeXBlcyA9IHtcbiAgcmFuZ2U6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICBldmVudHM6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICByZXNvdXJjZXM6IFByb3BUeXBlcy5vYmplY3QsXG4gIGdldE5vdzogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgaXNPdmVyZmxvd2luZzogUHJvcFR5cGVzLmJvb2wsXG5cbiAgcnRsOiBQcm9wVHlwZXMuYm9vbCxcbiAgcmVzaXphYmxlOiBQcm9wVHlwZXMuYm9vbCxcbiAgd2lkdGg6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgbG9jYWxpemVyOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGFjY2Vzc29yczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBjb21wb25lbnRzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGdldHRlcnM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICBzZWxlY3RlZDogUHJvcFR5cGVzLm9iamVjdCxcbiAgc2VsZWN0YWJsZTogUHJvcFR5cGVzLm9uZU9mKFt0cnVlLCBmYWxzZSwgJ2lnbm9yZUV2ZW50cyddKSxcbiAgbG9uZ1ByZXNzVGhyZXNob2xkOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gIGFsbERheU1heFJvd3M6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgb25TZWxlY3RTbG90OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25TZWxlY3RFdmVudDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uRG91YmxlQ2xpY2tFdmVudDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uS2V5UHJlc3NFdmVudDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uRHJpbGxEb3duOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25TaG93TW9yZTogUHJvcFR5cGVzLmZ1bmMsXG4gIGdldERyaWxsZG93blZpZXc6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHNjcm9sbFJlZjogUHJvcFR5cGVzLmFueSxcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGltZUdyaWRIZWFkZXJcbiIsImltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnXG5pbXBvcnQgc2Nyb2xsYmFyU2l6ZSBmcm9tICdkb20taGVscGVycy9zY3JvbGxiYXJTaXplJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgRGF0ZUNvbnRlbnRSb3cgZnJvbSAnLi9EYXRlQ29udGVudFJvdydcbmltcG9ydCBIZWFkZXIgZnJvbSAnLi9IZWFkZXInXG5pbXBvcnQgUmVzb3VyY2VIZWFkZXIgZnJvbSAnLi9SZXNvdXJjZUhlYWRlcidcbmltcG9ydCB7IG5vdGlmeSB9IGZyb20gJy4vdXRpbHMvaGVscGVycydcblxuY2xhc3MgVGltZUdyaWRIZWFkZXJSZXNvdXJjZXMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBoYW5kbGVIZWFkZXJDbGljayA9IChkYXRlLCB2aWV3LCBlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgbm90aWZ5KHRoaXMucHJvcHMub25EcmlsbERvd24sIFtkYXRlLCB2aWV3XSlcbiAgfVxuXG4gIHJlbmRlckhlYWRlckNlbGxzKHJhbmdlKSB7XG4gICAgbGV0IHtcbiAgICAgIGxvY2FsaXplcixcbiAgICAgIGdldERyaWxsZG93blZpZXcsXG4gICAgICBnZXROb3csXG4gICAgICBnZXR0ZXJzOiB7IGRheVByb3AgfSxcbiAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgaGVhZGVyOiBIZWFkZXJDb21wb25lbnQgPSBIZWFkZXIsXG4gICAgICAgIHJlc291cmNlSGVhZGVyOiBSZXNvdXJjZUhlYWRlckNvbXBvbmVudCA9IFJlc291cmNlSGVhZGVyLFxuICAgICAgfSxcbiAgICAgIHJlc291cmNlcyxcbiAgICAgIGFjY2Vzc29ycyxcbiAgICAgIGV2ZW50cyxcbiAgICAgIHJ0bCxcbiAgICAgIHNlbGVjdGFibGUsXG4gICAgICBjb21wb25lbnRzLFxuICAgICAgZ2V0dGVycyxcbiAgICAgIHJlc2l6YWJsZSxcbiAgICB9ID0gdGhpcy5wcm9wc1xuXG4gICAgY29uc3QgdG9kYXkgPSBnZXROb3coKVxuXG4gICAgY29uc3QgZ3JvdXBlZEV2ZW50cyA9IHJlc291cmNlcy5ncm91cEV2ZW50cyhldmVudHMpXG5cbiAgICByZXR1cm4gcmFuZ2UubWFwKChkYXRlLCBpZHgpID0+IHtcbiAgICAgIGxldCBkcmlsbGRvd25WaWV3ID0gZ2V0RHJpbGxkb3duVmlldyhkYXRlKVxuICAgICAgbGV0IGxhYmVsID0gbG9jYWxpemVyLmZvcm1hdChkYXRlLCAnZGF5Rm9ybWF0JylcblxuICAgICAgY29uc3QgeyBjbGFzc05hbWUsIHN0eWxlIH0gPSBkYXlQcm9wKGRhdGUpXG5cbiAgICAgIGxldCBoZWFkZXIgPSAoXG4gICAgICAgIDxIZWFkZXJDb21wb25lbnQgZGF0ZT17ZGF0ZX0gbGFiZWw9e2xhYmVsfSBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gLz5cbiAgICAgIClcblxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGtleT17aWR4fVxuICAgICAgICAgIGNsYXNzTmFtZT1cInJiYy10aW1lLWhlYWRlci1jb250ZW50IHJiYy1yZXNvdXJjZS1ncm91cGluZ1wiXG4gICAgICAgID5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjbGFzc05hbWU9e2ByYmMtcm93IHJiYy10aW1lLWhlYWRlci1jZWxsJHtcbiAgICAgICAgICAgICAgcmFuZ2UubGVuZ3RoIDw9IDEgPyAnIHJiYy10aW1lLWhlYWRlci1jZWxsLXNpbmdsZS1kYXknIDogJydcbiAgICAgICAgICAgIH1gfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICAgICAgICBjbGFzc05hbWU9e2Nsc3goXG4gICAgICAgICAgICAgICAgJ3JiYy1oZWFkZXInLFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgICAgICAgICBsb2NhbGl6ZXIuaXNTYW1lRGF0ZShkYXRlLCB0b2RheSkgJiYgJ3JiYy10b2RheSdcbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge2RyaWxsZG93blZpZXcgPyAoXG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJyYmMtYnV0dG9uLWxpbmtcIlxuICAgICAgICAgICAgICAgICAgb25DbGljaz17KGUpID0+XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlSGVhZGVyQ2xpY2soZGF0ZSwgZHJpbGxkb3duVmlldywgZSlcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB7aGVhZGVyfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgIDxzcGFuPntoZWFkZXJ9PC9zcGFuPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJiYy1yb3dcIj5cbiAgICAgICAgICAgIHtyZXNvdXJjZXMubWFwKChbaWQsIHJlc291cmNlXSwgaWR4KSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAga2V5PXtgcmVzb3VyY2VfJHtpZH1fJHtpZHh9YH1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xzeChcbiAgICAgICAgICAgICAgICAgICAgJ3JiYy1oZWFkZXInLFxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgICAgICAgICAgICAgIGxvY2FsaXplci5pc1NhbWVEYXRlKGRhdGUsIHRvZGF5KSAmJiAncmJjLXRvZGF5J1xuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8UmVzb3VyY2VIZWFkZXJDb21wb25lbnRcbiAgICAgICAgICAgICAgICAgICAgaW5kZXg9e2lkeH1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2FjY2Vzc29ycy5yZXNvdXJjZVRpdGxlKHJlc291cmNlKX1cbiAgICAgICAgICAgICAgICAgICAgcmVzb3VyY2U9e3Jlc291cmNlfVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJiYy1yb3cgcmJjLW0tYi1uZWdhdGl2ZS0zIHJiYy1oLWZ1bGxcIj5cbiAgICAgICAgICAgIHtyZXNvdXJjZXMubWFwKChbaWQsIHJlc291cmNlXSwgaWR4KSA9PiB7XG4gICAgICAgICAgICAgIC8vIEZpbHRlciB0aGUgZ3JvdXBlZCBldmVudHMgYnkgdGhlIGN1cnJlbnQgZGF0ZS5cbiAgICAgICAgICAgICAgY29uc3QgZmlsdGVyZWRFdmVudHMgPSAoZ3JvdXBlZEV2ZW50cy5nZXQoaWQpIHx8IFtdKS5maWx0ZXIoXG4gICAgICAgICAgICAgICAgKGV2ZW50KSA9PlxuICAgICAgICAgICAgICAgICAgbG9jYWxpemVyLmlzU2FtZURhdGUoZXZlbnQuc3RhcnQsIGRhdGUpIHx8XG4gICAgICAgICAgICAgICAgICBsb2NhbGl6ZXIuaXNTYW1lRGF0ZShldmVudC5lbmQsIGRhdGUpXG4gICAgICAgICAgICAgIClcblxuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxEYXRlQ29udGVudFJvd1xuICAgICAgICAgICAgICAgICAga2V5PXtgcmVzb3VyY2VfJHtpZH1fJHtpZHh9YH1cbiAgICAgICAgICAgICAgICAgIGlzQWxsRGF5XG4gICAgICAgICAgICAgICAgICBydGw9e3J0bH1cbiAgICAgICAgICAgICAgICAgIGdldE5vdz17Z2V0Tm93fVxuICAgICAgICAgICAgICAgICAgbWluUm93cz17Mn1cbiAgICAgICAgICAgICAgICAgIG1heFJvd3M9e3RoaXMucHJvcHMuYWxsRGF5TWF4Um93cyArIDF9XG4gICAgICAgICAgICAgICAgICByYW5nZT17W2RhdGVdfSAvLyBUaGlzIGVuc3VyZXMgdGhhdCBvbmx5IHRoZSBzaW5nbGUgZGF5IGlzIHJlbmRlcmVkXG4gICAgICAgICAgICAgICAgICBldmVudHM9e2ZpbHRlcmVkRXZlbnRzfSAvLyBPbmx5IHNob3cgZmlsdGVyZWQgZXZlbnRzIGZvciB0aGlzIGRheS5cbiAgICAgICAgICAgICAgICAgIHJlc291cmNlSWQ9e3Jlc291cmNlICYmIGlkfVxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicmJjLWFsbGRheS1jZWxsXCJcbiAgICAgICAgICAgICAgICAgIHNlbGVjdGFibGU9e3NlbGVjdGFibGV9XG4gICAgICAgICAgICAgICAgICBzZWxlY3RlZD17dGhpcy5wcm9wcy5zZWxlY3RlZH1cbiAgICAgICAgICAgICAgICAgIGNvbXBvbmVudHM9e2NvbXBvbmVudHN9XG4gICAgICAgICAgICAgICAgICBhY2Nlc3NvcnM9e2FjY2Vzc29yc31cbiAgICAgICAgICAgICAgICAgIGdldHRlcnM9e2dldHRlcnN9XG4gICAgICAgICAgICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgICAgICAgICAgIG9uU2VsZWN0PXt0aGlzLnByb3BzLm9uU2VsZWN0RXZlbnR9XG4gICAgICAgICAgICAgICAgICBvblNob3dNb3JlPXt0aGlzLnByb3BzLm9uU2hvd01vcmV9XG4gICAgICAgICAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0aGlzLnByb3BzLm9uRG91YmxlQ2xpY2tFdmVudH1cbiAgICAgICAgICAgICAgICAgIG9uS2V5RG93bj17dGhpcy5wcm9wcy5vbktleVByZXNzRXZlbnR9XG4gICAgICAgICAgICAgICAgICBvblNlbGVjdFNsb3Q9e3RoaXMucHJvcHMub25TZWxlY3RTbG90fVxuICAgICAgICAgICAgICAgICAgbG9uZ1ByZXNzVGhyZXNob2xkPXt0aGlzLnByb3BzLmxvbmdQcmVzc1RocmVzaG9sZH1cbiAgICAgICAgICAgICAgICAgIHJlc2l6YWJsZT17cmVzaXphYmxlfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIClcbiAgICB9KVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGxldCB7XG4gICAgICB3aWR0aCxcbiAgICAgIHJ0bCxcbiAgICAgIHJhbmdlLFxuICAgICAgc2Nyb2xsUmVmLFxuICAgICAgaXNPdmVyZmxvd2luZyxcbiAgICAgIGNvbXBvbmVudHM6IHsgdGltZUd1dHRlckhlYWRlcjogVGltZUd1dHRlckhlYWRlciB9LFxuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICBsZXQgc3R5bGUgPSB7fVxuICAgIGlmIChpc092ZXJmbG93aW5nKSB7XG4gICAgICBzdHlsZVtydGwgPyAnbWFyZ2luTGVmdCcgOiAnbWFyZ2luUmlnaHQnXSA9IGAke3Njcm9sbGJhclNpemUoKSAtIDF9cHhgXG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICByZWY9e3Njcm9sbFJlZn1cbiAgICAgICAgY2xhc3NOYW1lPXtjbHN4KCdyYmMtdGltZS1oZWFkZXInLCBpc092ZXJmbG93aW5nICYmICdyYmMtb3ZlcmZsb3dpbmcnKX1cbiAgICAgID5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzTmFtZT1cInJiYy1sYWJlbCByYmMtdGltZS1oZWFkZXItZ3V0dGVyXCJcbiAgICAgICAgICBzdHlsZT17eyB3aWR0aCwgbWluV2lkdGg6IHdpZHRoLCBtYXhXaWR0aDogd2lkdGggfX1cbiAgICAgICAgPlxuICAgICAgICAgIHtUaW1lR3V0dGVySGVhZGVyICYmIDxUaW1lR3V0dGVySGVhZGVyIC8+fVxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICB7dGhpcy5yZW5kZXJIZWFkZXJDZWxscyhyYW5nZSl9XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cblxuVGltZUdyaWRIZWFkZXJSZXNvdXJjZXMucHJvcFR5cGVzID0ge1xuICByYW5nZTogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gIGV2ZW50czogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gIHJlc291cmNlczogUHJvcFR5cGVzLm9iamVjdCxcbiAgZ2V0Tm93OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBpc092ZXJmbG93aW5nOiBQcm9wVHlwZXMuYm9vbCxcblxuICBydGw6IFByb3BUeXBlcy5ib29sLFxuICByZXNpemFibGU6IFByb3BUeXBlcy5ib29sLFxuICB3aWR0aDogUHJvcFR5cGVzLm51bWJlcixcblxuICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgYWNjZXNzb3JzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGNvbXBvbmVudHM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgZ2V0dGVyczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuXG4gIHNlbGVjdGVkOiBQcm9wVHlwZXMub2JqZWN0LFxuICBzZWxlY3RhYmxlOiBQcm9wVHlwZXMub25lT2YoW3RydWUsIGZhbHNlLCAnaWdub3JlRXZlbnRzJ10pLFxuICBsb25nUHJlc3NUaHJlc2hvbGQ6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgYWxsRGF5TWF4Um93czogUHJvcFR5cGVzLm51bWJlcixcblxuICBvblNlbGVjdFNsb3Q6IFByb3BUeXBlcy5mdW5jLFxuICBvblNlbGVjdEV2ZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Eb3VibGVDbGlja0V2ZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25LZXlQcmVzc0V2ZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25EcmlsbERvd246IFByb3BUeXBlcy5mdW5jLFxuICBvblNob3dNb3JlOiBQcm9wVHlwZXMuZnVuYyxcbiAgZ2V0RHJpbGxkb3duVmlldzogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgc2Nyb2xsUmVmOiBQcm9wVHlwZXMuYW55LFxufVxuXG5leHBvcnQgZGVmYXVsdCBUaW1lR3JpZEhlYWRlclJlc291cmNlc1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuXG5pbXBvcnQgeyBnZXRTbG90TWV0cmljcyB9IGZyb20gJy4vdXRpbHMvVGltZVNsb3RzJ1xuaW1wb3J0IFRpbWVTbG90R3JvdXAgZnJvbSAnLi9UaW1lU2xvdEdyb3VwJ1xuXG4vKipcbiAqIFNpbmNlIHRoZSBUaW1lR3V0dGVyIG9ubHkgZGlzcGxheXMgdGhlICd0aW1lcycgb2Ygc2xvdHMgaW4gYSBkYXksIGFuZCBpcyBzZXBhcmF0ZVxuICogZnJvbSB0aGUgRGF5IENvbHVtbnMgdGhlbXNlbHZlcywgd2UgY2hlY2sgdG8gc2VlIGlmIHRoZSByYW5nZSBjb250YWlucyBhbiBvZmZzZXQgZGlmZmVyZW5jZVxuICogYW5kLCBpZiBzbywgY2hhbmdlIHRoZSBiZWdpbm5pbmcgYW5kIGVuZCAnZGF0ZScgYnkgYSBkYXkgdG8gcHJvcGVybHkgZGlzcGxheSB0aGUgc2xvdHMgdGltZXNcbiAqIHVzZWQuXG4gKi9cbmZ1bmN0aW9uIGFkanVzdEZvckRTVCh7IG1pbiwgbWF4LCBsb2NhbGl6ZXIgfSkge1xuICBpZiAobG9jYWxpemVyLmdldFRpbWV6b25lT2Zmc2V0KG1pbikgIT09IGxvY2FsaXplci5nZXRUaW1lem9uZU9mZnNldChtYXgpKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXJ0OiBsb2NhbGl6ZXIuYWRkKG1pbiwgLTEsICdkYXknKSxcbiAgICAgIGVuZDogbG9jYWxpemVyLmFkZChtYXgsIC0xLCAnZGF5JyksXG4gICAgfVxuICB9XG4gIHJldHVybiB7IHN0YXJ0OiBtaW4sIGVuZDogbWF4IH1cbn1cblxuY29uc3QgVGltZUd1dHRlciA9ICh7XG4gIG1pbixcbiAgbWF4LFxuICB0aW1lc2xvdHMsXG4gIHN0ZXAsXG4gIGxvY2FsaXplcixcbiAgZ2V0Tm93LFxuICByZXNvdXJjZSxcbiAgY29tcG9uZW50cyxcbiAgZ2V0dGVycyxcbiAgZ3V0dGVyUmVmLFxufSkgPT4ge1xuICBjb25zdCB7IHRpbWVHdXR0ZXJXcmFwcGVyOiBUaW1lR3V0dGVyV3JhcHBlciB9ID0gY29tcG9uZW50c1xuICBjb25zdCB7IHN0YXJ0LCBlbmQgfSA9IHVzZU1lbW8oXG4gICAgKCkgPT4gYWRqdXN0Rm9yRFNUKHsgbWluLCBtYXgsIGxvY2FsaXplciB9KSxcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXG4gICAgW21pbj8udG9JU09TdHJpbmcoKSwgbWF4Py50b0lTT1N0cmluZygpLCBsb2NhbGl6ZXJdXG4gIClcbiAgY29uc3QgW3Nsb3RNZXRyaWNzLCBzZXRTbG90TWV0cmljc10gPSB1c2VTdGF0ZShcbiAgICBnZXRTbG90TWV0cmljcyh7XG4gICAgICBtaW46IHN0YXJ0LFxuICAgICAgbWF4OiBlbmQsXG4gICAgICB0aW1lc2xvdHMsXG4gICAgICBzdGVwLFxuICAgICAgbG9jYWxpemVyLFxuICAgIH0pXG4gIClcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChzbG90TWV0cmljcykge1xuICAgICAgc2V0U2xvdE1ldHJpY3MoXG4gICAgICAgIHNsb3RNZXRyaWNzLnVwZGF0ZSh7XG4gICAgICAgICAgbWluOiBzdGFydCxcbiAgICAgICAgICBtYXg6IGVuZCxcbiAgICAgICAgICB0aW1lc2xvdHMsXG4gICAgICAgICAgc3RlcCxcbiAgICAgICAgICBsb2NhbGl6ZXIsXG4gICAgICAgIH0pXG4gICAgICApXG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdlIGRvbid0IHdhbnQgdGhpcyB0byBmaXJlIHdoZW4gc2xvdE1ldHJpY3MgaXMgdXBkYXRlZCBhcyBpdCB3b3VsZCByZWN1cnNpdmVseSBib21iXG4gICAgICovXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICB9LCBbc3RhcnQ/LnRvSVNPU3RyaW5nKCksIGVuZD8udG9JU09TdHJpbmcoKSwgdGltZXNsb3RzLCBzdGVwXSlcblxuICBjb25zdCByZW5kZXJTbG90ID0gdXNlQ2FsbGJhY2soXG4gICAgKHZhbHVlLCBpZHgpID0+IHtcbiAgICAgIGlmIChpZHgpIHJldHVybiBudWxsIC8vIGRvbid0IHJldHVybiB0aGUgZmlyc3QgKDApIGlkeFxuXG4gICAgICBjb25zdCBpc05vdyA9IHNsb3RNZXRyaWNzLmRhdGVJc0luR3JvdXAoZ2V0Tm93KCksIGlkeClcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT17Y2xzeCgncmJjLWxhYmVsJywgaXNOb3cgJiYgJ3JiYy1ub3cnKX0+XG4gICAgICAgICAge2xvY2FsaXplci5mb3JtYXQodmFsdWUsICd0aW1lR3V0dGVyRm9ybWF0Jyl9XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgIClcbiAgICB9LFxuICAgIFtzbG90TWV0cmljcywgbG9jYWxpemVyLCBnZXROb3ddXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxUaW1lR3V0dGVyV3JhcHBlciBzbG90TWV0cmljcz17c2xvdE1ldHJpY3N9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJyYmMtdGltZS1ndXR0ZXIgcmJjLXRpbWUtY29sdW1uXCIgcmVmPXtndXR0ZXJSZWZ9PlxuICAgICAgICB7c2xvdE1ldHJpY3MuZ3JvdXBzLm1hcCgoZ3JwLCBpZHgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFRpbWVTbG90R3JvdXBcbiAgICAgICAgICAgICAga2V5PXtpZHh9XG4gICAgICAgICAgICAgIGdyb3VwPXtncnB9XG4gICAgICAgICAgICAgIHJlc291cmNlPXtyZXNvdXJjZX1cbiAgICAgICAgICAgICAgY29tcG9uZW50cz17Y29tcG9uZW50c31cbiAgICAgICAgICAgICAgcmVuZGVyU2xvdD17cmVuZGVyU2xvdH1cbiAgICAgICAgICAgICAgZ2V0dGVycz17Z2V0dGVyc31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKVxuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvVGltZUd1dHRlcldyYXBwZXI+XG4gIClcbn1cblxuVGltZUd1dHRlci5wcm9wVHlwZXMgPSB7XG4gIG1pbjogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSkuaXNSZXF1aXJlZCxcbiAgbWF4OiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKS5pc1JlcXVpcmVkLFxuICB0aW1lc2xvdHM6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgc3RlcDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBnZXROb3c6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGNvbXBvbmVudHM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgZ2V0dGVyczogUHJvcFR5cGVzLm9iamVjdCxcblxuICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgcmVzb3VyY2U6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGd1dHRlclJlZjogUHJvcFR5cGVzLmFueSxcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIHJlZikgPT4gKFxuICA8VGltZUd1dHRlciBndXR0ZXJSZWY9e3JlZn0gey4uLnByb3BzfSAvPlxuKSlcbiIsImV4cG9ydCBjb25zdCBOT05FID0ge31cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUmVzb3VyY2VzKHJlc291cmNlcywgYWNjZXNzb3JzKSB7XG4gIHJldHVybiB7XG4gICAgbWFwKGZuKSB7XG4gICAgICBpZiAoIXJlc291cmNlcykgcmV0dXJuIFtmbihbTk9ORSwgbnVsbF0sIDApXVxuICAgICAgcmV0dXJuIHJlc291cmNlcy5tYXAoKHJlc291cmNlLCBpZHgpID0+XG4gICAgICAgIGZuKFthY2Nlc3NvcnMucmVzb3VyY2VJZChyZXNvdXJjZSksIHJlc291cmNlXSwgaWR4KVxuICAgICAgKVxuICAgIH0sXG5cbiAgICBncm91cEV2ZW50cyhldmVudHMpIHtcbiAgICAgIGNvbnN0IGV2ZW50c0J5UmVzb3VyY2UgPSBuZXcgTWFwKClcblxuICAgICAgaWYgKCFyZXNvdXJjZXMpIHtcbiAgICAgICAgLy8gUmV0dXJuIGFsbCBldmVudHMgaWYgcmVzb3VyY2VzIGFyZSBub3QgcHJvdmlkZWRcbiAgICAgICAgZXZlbnRzQnlSZXNvdXJjZS5zZXQoTk9ORSwgZXZlbnRzKVxuICAgICAgICByZXR1cm4gZXZlbnRzQnlSZXNvdXJjZVxuICAgICAgfVxuXG4gICAgICBldmVudHMuZm9yRWFjaCgoZXZlbnQpID0+IHtcbiAgICAgICAgY29uc3QgaWQgPSBhY2Nlc3NvcnMucmVzb3VyY2UoZXZlbnQpIHx8IE5PTkVcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoaWQpKSB7XG4gICAgICAgICAgaWQuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgbGV0IHJlc291cmNlRXZlbnRzID0gZXZlbnRzQnlSZXNvdXJjZS5nZXQoaXRlbSkgfHwgW11cbiAgICAgICAgICAgIHJlc291cmNlRXZlbnRzLnB1c2goZXZlbnQpXG4gICAgICAgICAgICBldmVudHNCeVJlc291cmNlLnNldChpdGVtLCByZXNvdXJjZUV2ZW50cylcbiAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxldCByZXNvdXJjZUV2ZW50cyA9IGV2ZW50c0J5UmVzb3VyY2UuZ2V0KGlkKSB8fCBbXVxuICAgICAgICAgIHJlc291cmNlRXZlbnRzLnB1c2goZXZlbnQpXG4gICAgICAgICAgZXZlbnRzQnlSZXNvdXJjZS5zZXQoaWQsIHJlc291cmNlRXZlbnRzKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgcmV0dXJuIGV2ZW50c0J5UmVzb3VyY2VcbiAgICB9LFxuICB9XG59XG4iLCJpbXBvcnQgY2xzeCBmcm9tICdjbHN4J1xuaW1wb3J0ICogYXMgYW5pbWF0aW9uRnJhbWUgZnJvbSAnZG9tLWhlbHBlcnMvYW5pbWF0aW9uRnJhbWUnXG5pbXBvcnQgbWVtb2l6ZSBmcm9tICdtZW1vaXplLW9uZSdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQsIGNyZWF0ZVJlZiB9IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgZ2V0UG9zaXRpb24gZnJvbSAnZG9tLWhlbHBlcnMvcG9zaXRpb24nXG5pbXBvcnQgZ2V0V2lkdGggZnJvbSAnZG9tLWhlbHBlcnMvd2lkdGgnXG5pbXBvcnQgRGF5Q29sdW1uIGZyb20gJy4vRGF5Q29sdW1uJ1xuaW1wb3J0IFBvcE92ZXJsYXkgZnJvbSAnLi9Qb3BPdmVybGF5J1xuaW1wb3J0IFRpbWVHcmlkSGVhZGVyIGZyb20gJy4vVGltZUdyaWRIZWFkZXInXG5pbXBvcnQgVGltZUdyaWRIZWFkZXJSZXNvdXJjZXMgZnJvbSAnLi9UaW1lR3JpZEhlYWRlclJlc291cmNlcydcbmltcG9ydCBUaW1lR3V0dGVyIGZyb20gJy4vVGltZUd1dHRlcidcbmltcG9ydCB7IHZpZXdzIH0gZnJvbSAnLi91dGlscy9jb25zdGFudHMnXG5pbXBvcnQgeyBpblJhbmdlLCBzb3J0RXZlbnRzIH0gZnJvbSAnLi91dGlscy9ldmVudExldmVscydcbmltcG9ydCB7IG5vdGlmeSB9IGZyb20gJy4vdXRpbHMvaGVscGVycydcbmltcG9ydCB7IERheUxheW91dEFsZ29yaXRobVByb3BUeXBlIH0gZnJvbSAnLi91dGlscy9wcm9wVHlwZXMnXG5pbXBvcnQgUmVzb3VyY2VzIGZyb20gJy4vdXRpbHMvUmVzb3VyY2VzJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUaW1lR3JpZCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpXG5cbiAgICB0aGlzLnN0YXRlID0geyBndXR0ZXJXaWR0aDogdW5kZWZpbmVkLCBpc092ZXJmbG93aW5nOiBudWxsIH1cblxuICAgIHRoaXMuc2Nyb2xsUmVmID0gUmVhY3QuY3JlYXRlUmVmKClcbiAgICB0aGlzLmNvbnRlbnRSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKVxuICAgIHRoaXMuY29udGFpbmVyUmVmID0gUmVhY3QuY3JlYXRlUmVmKClcbiAgICB0aGlzLl9zY3JvbGxSYXRpbyA9IG51bGxcbiAgICB0aGlzLmd1dHRlclJlZiA9IGNyZWF0ZVJlZigpXG4gIH1cblxuICBnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSgpIHtcbiAgICB0aGlzLmNoZWNrT3ZlcmZsb3coKVxuICAgIHJldHVybiBudWxsXG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy53aWR0aCA9PSBudWxsKSB7XG4gICAgICB0aGlzLm1lYXN1cmVHdXR0ZXIoKVxuICAgIH1cblxuICAgIHRoaXMuY2FsY3VsYXRlU2Nyb2xsKClcbiAgICB0aGlzLmFwcGx5U2Nyb2xsKClcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLmhhbmRsZVJlc2l6ZSlcbiAgfVxuXG4gIGhhbmRsZVNjcm9sbCA9IChlKSA9PiB7XG4gICAgaWYgKHRoaXMuc2Nyb2xsUmVmLmN1cnJlbnQpIHtcbiAgICAgIHRoaXMuc2Nyb2xsUmVmLmN1cnJlbnQuc2Nyb2xsTGVmdCA9IGUudGFyZ2V0LnNjcm9sbExlZnRcbiAgICB9XG4gIH1cblxuICBoYW5kbGVSZXNpemUgPSAoKSA9PiB7XG4gICAgYW5pbWF0aW9uRnJhbWUuY2FuY2VsKHRoaXMucmFmSGFuZGxlKVxuICAgIHRoaXMucmFmSGFuZGxlID0gYW5pbWF0aW9uRnJhbWUucmVxdWVzdCh0aGlzLmNoZWNrT3ZlcmZsb3cpXG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5oYW5kbGVSZXNpemUpXG5cbiAgICBhbmltYXRpb25GcmFtZS5jYW5jZWwodGhpcy5yYWZIYW5kbGUpXG5cbiAgICBpZiAodGhpcy5tZWFzdXJlR3V0dGVyQW5pbWF0aW9uRnJhbWVSZXF1ZXN0KSB7XG4gICAgICB3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy5tZWFzdXJlR3V0dGVyQW5pbWF0aW9uRnJhbWVSZXF1ZXN0KVxuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAgICB0aGlzLmFwcGx5U2Nyb2xsKClcbiAgfVxuXG4gIGhhbmRsZUtleVByZXNzRXZlbnQgPSAoLi4uYXJncykgPT4ge1xuICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24oKVxuICAgIG5vdGlmeSh0aGlzLnByb3BzLm9uS2V5UHJlc3NFdmVudCwgYXJncylcbiAgfVxuXG4gIGhhbmRsZVNlbGVjdEV2ZW50ID0gKC4uLmFyZ3MpID0+IHtcbiAgICAvL2NhbmNlbCBhbnkgcGVuZGluZyBzZWxlY3Rpb25zIHNvIG9ubHkgdGhlIGV2ZW50IGNsaWNrIGdvZXMgdGhyb3VnaC5cbiAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKClcbiAgICBub3RpZnkodGhpcy5wcm9wcy5vblNlbGVjdEV2ZW50LCBhcmdzKVxuICB9XG5cbiAgaGFuZGxlRG91YmxlQ2xpY2tFdmVudCA9ICguLi5hcmdzKSA9PiB7XG4gICAgdGhpcy5jbGVhclNlbGVjdGlvbigpXG4gICAgbm90aWZ5KHRoaXMucHJvcHMub25Eb3VibGVDbGlja0V2ZW50LCBhcmdzKVxuICB9XG5cbiAgaGFuZGxlU2hvd01vcmUgPSAoZXZlbnRzLCBkYXRlLCBjZWxsLCBzbG90LCB0YXJnZXQpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBwb3B1cCxcbiAgICAgIG9uRHJpbGxEb3duLFxuICAgICAgb25TaG93TW9yZSxcbiAgICAgIGdldERyaWxsZG93blZpZXcsXG4gICAgICBkb1Nob3dNb3JlRHJpbGxEb3duLFxuICAgIH0gPSB0aGlzLnByb3BzXG4gICAgdGhpcy5jbGVhclNlbGVjdGlvbigpXG5cbiAgICBpZiAocG9wdXApIHtcbiAgICAgIGxldCBwb3NpdGlvbiA9IGdldFBvc2l0aW9uKGNlbGwsIHRoaXMuY29udGFpbmVyUmVmLmN1cnJlbnQpXG5cbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBvdmVybGF5OiB7XG4gICAgICAgICAgZGF0ZSxcbiAgICAgICAgICBldmVudHMsXG4gICAgICAgICAgcG9zaXRpb246IHsgLi4ucG9zaXRpb24sIHdpZHRoOiAnMjAwcHgnIH0sXG4gICAgICAgICAgdGFyZ2V0LFxuICAgICAgICB9LFxuICAgICAgfSlcbiAgICB9IGVsc2UgaWYgKGRvU2hvd01vcmVEcmlsbERvd24pIHtcbiAgICAgIG5vdGlmeShvbkRyaWxsRG93biwgW2RhdGUsIGdldERyaWxsZG93blZpZXcoZGF0ZSkgfHwgdmlld3MuREFZXSlcbiAgICB9XG5cbiAgICBub3RpZnkob25TaG93TW9yZSwgW2V2ZW50cywgZGF0ZSwgc2xvdF0pXG4gIH1cblxuICBoYW5kbGVTZWxlY3RBbGxEYXlTbG90ID0gKHNsb3RzLCBzbG90SW5mbykgPT4ge1xuICAgIGNvbnN0IHsgb25TZWxlY3RTbG90IH0gPSB0aGlzLnByb3BzXG5cbiAgICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKHNsb3RzWzBdKVxuICAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKHNsb3RzW3Nsb3RzLmxlbmd0aCAtIDFdKVxuICAgIGVuZC5zZXREYXRlKHNsb3RzW3Nsb3RzLmxlbmd0aCAtIDFdLmdldERhdGUoKSArIDEpXG5cbiAgICBub3RpZnkob25TZWxlY3RTbG90LCB7XG4gICAgICBzbG90cyxcbiAgICAgIHN0YXJ0LFxuICAgICAgZW5kLFxuICAgICAgYWN0aW9uOiBzbG90SW5mby5hY3Rpb24sXG4gICAgICByZXNvdXJjZUlkOiBzbG90SW5mby5yZXNvdXJjZUlkLFxuICAgIH0pXG4gIH1cblxuICByZW5kZXJEYXlDb2x1bW4oXG4gICAgZGF0ZSxcbiAgICBpZCxcbiAgICByZXNvdXJjZSxcbiAgICBncm91cGVkRXZlbnRzLFxuICAgIGdyb3VwZWRCYWNrZ3JvdW5kRXZlbnRzLFxuICAgIGxvY2FsaXplcixcbiAgICBhY2Nlc3NvcnMsXG4gICAgY29tcG9uZW50cyxcbiAgICBkYXlMYXlvdXRBbGdvcml0aG0sXG4gICAgbm93XG4gICkge1xuICAgIGxldCB7IG1pbiwgbWF4IH0gPSB0aGlzLnByb3BzXG5cbiAgICBsZXQgZGF5c0V2ZW50cyA9IChncm91cGVkRXZlbnRzLmdldChpZCkgfHwgW10pLmZpbHRlcigoZXZlbnQpID0+XG4gICAgICBsb2NhbGl6ZXIuaW5SYW5nZShcbiAgICAgICAgZGF0ZSxcbiAgICAgICAgYWNjZXNzb3JzLnN0YXJ0KGV2ZW50KSxcbiAgICAgICAgYWNjZXNzb3JzLmVuZChldmVudCksXG4gICAgICAgICdkYXknXG4gICAgICApXG4gICAgKVxuXG4gICAgbGV0IGRheXNCYWNrZ3JvdW5kRXZlbnRzID0gKGdyb3VwZWRCYWNrZ3JvdW5kRXZlbnRzLmdldChpZCkgfHwgW10pLmZpbHRlcihcbiAgICAgIChldmVudCkgPT5cbiAgICAgICAgbG9jYWxpemVyLmluUmFuZ2UoXG4gICAgICAgICAgZGF0ZSxcbiAgICAgICAgICBhY2Nlc3NvcnMuc3RhcnQoZXZlbnQpLFxuICAgICAgICAgIGFjY2Vzc29ycy5lbmQoZXZlbnQpLFxuICAgICAgICAgICdkYXknXG4gICAgICAgIClcbiAgICApXG5cbiAgICByZXR1cm4gKFxuICAgICAgPERheUNvbHVtblxuICAgICAgICB7Li4udGhpcy5wcm9wc31cbiAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XG4gICAgICAgIG1pbj17bG9jYWxpemVyLm1lcmdlKGRhdGUsIG1pbil9XG4gICAgICAgIG1heD17bG9jYWxpemVyLm1lcmdlKGRhdGUsIG1heCl9XG4gICAgICAgIHJlc291cmNlPXtyZXNvdXJjZSAmJiBpZH1cbiAgICAgICAgY29tcG9uZW50cz17Y29tcG9uZW50c31cbiAgICAgICAgaXNOb3c9e2xvY2FsaXplci5pc1NhbWVEYXRlKGRhdGUsIG5vdyl9XG4gICAgICAgIGtleT17YCR7aWR9LSR7ZGF0ZX1gfVxuICAgICAgICBkYXRlPXtkYXRlfVxuICAgICAgICBldmVudHM9e2RheXNFdmVudHN9XG4gICAgICAgIGJhY2tncm91bmRFdmVudHM9e2RheXNCYWNrZ3JvdW5kRXZlbnRzfVxuICAgICAgICBkYXlMYXlvdXRBbGdvcml0aG09e2RheUxheW91dEFsZ29yaXRobX1cbiAgICAgIC8+XG4gICAgKVxuICB9XG5cbiAgcmVuZGVyUmVzb3VyY2VzRmlyc3QoXG4gICAgcmFuZ2UsXG4gICAgcmVzb3VyY2VzLFxuICAgIGdyb3VwZWRFdmVudHMsXG4gICAgZ3JvdXBlZEJhY2tncm91bmRFdmVudHMsXG4gICAgbG9jYWxpemVyLFxuICAgIGFjY2Vzc29ycyxcbiAgICBub3csXG4gICAgY29tcG9uZW50cyxcbiAgICBkYXlMYXlvdXRBbGdvcml0aG1cbiAgKSB7XG4gICAgcmV0dXJuIHJlc291cmNlcy5tYXAoKFtpZCwgcmVzb3VyY2VdKSA9PlxuICAgICAgcmFuZ2UubWFwKChkYXRlKSA9PlxuICAgICAgICB0aGlzLnJlbmRlckRheUNvbHVtbihcbiAgICAgICAgICBkYXRlLFxuICAgICAgICAgIGlkLFxuICAgICAgICAgIHJlc291cmNlLFxuICAgICAgICAgIGdyb3VwZWRFdmVudHMsXG4gICAgICAgICAgZ3JvdXBlZEJhY2tncm91bmRFdmVudHMsXG4gICAgICAgICAgbG9jYWxpemVyLFxuICAgICAgICAgIGFjY2Vzc29ycyxcbiAgICAgICAgICBjb21wb25lbnRzLFxuICAgICAgICAgIGRheUxheW91dEFsZ29yaXRobSxcbiAgICAgICAgICBub3dcbiAgICAgICAgKVxuICAgICAgKVxuICAgIClcbiAgfVxuXG4gIHJlbmRlclJhbmdlRmlyc3QoXG4gICAgcmFuZ2UsXG4gICAgcmVzb3VyY2VzLFxuICAgIGdyb3VwZWRFdmVudHMsXG4gICAgZ3JvdXBlZEJhY2tncm91bmRFdmVudHMsXG4gICAgbG9jYWxpemVyLFxuICAgIGFjY2Vzc29ycyxcbiAgICBub3csXG4gICAgY29tcG9uZW50cyxcbiAgICBkYXlMYXlvdXRBbGdvcml0aG1cbiAgKSB7XG4gICAgcmV0dXJuIHJhbmdlLm1hcCgoZGF0ZSkgPT4gKFxuICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIG1pbkhlaWdodDogJzEwMCUnLCBmbGV4OiAxIH19IGtleT17ZGF0ZX0+XG4gICAgICAgIHtyZXNvdXJjZXMubWFwKChbaWQsIHJlc291cmNlXSkgPT4gKFxuICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZmxleDogMSB9fSBrZXk9e2FjY2Vzc29ycy5yZXNvdXJjZUlkKHJlc291cmNlKX0+XG4gICAgICAgICAgICB7dGhpcy5yZW5kZXJEYXlDb2x1bW4oXG4gICAgICAgICAgICAgIGRhdGUsXG4gICAgICAgICAgICAgIGlkLFxuICAgICAgICAgICAgICByZXNvdXJjZSxcbiAgICAgICAgICAgICAgZ3JvdXBlZEV2ZW50cyxcbiAgICAgICAgICAgICAgZ3JvdXBlZEJhY2tncm91bmRFdmVudHMsXG4gICAgICAgICAgICAgIGxvY2FsaXplcixcbiAgICAgICAgICAgICAgYWNjZXNzb3JzLFxuICAgICAgICAgICAgICBjb21wb25lbnRzLFxuICAgICAgICAgICAgICBkYXlMYXlvdXRBbGdvcml0aG0sXG4gICAgICAgICAgICAgIG5vd1xuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKSl9XG4gICAgICA8L2Rpdj5cbiAgICApKVxuICB9XG5cbiAgcmVuZGVyRXZlbnRzKHJhbmdlLCBldmVudHMsIGJhY2tncm91bmRFdmVudHMsIG5vdykge1xuICAgIGxldCB7XG4gICAgICBhY2Nlc3NvcnMsXG4gICAgICBsb2NhbGl6ZXIsXG4gICAgICByZXNvdXJjZUdyb3VwaW5nTGF5b3V0LFxuICAgICAgY29tcG9uZW50cyxcbiAgICAgIGRheUxheW91dEFsZ29yaXRobSxcbiAgICB9ID0gdGhpcy5wcm9wc1xuXG4gICAgY29uc3QgcmVzb3VyY2VzID0gdGhpcy5tZW1vaXplZFJlc291cmNlcyh0aGlzLnByb3BzLnJlc291cmNlcywgYWNjZXNzb3JzKVxuICAgIGNvbnN0IGdyb3VwZWRFdmVudHMgPSByZXNvdXJjZXMuZ3JvdXBFdmVudHMoZXZlbnRzKVxuICAgIGNvbnN0IGdyb3VwZWRCYWNrZ3JvdW5kRXZlbnRzID0gcmVzb3VyY2VzLmdyb3VwRXZlbnRzKGJhY2tncm91bmRFdmVudHMpXG5cbiAgICBpZiAoIXJlc291cmNlR3JvdXBpbmdMYXlvdXQpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlbmRlclJlc291cmNlc0ZpcnN0KFxuICAgICAgICByYW5nZSxcbiAgICAgICAgcmVzb3VyY2VzLFxuICAgICAgICBncm91cGVkRXZlbnRzLFxuICAgICAgICBncm91cGVkQmFja2dyb3VuZEV2ZW50cyxcbiAgICAgICAgbG9jYWxpemVyLFxuICAgICAgICBhY2Nlc3NvcnMsXG4gICAgICAgIG5vdyxcbiAgICAgICAgY29tcG9uZW50cyxcbiAgICAgICAgZGF5TGF5b3V0QWxnb3JpdGhtXG4gICAgICApXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLnJlbmRlclJhbmdlRmlyc3QoXG4gICAgICAgIHJhbmdlLFxuICAgICAgICByZXNvdXJjZXMsXG4gICAgICAgIGdyb3VwZWRFdmVudHMsXG4gICAgICAgIGdyb3VwZWRCYWNrZ3JvdW5kRXZlbnRzLFxuICAgICAgICBsb2NhbGl6ZXIsXG4gICAgICAgIGFjY2Vzc29ycyxcbiAgICAgICAgbm93LFxuICAgICAgICBjb21wb25lbnRzLFxuICAgICAgICBkYXlMYXlvdXRBbGdvcml0aG1cbiAgICAgIClcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgbGV0IHtcbiAgICAgIGV2ZW50cyxcbiAgICAgIGJhY2tncm91bmRFdmVudHMsXG4gICAgICByYW5nZSxcbiAgICAgIHdpZHRoLFxuICAgICAgcnRsLFxuICAgICAgc2VsZWN0ZWQsXG4gICAgICBnZXROb3csXG4gICAgICByZXNvdXJjZXMsXG4gICAgICBjb21wb25lbnRzLFxuICAgICAgYWNjZXNzb3JzLFxuICAgICAgZ2V0dGVycyxcbiAgICAgIGxvY2FsaXplcixcbiAgICAgIG1pbixcbiAgICAgIG1heCxcbiAgICAgIHNob3dNdWx0aURheVRpbWVzLFxuICAgICAgbG9uZ1ByZXNzVGhyZXNob2xkLFxuICAgICAgcmVzaXphYmxlLFxuICAgICAgcmVzb3VyY2VHcm91cGluZ0xheW91dCxcbiAgICB9ID0gdGhpcy5wcm9wc1xuXG4gICAgd2lkdGggPSB3aWR0aCB8fCB0aGlzLnN0YXRlLmd1dHRlcldpZHRoXG5cbiAgICBsZXQgc3RhcnQgPSByYW5nZVswXSxcbiAgICAgIGVuZCA9IHJhbmdlW3JhbmdlLmxlbmd0aCAtIDFdXG5cbiAgICB0aGlzLnNsb3RzID0gcmFuZ2UubGVuZ3RoXG5cbiAgICBsZXQgYWxsRGF5RXZlbnRzID0gW10sXG4gICAgICByYW5nZUV2ZW50cyA9IFtdLFxuICAgICAgcmFuZ2VCYWNrZ3JvdW5kRXZlbnRzID0gW11cblxuICAgIGV2ZW50cy5mb3JFYWNoKChldmVudCkgPT4ge1xuICAgICAgaWYgKGluUmFuZ2UoZXZlbnQsIHN0YXJ0LCBlbmQsIGFjY2Vzc29ycywgbG9jYWxpemVyKSkge1xuICAgICAgICBsZXQgZVN0YXJ0ID0gYWNjZXNzb3JzLnN0YXJ0KGV2ZW50KSxcbiAgICAgICAgICBlRW5kID0gYWNjZXNzb3JzLmVuZChldmVudClcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgYWNjZXNzb3JzLmFsbERheShldmVudCkgfHxcbiAgICAgICAgICBsb2NhbGl6ZXIuc3RhcnRBbmRFbmRBcmVEYXRlT25seShlU3RhcnQsIGVFbmQpIHx8XG4gICAgICAgICAgKCFzaG93TXVsdGlEYXlUaW1lcyAmJiAhbG9jYWxpemVyLmlzU2FtZURhdGUoZVN0YXJ0LCBlRW5kKSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgYWxsRGF5RXZlbnRzLnB1c2goZXZlbnQpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmFuZ2VFdmVudHMucHVzaChldmVudClcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG5cbiAgICBiYWNrZ3JvdW5kRXZlbnRzLmZvckVhY2goKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoaW5SYW5nZShldmVudCwgc3RhcnQsIGVuZCwgYWNjZXNzb3JzLCBsb2NhbGl6ZXIpKSB7XG4gICAgICAgIHJhbmdlQmFja2dyb3VuZEV2ZW50cy5wdXNoKGV2ZW50KVxuICAgICAgfVxuICAgIH0pXG5cbiAgICBhbGxEYXlFdmVudHMuc29ydCgoYSwgYikgPT4gc29ydEV2ZW50cyhhLCBiLCBhY2Nlc3NvcnMsIGxvY2FsaXplcikpXG5cbiAgICBjb25zdCBoZWFkZXJQcm9wcyA9IHtcbiAgICAgIHJhbmdlLFxuICAgICAgZXZlbnRzOiBhbGxEYXlFdmVudHMsXG4gICAgICB3aWR0aCxcbiAgICAgIHJ0bCxcbiAgICAgIGdldE5vdyxcbiAgICAgIGxvY2FsaXplcixcbiAgICAgIHNlbGVjdGVkLFxuICAgICAgYWxsRGF5TWF4Um93czogdGhpcy5wcm9wcy5zaG93QWxsRXZlbnRzXG4gICAgICAgID8gSW5maW5pdHlcbiAgICAgICAgOiB0aGlzLnByb3BzLmFsbERheU1heFJvd3MgPz8gSW5maW5pdHksXG4gICAgICByZXNvdXJjZXM6IHRoaXMubWVtb2l6ZWRSZXNvdXJjZXMocmVzb3VyY2VzLCBhY2Nlc3NvcnMpLFxuICAgICAgc2VsZWN0YWJsZTogdGhpcy5wcm9wcy5zZWxlY3RhYmxlLFxuICAgICAgYWNjZXNzb3JzLFxuICAgICAgZ2V0dGVycyxcbiAgICAgIGNvbXBvbmVudHMsXG4gICAgICBzY3JvbGxSZWY6IHRoaXMuc2Nyb2xsUmVmLFxuICAgICAgaXNPdmVyZmxvd2luZzogdGhpcy5zdGF0ZS5pc092ZXJmbG93aW5nLFxuICAgICAgbG9uZ1ByZXNzVGhyZXNob2xkLFxuICAgICAgb25TZWxlY3RTbG90OiB0aGlzLmhhbmRsZVNlbGVjdEFsbERheVNsb3QsXG4gICAgICBvblNlbGVjdEV2ZW50OiB0aGlzLmhhbmRsZVNlbGVjdEV2ZW50LFxuICAgICAgb25TaG93TW9yZTogdGhpcy5oYW5kbGVTaG93TW9yZSxcbiAgICAgIG9uRG91YmxlQ2xpY2tFdmVudDogdGhpcy5wcm9wcy5vbkRvdWJsZUNsaWNrRXZlbnQsXG4gICAgICBvbktleVByZXNzRXZlbnQ6IHRoaXMucHJvcHMub25LZXlQcmVzc0V2ZW50LFxuICAgICAgb25EcmlsbERvd246IHRoaXMucHJvcHMub25EcmlsbERvd24sXG4gICAgICBnZXREcmlsbGRvd25WaWV3OiB0aGlzLnByb3BzLmdldERyaWxsZG93blZpZXcsXG4gICAgICByZXNpemFibGUsXG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICAgICdyYmMtdGltZS12aWV3JyxcbiAgICAgICAgICByZXNvdXJjZXMgJiYgJ3JiYy10aW1lLXZpZXctcmVzb3VyY2VzJ1xuICAgICAgICApfVxuICAgICAgICByZWY9e3RoaXMuY29udGFpbmVyUmVmfVxuICAgICAgPlxuICAgICAgICB7cmVzb3VyY2VzICYmIHJlc291cmNlcy5sZW5ndGggPiAxICYmIHJlc291cmNlR3JvdXBpbmdMYXlvdXQgPyAoXG4gICAgICAgICAgPFRpbWVHcmlkSGVhZGVyUmVzb3VyY2VzIHsuLi5oZWFkZXJQcm9wc30gLz5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8VGltZUdyaWRIZWFkZXIgey4uLmhlYWRlclByb3BzfSAvPlxuICAgICAgICApfVxuICAgICAgICB7dGhpcy5wcm9wcy5wb3B1cCAmJiB0aGlzLnJlbmRlck92ZXJsYXkoKX1cbiAgICAgICAgPGRpdlxuICAgICAgICAgIHJlZj17dGhpcy5jb250ZW50UmVmfVxuICAgICAgICAgIGNsYXNzTmFtZT1cInJiYy10aW1lLWNvbnRlbnRcIlxuICAgICAgICAgIG9uU2Nyb2xsPXt0aGlzLmhhbmRsZVNjcm9sbH1cbiAgICAgICAgPlxuICAgICAgICAgIDxUaW1lR3V0dGVyXG4gICAgICAgICAgICBkYXRlPXtzdGFydH1cbiAgICAgICAgICAgIHJlZj17dGhpcy5ndXR0ZXJSZWZ9XG4gICAgICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgICAgIG1pbj17bG9jYWxpemVyLm1lcmdlKHN0YXJ0LCBtaW4pfVxuICAgICAgICAgICAgbWF4PXtsb2NhbGl6ZXIubWVyZ2Uoc3RhcnQsIG1heCl9XG4gICAgICAgICAgICBzdGVwPXt0aGlzLnByb3BzLnN0ZXB9XG4gICAgICAgICAgICBnZXROb3c9e3RoaXMucHJvcHMuZ2V0Tm93fVxuICAgICAgICAgICAgdGltZXNsb3RzPXt0aGlzLnByb3BzLnRpbWVzbG90c31cbiAgICAgICAgICAgIGNvbXBvbmVudHM9e2NvbXBvbmVudHN9XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJyYmMtdGltZS1ndXR0ZXJcIlxuICAgICAgICAgICAgZ2V0dGVycz17Z2V0dGVyc31cbiAgICAgICAgICAvPlxuICAgICAgICAgIHt0aGlzLnJlbmRlckV2ZW50cyhcbiAgICAgICAgICAgIHJhbmdlLFxuICAgICAgICAgICAgcmFuZ2VFdmVudHMsXG4gICAgICAgICAgICByYW5nZUJhY2tncm91bmRFdmVudHMsXG4gICAgICAgICAgICBnZXROb3coKVxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG5cbiAgcmVuZGVyT3ZlcmxheSgpIHtcbiAgICBsZXQgb3ZlcmxheSA9IHRoaXMuc3RhdGU/Lm92ZXJsYXkgPz8ge31cbiAgICBsZXQge1xuICAgICAgYWNjZXNzb3JzLFxuICAgICAgbG9jYWxpemVyLFxuICAgICAgY29tcG9uZW50cyxcbiAgICAgIGdldHRlcnMsXG4gICAgICBzZWxlY3RlZCxcbiAgICAgIHBvcHVwT2Zmc2V0LFxuICAgICAgaGFuZGxlRHJhZ1N0YXJ0LFxuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICBjb25zdCBvbkhpZGUgPSAoKSA9PiB0aGlzLnNldFN0YXRlKHsgb3ZlcmxheTogbnVsbCB9KVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxQb3BPdmVybGF5XG4gICAgICAgIG92ZXJsYXk9e292ZXJsYXl9XG4gICAgICAgIGFjY2Vzc29ycz17YWNjZXNzb3JzfVxuICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgY29tcG9uZW50cz17Y29tcG9uZW50c31cbiAgICAgICAgZ2V0dGVycz17Z2V0dGVyc31cbiAgICAgICAgc2VsZWN0ZWQ9e3NlbGVjdGVkfVxuICAgICAgICBwb3B1cE9mZnNldD17cG9wdXBPZmZzZXR9XG4gICAgICAgIHJlZj17dGhpcy5jb250YWluZXJSZWZ9XG4gICAgICAgIGhhbmRsZUtleVByZXNzRXZlbnQ9e3RoaXMuaGFuZGxlS2V5UHJlc3NFdmVudH1cbiAgICAgICAgaGFuZGxlU2VsZWN0RXZlbnQ9e3RoaXMuaGFuZGxlU2VsZWN0RXZlbnR9XG4gICAgICAgIGhhbmRsZURvdWJsZUNsaWNrRXZlbnQ9e3RoaXMuaGFuZGxlRG91YmxlQ2xpY2tFdmVudH1cbiAgICAgICAgaGFuZGxlRHJhZ1N0YXJ0PXtoYW5kbGVEcmFnU3RhcnR9XG4gICAgICAgIHNob3c9eyEhb3ZlcmxheS5wb3NpdGlvbn1cbiAgICAgICAgb3ZlcmxheURpc3BsYXk9e3RoaXMub3ZlcmxheURpc3BsYXl9XG4gICAgICAgIG9uSGlkZT17b25IaWRlfVxuICAgICAgLz5cbiAgICApXG4gIH1cblxuICBvdmVybGF5RGlzcGxheSA9ICgpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIG92ZXJsYXk6IG51bGwsXG4gICAgfSlcbiAgfVxuXG4gIGNsZWFyU2VsZWN0aW9uKCkge1xuICAgIGNsZWFyVGltZW91dCh0aGlzLl9zZWxlY3RUaW1lcilcbiAgICB0aGlzLl9wZW5kaW5nU2VsZWN0aW9uID0gW11cbiAgfVxuXG4gIG1lYXN1cmVHdXR0ZXIoKSB7XG4gICAgaWYgKHRoaXMubWVhc3VyZUd1dHRlckFuaW1hdGlvbkZyYW1lUmVxdWVzdCkge1xuICAgICAgd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMubWVhc3VyZUd1dHRlckFuaW1hdGlvbkZyYW1lUmVxdWVzdClcbiAgICB9XG4gICAgdGhpcy5tZWFzdXJlR3V0dGVyQW5pbWF0aW9uRnJhbWVSZXF1ZXN0ID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShcbiAgICAgICgpID0+IHtcbiAgICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLmd1dHRlclJlZj8uY3VycmVudFxuICAgICAgICAgID8gZ2V0V2lkdGgodGhpcy5ndXR0ZXJSZWYuY3VycmVudClcbiAgICAgICAgICA6IHVuZGVmaW5lZFxuXG4gICAgICAgIGlmICh3aWR0aCAmJiB0aGlzLnN0YXRlLmd1dHRlcldpZHRoICE9PSB3aWR0aCkge1xuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBndXR0ZXJXaWR0aDogd2lkdGggfSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIGFwcGx5U2Nyb2xsKCkge1xuICAgIC8vIElmIGF1dG8tc2Nyb2xsIGlzIGRpc2FibGVkLCB3ZSBkb24ndCBhY3R1YWxseSBhcHBseSB0aGUgc2Nyb2xsXG4gICAgaWYgKHRoaXMuX3Njcm9sbFJhdGlvICE9IG51bGwgJiYgdGhpcy5wcm9wcy5lbmFibGVBdXRvU2Nyb2xsID09PSB0cnVlKSB7XG4gICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5jb250ZW50UmVmLmN1cnJlbnRcbiAgICAgIGNvbnRlbnQuc2Nyb2xsVG9wID0gY29udGVudC5zY3JvbGxIZWlnaHQgKiB0aGlzLl9zY3JvbGxSYXRpb1xuICAgICAgLy8gT25seSBkbyB0aGlzIG9uY2VcbiAgICAgIHRoaXMuX3Njcm9sbFJhdGlvID0gbnVsbFxuICAgIH1cbiAgfVxuXG4gIGNhbGN1bGF0ZVNjcm9sbChwcm9wcyA9IHRoaXMucHJvcHMpIHtcbiAgICBjb25zdCB7IG1pbiwgbWF4LCBzY3JvbGxUb1RpbWUsIGxvY2FsaXplciB9ID0gcHJvcHNcblxuICAgIGNvbnN0IGRpZmZNaWxsaXMgPSBsb2NhbGl6ZXIuZGlmZihcbiAgICAgIGxvY2FsaXplci5tZXJnZShzY3JvbGxUb1RpbWUsIG1pbiksXG4gICAgICBzY3JvbGxUb1RpbWUsXG4gICAgICAnbWlsbGlzZWNvbmRzJ1xuICAgIClcbiAgICBjb25zdCB0b3RhbE1pbGxpcyA9IGxvY2FsaXplci5kaWZmKG1pbiwgbWF4LCAnbWlsbGlzZWNvbmRzJylcblxuICAgIHRoaXMuX3Njcm9sbFJhdGlvID0gZGlmZk1pbGxpcyAvIHRvdGFsTWlsbGlzXG4gIH1cblxuICBjaGVja092ZXJmbG93ID0gKCkgPT4ge1xuICAgIGlmICh0aGlzLl91cGRhdGluZ092ZXJmbG93KSByZXR1cm5cblxuICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLmNvbnRlbnRSZWYuY3VycmVudFxuXG4gICAgaWYgKCFjb250ZW50Py5zY3JvbGxIZWlnaHQpIHJldHVyblxuICAgIGxldCBpc092ZXJmbG93aW5nID0gY29udGVudC5zY3JvbGxIZWlnaHQgPiBjb250ZW50LmNsaWVudEhlaWdodFxuXG4gICAgaWYgKHRoaXMuc3RhdGUuaXNPdmVyZmxvd2luZyAhPT0gaXNPdmVyZmxvd2luZykge1xuICAgICAgdGhpcy5fdXBkYXRpbmdPdmVyZmxvdyA9IHRydWVcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBpc092ZXJmbG93aW5nIH0sICgpID0+IHtcbiAgICAgICAgdGhpcy5fdXBkYXRpbmdPdmVyZmxvdyA9IGZhbHNlXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIG1lbW9pemVkUmVzb3VyY2VzID0gbWVtb2l6ZSgocmVzb3VyY2VzLCBhY2Nlc3NvcnMpID0+XG4gICAgUmVzb3VyY2VzKHJlc291cmNlcywgYWNjZXNzb3JzKVxuICApXG59XG5cblRpbWVHcmlkLnByb3BUeXBlcyA9IHtcbiAgZXZlbnRzOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgYmFja2dyb3VuZEV2ZW50czogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gIHJlc291cmNlczogUHJvcFR5cGVzLmFycmF5LFxuXG4gIHJlc291cmNlR3JvdXBpbmdMYXlvdXQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIHN0ZXA6IFByb3BUeXBlcy5udW1iZXIsXG4gIHRpbWVzbG90czogUHJvcFR5cGVzLm51bWJlcixcbiAgcmFuZ2U6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpKSxcbiAgbWluOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKS5pc1JlcXVpcmVkLFxuICBtYXg6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLmlzUmVxdWlyZWQsXG4gIGdldE5vdzogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcblxuICBzY3JvbGxUb1RpbWU6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLmlzUmVxdWlyZWQsXG4gIGVuYWJsZUF1dG9TY3JvbGw6IFByb3BUeXBlcy5ib29sLFxuICBzaG93TXVsdGlEYXlUaW1lczogUHJvcFR5cGVzLmJvb2wsXG5cbiAgcnRsOiBQcm9wVHlwZXMuYm9vbCxcbiAgcmVzaXphYmxlOiBQcm9wVHlwZXMuYm9vbCxcbiAgd2lkdGg6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgYWNjZXNzb3JzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGNvbXBvbmVudHM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgZ2V0dGVyczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICBhbGxEYXlNYXhSb3dzOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gIHNlbGVjdGVkOiBQcm9wVHlwZXMub2JqZWN0LFxuICBzZWxlY3RhYmxlOiBQcm9wVHlwZXMub25lT2YoW3RydWUsIGZhbHNlLCAnaWdub3JlRXZlbnRzJ10pLFxuICBsb25nUHJlc3NUaHJlc2hvbGQ6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgb25OYXZpZ2F0ZTogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0U2xvdDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0RW5kOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25TZWxlY3RTdGFydDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0RXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICBvblNob3dNb3JlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Eb3VibGVDbGlja0V2ZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25LZXlQcmVzc0V2ZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25EcmlsbERvd246IFByb3BUeXBlcy5mdW5jLFxuICBnZXREcmlsbGRvd25WaWV3OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuXG4gIGRheUxheW91dEFsZ29yaXRobTogRGF5TGF5b3V0QWxnb3JpdGhtUHJvcFR5cGUsXG5cbiAgc2hvd0FsbEV2ZW50czogUHJvcFR5cGVzLmJvb2wsXG4gIGRvU2hvd01vcmVEcmlsbERvd246IFByb3BUeXBlcy5ib29sLFxuXG4gIHBvcHVwOiBQcm9wVHlwZXMuYm9vbCxcbiAgaGFuZGxlRHJhZ1N0YXJ0OiBQcm9wVHlwZXMuZnVuYyxcblxuICBwb3B1cE9mZnNldDogUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgUHJvcFR5cGVzLm51bWJlcixcbiAgICBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgeDogUHJvcFR5cGVzLm51bWJlcixcbiAgICAgIHk6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgfSksXG4gIF0pLFxufVxuXG5UaW1lR3JpZC5kZWZhdWx0UHJvcHMgPSB7XG4gIHN0ZXA6IDMwLFxuICB0aW1lc2xvdHM6IDIsXG4gIC8vIFRvIGJlIGNvbXBhdGlibGUgd2l0aCBvbGQgdmVyc2lvbnMsIGRlZmF1bHQgYXMgYGZhbHNlYC5cbiAgcmVzb3VyY2VHcm91cGluZ0xheW91dDogZmFsc2UsXG59XG4iLCJpbXBvcnQgY2xzeCBmcm9tICdjbHN4J1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5mdW5jdGlvbiBzdHJpbmdpZnlQZXJjZW50KHYpIHtcbiAgcmV0dXJuIHR5cGVvZiB2ID09PSAnc3RyaW5nJyA/IHYgOiB2ICsgJyUnXG59XG5cbi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L3Byb3AtdHlwZXMgKi9cbmZ1bmN0aW9uIFRpbWVHcmlkRXZlbnQocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgIHN0eWxlLFxuICAgIGNsYXNzTmFtZSxcbiAgICBldmVudCxcbiAgICBhY2Nlc3NvcnMsXG4gICAgcnRsLFxuICAgIHNlbGVjdGVkLFxuICAgIGxhYmVsLFxuICAgIGNvbnRpbnVlc1ByaW9yLFxuICAgIGNvbnRpbnVlc0FmdGVyLFxuICAgIGdldHRlcnMsXG4gICAgb25DbGljayxcbiAgICBvbkRvdWJsZUNsaWNrLFxuICAgIGlzQmFja2dyb3VuZEV2ZW50LFxuICAgIG9uS2V5UHJlc3MsXG4gICAgY29tcG9uZW50czogeyBldmVudDogRXZlbnQsIGV2ZW50V3JhcHBlcjogRXZlbnRXcmFwcGVyIH0sXG4gIH0gPSBwcm9wc1xuICBsZXQgdGl0bGUgPSBhY2Nlc3NvcnMudGl0bGUoZXZlbnQpXG4gIGxldCB0b29sdGlwID0gYWNjZXNzb3JzLnRvb2x0aXAoZXZlbnQpXG4gIGxldCBlbmQgPSBhY2Nlc3NvcnMuZW5kKGV2ZW50KVxuICBsZXQgc3RhcnQgPSBhY2Nlc3NvcnMuc3RhcnQoZXZlbnQpXG5cbiAgbGV0IHVzZXJQcm9wcyA9IGdldHRlcnMuZXZlbnRQcm9wKGV2ZW50LCBzdGFydCwgZW5kLCBzZWxlY3RlZClcblxuICBjb25zdCBpbm5lciA9IFtcbiAgICA8ZGl2IGtleT1cIjFcIiBjbGFzc05hbWU9XCJyYmMtZXZlbnQtbGFiZWxcIj5cbiAgICAgIHtsYWJlbH1cbiAgICA8L2Rpdj4sXG4gICAgPGRpdiBrZXk9XCIyXCIgY2xhc3NOYW1lPVwicmJjLWV2ZW50LWNvbnRlbnRcIj5cbiAgICAgIHtFdmVudCA/IDxFdmVudCBldmVudD17ZXZlbnR9IHRpdGxlPXt0aXRsZX0gLz4gOiB0aXRsZX1cbiAgICA8L2Rpdj4sXG4gIF1cblxuICBjb25zdCB7IGhlaWdodCwgdG9wLCB3aWR0aCwgeE9mZnNldCB9ID0gc3R5bGVcblxuICBjb25zdCBldmVudFN0eWxlID0ge1xuICAgIC4uLnVzZXJQcm9wcy5zdHlsZSxcbiAgICB0b3A6IHN0cmluZ2lmeVBlcmNlbnQodG9wKSxcbiAgICBoZWlnaHQ6IHN0cmluZ2lmeVBlcmNlbnQoaGVpZ2h0KSxcbiAgICB3aWR0aDogc3RyaW5naWZ5UGVyY2VudCh3aWR0aCksXG4gICAgW3J0bCA/ICdyaWdodCcgOiAnbGVmdCddOiBzdHJpbmdpZnlQZXJjZW50KHhPZmZzZXQpLFxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8RXZlbnRXcmFwcGVyIHR5cGU9XCJ0aW1lXCIgey4uLnByb3BzfT5cbiAgICAgIDxkaXZcbiAgICAgICAgcm9sZT1cImJ1dHRvblwiXG4gICAgICAgIHRhYkluZGV4PXswfVxuICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICBvbkRvdWJsZUNsaWNrPXtvbkRvdWJsZUNsaWNrfVxuICAgICAgICBzdHlsZT17ZXZlbnRTdHlsZX1cbiAgICAgICAgb25LZXlEb3duPXtvbktleVByZXNzfVxuICAgICAgICB0aXRsZT17XG4gICAgICAgICAgdG9vbHRpcFxuICAgICAgICAgICAgPyAodHlwZW9mIGxhYmVsID09PSAnc3RyaW5nJyA/IGxhYmVsICsgJzogJyA6ICcnKSArIHRvb2x0aXBcbiAgICAgICAgICAgIDogdW5kZWZpbmVkXG4gICAgICAgIH1cbiAgICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICAgIGlzQmFja2dyb3VuZEV2ZW50ID8gJ3JiYy1iYWNrZ3JvdW5kLWV2ZW50JyA6ICdyYmMtZXZlbnQnLFxuICAgICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgICB1c2VyUHJvcHMuY2xhc3NOYW1lLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgICdyYmMtc2VsZWN0ZWQnOiBzZWxlY3RlZCxcbiAgICAgICAgICAgICdyYmMtZXZlbnQtY29udGludWVzLWVhcmxpZXInOiBjb250aW51ZXNQcmlvcixcbiAgICAgICAgICAgICdyYmMtZXZlbnQtY29udGludWVzLWxhdGVyJzogY29udGludWVzQWZ0ZXIsXG4gICAgICAgICAgfVxuICAgICAgICApfVxuICAgICAgPlxuICAgICAgICB7aW5uZXJ9XG4gICAgICA8L2Rpdj5cbiAgICA8L0V2ZW50V3JhcHBlcj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaW1lR3JpZEV2ZW50XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmV4cG9ydCBjb25zdCBEbkRDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCgpXG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4J1xuaW1wb3J0IHsgYWNjZXNzb3IgYXMgZ2V0IH0gZnJvbSAnLi4vLi4vdXRpbHMvYWNjZXNzb3JzJ1xuaW1wb3J0IHsgRG5EQ29udGV4dCB9IGZyb20gJy4vRG5EQ29udGV4dCdcblxuY2xhc3MgRXZlbnRXcmFwcGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGljIGNvbnRleHRUeXBlID0gRG5EQ29udGV4dFxuXG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgdHlwZTogUHJvcFR5cGVzLm9uZU9mKFsnZGF0ZScsICd0aW1lJ10pLFxuICAgIGV2ZW50OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG5cbiAgICBkcmFnZ2FibGU6IFByb3BUeXBlcy5ib29sLFxuICAgIGFsbERheTogUHJvcFR5cGVzLmJvb2wsXG4gICAgaXNSb3c6IFByb3BUeXBlcy5ib29sLFxuICAgIGNvbnRpbnVlc1ByaW9yOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBjb250aW51ZXNBZnRlcjogUHJvcFR5cGVzLmJvb2wsXG4gICAgaXNEcmFnZ2luZzogUHJvcFR5cGVzLmJvb2wsXG4gICAgaXNSZXNpemluZzogUHJvcFR5cGVzLmJvb2wsXG4gICAgcmVzb3VyY2U6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgcmVzaXphYmxlOiBQcm9wVHlwZXMuYm9vbCxcbiAgfVxuXG4gIGhhbmRsZVJlc2l6ZVVwID0gKGUpID0+IHtcbiAgICBpZiAoZS5idXR0b24gIT09IDApIHJldHVyblxuICAgIHRoaXMuY29udGV4dC5kcmFnZ2FibGUub25CZWdpbkFjdGlvbih0aGlzLnByb3BzLmV2ZW50LCAncmVzaXplJywgJ1VQJylcbiAgfVxuICBoYW5kbGVSZXNpemVEb3duID0gKGUpID0+IHtcbiAgICBpZiAoZS5idXR0b24gIT09IDApIHJldHVyblxuICAgIHRoaXMuY29udGV4dC5kcmFnZ2FibGUub25CZWdpbkFjdGlvbih0aGlzLnByb3BzLmV2ZW50LCAncmVzaXplJywgJ0RPV04nKVxuICB9XG4gIGhhbmRsZVJlc2l6ZUxlZnQgPSAoZSkgPT4ge1xuICAgIGlmIChlLmJ1dHRvbiAhPT0gMCkgcmV0dXJuXG4gICAgdGhpcy5jb250ZXh0LmRyYWdnYWJsZS5vbkJlZ2luQWN0aW9uKHRoaXMucHJvcHMuZXZlbnQsICdyZXNpemUnLCAnTEVGVCcpXG4gIH1cbiAgaGFuZGxlUmVzaXplUmlnaHQgPSAoZSkgPT4ge1xuICAgIGlmIChlLmJ1dHRvbiAhPT0gMCkgcmV0dXJuXG4gICAgdGhpcy5jb250ZXh0LmRyYWdnYWJsZS5vbkJlZ2luQWN0aW9uKHRoaXMucHJvcHMuZXZlbnQsICdyZXNpemUnLCAnUklHSFQnKVxuICB9XG4gIGhhbmRsZVN0YXJ0RHJhZ2dpbmcgPSAoZSkgPT4ge1xuICAgIGlmIChlLmJ1dHRvbiAhPT0gMCkgcmV0dXJuXG4gICAgLy8gaGFjazogYmVjYXVzZSBvZiB0aGUgd2F5IHRoZSBhbmNob3JzIGFyZSBhcnJhbmdlZCBpbiB0aGUgRE9NLCByZXNpemVcbiAgICAvLyBhbmNob3IgZXZlbnRzIHdpbGwgYnViYmxlIHVwIHRvIHRoZSBtb3ZlIGFuY2hvciBsaXN0ZW5lci4gRG9uJ3Qgc3RhcnRcbiAgICAvLyBtb3ZlIG9wZXJhdGlvbnMgd2hlbiB3ZSdyZSBvbiBhIHJlc2l6ZSBhbmNob3IuXG4gICAgY29uc3QgaXNSZXNpemVIYW5kbGUgPSBlLnRhcmdldFxuICAgICAgLmdldEF0dHJpYnV0ZSgnY2xhc3MnKVxuICAgICAgPy5pbmNsdWRlcygncmJjLWFkZG9ucy1kbmQtcmVzaXplJylcbiAgICBpZiAoIWlzUmVzaXplSGFuZGxlKSB7XG4gICAgICBsZXQgZXh0ZW5kZWRFdmVudCA9IHsuLi50aGlzLnByb3BzLmV2ZW50fVxuICAgICAgZXh0ZW5kZWRFdmVudC5zb3VyY2VSZXNvdXJjZSA9IHRoaXMucHJvcHMucmVzb3VyY2VcbiAgICAgIHRoaXMuY29udGV4dC5kcmFnZ2FibGUub25CZWdpbkFjdGlvbih0aGlzLnByb3BzLmV2ZW50LCAnbW92ZScpXG4gICAgfVxuICB9XG5cbiAgcmVuZGVyQW5jaG9yKGRpcmVjdGlvbikge1xuICAgIGNvbnN0IGNscyA9IGRpcmVjdGlvbiA9PT0gJ1VwJyB8fCBkaXJlY3Rpb24gPT09ICdEb3duJyA/ICducycgOiAnZXcnXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPXtgcmJjLWFkZG9ucy1kbmQtcmVzaXplLSR7Y2xzfS1hbmNob3JgfVxuICAgICAgICBvbk1vdXNlRG93bj17dGhpc1tgaGFuZGxlUmVzaXplJHtkaXJlY3Rpb259YF19XG4gICAgICA+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgcmJjLWFkZG9ucy1kbmQtcmVzaXplLSR7Y2xzfS1pY29uYH0gLz5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGV2ZW50LCB0eXBlLCBjb250aW51ZXNQcmlvciwgY29udGludWVzQWZ0ZXIsIHJlc2l6YWJsZSB9ID1cbiAgICAgIHRoaXMucHJvcHNcblxuICAgIGxldCB7IGNoaWxkcmVuIH0gPSB0aGlzLnByb3BzXG5cbiAgICBpZiAoZXZlbnQuX19pc1ByZXZpZXcpXG4gICAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkcmVuLCB7XG4gICAgICAgIGNsYXNzTmFtZTogY2xzeChcbiAgICAgICAgICBjaGlsZHJlbi5wcm9wcy5jbGFzc05hbWUsXG4gICAgICAgICAgJ3JiYy1hZGRvbnMtZG5kLWRyYWctcHJldmlldydcbiAgICAgICAgKSxcbiAgICAgIH0pXG5cbiAgICBjb25zdCB7IGRyYWdnYWJsZSB9ID0gdGhpcy5jb250ZXh0XG4gICAgY29uc3QgeyBkcmFnZ2FibGVBY2Nlc3NvciwgcmVzaXphYmxlQWNjZXNzb3IgfSA9IGRyYWdnYWJsZVxuXG4gICAgY29uc3QgaXNEcmFnZ2FibGUgPSBkcmFnZ2FibGVBY2Nlc3NvclxuICAgICAgPyAhIWdldChldmVudCwgZHJhZ2dhYmxlQWNjZXNzb3IpXG4gICAgICA6IHRydWVcblxuICAgIC8qIEV2ZW50IGlzIG5vdCBkcmFnZ2FibGUsIG5vIG5lZWQgdG8gd3JhcCBpdCAqL1xuICAgIGlmICghaXNEcmFnZ2FibGUpIHtcbiAgICAgIHJldHVybiBjaGlsZHJlblxuICAgIH1cblxuICAgIC8qXG4gICAgICogVGhlIHJlc2l6YWJpbGl0eSBvZiBldmVudHMgZGVwZW5kcyBvbiB3aGV0aGVyIHRoZXkgYXJlXG4gICAgICogYWxsRGF5IGV2ZW50cyBhbmQgaG93IHRoZXkgYXJlIGRpc3BsYXllZC5cbiAgICAgKlxuICAgICAqIDEuIElmIHRoZSBldmVudCBpcyBiZWluZyBzaG93biBpbiBhbiBldmVudCByb3cgKGJlY2F1c2VcbiAgICAgKiBpdCBpcyBhbiBhbGxEYXkgZXZlbnQgc2hvd24gaW4gdGhlIGhlYWRlciByb3cgb3IgYmVjYXVzZSBhc1xuICAgICAqIGluIG1vbnRoIHZpZXcgdGhlIHZpZXcgaXMgc2hvd2luZyBhbGwgZXZlbnRzIGFzIHJvd3MpIHRoZW4gd2VcbiAgICAgKiBhbGxvdyBlYXN0LXdlc3QgcmVzaXppbmcuXG4gICAgICpcbiAgICAgKiAyLiBPdGhlcndpc2UgdGhlIGV2ZW50IGlzIGJlaW5nIGRpc3BsYXllZFxuICAgICAqIG5vcm1hbGx5LCB3ZSBjYW4gZHJhZyBpdCBub3J0aC1zb3V0aCB0byByZXNpemUgdGhlIHRpbWVzLlxuICAgICAqXG4gICAgICogU2VlIGBEcm9wV3JhcHBlcnNgIGZvciBoYW5kbGluZyBvZiB0aGUgZHJvcCBvZiBzdWNoIGV2ZW50cy5cbiAgICAgKlxuICAgICAqIE5vdHdpdGhzdGFuZGluZyB0aGUgYWJvdmUsIHdlIG5ldmVyIHNob3cgZHJhZyBhbmNob3JzIGZvclxuICAgICAqIGV2ZW50cyB3aGljaCBjb250aW51ZSBiZXlvbmQgY3VycmVudCBjb21wb25lbnQuIFRoaXMgaGFwcGVuc1xuICAgICAqIGluIHRoZSBtaWRkbGUgb2YgZXZlbnRzIHdoZW4gc2hvd011bHRpRGF5IGlzIHRydWUsIGFuZCB0b1xuICAgICAqIGV2ZW50cyBhdCB0aGUgZWRnZXMgb2YgdGhlIGNhbGVuZGFyJ3MgbWluL21heCBsb2NhdGlvbi5cbiAgICAgKi9cbiAgICBjb25zdCBpc1Jlc2l6YWJsZSA9XG4gICAgICByZXNpemFibGUgJiYgKHJlc2l6YWJsZUFjY2Vzc29yID8gISFnZXQoZXZlbnQsIHJlc2l6YWJsZUFjY2Vzc29yKSA6IHRydWUpXG5cbiAgICBpZiAoaXNSZXNpemFibGUgfHwgaXNEcmFnZ2FibGUpIHtcbiAgICAgIC8qXG4gICAgICAgKiBwcm9wcy5jaGlsZHJlbiBpcyB0aGUgc2luZ3VsYXIgPEV2ZW50PiBjb21wb25lbnQuXG4gICAgICAgKiBCaWdDYWxlbmRhciBwb3NpdGlvbnMgdGhlIEV2ZW50IGFib2x1dGVseSBhbmQgd2VcbiAgICAgICAqIG5lZWQgdGhlIGFuY2hvcnMgdG8gYmUgcGFydCBvZiB0aGF0IHBvc2l0aW9uaW5nLlxuICAgICAgICogU28gd2UgaW5zZXJ0IHRoZSBhbmNob3JzIGluc2lkZSB0aGUgRXZlbnQncyBjaGlsZHJlblxuICAgICAgICogcmF0aGVyIHRoYW4gd3JhcCB0aGUgRXZlbnQgaGVyZSBhcyB0aGUgbGF0dGVyIGFwcHJvYWNoXG4gICAgICAgKiB3b3VsZCBsb3NlIHRoZSBwb3NpdGlvbmluZy5cbiAgICAgICAqL1xuICAgICAgY29uc3QgbmV3UHJvcHMgPSB7XG4gICAgICAgIG9uTW91c2VEb3duOiB0aGlzLmhhbmRsZVN0YXJ0RHJhZ2dpbmcsXG4gICAgICAgIG9uVG91Y2hTdGFydDogdGhpcy5oYW5kbGVTdGFydERyYWdnaW5nLFxuICAgICAgfVxuXG4gICAgICBpZiAoaXNSZXNpemFibGUpIHtcbiAgICAgICAgLy8gcmVwbGFjZSBvcmlnaW5hbCBldmVudCBjaGlsZCB3aXRoIGFuY2hvci1lbWJlbGxpc2hlZCBjaGlsZFxuICAgICAgICBsZXQgU3RhcnRBbmNob3IgPSBudWxsXG4gICAgICAgIGxldCBFbmRBbmNob3IgPSBudWxsXG5cbiAgICAgICAgaWYgKHR5cGUgPT09ICdkYXRlJykge1xuICAgICAgICAgIFN0YXJ0QW5jaG9yID0gIWNvbnRpbnVlc1ByaW9yICYmIHRoaXMucmVuZGVyQW5jaG9yKCdMZWZ0JylcbiAgICAgICAgICBFbmRBbmNob3IgPSAhY29udGludWVzQWZ0ZXIgJiYgdGhpcy5yZW5kZXJBbmNob3IoJ1JpZ2h0JylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBTdGFydEFuY2hvciA9ICFjb250aW51ZXNQcmlvciAmJiB0aGlzLnJlbmRlckFuY2hvcignVXAnKVxuICAgICAgICAgIEVuZEFuY2hvciA9ICFjb250aW51ZXNBZnRlciAmJiB0aGlzLnJlbmRlckFuY2hvcignRG93bicpXG4gICAgICAgIH1cblxuICAgICAgICBuZXdQcm9wcy5jaGlsZHJlbiA9IChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJiYy1hZGRvbnMtZG5kLXJlc2l6YWJsZVwiPlxuICAgICAgICAgICAge1N0YXJ0QW5jaG9yfVxuICAgICAgICAgICAge2NoaWxkcmVuLnByb3BzLmNoaWxkcmVufVxuICAgICAgICAgICAge0VuZEFuY2hvcn1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgICAgfVxuXG4gICAgICBpZiAoXG4gICAgICAgIGRyYWdnYWJsZS5kcmFnQW5kRHJvcEFjdGlvbi5pbnRlcmFjdGluZyAmJiAvLyBpZiBhbiBldmVudCBpcyBiZWluZyBkcmFnZ2VkIHJpZ2h0IG5vd1xuICAgICAgICBkcmFnZ2FibGUuZHJhZ0FuZERyb3BBY3Rpb24uZXZlbnQgPT09IGV2ZW50IC8vIGFuZCBpdCdzIHRoZSBjdXJyZW50IGV2ZW50XG4gICAgICApIHtcbiAgICAgICAgLy8gYWRkIGEgbmV3IGNsYXNzIHRvIGl0XG4gICAgICAgIG5ld1Byb3BzLmNsYXNzTmFtZSA9IGNsc3goXG4gICAgICAgICAgY2hpbGRyZW4ucHJvcHMuY2xhc3NOYW1lLFxuICAgICAgICAgICdyYmMtYWRkb25zLWRuZC1kcmFnZ2VkLWV2ZW50J1xuICAgICAgICApXG4gICAgICB9XG5cbiAgICAgIGNoaWxkcmVuID0gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkcmVuLCBuZXdQcm9wcylcbiAgICB9XG5cbiAgICByZXR1cm4gY2hpbGRyZW5cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBFdmVudFdyYXBwZXJcbiIsImltcG9ydCB7IHdyYXBBY2Nlc3NvciB9IGZyb20gJy4uLy4uL3V0aWxzL2FjY2Vzc29ycydcbmltcG9ydCB7IGNyZWF0ZUZhY3RvcnkgfSBmcm9tICdyZWFjdCdcblxuZXhwb3J0IGNvbnN0IGRyYWdBY2Nlc3NvcnMgPSB7XG4gIHN0YXJ0OiB3cmFwQWNjZXNzb3IoKGUpID0+IGUuc3RhcnQpLFxuICBlbmQ6IHdyYXBBY2Nlc3NvcigoZSkgPT4gZS5lbmQpLFxufVxuXG5mdW5jdGlvbiBuZXN0KC4uLkNvbXBvbmVudHMpIHtcbiAgY29uc3QgZmFjdG9yaWVzID0gQ29tcG9uZW50cy5maWx0ZXIoQm9vbGVhbikubWFwKGNyZWF0ZUZhY3RvcnkpXG4gIGNvbnN0IE5lc3QgPSAoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSkgPT5cbiAgICBmYWN0b3JpZXMucmVkdWNlUmlnaHQoKGNoaWxkLCBmYWN0b3J5KSA9PiBmYWN0b3J5KHByb3BzLCBjaGlsZCksIGNoaWxkcmVuKVxuXG4gIHJldHVybiBOZXN0XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUNvbXBvbmVudHMoY29tcG9uZW50cyA9IHt9LCBhZGRvbnMpIHtcbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGFkZG9ucylcbiAgY29uc3QgcmVzdWx0ID0geyAuLi5jb21wb25lbnRzIH1cblxuICBrZXlzLmZvckVhY2goKGtleSkgPT4ge1xuICAgIHJlc3VsdFtrZXldID0gY29tcG9uZW50c1trZXldXG4gICAgICA/IG5lc3QoY29tcG9uZW50c1trZXldLCBhZGRvbnNba2V5XSlcbiAgICAgIDogYWRkb25zW2tleV1cbiAgfSlcbiAgcmV0dXJuIHJlc3VsdFxufVxuXG5leHBvcnQgZnVuY3Rpb24gcG9pbnRJbkNvbHVtbihib3VuZHMsIHBvaW50KSB7XG4gIGNvbnN0IHsgbGVmdCwgcmlnaHQsIHRvcCB9ID0gYm91bmRzXG4gIGNvbnN0IHsgeCwgeSB9ID0gcG9pbnRcbiAgcmV0dXJuIHggPCByaWdodCArIDEwICYmIHggPiBsZWZ0ICYmIHkgPiB0b3Bcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGV2ZW50VGltZXMoZXZlbnQsIGFjY2Vzc29ycywgbG9jYWxpemVyKSB7XG4gIGxldCBzdGFydCA9IGFjY2Vzc29ycy5zdGFydChldmVudClcbiAgbGV0IGVuZCA9IGFjY2Vzc29ycy5lbmQoZXZlbnQpXG5cbiAgY29uc3QgaXNaZXJvRHVyYXRpb24gPVxuICAgIGxvY2FsaXplci5lcShzdGFydCwgZW5kLCAnbWludXRlcycpICYmXG4gICAgbG9jYWxpemVyLmRpZmYoc3RhcnQsIGVuZCwgJ21pbnV0ZXMnKSA9PT0gMFxuICAvLyBtYWtlIHplcm8gZHVyYXRpb24gbWlkbmlnaHQgZXZlbnRzIGF0IGxlYXN0IG9uZSBkYXkgbG9uZ1xuICBpZiAoaXNaZXJvRHVyYXRpb24pIGVuZCA9IGxvY2FsaXplci5hZGQoZW5kLCAxLCAnZGF5JylcbiAgY29uc3QgZHVyYXRpb24gPSBsb2NhbGl6ZXIuZGlmZihzdGFydCwgZW5kLCAnbWlsbGlzZWNvbmRzJylcbiAgcmV0dXJuIHsgc3RhcnQsIGVuZCwgZHVyYXRpb24gfVxufVxuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgRG5EQ29udGV4dCB9IGZyb20gJy4vRG5EQ29udGV4dCdcbmltcG9ydCB7IHNjcm9sbFBhcmVudCwgc2Nyb2xsVG9wIH0gZnJvbSAnZG9tLWhlbHBlcnMnXG5pbXBvcnQgcXNhIGZyb20gJ2RvbS1oZWxwZXJzL2Nqcy9xdWVyeVNlbGVjdG9yQWxsJ1xuXG5pbXBvcnQgU2VsZWN0aW9uLCB7XG4gIGdldEJvdW5kc0Zvck5vZGUsXG4gIGdldEV2ZW50Tm9kZUZyb21Qb2ludCxcbn0gZnJvbSAnLi4vLi4vU2VsZWN0aW9uJ1xuaW1wb3J0IFRpbWVHcmlkRXZlbnQgZnJvbSAnLi4vLi4vVGltZUdyaWRFdmVudCdcbmltcG9ydCB7IGRyYWdBY2Nlc3NvcnMsIGV2ZW50VGltZXMsIHBvaW50SW5Db2x1bW4gfSBmcm9tICcuL2NvbW1vbidcblxuY2xhc3MgRXZlbnRDb250YWluZXJXcmFwcGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBhY2Nlc3NvcnM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBjb21wb25lbnRzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgZ2V0dGVyczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIGxvY2FsaXplcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHNsb3RNZXRyaWNzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgcmVzb3VyY2U6IFByb3BUeXBlcy5hbnksXG4gIH1cblxuICBzdGF0aWMgY29udGV4dFR5cGUgPSBEbkRDb250ZXh0XG5cbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpXG4gICAgdGhpcy5zdGF0ZSA9IHt9XG4gICAgdGhpcy5yZWYgPSBSZWFjdC5jcmVhdGVSZWYoKVxuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5fc2VsZWN0YWJsZSgpXG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB0aGlzLl90ZWFyZG93blNlbGVjdGFibGUoKVxuICB9XG5cbiAgcmVzZXQoKSB7XG4gICAgaWYgKHRoaXMuc3RhdGUuZXZlbnQpXG4gICAgICB0aGlzLnNldFN0YXRlKHsgZXZlbnQ6IG51bGwsIHRvcDogbnVsbCwgaGVpZ2h0OiBudWxsIH0pXG4gIH1cblxuICB1cGRhdGUoZXZlbnQsIHsgc3RhcnREYXRlLCBlbmREYXRlLCB0b3AsIGhlaWdodCB9KSB7XG4gICAgY29uc3QgeyBldmVudDogbGFzdEV2ZW50IH0gPSB0aGlzLnN0YXRlXG4gICAgaWYgKFxuICAgICAgbGFzdEV2ZW50ICYmXG4gICAgICBzdGFydERhdGUgPT09IGxhc3RFdmVudC5zdGFydCAmJlxuICAgICAgZW5kRGF0ZSA9PT0gbGFzdEV2ZW50LmVuZFxuICAgICkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICB0b3AsXG4gICAgICBoZWlnaHQsXG4gICAgICBldmVudDogeyAuLi5ldmVudCwgc3RhcnQ6IHN0YXJ0RGF0ZSwgZW5kOiBlbmREYXRlIH0sXG4gICAgfSlcbiAgfVxuXG4gIGhhbmRsZU1vdmUgPSAocG9pbnQsIGJvdW5kcykgPT4ge1xuICAgIGlmICghcG9pbnRJbkNvbHVtbihib3VuZHMsIHBvaW50KSkgcmV0dXJuIHRoaXMucmVzZXQoKVxuICAgIGNvbnN0IHsgZXZlbnQgfSA9IHRoaXMuY29udGV4dC5kcmFnZ2FibGUuZHJhZ0FuZERyb3BBY3Rpb25cbiAgICBjb25zdCB7IGFjY2Vzc29ycywgc2xvdE1ldHJpY3MgfSA9IHRoaXMucHJvcHNcblxuICAgIGNvbnN0IG5ld1Nsb3QgPSBzbG90TWV0cmljcy5jbG9zZXN0U2xvdEZyb21Qb2ludChcbiAgICAgIHsgeTogcG9pbnQueSAtIHRoaXMuZXZlbnRPZmZzZXRUb3AsIHg6IHBvaW50LnggfSxcbiAgICAgIGJvdW5kc1xuICAgIClcblxuICAgIGNvbnN0IHsgZHVyYXRpb24gfSA9IGV2ZW50VGltZXMoZXZlbnQsIGFjY2Vzc29ycywgdGhpcy5wcm9wcy5sb2NhbGl6ZXIpXG4gICAgbGV0IG5ld0VuZCA9IHRoaXMucHJvcHMubG9jYWxpemVyLmFkZChuZXdTbG90LCBkdXJhdGlvbiwgJ21pbGxpc2Vjb25kcycpXG4gICAgdGhpcy51cGRhdGUoZXZlbnQsIHNsb3RNZXRyaWNzLmdldFJhbmdlKG5ld1Nsb3QsIG5ld0VuZCwgZmFsc2UsIHRydWUpKVxuICB9XG5cbiAgaGFuZGxlUmVzaXplKHBvaW50LCBib3VuZHMpIHtcbiAgICBjb25zdCB7IGFjY2Vzc29ycywgc2xvdE1ldHJpY3MsIGxvY2FsaXplciB9ID0gdGhpcy5wcm9wc1xuICAgIGNvbnN0IHsgZXZlbnQsIGRpcmVjdGlvbiB9ID0gdGhpcy5jb250ZXh0LmRyYWdnYWJsZS5kcmFnQW5kRHJvcEFjdGlvblxuICAgIGNvbnN0IG5ld1RpbWUgPSBzbG90TWV0cmljcy5jbG9zZXN0U2xvdEZyb21Qb2ludChwb2ludCwgYm91bmRzKVxuXG4gICAgbGV0IHsgc3RhcnQsIGVuZCB9ID0gZXZlbnRUaW1lcyhldmVudCwgYWNjZXNzb3JzLCBsb2NhbGl6ZXIpXG4gICAgbGV0IG5ld1JhbmdlXG4gICAgaWYgKGRpcmVjdGlvbiA9PT0gJ1VQJykge1xuICAgICAgY29uc3QgbmV3U3RhcnQgPSBsb2NhbGl6ZXIubWluKFxuICAgICAgICBuZXdUaW1lLFxuICAgICAgICBzbG90TWV0cmljcy5jbG9zZXN0U2xvdEZyb21EYXRlKGVuZCwgLTEpXG4gICAgICApXG4gICAgICAvLyBHZXQgdGhlIG5ldyByYW5nZSBiYXNlZCBvbiB0aGUgbmV3IHN0YXJ0XG4gICAgICAvLyBidXQgZG9uJ3Qgb3ZlcndyaXRlIHRoZSBlbmQgZGF0ZSBhcyBpdCBjb3VsZCBiZSBvdXRzaWRlIHRoaXMgZGF5IGJvdW5kYXJ5LlxuICAgICAgbmV3UmFuZ2UgPSBzbG90TWV0cmljcy5nZXRSYW5nZShuZXdTdGFydCwgZW5kKVxuICAgICAgbmV3UmFuZ2UgPSB7XG4gICAgICAgIC4uLm5ld1JhbmdlLFxuICAgICAgICBlbmREYXRlOiBlbmQsXG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT09ICdET1dOJykge1xuICAgICAgLy8gR2V0IHRoZSBuZXcgcmFuZ2UgYmFzZWQgb24gdGhlIG5ldyBlbmRcbiAgICAgIC8vIGJ1dCBkb24ndCBvdmVyd3JpdGUgdGhlIHN0YXJ0IGRhdGUgYXMgaXQgY291bGQgYmUgb3V0c2lkZSB0aGlzIGRheSBib3VuZGFyeS5cbiAgICAgIGNvbnN0IG5ld0VuZCA9IGxvY2FsaXplci5tYXgoXG4gICAgICAgIG5ld1RpbWUsXG4gICAgICAgIHNsb3RNZXRyaWNzLmNsb3Nlc3RTbG90RnJvbURhdGUoc3RhcnQpXG4gICAgICApXG4gICAgICBuZXdSYW5nZSA9IHNsb3RNZXRyaWNzLmdldFJhbmdlKHN0YXJ0LCBuZXdFbmQpXG4gICAgICBuZXdSYW5nZSA9IHtcbiAgICAgICAgLi4ubmV3UmFuZ2UsXG4gICAgICAgIHN0YXJ0RGF0ZTogc3RhcnQsXG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy51cGRhdGUoZXZlbnQsIG5ld1JhbmdlKVxuICB9XG5cbiAgaGFuZGxlRHJvcEZyb21PdXRzaWRlID0gKHBvaW50LCBib3VuZGFyeUJveCkgPT4ge1xuICAgIGNvbnN0IHsgc2xvdE1ldHJpY3MsIHJlc291cmNlIH0gPSB0aGlzLnByb3BzXG5cbiAgICBsZXQgc3RhcnQgPSBzbG90TWV0cmljcy5jbG9zZXN0U2xvdEZyb21Qb2ludChcbiAgICAgIHsgeTogcG9pbnQueSwgeDogcG9pbnQueCB9LFxuICAgICAgYm91bmRhcnlCb3hcbiAgICApXG5cbiAgICBjb25zdCBlbmQgPSB0aGlzLl9jYWxjdWxhdGVEbkRFbmQoc3RhcnQpXG5cbiAgICB0aGlzLmNvbnRleHQuZHJhZ2dhYmxlLm9uRHJvcEZyb21PdXRzaWRlKHtcbiAgICAgIHN0YXJ0LFxuICAgICAgZW5kLFxuICAgICAgYWxsRGF5OiBmYWxzZSxcbiAgICAgIHJlc291cmNlLFxuICAgIH0pXG4gIH1cblxuICBoYW5kbGVEcmFnT3ZlckZyb21PdXRzaWRlID0gKHBvaW50LCBib3VuZHMpID0+IHtcbiAgICBjb25zdCB7IHNsb3RNZXRyaWNzIH0gPSB0aGlzLnByb3BzXG5cbiAgICBjb25zdCBzdGFydCA9IHNsb3RNZXRyaWNzLmNsb3Nlc3RTbG90RnJvbVBvaW50KFxuICAgICAgeyB5OiBwb2ludC55LCB4OiBwb2ludC54IH0sXG4gICAgICBib3VuZHNcbiAgICApXG4gICAgY29uc3QgZW5kID0gdGhpcy5fY2FsY3VsYXRlRG5ERW5kKHN0YXJ0KVxuICAgIGNvbnN0IGV2ZW50ID0gdGhpcy5jb250ZXh0LmRyYWdnYWJsZS5kcmFnRnJvbU91dHNpZGVJdGVtKClcbiAgICB0aGlzLnVwZGF0ZShldmVudCwgc2xvdE1ldHJpY3MuZ2V0UmFuZ2Uoc3RhcnQsIGVuZCwgZmFsc2UsIHRydWUpKVxuICB9XG5cbiAgX2NhbGN1bGF0ZURuREVuZCA9IChzdGFydCkgPT4ge1xuICAgIGNvbnN0IHsgYWNjZXNzb3JzLCBzbG90TWV0cmljcywgbG9jYWxpemVyIH0gPSB0aGlzLnByb3BzXG4gICAgY29uc3QgZXZlbnQgPSB0aGlzLmNvbnRleHQuZHJhZ2dhYmxlLmRyYWdGcm9tT3V0c2lkZUl0ZW0oKVxuICAgIGNvbnN0IHsgZHVyYXRpb246IGV2ZW50RHVyYXRpb24gfSA9IGV2ZW50VGltZXMoZXZlbnQsIGFjY2Vzc29ycywgbG9jYWxpemVyKVxuXG4gICAgbGV0IGVuZCA9IHNsb3RNZXRyaWNzLm5leHRTbG90KHN0YXJ0KVxuICAgIGNvbnN0IGV2ZW50SGFzRHVyYXRpb24gPSAhaXNOYU4oZXZlbnREdXJhdGlvbilcbiAgICBpZiAoZXZlbnRIYXNEdXJhdGlvbikge1xuICAgICAgY29uc3QgZXZlbnRFbmRTbG90ID0gbG9jYWxpemVyLmFkZChzdGFydCwgZXZlbnREdXJhdGlvbiwgJ21pbGxpc2Vjb25kcycpXG4gICAgICBlbmQgPSBuZXcgRGF0ZShNYXRoLm1heChldmVudEVuZFNsb3QsIGVuZCkpXG4gICAgfVxuICAgIHJldHVybiBlbmRcbiAgfVxuXG4gIHVwZGF0ZVBhcmVudFNjcm9sbCA9IChwYXJlbnQsIG5vZGUpID0+IHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGNvbnN0IGRyYWdnZWRFbCA9IHFzYShub2RlLCAnLnJiYy1hZGRvbnMtZG5kLWRyYWctcHJldmlldycpWzBdXG4gICAgICBpZiAoZHJhZ2dlZEVsKSB7XG4gICAgICAgIGlmIChkcmFnZ2VkRWwub2Zmc2V0VG9wIDwgcGFyZW50LnNjcm9sbFRvcCkge1xuICAgICAgICAgIHNjcm9sbFRvcChwYXJlbnQsIE1hdGgubWF4KGRyYWdnZWRFbC5vZmZzZXRUb3AsIDApKVxuICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgIGRyYWdnZWRFbC5vZmZzZXRUb3AgKyBkcmFnZ2VkRWwub2Zmc2V0SGVpZ2h0ID5cbiAgICAgICAgICBwYXJlbnQuc2Nyb2xsVG9wICsgcGFyZW50LmNsaWVudEhlaWdodFxuICAgICAgICApIHtcbiAgICAgICAgICBzY3JvbGxUb3AoXG4gICAgICAgICAgICBwYXJlbnQsXG4gICAgICAgICAgICBNYXRoLm1pbihcbiAgICAgICAgICAgICAgZHJhZ2dlZEVsLm9mZnNldFRvcCAtXG4gICAgICAgICAgICAgIHBhcmVudC5vZmZzZXRIZWlnaHQgK1xuICAgICAgICAgICAgICBkcmFnZ2VkRWwub2Zmc2V0SGVpZ2h0LFxuICAgICAgICAgICAgICBwYXJlbnQuc2Nyb2xsSGVpZ2h0XG4gICAgICAgICAgICApXG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIF9zZWxlY3RhYmxlID0gKCkgPT4ge1xuICAgIGxldCB3cmFwcGVyID0gdGhpcy5yZWYuY3VycmVudFxuICAgIGxldCBub2RlID0gd3JhcHBlci5jaGlsZHJlblswXVxuICAgIGxldCBpc0JlaW5nRHJhZ2dlZCA9IGZhbHNlXG4gICAgbGV0IHNlbGVjdG9yID0gKHRoaXMuX3NlbGVjdG9yID0gbmV3IFNlbGVjdGlvbigoKSA9PlxuICAgICAgd3JhcHBlci5jbG9zZXN0KCcucmJjLXRpbWUtdmlldycpXG4gICAgKSlcbiAgICBsZXQgcGFyZW50ID0gc2Nyb2xsUGFyZW50KHdyYXBwZXIpXG5cbiAgICBzZWxlY3Rvci5vbignYmVmb3JlU2VsZWN0JywgKHBvaW50KSA9PiB7XG4gICAgICBjb25zdCB7IGRyYWdBbmREcm9wQWN0aW9uIH0gPSB0aGlzLmNvbnRleHQuZHJhZ2dhYmxlXG5cbiAgICAgIGlmICghZHJhZ0FuZERyb3BBY3Rpb24uYWN0aW9uKSByZXR1cm4gZmFsc2VcbiAgICAgIGlmIChkcmFnQW5kRHJvcEFjdGlvbi5hY3Rpb24gPT09ICdyZXNpemUnKSB7XG4gICAgICAgIHJldHVybiBwb2ludEluQ29sdW1uKGdldEJvdW5kc0Zvck5vZGUobm9kZSksIHBvaW50KVxuICAgICAgfVxuXG4gICAgICBjb25zdCBldmVudE5vZGUgPSBnZXRFdmVudE5vZGVGcm9tUG9pbnQobm9kZSwgcG9pbnQpXG4gICAgICBpZiAoIWV2ZW50Tm9kZSkgcmV0dXJuIGZhbHNlXG5cbiAgICAgIC8vIGV2ZW50T2Zmc2V0VG9wIGlzIGRpc3RhbmNlIGZyb20gdGhlIHRvcCBvZiB0aGUgZXZlbnQgdG8gdGhlIGluaXRpYWxcbiAgICAgIC8vIG1vdXNlRG93biBwb3NpdGlvbi4gV2UgbmVlZCB0aGlzIGxhdGVyIHRvIGNvbXB1dGUgdGhlIG5ldyB0b3Agb2YgdGhlXG4gICAgICAvLyBldmVudCBkdXJpbmcgbW92ZSBvcGVyYXRpb25zLCBzaW5jZSB0aGUgZmluYWwgbG9jYXRpb24gaXMgcmVhbGx5IGFcbiAgICAgIC8vIGRlbHRhIGZyb20gdGhpcyBwb2ludC4gbm90ZTogaWYgd2Ugd2FudCB0byBEUlkgdGhpcyB3aXRoIFdlZWtXcmFwcGVyLFxuICAgICAgLy8gcHJvYmFibHkgYmV0dGVyIGp1c3QgdG8gY2FwdHVyZSB0aGUgbW91c2VEb3duIHBvaW50IGhlcmUgYW5kIGRvIHRoZVxuICAgICAgLy8gcGxhY2VtZW50IGNvbXB1dGF0aW9uIGluIGhhbmRsZU1vdmUoKS4uLlxuICAgICAgdGhpcy5ldmVudE9mZnNldFRvcCA9IHBvaW50LnkgLSBnZXRCb3VuZHNGb3JOb2RlKGV2ZW50Tm9kZSkudG9wXG4gICAgfSlcblxuICAgIHNlbGVjdG9yLm9uKCdzZWxlY3RpbmcnLCAoYm94KSA9PiB7XG4gICAgICBjb25zdCBib3VuZHMgPSBnZXRCb3VuZHNGb3JOb2RlKG5vZGUpXG4gICAgICBjb25zdCB7IGRyYWdBbmREcm9wQWN0aW9uIH0gPSB0aGlzLmNvbnRleHQuZHJhZ2dhYmxlXG5cbiAgICAgIGlmIChkcmFnQW5kRHJvcEFjdGlvbi5hY3Rpb24gPT09ICdtb3ZlJykge1xuICAgICAgICB0aGlzLnVwZGF0ZVBhcmVudFNjcm9sbChwYXJlbnQsIG5vZGUpXG4gICAgICAgIHRoaXMuaGFuZGxlTW92ZShib3gsIGJvdW5kcylcbiAgICAgIH1cbiAgICAgIGlmIChkcmFnQW5kRHJvcEFjdGlvbi5hY3Rpb24gPT09ICdyZXNpemUnKSB7XG4gICAgICAgIHRoaXMudXBkYXRlUGFyZW50U2Nyb2xsKHBhcmVudCwgbm9kZSlcbiAgICAgICAgdGhpcy5oYW5kbGVSZXNpemUoYm94LCBib3VuZHMpXG4gICAgICB9XG4gICAgfSlcblxuICAgIHNlbGVjdG9yLm9uKCdkcm9wRnJvbU91dHNpZGUnLCAocG9pbnQpID0+IHtcbiAgICAgIGlmICghdGhpcy5jb250ZXh0LmRyYWdnYWJsZS5vbkRyb3BGcm9tT3V0c2lkZSkgcmV0dXJuXG4gICAgICBjb25zdCBib3VuZHMgPSBnZXRCb3VuZHNGb3JOb2RlKG5vZGUpXG4gICAgICBpZiAoIXBvaW50SW5Db2x1bW4oYm91bmRzLCBwb2ludCkpIHJldHVyblxuICAgICAgdGhpcy5oYW5kbGVEcm9wRnJvbU91dHNpZGUocG9pbnQsIGJvdW5kcylcbiAgICB9KVxuXG4gICAgc2VsZWN0b3Iub24oJ2RyYWdPdmVyRnJvbU91dHNpZGUnLCAocG9pbnQpID0+IHtcbiAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmNvbnRleHQuZHJhZ2dhYmxlLmRyYWdGcm9tT3V0c2lkZUl0ZW0gPyB0aGlzLmNvbnRleHQuZHJhZ2dhYmxlLmRyYWdGcm9tT3V0c2lkZUl0ZW0oKSA6IG51bGxcbiAgICAgIGlmICghaXRlbSkgcmV0dXJuXG4gICAgICBjb25zdCBib3VuZHMgPSBnZXRCb3VuZHNGb3JOb2RlKG5vZGUpXG4gICAgICBpZiAoIXBvaW50SW5Db2x1bW4oYm91bmRzLCBwb2ludCkpIHJldHVybiB0aGlzLnJlc2V0KClcbiAgICAgIHRoaXMuaGFuZGxlRHJhZ092ZXJGcm9tT3V0c2lkZShwb2ludCwgYm91bmRzKVxuICAgIH0pXG5cbiAgICBzZWxlY3Rvci5vbignc2VsZWN0U3RhcnQnLCAoKSA9PiB7XG4gICAgICBpc0JlaW5nRHJhZ2dlZCA9IHRydWVcbiAgICAgIHRoaXMuY29udGV4dC5kcmFnZ2FibGUub25TdGFydCgpXG4gICAgfSlcblxuICAgIHNlbGVjdG9yLm9uKCdzZWxlY3QnLCAocG9pbnQpID0+IHtcbiAgICAgIGNvbnN0IGJvdW5kcyA9IGdldEJvdW5kc0Zvck5vZGUobm9kZSlcbiAgICAgIGlzQmVpbmdEcmFnZ2VkID0gZmFsc2VcbiAgICAgIGNvbnN0IHsgZHJhZ0FuZERyb3BBY3Rpb24gfSA9IHRoaXMuY29udGV4dC5kcmFnZ2FibGVcbiAgICAgIGlmIChkcmFnQW5kRHJvcEFjdGlvbi5hY3Rpb24gPT09ICdyZXNpemUnKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlSW50ZXJhY3Rpb25FbmQoKVxuICAgICAgfSBlbHNlIGlmICghdGhpcy5zdGF0ZS5ldmVudCB8fCAhcG9pbnRJbkNvbHVtbihib3VuZHMsIHBvaW50KSkge1xuICAgICAgICByZXR1cm5cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuaGFuZGxlSW50ZXJhY3Rpb25FbmQoKVxuICAgICAgfVxuICAgIH0pXG5cbiAgICBzZWxlY3Rvci5vbignY2xpY2snLCAoKSA9PiB7XG4gICAgICBpZiAoaXNCZWluZ0RyYWdnZWQpIHRoaXMucmVzZXQoKVxuICAgICAgdGhpcy5jb250ZXh0LmRyYWdnYWJsZS5vbkVuZChudWxsKVxuICAgIH0pXG4gICAgc2VsZWN0b3Iub24oJ3Jlc2V0JywgKCkgPT4ge1xuICAgICAgdGhpcy5yZXNldCgpXG4gICAgICB0aGlzLmNvbnRleHQuZHJhZ2dhYmxlLm9uRW5kKG51bGwpXG4gICAgfSlcbiAgfVxuXG4gIGhhbmRsZUludGVyYWN0aW9uRW5kID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgcmVzb3VyY2UgfSA9IHRoaXMucHJvcHNcbiAgICBjb25zdCB7IGV2ZW50IH0gPSB0aGlzLnN0YXRlXG4gICAgdGhpcy5yZXNldCgpXG5cbiAgICB0aGlzLmNvbnRleHQuZHJhZ2dhYmxlLm9uRW5kKHtcbiAgICAgIHN0YXJ0OiBldmVudC5zdGFydCxcbiAgICAgIGVuZDogZXZlbnQuZW5kLFxuICAgICAgcmVzb3VyY2VJZDogcmVzb3VyY2UsXG4gICAgfSlcbiAgfVxuXG4gIF90ZWFyZG93blNlbGVjdGFibGUgPSAoKSA9PiB7XG4gICAgaWYgKCF0aGlzLl9zZWxlY3RvcikgcmV0dXJuXG4gICAgdGhpcy5fc2VsZWN0b3IudGVhcmRvd24oKVxuICAgIHRoaXMuX3NlbGVjdG9yID0gbnVsbFxuICB9XG5cbiAgcmVuZGVyQ29udGVudCgpIHtcbiAgICBjb25zdCB7IGNoaWxkcmVuLCBhY2Nlc3NvcnMsIGNvbXBvbmVudHMsIGdldHRlcnMsIHNsb3RNZXRyaWNzLCBsb2NhbGl6ZXIgfSA9XG4gICAgICB0aGlzLnByb3BzXG5cbiAgICBsZXQgeyBldmVudCwgdG9wLCBoZWlnaHQgfSA9IHRoaXMuc3RhdGVcbiAgICBpZiAoIWV2ZW50KSByZXR1cm4gY2hpbGRyZW5cblxuICAgIGNvbnN0IGV2ZW50cyA9IGNoaWxkcmVuLnByb3BzLmNoaWxkcmVuXG4gICAgY29uc3QgeyBzdGFydCwgZW5kIH0gPSBldmVudFxuXG4gICAgbGV0IGxhYmVsXG4gICAgbGV0IGZvcm1hdCA9ICdldmVudFRpbWVSYW5nZUZvcm1hdCdcblxuICAgIGNvbnN0IHN0YXJ0c0JlZm9yZURheSA9IHNsb3RNZXRyaWNzLnN0YXJ0c0JlZm9yZURheShzdGFydClcbiAgICBjb25zdCBzdGFydHNBZnRlckRheSA9IHNsb3RNZXRyaWNzLnN0YXJ0c0FmdGVyRGF5KGVuZClcblxuICAgIGlmIChzdGFydHNCZWZvcmVEYXkpIGZvcm1hdCA9ICdldmVudFRpbWVSYW5nZUVuZEZvcm1hdCdcbiAgICBlbHNlIGlmIChzdGFydHNBZnRlckRheSkgZm9ybWF0ID0gJ2V2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQnXG5cbiAgICBpZiAoc3RhcnRzQmVmb3JlRGF5ICYmIHN0YXJ0c0FmdGVyRGF5KSBsYWJlbCA9IGxvY2FsaXplci5tZXNzYWdlcy5hbGxEYXlcbiAgICBlbHNlIGxhYmVsID0gbG9jYWxpemVyLmZvcm1hdCh7IHN0YXJ0LCBlbmQgfSwgZm9ybWF0KVxuXG4gICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZHJlbiwge1xuICAgICAgY2hpbGRyZW46IChcbiAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgIHtldmVudHN9XG5cbiAgICAgICAgICB7ZXZlbnQgJiYgKFxuICAgICAgICAgICAgPFRpbWVHcmlkRXZlbnRcbiAgICAgICAgICAgICAgZXZlbnQ9e2V2ZW50fVxuICAgICAgICAgICAgICBsYWJlbD17bGFiZWx9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cInJiYy1hZGRvbnMtZG5kLWRyYWctcHJldmlld1wiXG4gICAgICAgICAgICAgIHN0eWxlPXt7IHRvcCwgaGVpZ2h0LCB3aWR0aDogMTAwIH19XG4gICAgICAgICAgICAgIGdldHRlcnM9e2dldHRlcnN9XG4gICAgICAgICAgICAgIGNvbXBvbmVudHM9e2NvbXBvbmVudHN9XG4gICAgICAgICAgICAgIGFjY2Vzc29ycz17eyAuLi5hY2Nlc3NvcnMsIC4uLmRyYWdBY2Nlc3NvcnMgfX1cbiAgICAgICAgICAgICAgY29udGludWVzUHJpb3I9e3N0YXJ0c0JlZm9yZURheX1cbiAgICAgICAgICAgICAgY29udGludWVzQWZ0ZXI9e3N0YXJ0c0FmdGVyRGF5fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgKSxcbiAgICB9KVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiA8ZGl2IHJlZj17dGhpcy5yZWZ9Pnt0aGlzLnJlbmRlckNvbnRlbnQoKX08L2Rpdj5cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBFdmVudENvbnRhaW5lcldyYXBwZXJcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBFdmVudFJvdyBmcm9tICcuLi8uLi9FdmVudFJvdydcbmltcG9ydCBTZWxlY3Rpb24sIHsgZ2V0Qm91bmRzRm9yTm9kZSB9IGZyb20gJy4uLy4uL1NlbGVjdGlvbidcbmltcG9ydCB7IGV2ZW50U2VnbWVudHMgfSBmcm9tICcuLi8uLi91dGlscy9ldmVudExldmVscydcbmltcG9ydCB7IGdldFNsb3RBdFgsIHBvaW50SW5Cb3ggfSBmcm9tICcuLi8uLi91dGlscy9zZWxlY3Rpb24nXG5pbXBvcnQgeyBkcmFnQWNjZXNzb3JzLCBldmVudFRpbWVzIH0gZnJvbSAnLi9jb21tb24nXG5pbXBvcnQgeyBEbkRDb250ZXh0IH0gZnJvbSAnLi9EbkRDb250ZXh0J1xuXG5jbGFzcyBXZWVrV3JhcHBlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgaXNBbGxEYXk6IFByb3BUeXBlcy5ib29sLFxuICAgIHNsb3RNZXRyaWNzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgYWNjZXNzb3JzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgZ2V0dGVyczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIGNvbXBvbmVudHM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICByZXNvdXJjZUlkOiBQcm9wVHlwZXMuYW55LFxuICAgIHJ0bDogUHJvcFR5cGVzLmJvb2wsXG4gICAgbG9jYWxpemVyOiBQcm9wVHlwZXMuYW55LFxuICB9XG5cbiAgc3RhdGljIGNvbnRleHRUeXBlID0gRG5EQ29udGV4dFxuXG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICBzdXBlciguLi5hcmdzKVxuICAgIHRoaXMuc3RhdGUgPSB7fVxuICAgIHRoaXMucmVmID0gUmVhY3QuY3JlYXRlUmVmKClcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX3NlbGVjdGFibGUoKVxuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5fdGVhcmRvd25TZWxlY3RhYmxlKClcbiAgfVxuXG4gIHJlc2V0KCkge1xuICAgIGlmICh0aGlzLnN0YXRlLnNlZ21lbnQpIHRoaXMuc2V0U3RhdGUoeyBzZWdtZW50OiBudWxsIH0pXG4gIH1cblxuICB1cGRhdGUoZXZlbnQsIHN0YXJ0LCBlbmQpIHtcbiAgICBjb25zdCBzZWdtZW50ID0gZXZlbnRTZWdtZW50cyhcbiAgICAgIHsgLi4uZXZlbnQsIGVuZCwgc3RhcnQsIF9faXNQcmV2aWV3OiB0cnVlIH0sXG4gICAgICB0aGlzLnByb3BzLnNsb3RNZXRyaWNzLnJhbmdlLFxuICAgICAgZHJhZ0FjY2Vzc29ycyxcbiAgICAgIHRoaXMucHJvcHMubG9jYWxpemVyXG4gICAgKVxuXG4gICAgY29uc3QgeyBzZWdtZW50OiBsYXN0U2VnbWVudCB9ID0gdGhpcy5zdGF0ZVxuICAgIGlmIChcbiAgICAgIGxhc3RTZWdtZW50ICYmXG4gICAgICBzZWdtZW50LnNwYW4gPT09IGxhc3RTZWdtZW50LnNwYW4gJiZcbiAgICAgIHNlZ21lbnQubGVmdCA9PT0gbGFzdFNlZ21lbnQubGVmdCAmJlxuICAgICAgc2VnbWVudC5yaWdodCA9PT0gbGFzdFNlZ21lbnQucmlnaHRcbiAgICApIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICB0aGlzLnNldFN0YXRlKHsgc2VnbWVudCB9KVxuICB9XG5cbiAgaGFuZGxlTW92ZSA9IChwb2ludCwgYm91bmRzLCBkcmFnZ2VkRXZlbnQpID0+IHtcbiAgICBpZiAoIXBvaW50SW5Cb3goYm91bmRzLCBwb2ludCkpIHJldHVybiB0aGlzLnJlc2V0KClcbiAgICBjb25zdCBldmVudCA9IHRoaXMuY29udGV4dC5kcmFnZ2FibGUuZHJhZ0FuZERyb3BBY3Rpb24uZXZlbnQgfHwgZHJhZ2dlZEV2ZW50XG4gICAgY29uc3QgeyBhY2Nlc3NvcnMsIHNsb3RNZXRyaWNzLCBydGwsIGxvY2FsaXplciB9ID0gdGhpcy5wcm9wc1xuXG4gICAgY29uc3Qgc2xvdCA9IGdldFNsb3RBdFgoYm91bmRzLCBwb2ludC54LCBydGwsIHNsb3RNZXRyaWNzLnNsb3RzKVxuXG4gICAgY29uc3QgZGF0ZSA9IHNsb3RNZXRyaWNzLmdldERhdGVGb3JTbG90KHNsb3QpXG5cbiAgICAvLyBBZGp1c3QgdGhlIGRhdGVzLCBidXQgbWFpbnRhaW4gdGhlIHRpbWVzIHdoZW4gbW92aW5nXG4gICAgbGV0IHsgc3RhcnQsIGR1cmF0aW9uIH0gPSBldmVudFRpbWVzKGV2ZW50LCBhY2Nlc3NvcnMsIGxvY2FsaXplcilcbiAgICBzdGFydCA9IGxvY2FsaXplci5tZXJnZShkYXRlLCBzdGFydClcbiAgICBjb25zdCBlbmQgPSBsb2NhbGl6ZXIuYWRkKHN0YXJ0LCBkdXJhdGlvbiwgJ21pbGxpc2Vjb25kcycpXG4gICAgLy8gTEFURVI6IHdoZW4gZHJhZ2dpbmcgYSBtdWx0aS1yb3cgZXZlbnQsIG9ubHkgdGhlIGZpcnN0IHJvdyBpcyBhbmltYXRpbmdcbiAgICB0aGlzLnVwZGF0ZShldmVudCwgc3RhcnQsIGVuZClcbiAgfVxuXG4gIGhhbmRsZURyb3BGcm9tT3V0c2lkZSA9IChwb2ludCwgYm91bmRzKSA9PiB7XG4gICAgaWYgKCF0aGlzLmNvbnRleHQuZHJhZ2dhYmxlLm9uRHJvcEZyb21PdXRzaWRlKSByZXR1cm5cbiAgICBjb25zdCB7IHNsb3RNZXRyaWNzLCBydGwsIGxvY2FsaXplciB9ID0gdGhpcy5wcm9wc1xuXG4gICAgY29uc3Qgc2xvdCA9IGdldFNsb3RBdFgoYm91bmRzLCBwb2ludC54LCBydGwsIHNsb3RNZXRyaWNzLnNsb3RzKVxuICAgIGNvbnN0IHN0YXJ0ID0gc2xvdE1ldHJpY3MuZ2V0RGF0ZUZvclNsb3Qoc2xvdClcblxuICAgIHRoaXMuY29udGV4dC5kcmFnZ2FibGUub25Ecm9wRnJvbU91dHNpZGUoe1xuICAgICAgc3RhcnQsXG4gICAgICBlbmQ6IGxvY2FsaXplci5hZGQoc3RhcnQsIDEsICdkYXknKSxcbiAgICAgIGFsbERheTogZmFsc2UsXG4gICAgfSlcbiAgfVxuXG4gIGhhbmRsZURyYWdPdmVyRnJvbU91dHNpZGUgPSAocG9pbnQsIG5vZGUpID0+IHtcbiAgICBjb25zdCBpdGVtID0gdGhpcy5jb250ZXh0LmRyYWdnYWJsZS5kcmFnRnJvbU91dHNpZGVJdGVtID8gdGhpcy5jb250ZXh0LmRyYWdnYWJsZS5kcmFnRnJvbU91dHNpZGVJdGVtKCkgOiBudWxsXG4gICAgaWYgKCFpdGVtKSByZXR1cm5cbiAgICB0aGlzLmhhbmRsZU1vdmUocG9pbnQsIG5vZGUsIGl0ZW0pXG4gIH1cblxuICBoYW5kbGVSZXNpemUocG9pbnQsIGJvdW5kcykge1xuICAgIGNvbnN0IHsgZXZlbnQsIGRpcmVjdGlvbiB9ID0gdGhpcy5jb250ZXh0LmRyYWdnYWJsZS5kcmFnQW5kRHJvcEFjdGlvblxuICAgIGNvbnN0IHsgYWNjZXNzb3JzLCBzbG90TWV0cmljcywgcnRsLCBsb2NhbGl6ZXIgfSA9IHRoaXMucHJvcHNcblxuICAgIGxldCB7IHN0YXJ0LCBlbmQgfSA9IGV2ZW50VGltZXMoZXZlbnQsIGFjY2Vzc29ycywgbG9jYWxpemVyKVxuXG4gICAgY29uc3Qgc2xvdCA9IGdldFNsb3RBdFgoYm91bmRzLCBwb2ludC54LCBydGwsIHNsb3RNZXRyaWNzLnNsb3RzKVxuICAgIGNvbnN0IGRhdGUgPSBzbG90TWV0cmljcy5nZXREYXRlRm9yU2xvdChzbG90KVxuICAgIGNvbnN0IGN1cnNvckluUm93ID0gcG9pbnRJbkJveChib3VuZHMsIHBvaW50KVxuXG4gICAgaWYgKGRpcmVjdGlvbiA9PT0gJ1JJR0hUJykge1xuICAgICAgaWYgKGN1cnNvckluUm93KSB7XG4gICAgICAgIGlmIChzbG90TWV0cmljcy5sYXN0IDwgc3RhcnQpIHJldHVybiB0aGlzLnJlc2V0KClcbiAgICAgICAgaWYgKGxvY2FsaXplci5lcShsb2NhbGl6ZXIuc3RhcnRPZihlbmQsICdkYXknKSwgZW5kKSlcbiAgICAgICAgICBlbmQgPSBsb2NhbGl6ZXIuYWRkKGRhdGUsIDEsICdkYXknKVxuICAgICAgICBlbHNlIGVuZCA9IGRhdGVcbiAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgIGxvY2FsaXplci5pblJhbmdlKHN0YXJ0LCBzbG90TWV0cmljcy5maXJzdCwgc2xvdE1ldHJpY3MubGFzdCkgfHxcbiAgICAgICAgKGJvdW5kcy5ib3R0b20gPCBwb2ludC55ICYmICtzbG90TWV0cmljcy5maXJzdCA+ICtzdGFydClcbiAgICAgICkge1xuICAgICAgICBlbmQgPSBsb2NhbGl6ZXIuYWRkKHNsb3RNZXRyaWNzLmxhc3QsIDEsICdtaWxsaXNlY29uZHMnKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHNlZ21lbnQ6IG51bGwgfSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBjb25zdCBvcmlnaW5hbEVuZCA9IGFjY2Vzc29ycy5lbmQoZXZlbnQpXG4gICAgICBlbmQgPSBsb2NhbGl6ZXIubWVyZ2UoZW5kLCBvcmlnaW5hbEVuZClcbiAgICAgIGlmIChsb2NhbGl6ZXIubHQoZW5kLCBzdGFydCkpIHtcbiAgICAgICAgZW5kID0gb3JpZ2luYWxFbmRcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gJ0xFRlQnKSB7XG4gICAgICBpZiAoY3Vyc29ySW5Sb3cpIHtcbiAgICAgICAgaWYgKHNsb3RNZXRyaWNzLmZpcnN0ID4gZW5kKSByZXR1cm4gdGhpcy5yZXNldCgpXG4gICAgICAgIHN0YXJ0ID0gZGF0ZVxuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgbG9jYWxpemVyLmluUmFuZ2UoZW5kLCBzbG90TWV0cmljcy5maXJzdCwgc2xvdE1ldHJpY3MubGFzdCkgfHxcbiAgICAgICAgKGJvdW5kcy50b3AgPiBwb2ludC55ICYmIGxvY2FsaXplci5sdChzbG90TWV0cmljcy5sYXN0LCBlbmQpKVxuICAgICAgKSB7XG4gICAgICAgIHN0YXJ0ID0gbG9jYWxpemVyLmFkZChzbG90TWV0cmljcy5maXJzdCwgLTEsICdtaWxsaXNlY29uZHMnKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5yZXNldCgpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuICAgICAgY29uc3Qgb3JpZ2luYWxTdGFydCA9IGFjY2Vzc29ycy5zdGFydChldmVudClcbiAgICAgIHN0YXJ0ID0gbG9jYWxpemVyLm1lcmdlKHN0YXJ0LCBvcmlnaW5hbFN0YXJ0KVxuICAgICAgaWYgKGxvY2FsaXplci5ndChzdGFydCwgZW5kKSkge1xuICAgICAgICBzdGFydCA9IG9yaWdpbmFsU3RhcnRcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLnVwZGF0ZShldmVudCwgc3RhcnQsIGVuZClcbiAgfVxuXG4gIF9zZWxlY3RhYmxlID0gKCkgPT4ge1xuICAgIGxldCBub2RlID0gdGhpcy5yZWYuY3VycmVudC5jbG9zZXN0KCcucmJjLW1vbnRoLXJvdywgLnJiYy1hbGxkYXktY2VsbCcpXG4gICAgbGV0IGNvbnRhaW5lciA9IG5vZGUuY2xvc2VzdCgnLnJiYy1tb250aC12aWV3LCAucmJjLXRpbWUtdmlldycpXG4gICAgbGV0IGlzTW9udGhSb3cgPSBub2RlLmNsYXNzTGlzdC5jb250YWlucygncmJjLW1vbnRoLXJvdycpXG5cbiAgICAvLyBWYWxpZCBjb250YWluZXIgY2hlY2sgb25seSBuZWNlc3NhcnkgaW4gVGltZUdyaWQgdmlld3NcbiAgICBsZXQgc2VsZWN0b3IgPSAodGhpcy5fc2VsZWN0b3IgPSBuZXcgU2VsZWN0aW9uKCgpID0+IGNvbnRhaW5lciwge1xuICAgICAgdmFsaWRDb250YWluZXJzOiBbXG4gICAgICAgIC4uLighaXNNb250aFJvdyA/IFsnLnJiYy1kYXktc2xvdCcsICcucmJjLWFsbGRheS1jZWxsJ10gOiBbXSksXG4gICAgICBdLFxuICAgIH0pKVxuXG4gICAgc2VsZWN0b3Iub24oJ2JlZm9yZVNlbGVjdCcsIChwb2ludCkgPT4ge1xuICAgICAgY29uc3QgeyBpc0FsbERheSB9ID0gdGhpcy5wcm9wc1xuICAgICAgY29uc3QgeyBhY3Rpb24gfSA9IHRoaXMuY29udGV4dC5kcmFnZ2FibGUuZHJhZ0FuZERyb3BBY3Rpb25cbiAgICAgIGNvbnN0IGJvdW5kcyA9IGdldEJvdW5kc0Zvck5vZGUobm9kZSlcbiAgICAgIGNvbnN0IGlzSW5Cb3ggPSBwb2ludEluQm94KGJvdW5kcywgcG9pbnQpXG4gICAgICByZXR1cm4gKFxuICAgICAgICBhY3Rpb24gPT09ICdtb3ZlJyB8fCAoYWN0aW9uID09PSAncmVzaXplJyAmJiAoIWlzQWxsRGF5IHx8IGlzSW5Cb3gpKVxuICAgICAgKVxuICAgIH0pXG5cbiAgICBzZWxlY3Rvci5vbignc2VsZWN0aW5nJywgKGJveCkgPT4ge1xuICAgICAgY29uc3QgYm91bmRzID0gZ2V0Qm91bmRzRm9yTm9kZShub2RlKVxuICAgICAgY29uc3QgeyBkcmFnQW5kRHJvcEFjdGlvbiB9ID0gdGhpcy5jb250ZXh0LmRyYWdnYWJsZVxuICAgICAgaWYgKGRyYWdBbmREcm9wQWN0aW9uLmFjdGlvbiA9PT0gJ21vdmUnKSB0aGlzLmhhbmRsZU1vdmUoYm94LCBib3VuZHMpXG4gICAgICBpZiAoZHJhZ0FuZERyb3BBY3Rpb24uYWN0aW9uID09PSAncmVzaXplJykgdGhpcy5oYW5kbGVSZXNpemUoYm94LCBib3VuZHMpXG4gICAgfSlcblxuICAgIHNlbGVjdG9yLm9uKCdzZWxlY3RTdGFydCcsICgpID0+IHRoaXMuY29udGV4dC5kcmFnZ2FibGUub25TdGFydCgpKVxuXG4gICAgc2VsZWN0b3Iub24oJ3NlbGVjdCcsIChwb2ludCkgPT4ge1xuICAgICAgY29uc3QgYm91bmRzID0gZ2V0Qm91bmRzRm9yTm9kZShub2RlKVxuICAgICAgaWYgKCF0aGlzLnN0YXRlLnNlZ21lbnQpIHJldHVyblxuICAgICAgaWYgKCFwb2ludEluQm94KGJvdW5kcywgcG9pbnQpKSB7XG4gICAgICAgIHRoaXMucmVzZXQoKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5oYW5kbGVJbnRlcmFjdGlvbkVuZCgpXG4gICAgICB9XG4gICAgfSlcblxuICAgIHNlbGVjdG9yLm9uKCdkcm9wRnJvbU91dHNpZGUnLCAocG9pbnQpID0+IHtcbiAgICAgIGlmICghdGhpcy5jb250ZXh0LmRyYWdnYWJsZS5vbkRyb3BGcm9tT3V0c2lkZSkgcmV0dXJuXG4gICAgICBjb25zdCBib3VuZHMgPSBnZXRCb3VuZHNGb3JOb2RlKG5vZGUpXG4gICAgICBpZiAoIXBvaW50SW5Cb3goYm91bmRzLCBwb2ludCkpIHJldHVyblxuICAgICAgdGhpcy5oYW5kbGVEcm9wRnJvbU91dHNpZGUocG9pbnQsIGJvdW5kcylcbiAgICB9KVxuXG4gICAgc2VsZWN0b3Iub24oJ2RyYWdPdmVyRnJvbU91dHNpZGUnLCAocG9pbnQpID0+IHtcbiAgICAgIGlmICghdGhpcy5jb250ZXh0LmRyYWdnYWJsZS5kcmFnRnJvbU91dHNpZGVJdGVtKSByZXR1cm5cbiAgICAgIGNvbnN0IGJvdW5kcyA9IGdldEJvdW5kc0Zvck5vZGUobm9kZSlcblxuICAgICAgdGhpcy5oYW5kbGVEcmFnT3ZlckZyb21PdXRzaWRlKHBvaW50LCBib3VuZHMpXG4gICAgfSlcblxuICAgIHNlbGVjdG9yLm9uKCdjbGljaycsICgpID0+IHRoaXMuY29udGV4dC5kcmFnZ2FibGUub25FbmQobnVsbCkpXG5cbiAgICBzZWxlY3Rvci5vbigncmVzZXQnLCAoKSA9PiB7XG4gICAgICB0aGlzLnJlc2V0KClcbiAgICAgIHRoaXMuY29udGV4dC5kcmFnZ2FibGUub25FbmQobnVsbClcbiAgICB9KVxuICB9XG5cbiAgaGFuZGxlSW50ZXJhY3Rpb25FbmQgPSAoKSA9PiB7XG4gICAgY29uc3QgeyByZXNvdXJjZUlkLCBpc0FsbERheSB9ID0gdGhpcy5wcm9wc1xuICAgIGNvbnN0IHsgZXZlbnQgfSA9IHRoaXMuc3RhdGUuc2VnbWVudFxuXG4gICAgdGhpcy5yZXNldCgpXG5cbiAgICB0aGlzLmNvbnRleHQuZHJhZ2dhYmxlLm9uRW5kKHtcbiAgICAgIHN0YXJ0OiBldmVudC5zdGFydCxcbiAgICAgIGVuZDogZXZlbnQuZW5kLFxuICAgICAgcmVzb3VyY2VJZCxcbiAgICAgIGlzQWxsRGF5LFxuICAgIH0pXG4gIH1cblxuICBfdGVhcmRvd25TZWxlY3RhYmxlID0gKCkgPT4ge1xuICAgIGlmICghdGhpcy5fc2VsZWN0b3IpIHJldHVyblxuICAgIHRoaXMuX3NlbGVjdG9yLnRlYXJkb3duKClcbiAgICB0aGlzLl9zZWxlY3RvciA9IG51bGxcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGNoaWxkcmVuLCBhY2Nlc3NvcnMgfSA9IHRoaXMucHJvcHNcblxuICAgIGxldCB7IHNlZ21lbnQgfSA9IHRoaXMuc3RhdGVcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IHJlZj17dGhpcy5yZWZ9IGNsYXNzTmFtZT1cInJiYy1hZGRvbnMtZG5kLXJvdy1ib2R5XCI+XG4gICAgICAgIHtjaGlsZHJlbn1cblxuICAgICAgICB7c2VnbWVudCAmJiAoXG4gICAgICAgICAgPEV2ZW50Um93XG4gICAgICAgICAgICB7Li4udGhpcy5wcm9wc31cbiAgICAgICAgICAgIHNlbGVjdGVkPXtudWxsfVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicmJjLWFkZG9ucy1kbmQtZHJhZy1yb3dcIlxuICAgICAgICAgICAgc2VnbWVudHM9e1tzZWdtZW50XX1cbiAgICAgICAgICAgIGFjY2Vzc29ycz17e1xuICAgICAgICAgICAgICAuLi5hY2Nlc3NvcnMsXG4gICAgICAgICAgICAgIC4uLmRyYWdBY2Nlc3NvcnMsXG4gICAgICAgICAgICB9fVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgV2Vla1dyYXBwZXJcbiIsImltcG9ydCB3aXRoRHJhZ0FuZERyb3AgZnJvbSAnLi93aXRoRHJhZ0FuZERyb3AnXG5leHBvcnQgZGVmYXVsdCB3aXRoRHJhZ0FuZERyb3BcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnXG5cbmltcG9ydCB7IGFjY2Vzc29yIH0gZnJvbSAnLi4vLi4vdXRpbHMvcHJvcFR5cGVzJ1xuaW1wb3J0IEV2ZW50V3JhcHBlciBmcm9tICcuL0V2ZW50V3JhcHBlcidcbmltcG9ydCBFdmVudENvbnRhaW5lcldyYXBwZXIgZnJvbSAnLi9FdmVudENvbnRhaW5lcldyYXBwZXInXG5pbXBvcnQgV2Vla1dyYXBwZXIgZnJvbSAnLi9XZWVrV3JhcHBlcidcbmltcG9ydCB7IG1lcmdlQ29tcG9uZW50cyB9IGZyb20gJy4vY29tbW9uJ1xuaW1wb3J0IHsgRG5EQ29udGV4dCB9IGZyb20gJy4vRG5EQ29udGV4dCdcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2l0aERyYWdBbmREcm9wKENhbGVuZGFyKSB7XG4gIGNsYXNzIERyYWdBbmREcm9wQ2FsZW5kYXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICAuLi5DYWxlbmRhci5wcm9wVHlwZXMsXG5cbiAgICAgIG9uRXZlbnREcm9wOiBQcm9wVHlwZXMuZnVuYyxcbiAgICAgIG9uRXZlbnRSZXNpemU6IFByb3BUeXBlcy5mdW5jLFxuICAgICAgb25EcmFnU3RhcnQ6IFByb3BUeXBlcy5mdW5jLFxuICAgICAgb25EcmFnT3ZlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgICBvbkRyb3BGcm9tT3V0c2lkZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgICAgIGRyYWdGcm9tT3V0c2lkZUl0ZW06IFByb3BUeXBlcy5mdW5jLFxuXG4gICAgICBkcmFnZ2FibGVBY2Nlc3NvcjogYWNjZXNzb3IsXG4gICAgICByZXNpemFibGVBY2Nlc3NvcjogYWNjZXNzb3IsXG5cbiAgICAgIHNlbGVjdGFibGU6IFByb3BUeXBlcy5vbmVPZihbdHJ1ZSwgZmFsc2UsICdpZ25vcmVFdmVudHMnXSksXG4gICAgICByZXNpemFibGU6IFByb3BUeXBlcy5ib29sLFxuICAgIH1cblxuICAgIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgICAuLi5DYWxlbmRhci5kZWZhdWx0UHJvcHMsXG4gICAgICBkcmFnZ2FibGVBY2Nlc3NvcjogbnVsbCxcbiAgICAgIHJlc2l6YWJsZUFjY2Vzc29yOiBudWxsLFxuICAgICAgcmVzaXphYmxlOiB0cnVlLFxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKC4uLmFyZ3MpIHtcbiAgICAgIHN1cGVyKC4uLmFyZ3MpXG5cbiAgICAgIHRoaXMuc3RhdGUgPSB7IGludGVyYWN0aW5nOiBmYWxzZSB9XG4gICAgfVxuXG4gICAgZ2V0RG5EQ29udGV4dFZhbHVlKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZHJhZ2dhYmxlOiB7XG4gICAgICAgICAgb25TdGFydDogdGhpcy5oYW5kbGVJbnRlcmFjdGlvblN0YXJ0LFxuICAgICAgICAgIG9uRW5kOiB0aGlzLmhhbmRsZUludGVyYWN0aW9uRW5kLFxuICAgICAgICAgIG9uQmVnaW5BY3Rpb246IHRoaXMuaGFuZGxlQmVnaW5BY3Rpb24sXG4gICAgICAgICAgb25Ecm9wRnJvbU91dHNpZGU6IHRoaXMucHJvcHMub25Ecm9wRnJvbU91dHNpZGUsXG4gICAgICAgICAgZHJhZ0Zyb21PdXRzaWRlSXRlbTogdGhpcy5wcm9wcy5kcmFnRnJvbU91dHNpZGVJdGVtLFxuICAgICAgICAgIGRyYWdnYWJsZUFjY2Vzc29yOiB0aGlzLnByb3BzLmRyYWdnYWJsZUFjY2Vzc29yLFxuICAgICAgICAgIHJlc2l6YWJsZUFjY2Vzc29yOiB0aGlzLnByb3BzLnJlc2l6YWJsZUFjY2Vzc29yLFxuICAgICAgICAgIGRyYWdBbmREcm9wQWN0aW9uOiB0aGlzLnN0YXRlLFxuICAgICAgICB9LFxuICAgICAgfVxuICAgIH1cblxuICAgIGRlZmF1bHRPbkRyYWdPdmVyID0gKGV2ZW50KSA9PiB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgfVxuXG4gICAgaGFuZGxlQmVnaW5BY3Rpb24gPSAoZXZlbnQsIGFjdGlvbiwgZGlyZWN0aW9uKSA9PiB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgZXZlbnQsIGFjdGlvbiwgZGlyZWN0aW9uIH0pXG4gICAgICBjb25zdCB7IG9uRHJhZ1N0YXJ0IH0gPSB0aGlzLnByb3BzXG4gICAgICBpZiAob25EcmFnU3RhcnQpIG9uRHJhZ1N0YXJ0KHsgZXZlbnQsIGFjdGlvbiwgZGlyZWN0aW9uIH0pXG4gICAgfVxuXG4gICAgaGFuZGxlSW50ZXJhY3Rpb25TdGFydCA9ICgpID0+IHtcbiAgICAgIGlmICh0aGlzLnN0YXRlLmludGVyYWN0aW5nID09PSBmYWxzZSkgdGhpcy5zZXRTdGF0ZSh7IGludGVyYWN0aW5nOiB0cnVlIH0pXG4gICAgfVxuXG4gICAgaGFuZGxlSW50ZXJhY3Rpb25FbmQgPSAoaW50ZXJhY3Rpb25JbmZvKSA9PiB7XG4gICAgICBjb25zdCB7IGFjdGlvbiwgZXZlbnQgfSA9IHRoaXMuc3RhdGVcbiAgICAgIGlmICghYWN0aW9uKSByZXR1cm5cblxuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogbnVsbCxcbiAgICAgICAgZXZlbnQ6IG51bGwsXG4gICAgICAgIGludGVyYWN0aW5nOiBmYWxzZSxcbiAgICAgICAgZGlyZWN0aW9uOiBudWxsLFxuICAgICAgfSlcblxuICAgICAgaWYgKGludGVyYWN0aW9uSW5mbyA9PSBudWxsKSByZXR1cm5cblxuICAgICAgaW50ZXJhY3Rpb25JbmZvLmV2ZW50ID0gZXZlbnRcbiAgICAgIGNvbnN0IHsgb25FdmVudERyb3AsIG9uRXZlbnRSZXNpemUgfSA9IHRoaXMucHJvcHNcbiAgICAgIGlmIChhY3Rpb24gPT09ICdtb3ZlJyAmJiBvbkV2ZW50RHJvcCkgb25FdmVudERyb3AoaW50ZXJhY3Rpb25JbmZvKVxuICAgICAgaWYgKGFjdGlvbiA9PT0gJ3Jlc2l6ZScgJiYgb25FdmVudFJlc2l6ZSkgb25FdmVudFJlc2l6ZShpbnRlcmFjdGlvbkluZm8pXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3QgeyBzZWxlY3RhYmxlLCBlbGVtZW50UHJvcHMsIGNvbXBvbmVudHMsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzXG4gICAgICBjb25zdCB7IGludGVyYWN0aW5nIH0gPSB0aGlzLnN0YXRlXG5cbiAgICAgIGRlbGV0ZSBwcm9wcy5vbkV2ZW50RHJvcFxuICAgICAgZGVsZXRlIHByb3BzLm9uRXZlbnRSZXNpemVcbiAgICAgIHByb3BzLnNlbGVjdGFibGUgPSBzZWxlY3RhYmxlID8gJ2lnbm9yZUV2ZW50cycgOiBmYWxzZVxuXG4gICAgICB0aGlzLmNvbXBvbmVudHMgPSBtZXJnZUNvbXBvbmVudHMoY29tcG9uZW50cywge1xuICAgICAgICBldmVudFdyYXBwZXI6IEV2ZW50V3JhcHBlcixcbiAgICAgICAgZXZlbnRDb250YWluZXJXcmFwcGVyOiBFdmVudENvbnRhaW5lcldyYXBwZXIsXG4gICAgICAgIHdlZWtXcmFwcGVyOiBXZWVrV3JhcHBlcixcbiAgICAgIH0pXG5cbiAgICAgIGNvbnN0IGVsZW1lbnRQcm9wc1dpdGhEcm9wRnJvbU91dHNpZGUgPSB0aGlzLnByb3BzLm9uRHJvcEZyb21PdXRzaWRlXG4gICAgICAgID8ge1xuICAgICAgICAgICAgLi4uZWxlbWVudFByb3BzLFxuICAgICAgICAgICAgb25EcmFnT3ZlcjogdGhpcy5wcm9wcy5vbkRyYWdPdmVyIHx8IHRoaXMuZGVmYXVsdE9uRHJhZ092ZXIsXG4gICAgICAgICAgfVxuICAgICAgICA6IGVsZW1lbnRQcm9wc1xuXG4gICAgICBwcm9wcy5jbGFzc05hbWUgPSBjbHN4KFxuICAgICAgICBwcm9wcy5jbGFzc05hbWUsXG4gICAgICAgICdyYmMtYWRkb25zLWRuZCcsXG4gICAgICAgICEhaW50ZXJhY3RpbmcgJiYgJ3JiYy1hZGRvbnMtZG5kLWlzLWRyYWdnaW5nJ1xuICAgICAgKVxuXG4gICAgICBjb25zdCBjb250ZXh0ID0gdGhpcy5nZXREbkRDb250ZXh0VmFsdWUoKVxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPERuRENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e2NvbnRleHR9PlxuICAgICAgICAgIDxDYWxlbmRhclxuICAgICAgICAgICAgey4uLnByb3BzfVxuICAgICAgICAgICAgZWxlbWVudFByb3BzPXtlbGVtZW50UHJvcHNXaXRoRHJvcEZyb21PdXRzaWRlfVxuICAgICAgICAgICAgY29tcG9uZW50cz17dGhpcy5jb21wb25lbnRzfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvRG5EQ29udGV4dC5Qcm92aWRlcj5cbiAgICAgIClcbiAgICB9XG4gIH1cblxuICByZXR1cm4gRHJhZ0FuZERyb3BDYWxlbmRhclxufVxuIiwiaW1wb3J0IE5vb3BXcmFwcGVyIGZyb20gJy4vTm9vcFdyYXBwZXInXG5cbmV4cG9ydCBkZWZhdWx0IE5vb3BXcmFwcGVyXG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCdcbmltcG9ydCB7XG4gIG1lcmdlLFxuICBpblJhbmdlLFxuICBsdCxcbiAgbHRlLFxuICBndCxcbiAgZ3RlLFxuICBlcSxcbiAgbmVxLFxuICBzdGFydE9mLFxuICBlbmRPZixcbiAgYWRkLFxuICByYW5nZSxcbiAgZGlmZixcbiAgZHVyYXRpb24sXG4gIGNlaWwsXG4gIG1pbixcbiAgbWF4LFxuICBmaXJzdFZpc2libGVEYXksXG4gIGxhc3RWaXNpYmxlRGF5LFxuICB2aXNpYmxlRGF5cyxcbiAgbWludXRlcyxcbiAgaXNKdXN0RGF0ZSxcbn0gZnJvbSAnLi91dGlscy9kYXRlcydcblxuY29uc3QgbG9jYWxlUHJvcFR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuY10pXG5cbmZ1bmN0aW9uIF9mb3JtYXQobG9jYWxpemVyLCBmb3JtYXR0ZXIsIHZhbHVlLCBmb3JtYXQsIGN1bHR1cmUpIHtcbiAgbGV0IHJlc3VsdCA9XG4gICAgdHlwZW9mIGZvcm1hdCA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgPyBmb3JtYXQodmFsdWUsIGN1bHR1cmUsIGxvY2FsaXplcilcbiAgICAgIDogZm9ybWF0dGVyLmNhbGwobG9jYWxpemVyLCB2YWx1ZSwgZm9ybWF0LCBjdWx0dXJlKVxuXG4gIGludmFyaWFudChcbiAgICByZXN1bHQgPT0gbnVsbCB8fCB0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJyxcbiAgICAnYGxvY2FsaXplciBmb3JtYXQoLi4pYCBtdXN0IHJldHVybiBhIHN0cmluZywgbnVsbCwgb3IgdW5kZWZpbmVkJ1xuICApXG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuXG4vKipcbiAqIFRoaXMgZGF0ZSBjb252ZXJzaW9uIHdhcyBtb3ZlZCBvdXQgb2YgVGltZVNsb3RzLmpzLCB0b1xuICogYWxsb3cgZm9yIGxvY2FsaXplciBvdmVycmlkZVxuICogQHBhcmFtIHtEYXRlfSBkdCAtIFRoZSBkYXRlIHRvIHN0YXJ0IGZyb21cbiAqIEBwYXJhbSB7TnVtYmVyfSBtaW51dGVzRnJvbU1pZG5pZ2h0XG4gKiBAcGFyYW0ge051bWJlcn0gb2Zmc2V0XG4gKiBAcmV0dXJucyB7RGF0ZX1cbiAqL1xuZnVuY3Rpb24gZ2V0U2xvdERhdGUoZHQsIG1pbnV0ZXNGcm9tTWlkbmlnaHQsIG9mZnNldCkge1xuICByZXR1cm4gbmV3IERhdGUoXG4gICAgZHQuZ2V0RnVsbFllYXIoKSxcbiAgICBkdC5nZXRNb250aCgpLFxuICAgIGR0LmdldERhdGUoKSxcbiAgICAwLFxuICAgIG1pbnV0ZXNGcm9tTWlkbmlnaHQgKyBvZmZzZXQsXG4gICAgMCxcbiAgICAwXG4gIClcbn1cblxuZnVuY3Rpb24gZ2V0RHN0T2Zmc2V0KHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIHN0YXJ0LmdldFRpbWV6b25lT2Zmc2V0KCkgLSBlbmQuZ2V0VGltZXpvbmVPZmZzZXQoKVxufVxuXG4vLyBpZiB0aGUgc3RhcnQgaXMgb24gYSBEU1QtY2hhbmdpbmcgZGF5IGJ1dCAqYWZ0ZXIqIHRoZSBtb21lbnQgb2YgRFNUXG4vLyB0cmFuc2l0aW9uIHdlIG5lZWQgdG8gYWRkIHRob3NlIGV4dHJhIG1pbnV0ZXMgdG8gb3VyIG1pbnV0ZXNGcm9tTWlkbmlnaHRcbmZ1bmN0aW9uIGdldFRvdGFsTWluKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIGRpZmYoc3RhcnQsIGVuZCwgJ21pbnV0ZXMnKSArIGdldERzdE9mZnNldChzdGFydCwgZW5kKVxufVxuXG5mdW5jdGlvbiBnZXRNaW51dGVzRnJvbU1pZG5pZ2h0KHN0YXJ0KSB7XG4gIGNvbnN0IGRheXN0YXJ0ID0gc3RhcnRPZihzdGFydCwgJ2RheScpXG4gIHJldHVybiBkaWZmKGRheXN0YXJ0LCBzdGFydCwgJ21pbnV0ZXMnKSArIGdldERzdE9mZnNldChkYXlzdGFydCwgc3RhcnQpXG59XG5cbi8vIFRoZXNlIHR3byBhcmUgdXNlZCBieSBEYXRlU2xvdE1ldHJpY3NcbmZ1bmN0aW9uIGNvbnRpbnVlc1ByaW9yKHN0YXJ0LCBmaXJzdCkge1xuICByZXR1cm4gbHQoc3RhcnQsIGZpcnN0LCAnZGF5Jylcbn1cblxuZnVuY3Rpb24gY29udGludWVzQWZ0ZXIoc3RhcnQsIGVuZCwgbGFzdCkge1xuICBjb25zdCBzaW5nbGVEYXlEdXJhdGlvbiA9IGVxKHN0YXJ0LCBlbmQsICdtaW51dGVzJylcbiAgcmV0dXJuIHNpbmdsZURheUR1cmF0aW9uXG4gICAgPyBndGUoZW5kLCBsYXN0LCAnbWludXRlcycpXG4gICAgOiBndChlbmQsIGxhc3QsICdtaW51dGVzJylcbn1cblxuZnVuY3Rpb24gZGF5U3BhbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiBkdXJhdGlvbihzdGFydCwgZW5kLCAnZGF5Jylcbn1cblxuLy8gVGhlc2UgdHdvIGFyZSB1c2VkIGJ5IGV2ZW50TGV2ZWxzXG5mdW5jdGlvbiBzb3J0RXZlbnRzKHtcbiAgZXZ0QTogeyBzdGFydDogYVN0YXJ0LCBlbmQ6IGFFbmQsIGFsbERheTogYUFsbERheSB9LFxuICBldnRCOiB7IHN0YXJ0OiBiU3RhcnQsIGVuZDogYkVuZCwgYWxsRGF5OiBiQWxsRGF5IH0sXG59KSB7XG4gIGxldCBzdGFydFNvcnQgPSArc3RhcnRPZihhU3RhcnQsICdkYXknKSAtICtzdGFydE9mKGJTdGFydCwgJ2RheScpXG5cbiAgbGV0IGR1ckEgPSBkYXlTcGFuKGFTdGFydCwgYUVuZClcblxuICBsZXQgZHVyQiA9IGRheVNwYW4oYlN0YXJ0LCBiRW5kKVxuXG4gIHJldHVybiAoXG4gICAgc3RhcnRTb3J0IHx8IC8vIHNvcnQgYnkgc3RhcnQgRGF5IGZpcnN0XG4gICAgZHVyQiAtIGR1ckEgfHwgLy8gZXZlbnRzIHNwYW5uaW5nIG11bHRpcGxlIGRheXMgZ28gZmlyc3RcbiAgICAhIWJBbGxEYXkgLSAhIWFBbGxEYXkgfHwgLy8gdGhlbiBhbGxEYXkgc2luZ2xlIGRheSBldmVudHNcbiAgICArYVN0YXJ0IC0gK2JTdGFydCB8fCAvLyB0aGVuIHNvcnQgYnkgc3RhcnQgdGltZVxuICAgICthRW5kIC0gK2JFbmQgLy8gdGhlbiBzb3J0IGJ5IGVuZCB0aW1lXG4gIClcbn1cblxuZnVuY3Rpb24gaW5FdmVudFJhbmdlKHtcbiAgZXZlbnQ6IHsgc3RhcnQsIGVuZCB9LFxuICByYW5nZTogeyBzdGFydDogcmFuZ2VTdGFydCwgZW5kOiByYW5nZUVuZCB9LFxufSkge1xuICBsZXQgZVN0YXJ0ID0gc3RhcnRPZihzdGFydCwgJ2RheScpXG5cbiAgbGV0IHN0YXJ0c0JlZm9yZUVuZCA9IGx0ZShlU3RhcnQsIHJhbmdlRW5kLCAnZGF5JylcbiAgLy8gd2hlbiB0aGUgZXZlbnQgaXMgemVybyBkdXJhdGlvbiB3ZSBuZWVkIHRvIGhhbmRsZSBhIGJpdCBkaWZmZXJlbnRseVxuICBjb25zdCBzYW1lTWluID0gbmVxKGVTdGFydCwgZW5kLCAnbWludXRlcycpXG4gIGxldCBlbmRzQWZ0ZXJTdGFydCA9IHNhbWVNaW5cbiAgICA/IGd0KGVuZCwgcmFuZ2VTdGFydCwgJ21pbnV0ZXMnKVxuICAgIDogZ3RlKGVuZCwgcmFuZ2VTdGFydCwgJ21pbnV0ZXMnKVxuICByZXR1cm4gc3RhcnRzQmVmb3JlRW5kICYmIGVuZHNBZnRlclN0YXJ0XG59XG5cbi8vIG90aGVyIGxvY2FsaXplcnMgdHJlYXRzICdkYXknIGFuZCAnZGF0ZScgZXF1YWxpdHkgdmVyeSBkaWZmZXJlbnRseSwgc28gd2Vcbi8vIGFic3RyYWN0IHRoZSBjaGFuZ2UgdGhlICdsb2NhbGl6ZXIuZXEoZGF0ZTEsIGRhdGUyLCAnZGF5JykgaW50byB0aGlzXG4vLyBuZXcgbWV0aG9kLCB3aGVyZSB0aGV5IGNhbiBiZSB0cmVhdGVkIGNvcnJlY3RseSBieSB0aGUgbG9jYWxpemVyIG92ZXJyaWRlc1xuZnVuY3Rpb24gaXNTYW1lRGF0ZShkYXRlMSwgZGF0ZTIpIHtcbiAgcmV0dXJuIGVxKGRhdGUxLCBkYXRlMiwgJ2RheScpXG59XG5cbmZ1bmN0aW9uIHN0YXJ0QW5kRW5kQXJlRGF0ZU9ubHkoc3RhcnQsIGVuZCkge1xuICByZXR1cm4gaXNKdXN0RGF0ZShzdGFydCkgJiYgaXNKdXN0RGF0ZShlbmQpXG59XG5cbmV4cG9ydCBjbGFzcyBEYXRlTG9jYWxpemVyIHtcbiAgY29uc3RydWN0b3Ioc3BlYykge1xuICAgIGludmFyaWFudChcbiAgICAgIHR5cGVvZiBzcGVjLmZvcm1hdCA9PT0gJ2Z1bmN0aW9uJyxcbiAgICAgICdkYXRlIGxvY2FsaXplciBgZm9ybWF0KC4uKWAgbXVzdCBiZSBhIGZ1bmN0aW9uJ1xuICAgIClcbiAgICBpbnZhcmlhbnQoXG4gICAgICB0eXBlb2Ygc3BlYy5maXJzdE9mV2VlayA9PT0gJ2Z1bmN0aW9uJyxcbiAgICAgICdkYXRlIGxvY2FsaXplciBgZmlyc3RPZldlZWsoLi4pYCBtdXN0IGJlIGEgZnVuY3Rpb24nXG4gICAgKVxuXG4gICAgdGhpcy5wcm9wVHlwZSA9IHNwZWMucHJvcFR5cGUgfHwgbG9jYWxlUHJvcFR5cGVcblxuICAgIHRoaXMuZm9ybWF0cyA9IHNwZWMuZm9ybWF0c1xuICAgIHRoaXMuZm9ybWF0ID0gKC4uLmFyZ3MpID0+IF9mb3JtYXQodGhpcywgc3BlYy5mb3JtYXQsIC4uLmFyZ3MpXG4gICAgLy8gVGhlc2UgZGF0ZSBhcml0aG1ldGljIG1ldGhvZHMgY2FuIGJlIG92ZXJyaWRlbiBieSB0aGUgbG9jYWxpemVyXG4gICAgdGhpcy5zdGFydE9mV2VlayA9IHNwZWMuZmlyc3RPZldlZWtcbiAgICB0aGlzLm1lcmdlID0gc3BlYy5tZXJnZSB8fCBtZXJnZVxuICAgIHRoaXMuaW5SYW5nZSA9IHNwZWMuaW5SYW5nZSB8fCBpblJhbmdlXG4gICAgdGhpcy5sdCA9IHNwZWMubHQgfHwgbHRcbiAgICB0aGlzLmx0ZSA9IHNwZWMubHRlIHx8IGx0ZVxuICAgIHRoaXMuZ3QgPSBzcGVjLmd0IHx8IGd0XG4gICAgdGhpcy5ndGUgPSBzcGVjLmd0ZSB8fCBndGVcbiAgICB0aGlzLmVxID0gc3BlYy5lcSB8fCBlcVxuICAgIHRoaXMubmVxID0gc3BlYy5uZXEgfHwgbmVxXG4gICAgdGhpcy5zdGFydE9mID0gc3BlYy5zdGFydE9mIHx8IHN0YXJ0T2ZcbiAgICB0aGlzLmVuZE9mID0gc3BlYy5lbmRPZiB8fCBlbmRPZlxuICAgIHRoaXMuYWRkID0gc3BlYy5hZGQgfHwgYWRkXG4gICAgdGhpcy5yYW5nZSA9IHNwZWMucmFuZ2UgfHwgcmFuZ2VcbiAgICB0aGlzLmRpZmYgPSBzcGVjLmRpZmYgfHwgZGlmZlxuICAgIHRoaXMuY2VpbCA9IHNwZWMuY2VpbCB8fCBjZWlsXG4gICAgdGhpcy5taW4gPSBzcGVjLm1pbiB8fCBtaW5cbiAgICB0aGlzLm1heCA9IHNwZWMubWF4IHx8IG1heFxuICAgIHRoaXMubWludXRlcyA9IHNwZWMubWludXRlcyB8fCBtaW51dGVzXG4gICAgdGhpcy5kYXlTcGFuID0gc3BlYy5kYXlTcGFuIHx8IGRheVNwYW5cbiAgICB0aGlzLmZpcnN0VmlzaWJsZURheSA9IHNwZWMuZmlyc3RWaXNpYmxlRGF5IHx8IGZpcnN0VmlzaWJsZURheVxuICAgIHRoaXMubGFzdFZpc2libGVEYXkgPSBzcGVjLmxhc3RWaXNpYmxlRGF5IHx8IGxhc3RWaXNpYmxlRGF5XG4gICAgdGhpcy52aXNpYmxlRGF5cyA9IHNwZWMudmlzaWJsZURheXMgfHwgdmlzaWJsZURheXNcblxuICAgIHRoaXMuZ2V0U2xvdERhdGUgPSBzcGVjLmdldFNsb3REYXRlIHx8IGdldFNsb3REYXRlXG4gICAgdGhpcy5nZXRUaW1lem9uZU9mZnNldCA9XG4gICAgICBzcGVjLmdldFRpbWV6b25lT2Zmc2V0IHx8ICgodmFsdWUpID0+IHZhbHVlLmdldFRpbWV6b25lT2Zmc2V0KCkpXG4gICAgdGhpcy5nZXREc3RPZmZzZXQgPSBzcGVjLmdldERzdE9mZnNldCB8fCBnZXREc3RPZmZzZXRcbiAgICB0aGlzLmdldFRvdGFsTWluID0gc3BlYy5nZXRUb3RhbE1pbiB8fCBnZXRUb3RhbE1pblxuICAgIHRoaXMuZ2V0TWludXRlc0Zyb21NaWRuaWdodCA9XG4gICAgICBzcGVjLmdldE1pbnV0ZXNGcm9tTWlkbmlnaHQgfHwgZ2V0TWludXRlc0Zyb21NaWRuaWdodFxuICAgIHRoaXMuY29udGludWVzUHJpb3IgPSBzcGVjLmNvbnRpbnVlc1ByaW9yIHx8IGNvbnRpbnVlc1ByaW9yXG4gICAgdGhpcy5jb250aW51ZXNBZnRlciA9IHNwZWMuY29udGludWVzQWZ0ZXIgfHwgY29udGludWVzQWZ0ZXJcbiAgICB0aGlzLnNvcnRFdmVudHMgPSBzcGVjLnNvcnRFdmVudHMgfHwgc29ydEV2ZW50c1xuICAgIHRoaXMuaW5FdmVudFJhbmdlID0gc3BlYy5pbkV2ZW50UmFuZ2UgfHwgaW5FdmVudFJhbmdlXG4gICAgdGhpcy5pc1NhbWVEYXRlID0gc3BlYy5pc1NhbWVEYXRlIHx8IGlzU2FtZURhdGVcbiAgICB0aGlzLnN0YXJ0QW5kRW5kQXJlRGF0ZU9ubHkgPVxuICAgICAgc3BlYy5zdGFydEFuZEVuZEFyZURhdGVPbmx5IHx8IHN0YXJ0QW5kRW5kQXJlRGF0ZU9ubHlcbiAgICB0aGlzLnNlZ21lbnRPZmZzZXQgPSBzcGVjLmJyb3dzZXJUWk9mZnNldCA/IHNwZWMuYnJvd3NlclRaT2Zmc2V0KCkgOiAwXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlV2l0aERlZmF1bHRzKFxuICBsb2NhbGl6ZXIsXG4gIGN1bHR1cmUsXG4gIGZvcm1hdE92ZXJyaWRlcyxcbiAgbWVzc2FnZXNcbikge1xuICBjb25zdCBmb3JtYXRzID0ge1xuICAgIC4uLmxvY2FsaXplci5mb3JtYXRzLFxuICAgIC4uLmZvcm1hdE92ZXJyaWRlcyxcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgLi4ubG9jYWxpemVyLFxuICAgIG1lc3NhZ2VzLFxuICAgIHN0YXJ0T2ZXZWVrOiAoKSA9PiBsb2NhbGl6ZXIuc3RhcnRPZldlZWsoY3VsdHVyZSksXG4gICAgZm9ybWF0OiAodmFsdWUsIGZvcm1hdCkgPT5cbiAgICAgIGxvY2FsaXplci5mb3JtYXQodmFsdWUsIGZvcm1hdHNbZm9ybWF0XSB8fCBmb3JtYXQsIGN1bHR1cmUpLFxuICB9XG59XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4J1xuaW1wb3J0IHsgbmF2aWdhdGUgfSBmcm9tICcuL3V0aWxzL2NvbnN0YW50cydcblxuY2xhc3MgVG9vbGJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBsZXQge1xuICAgICAgbG9jYWxpemVyOiB7IG1lc3NhZ2VzIH0sXG4gICAgICBsYWJlbCxcbiAgICB9ID0gdGhpcy5wcm9wc1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmJjLXRvb2xiYXJcIj5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicmJjLWJ0bi1ncm91cFwiPlxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgb25DbGljaz17dGhpcy5uYXZpZ2F0ZS5iaW5kKG51bGwsIG5hdmlnYXRlLlRPREFZKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7bWVzc2FnZXMudG9kYXl9XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBvbkNsaWNrPXt0aGlzLm5hdmlnYXRlLmJpbmQobnVsbCwgbmF2aWdhdGUuUFJFVklPVVMpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHttZXNzYWdlcy5wcmV2aW91c31cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMubmF2aWdhdGUuYmluZChudWxsLCBuYXZpZ2F0ZS5ORVhUKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7bWVzc2FnZXMubmV4dH1cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInJiYy10b29sYmFyLWxhYmVsXCI+e2xhYmVsfTwvc3Bhbj5cblxuICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJyYmMtYnRuLWdyb3VwXCI+e3RoaXMudmlld05hbWVzR3JvdXAobWVzc2FnZXMpfTwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuXG4gIG5hdmlnYXRlID0gKGFjdGlvbikgPT4ge1xuICAgIHRoaXMucHJvcHMub25OYXZpZ2F0ZShhY3Rpb24pXG4gIH1cblxuICB2aWV3ID0gKHZpZXcpID0+IHtcbiAgICB0aGlzLnByb3BzLm9uVmlldyh2aWV3KVxuICB9XG5cbiAgdmlld05hbWVzR3JvdXAobWVzc2FnZXMpIHtcbiAgICBsZXQgdmlld05hbWVzID0gdGhpcy5wcm9wcy52aWV3c1xuICAgIGNvbnN0IHZpZXcgPSB0aGlzLnByb3BzLnZpZXdcblxuICAgIGlmICh2aWV3TmFtZXMubGVuZ3RoID4gMSkge1xuICAgICAgcmV0dXJuIHZpZXdOYW1lcy5tYXAoKG5hbWUpID0+IChcbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgIGtleT17bmFtZX1cbiAgICAgICAgICBjbGFzc05hbWU9e2Nsc3goeyAncmJjLWFjdGl2ZSc6IHZpZXcgPT09IG5hbWUgfSl9XG4gICAgICAgICAgb25DbGljaz17dGhpcy52aWV3LmJpbmQobnVsbCwgbmFtZSl9XG4gICAgICAgID5cbiAgICAgICAgICB7bWVzc2FnZXNbbmFtZV19XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgKSlcbiAgICB9XG4gIH1cbn1cblxuVG9vbGJhci5wcm9wVHlwZXMgPSB7XG4gIHZpZXc6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgdmlld3M6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpLmlzUmVxdWlyZWQsXG4gIGxhYmVsOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5vYmplY3QsXG4gIG9uTmF2aWdhdGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIG9uVmlldzogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbn1cblxuZXhwb3J0IGRlZmF1bHQgVG9vbGJhclxuIiwibGV0IGRlZmF1bHRNZXNzYWdlcyA9IHtcbiAgZGF0ZTogJ0RhdGUnLFxuICB0aW1lOiAnVGltZScsXG4gIGV2ZW50OiAnRXZlbnQnLFxuICBhbGxEYXk6ICdBbGwgRGF5JyxcbiAgd2VlazogJ1dlZWsnLFxuICB3b3JrX3dlZWs6ICdXb3JrIFdlZWsnLFxuICBkYXk6ICdEYXknLFxuICBtb250aDogJ01vbnRoJyxcbiAgcHJldmlvdXM6ICdCYWNrJyxcbiAgbmV4dDogJ05leHQnLFxuICB5ZXN0ZXJkYXk6ICdZZXN0ZXJkYXknLFxuICB0b21vcnJvdzogJ1RvbW9ycm93JyxcbiAgdG9kYXk6ICdUb2RheScsXG4gIGFnZW5kYTogJ0FnZW5kYScsXG5cbiAgbm9FdmVudHNJblJhbmdlOiAnVGhlcmUgYXJlIG5vIGV2ZW50cyBpbiB0aGlzIHJhbmdlLicsXG5cbiAgc2hvd01vcmU6ICh0b3RhbCkgPT4gYCske3RvdGFsfSBtb3JlYCxcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVzc2FnZXMobXNncykge1xuICByZXR1cm4ge1xuICAgIC4uLmRlZmF1bHRNZXNzYWdlcyxcbiAgICAuLi5tc2dzLFxuICB9XG59XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmNvbnN0IERhdGVIZWFkZXIgPSAoeyBsYWJlbCwgZHJpbGxkb3duVmlldywgb25EcmlsbERvd24gfSkgPT4ge1xuICBpZiAoIWRyaWxsZG93blZpZXcpIHtcbiAgICByZXR1cm4gPHNwYW4+e2xhYmVsfTwvc3Bhbj5cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwicmJjLWJ1dHRvbi1saW5rXCIgb25DbGljaz17b25EcmlsbERvd259PlxuICAgICAge2xhYmVsfVxuICAgIDwvYnV0dG9uPlxuICApXG59XG5cbkRhdGVIZWFkZXIucHJvcFR5cGVzID0ge1xuICBsYWJlbDogUHJvcFR5cGVzLm5vZGUsXG4gIGRhdGU6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuICBkcmlsbGRvd25WaWV3OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBvbkRyaWxsRG93bjogUHJvcFR5cGVzLmZ1bmMsXG4gIGlzT2ZmUmFuZ2U6IFByb3BUeXBlcy5ib29sLFxufVxuXG5leHBvcnQgZGVmYXVsdCBEYXRlSGVhZGVyXG4iLCJpbXBvcnQgUmVhY3QsIHsgY3JlYXRlUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4J1xuXG5pbXBvcnQgY2h1bmsgZnJvbSAnbG9kYXNoL2NodW5rJ1xuXG5pbXBvcnQgeyBuYXZpZ2F0ZSwgdmlld3MgfSBmcm9tICcuL3V0aWxzL2NvbnN0YW50cydcbmltcG9ydCB7IG5vdGlmeSB9IGZyb20gJy4vdXRpbHMvaGVscGVycydcbmltcG9ydCBnZXRQb3NpdGlvbiBmcm9tICdkb20taGVscGVycy9wb3NpdGlvbidcbmltcG9ydCAqIGFzIGFuaW1hdGlvbkZyYW1lIGZyb20gJ2RvbS1oZWxwZXJzL2FuaW1hdGlvbkZyYW1lJ1xuXG4vKiBpbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cCdcbmltcG9ydCBPdmVybGF5IGZyb20gJ3JlYWN0LW92ZXJsYXlzL092ZXJsYXknICovXG5pbXBvcnQgUG9wT3ZlcmxheSBmcm9tICcuL1BvcE92ZXJsYXknXG5pbXBvcnQgRGF0ZUNvbnRlbnRSb3cgZnJvbSAnLi9EYXRlQ29udGVudFJvdydcbmltcG9ydCBIZWFkZXIgZnJvbSAnLi9IZWFkZXInXG5pbXBvcnQgRGF0ZUhlYWRlciBmcm9tICcuL0RhdGVIZWFkZXInXG5cbmltcG9ydCB7IGluUmFuZ2UsIHNvcnRXZWVrRXZlbnRzIH0gZnJvbSAnLi91dGlscy9ldmVudExldmVscydcblxubGV0IGV2ZW50c0ZvcldlZWsgPSAoZXZ0cywgc3RhcnQsIGVuZCwgYWNjZXNzb3JzLCBsb2NhbGl6ZXIpID0+XG4gIGV2dHMuZmlsdGVyKChlKSA9PiBpblJhbmdlKGUsIHN0YXJ0LCBlbmQsIGFjY2Vzc29ycywgbG9jYWxpemVyKSlcblxuY2xhc3MgTW9udGhWaWV3IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpXG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgcm93TGltaXQ6IDUsXG4gICAgICBuZWVkTGltaXRNZWFzdXJlOiB0cnVlLFxuICAgICAgZGF0ZTogbnVsbCxcbiAgICB9XG4gICAgdGhpcy5jb250YWluZXJSZWYgPSBjcmVhdGVSZWYoKVxuICAgIHRoaXMuc2xvdFJvd1JlZiA9IGNyZWF0ZVJlZigpXG5cbiAgICB0aGlzLl9iZ1Jvd3MgPSBbXVxuICAgIHRoaXMuX3BlbmRpbmdTZWxlY3Rpb24gPSBbXVxuICB9XG5cbiAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyh7IGRhdGUsIGxvY2FsaXplciB9LCBzdGF0ZSkge1xuICAgIHJldHVybiB7XG4gICAgICBkYXRlLFxuICAgICAgbmVlZExpbWl0TWVhc3VyZTogbG9jYWxpemVyLm5lcShkYXRlLCBzdGF0ZS5kYXRlLCAnbW9udGgnKSxcbiAgICB9XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBsZXQgcnVubmluZ1xuXG4gICAgaWYgKHRoaXMuc3RhdGUubmVlZExpbWl0TWVhc3VyZSkgdGhpcy5tZWFzdXJlUm93TGltaXQodGhpcy5wcm9wcylcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgJ3Jlc2l6ZScsXG4gICAgICAodGhpcy5fcmVzaXplTGlzdGVuZXIgPSAoKSA9PiB7XG4gICAgICAgIGlmICghcnVubmluZykge1xuICAgICAgICAgIGFuaW1hdGlvbkZyYW1lLnJlcXVlc3QoKCkgPT4ge1xuICAgICAgICAgICAgcnVubmluZyA9IGZhbHNlXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgbmVlZExpbWl0TWVhc3VyZTogdHJ1ZSB9KSAvL2VzbGludC1kaXNhYmxlLWxpbmVcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9KSxcbiAgICAgIGZhbHNlXG4gICAgKVxuICB9XG5cbiAgY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgIGlmICh0aGlzLnN0YXRlLm5lZWRMaW1pdE1lYXN1cmUpIHRoaXMubWVhc3VyZVJvd0xpbWl0KHRoaXMucHJvcHMpXG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5fcmVzaXplTGlzdGVuZXIsIGZhbHNlKVxuICB9XG5cbiAgZ2V0Q29udGFpbmVyID0gKCkgPT4ge1xuICAgIHJldHVybiB0aGlzLmNvbnRhaW5lclJlZi5jdXJyZW50XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgbGV0IHsgZGF0ZSwgbG9jYWxpemVyLCBjbGFzc05hbWUgfSA9IHRoaXMucHJvcHMsXG4gICAgICBtb250aCA9IGxvY2FsaXplci52aXNpYmxlRGF5cyhkYXRlLCBsb2NhbGl6ZXIpLFxuICAgICAgd2Vla3MgPSBjaHVuayhtb250aCwgNylcblxuICAgIHRoaXMuX3dlZWtDb3VudCA9IHdlZWtzLmxlbmd0aFxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPXtjbHN4KCdyYmMtbW9udGgtdmlldycsIGNsYXNzTmFtZSl9XG4gICAgICAgIHJvbGU9XCJ0YWJsZVwiXG4gICAgICAgIGFyaWEtbGFiZWw9XCJNb250aCBWaWV3XCJcbiAgICAgICAgcmVmPXt0aGlzLmNvbnRhaW5lclJlZn1cbiAgICAgID5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyYmMtcm93IHJiYy1tb250aC1oZWFkZXJcIiByb2xlPVwicm93XCI+XG4gICAgICAgICAge3RoaXMucmVuZGVySGVhZGVycyh3ZWVrc1swXSl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7d2Vla3MubWFwKHRoaXMucmVuZGVyV2Vlayl9XG4gICAgICAgIHt0aGlzLnByb3BzLnBvcHVwICYmIHRoaXMucmVuZGVyT3ZlcmxheSgpfVxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG5cbiAgcmVuZGVyV2VlayA9ICh3ZWVrLCB3ZWVrSWR4KSA9PiB7XG4gICAgbGV0IHtcbiAgICAgIGV2ZW50cyxcbiAgICAgIGNvbXBvbmVudHMsXG4gICAgICBzZWxlY3RhYmxlLFxuICAgICAgZ2V0Tm93LFxuICAgICAgc2VsZWN0ZWQsXG4gICAgICBkYXRlLFxuICAgICAgbG9jYWxpemVyLFxuICAgICAgbG9uZ1ByZXNzVGhyZXNob2xkLFxuICAgICAgYWNjZXNzb3JzLFxuICAgICAgZ2V0dGVycyxcbiAgICAgIHNob3dBbGxFdmVudHMsXG4gICAgfSA9IHRoaXMucHJvcHNcblxuICAgIGNvbnN0IHsgbmVlZExpbWl0TWVhc3VyZSwgcm93TGltaXQgfSA9IHRoaXMuc3RhdGVcblxuICAgIC8vIGxldCdzIG5vdCBtdXRhdGUgcHJvcHNcbiAgICBjb25zdCB3ZWVrc0V2ZW50cyA9IGV2ZW50c0ZvcldlZWsoXG4gICAgICBbLi4uZXZlbnRzXSxcbiAgICAgIHdlZWtbMF0sXG4gICAgICB3ZWVrW3dlZWsubGVuZ3RoIC0gMV0sXG4gICAgICBhY2Nlc3NvcnMsXG4gICAgICBsb2NhbGl6ZXJcbiAgICApXG5cbiAgICBjb25zdCBzb3J0ZWQgPSBzb3J0V2Vla0V2ZW50cyh3ZWVrc0V2ZW50cywgYWNjZXNzb3JzLCBsb2NhbGl6ZXIpXG5cbiAgICByZXR1cm4gKFxuICAgICAgPERhdGVDb250ZW50Um93XG4gICAgICAgIGtleT17d2Vla0lkeH1cbiAgICAgICAgcmVmPXt3ZWVrSWR4ID09PSAwID8gdGhpcy5zbG90Um93UmVmIDogdW5kZWZpbmVkfVxuICAgICAgICBjb250YWluZXI9e3RoaXMuZ2V0Q29udGFpbmVyfVxuICAgICAgICBjbGFzc05hbWU9XCJyYmMtbW9udGgtcm93XCJcbiAgICAgICAgZ2V0Tm93PXtnZXROb3d9XG4gICAgICAgIGRhdGU9e2RhdGV9XG4gICAgICAgIHJhbmdlPXt3ZWVrfVxuICAgICAgICBldmVudHM9e3NvcnRlZH1cbiAgICAgICAgbWF4Um93cz17c2hvd0FsbEV2ZW50cyA/IEluZmluaXR5IDogcm93TGltaXR9XG4gICAgICAgIHNlbGVjdGVkPXtzZWxlY3RlZH1cbiAgICAgICAgc2VsZWN0YWJsZT17c2VsZWN0YWJsZX1cbiAgICAgICAgY29tcG9uZW50cz17Y29tcG9uZW50c31cbiAgICAgICAgYWNjZXNzb3JzPXthY2Nlc3NvcnN9XG4gICAgICAgIGdldHRlcnM9e2dldHRlcnN9XG4gICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICByZW5kZXJIZWFkZXI9e3RoaXMucmVhZGVyRGF0ZUhlYWRpbmd9XG4gICAgICAgIHJlbmRlckZvck1lYXN1cmU9e25lZWRMaW1pdE1lYXN1cmV9XG4gICAgICAgIG9uU2hvd01vcmU9e3RoaXMuaGFuZGxlU2hvd01vcmV9XG4gICAgICAgIG9uU2VsZWN0PXt0aGlzLmhhbmRsZVNlbGVjdEV2ZW50fVxuICAgICAgICBvbkRvdWJsZUNsaWNrPXt0aGlzLmhhbmRsZURvdWJsZUNsaWNrRXZlbnR9XG4gICAgICAgIG9uS2V5UHJlc3M9e3RoaXMuaGFuZGxlS2V5UHJlc3NFdmVudH1cbiAgICAgICAgb25TZWxlY3RTbG90PXt0aGlzLmhhbmRsZVNlbGVjdFNsb3R9XG4gICAgICAgIGxvbmdQcmVzc1RocmVzaG9sZD17bG9uZ1ByZXNzVGhyZXNob2xkfVxuICAgICAgICBydGw9e3RoaXMucHJvcHMucnRsfVxuICAgICAgICByZXNpemFibGU9e3RoaXMucHJvcHMucmVzaXphYmxlfVxuICAgICAgICBzaG93QWxsRXZlbnRzPXtzaG93QWxsRXZlbnRzfVxuICAgICAgLz5cbiAgICApXG4gIH1cblxuICByZWFkZXJEYXRlSGVhZGluZyA9ICh7IGRhdGUsIGNsYXNzTmFtZSwgLi4ucHJvcHMgfSkgPT4ge1xuICAgIGxldCB7IGRhdGU6IGN1cnJlbnREYXRlLCBnZXREcmlsbGRvd25WaWV3LCBsb2NhbGl6ZXIgfSA9IHRoaXMucHJvcHNcbiAgICBsZXQgaXNPZmZSYW5nZSA9IGxvY2FsaXplci5uZXEoZGF0ZSwgY3VycmVudERhdGUsICdtb250aCcpXG4gICAgbGV0IGlzQ3VycmVudCA9IGxvY2FsaXplci5pc1NhbWVEYXRlKGRhdGUsIGN1cnJlbnREYXRlKVxuICAgIGxldCBkcmlsbGRvd25WaWV3ID0gZ2V0RHJpbGxkb3duVmlldyhkYXRlKVxuICAgIGxldCBsYWJlbCA9IGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ2RhdGVGb3JtYXQnKVxuICAgIGxldCBEYXRlSGVhZGVyQ29tcG9uZW50ID0gdGhpcy5wcm9wcy5jb21wb25lbnRzLmRhdGVIZWFkZXIgfHwgRGF0ZUhlYWRlclxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgICBjbGFzc05hbWU9e2Nsc3goXG4gICAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAgIGlzT2ZmUmFuZ2UgJiYgJ3JiYy1vZmYtcmFuZ2UnLFxuICAgICAgICAgIGlzQ3VycmVudCAmJiAncmJjLWN1cnJlbnQnXG4gICAgICAgICl9XG4gICAgICAgIHJvbGU9XCJjZWxsXCJcbiAgICAgID5cbiAgICAgICAgPERhdGVIZWFkZXJDb21wb25lbnRcbiAgICAgICAgICBsYWJlbD17bGFiZWx9XG4gICAgICAgICAgZGF0ZT17ZGF0ZX1cbiAgICAgICAgICBkcmlsbGRvd25WaWV3PXtkcmlsbGRvd25WaWV3fVxuICAgICAgICAgIGlzT2ZmUmFuZ2U9e2lzT2ZmUmFuZ2V9XG4gICAgICAgICAgb25EcmlsbERvd249eyhlKSA9PiB0aGlzLmhhbmRsZUhlYWRpbmdDbGljayhkYXRlLCBkcmlsbGRvd25WaWV3LCBlKX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuXG4gIHJlbmRlckhlYWRlcnMocm93KSB7XG4gICAgbGV0IHsgbG9jYWxpemVyLCBjb21wb25lbnRzIH0gPSB0aGlzLnByb3BzXG4gICAgbGV0IGZpcnN0ID0gcm93WzBdXG4gICAgbGV0IGxhc3QgPSByb3dbcm93Lmxlbmd0aCAtIDFdXG4gICAgbGV0IEhlYWRlckNvbXBvbmVudCA9IGNvbXBvbmVudHMuaGVhZGVyIHx8IEhlYWRlclxuXG4gICAgcmV0dXJuIGxvY2FsaXplci5yYW5nZShmaXJzdCwgbGFzdCwgJ2RheScpLm1hcCgoZGF5LCBpZHgpID0+IChcbiAgICAgIDxkaXYga2V5PXsnaGVhZGVyXycgKyBpZHh9IGNsYXNzTmFtZT1cInJiYy1oZWFkZXJcIj5cbiAgICAgICAgPEhlYWRlckNvbXBvbmVudFxuICAgICAgICAgIGRhdGU9e2RheX1cbiAgICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgICBsYWJlbD17bG9jYWxpemVyLmZvcm1hdChkYXksICd3ZWVrZGF5Rm9ybWF0Jyl9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICApKVxuICB9XG5cbiAgcmVuZGVyT3ZlcmxheSgpIHtcbiAgICBsZXQgb3ZlcmxheSA9IHRoaXMuc3RhdGU/Lm92ZXJsYXkgPz8ge31cbiAgICBsZXQge1xuICAgICAgYWNjZXNzb3JzLFxuICAgICAgbG9jYWxpemVyLFxuICAgICAgY29tcG9uZW50cyxcbiAgICAgIGdldHRlcnMsXG4gICAgICBzZWxlY3RlZCxcbiAgICAgIHBvcHVwT2Zmc2V0LFxuICAgICAgaGFuZGxlRHJhZ1N0YXJ0LFxuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICBjb25zdCBvbkhpZGUgPSAoKSA9PiB0aGlzLnNldFN0YXRlKHsgb3ZlcmxheTogbnVsbCB9KVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxQb3BPdmVybGF5XG4gICAgICAgIG92ZXJsYXk9e292ZXJsYXl9XG4gICAgICAgIGFjY2Vzc29ycz17YWNjZXNzb3JzfVxuICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgY29tcG9uZW50cz17Y29tcG9uZW50c31cbiAgICAgICAgZ2V0dGVycz17Z2V0dGVyc31cbiAgICAgICAgc2VsZWN0ZWQ9e3NlbGVjdGVkfVxuICAgICAgICBwb3B1cE9mZnNldD17cG9wdXBPZmZzZXR9XG4gICAgICAgIHJlZj17dGhpcy5jb250YWluZXJSZWZ9XG4gICAgICAgIGhhbmRsZUtleVByZXNzRXZlbnQ9e3RoaXMuaGFuZGxlS2V5UHJlc3NFdmVudH1cbiAgICAgICAgaGFuZGxlU2VsZWN0RXZlbnQ9e3RoaXMuaGFuZGxlU2VsZWN0RXZlbnR9XG4gICAgICAgIGhhbmRsZURvdWJsZUNsaWNrRXZlbnQ9e3RoaXMuaGFuZGxlRG91YmxlQ2xpY2tFdmVudH1cbiAgICAgICAgaGFuZGxlRHJhZ1N0YXJ0PXtoYW5kbGVEcmFnU3RhcnR9XG4gICAgICAgIHNob3c9eyEhb3ZlcmxheS5wb3NpdGlvbn1cbiAgICAgICAgb3ZlcmxheURpc3BsYXk9e3RoaXMub3ZlcmxheURpc3BsYXl9XG4gICAgICAgIG9uSGlkZT17b25IaWRlfVxuICAgICAgLz5cbiAgICApXG5cbiAgICAvKiByZXR1cm4gKFxuICAgICAgPE92ZXJsYXlcbiAgICAgICAgcm9vdENsb3NlXG4gICAgICAgIHBsYWNlbWVudD1cImJvdHRvbVwiXG4gICAgICAgIHNob3c9eyEhb3ZlcmxheS5wb3NpdGlvbn1cbiAgICAgICAgb25IaWRlPXsoKSA9PiB0aGlzLnNldFN0YXRlKHsgb3ZlcmxheTogbnVsbCB9KX1cbiAgICAgICAgdGFyZ2V0PXsoKSA9PiBvdmVybGF5LnRhcmdldH1cbiAgICAgID5cbiAgICAgICAgeyh7IHByb3BzIH0pID0+IChcbiAgICAgICAgICA8UG9wdXBcbiAgICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICAgIHBvcHVwT2Zmc2V0PXtwb3B1cE9mZnNldH1cbiAgICAgICAgICAgIGFjY2Vzc29ycz17YWNjZXNzb3JzfVxuICAgICAgICAgICAgZ2V0dGVycz17Z2V0dGVyc31cbiAgICAgICAgICAgIHNlbGVjdGVkPXtzZWxlY3RlZH1cbiAgICAgICAgICAgIGNvbXBvbmVudHM9e2NvbXBvbmVudHN9XG4gICAgICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgICAgIHBvc2l0aW9uPXtvdmVybGF5LnBvc2l0aW9ufVxuICAgICAgICAgICAgc2hvdz17dGhpcy5vdmVybGF5RGlzcGxheX1cbiAgICAgICAgICAgIGV2ZW50cz17b3ZlcmxheS5ldmVudHN9XG4gICAgICAgICAgICBzbG90U3RhcnQ9e292ZXJsYXkuZGF0ZX1cbiAgICAgICAgICAgIHNsb3RFbmQ9e292ZXJsYXkuZW5kfVxuICAgICAgICAgICAgb25TZWxlY3Q9e3RoaXMuaGFuZGxlU2VsZWN0RXZlbnR9XG4gICAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0aGlzLmhhbmRsZURvdWJsZUNsaWNrRXZlbnR9XG4gICAgICAgICAgICBvbktleVByZXNzPXt0aGlzLmhhbmRsZUtleVByZXNzRXZlbnR9XG4gICAgICAgICAgICBoYW5kbGVEcmFnU3RhcnQ9e3RoaXMucHJvcHMuaGFuZGxlRHJhZ1N0YXJ0fVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICA8L092ZXJsYXk+XG4gICAgKSAqL1xuICB9XG5cbiAgbWVhc3VyZVJvd0xpbWl0KCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgbmVlZExpbWl0TWVhc3VyZTogZmFsc2UsXG4gICAgICByb3dMaW1pdDogdGhpcy5zbG90Um93UmVmLmN1cnJlbnQuZ2V0Um93TGltaXQoKSxcbiAgICB9KVxuICB9XG5cbiAgaGFuZGxlU2VsZWN0U2xvdCA9IChyYW5nZSwgc2xvdEluZm8pID0+IHtcbiAgICB0aGlzLl9wZW5kaW5nU2VsZWN0aW9uID0gdGhpcy5fcGVuZGluZ1NlbGVjdGlvbi5jb25jYXQocmFuZ2UpXG5cbiAgICBjbGVhclRpbWVvdXQodGhpcy5fc2VsZWN0VGltZXIpXG4gICAgdGhpcy5fc2VsZWN0VGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHRoaXMuc2VsZWN0RGF0ZXMoc2xvdEluZm8pKVxuICB9XG5cbiAgaGFuZGxlSGVhZGluZ0NsaWNrID0gKGRhdGUsIHZpZXcsIGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKClcbiAgICBub3RpZnkodGhpcy5wcm9wcy5vbkRyaWxsRG93biwgW2RhdGUsIHZpZXddKVxuICB9XG5cbiAgaGFuZGxlU2VsZWN0RXZlbnQgPSAoLi4uYXJncykgPT4ge1xuICAgIHRoaXMuY2xlYXJTZWxlY3Rpb24oKVxuICAgIG5vdGlmeSh0aGlzLnByb3BzLm9uU2VsZWN0RXZlbnQsIGFyZ3MpXG4gIH1cblxuICBoYW5kbGVEb3VibGVDbGlja0V2ZW50ID0gKC4uLmFyZ3MpID0+IHtcbiAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKClcbiAgICBub3RpZnkodGhpcy5wcm9wcy5vbkRvdWJsZUNsaWNrRXZlbnQsIGFyZ3MpXG4gIH1cblxuICBoYW5kbGVLZXlQcmVzc0V2ZW50ID0gKC4uLmFyZ3MpID0+IHtcbiAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKClcbiAgICBub3RpZnkodGhpcy5wcm9wcy5vbktleVByZXNzRXZlbnQsIGFyZ3MpXG4gIH1cblxuICBoYW5kbGVTaG93TW9yZSA9IChldmVudHMsIGRhdGUsIGNlbGwsIHNsb3QsIHRhcmdldCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIHBvcHVwLFxuICAgICAgb25EcmlsbERvd24sXG4gICAgICBvblNob3dNb3JlLFxuICAgICAgZ2V0RHJpbGxkb3duVmlldyxcbiAgICAgIGRvU2hvd01vcmVEcmlsbERvd24sXG4gICAgfSA9IHRoaXMucHJvcHNcbiAgICAvL2NhbmNlbCBhbnkgcGVuZGluZyBzZWxlY3Rpb25zIHNvIG9ubHkgdGhlIGV2ZW50IGNsaWNrIGdvZXMgdGhyb3VnaC5cbiAgICB0aGlzLmNsZWFyU2VsZWN0aW9uKClcblxuICAgIGlmIChwb3B1cCkge1xuICAgICAgbGV0IHBvc2l0aW9uID0gZ2V0UG9zaXRpb24oY2VsbCwgdGhpcy5jb250YWluZXJSZWYuY3VycmVudClcblxuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIG92ZXJsYXk6IHsgZGF0ZSwgZXZlbnRzLCBwb3NpdGlvbiwgdGFyZ2V0IH0sXG4gICAgICB9KVxuICAgIH0gZWxzZSBpZiAoZG9TaG93TW9yZURyaWxsRG93bikge1xuICAgICAgbm90aWZ5KG9uRHJpbGxEb3duLCBbZGF0ZSwgZ2V0RHJpbGxkb3duVmlldyhkYXRlKSB8fCB2aWV3cy5EQVldKVxuICAgIH1cblxuICAgIG5vdGlmeShvblNob3dNb3JlLCBbZXZlbnRzLCBkYXRlLCBzbG90XSlcbiAgfVxuXG4gIG92ZXJsYXlEaXNwbGF5ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgb3ZlcmxheTogbnVsbCxcbiAgICB9KVxuICB9XG5cbiAgc2VsZWN0RGF0ZXMoc2xvdEluZm8pIHtcbiAgICBsZXQgc2xvdHMgPSB0aGlzLl9wZW5kaW5nU2VsZWN0aW9uLnNsaWNlKClcblxuICAgIHRoaXMuX3BlbmRpbmdTZWxlY3Rpb24gPSBbXVxuXG4gICAgc2xvdHMuc29ydCgoYSwgYikgPT4gK2EgLSArYilcblxuICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoc2xvdHNbMF0pXG4gICAgY29uc3QgZW5kID0gbmV3IERhdGUoc2xvdHNbc2xvdHMubGVuZ3RoIC0gMV0pXG4gICAgZW5kLnNldERhdGUoc2xvdHNbc2xvdHMubGVuZ3RoIC0gMV0uZ2V0RGF0ZSgpICsgMSlcblxuICAgIG5vdGlmeSh0aGlzLnByb3BzLm9uU2VsZWN0U2xvdCwge1xuICAgICAgc2xvdHMsXG4gICAgICBzdGFydCxcbiAgICAgIGVuZCxcbiAgICAgIGFjdGlvbjogc2xvdEluZm8uYWN0aW9uLFxuICAgICAgYm91bmRzOiBzbG90SW5mby5ib3VuZHMsXG4gICAgICBib3g6IHNsb3RJbmZvLmJveCxcbiAgICB9KVxuICB9XG5cbiAgY2xlYXJTZWxlY3Rpb24oKSB7XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMuX3NlbGVjdFRpbWVyKVxuICAgIHRoaXMuX3BlbmRpbmdTZWxlY3Rpb24gPSBbXVxuICB9XG59XG5cbk1vbnRoVmlldy5wcm9wVHlwZXMgPSB7XG4gIGV2ZW50czogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gIGRhdGU6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuXG4gIG1pbjogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG4gIG1heDogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG5cbiAgc3RlcDogUHJvcFR5cGVzLm51bWJlcixcbiAgZ2V0Tm93OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuXG4gIHNjcm9sbFRvVGltZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG4gIGVuYWJsZUF1dG9TY3JvbGw6IFByb3BUeXBlcy5ib29sLFxuICBydGw6IFByb3BUeXBlcy5ib29sLFxuICByZXNpemFibGU6IFByb3BUeXBlcy5ib29sLFxuICB3aWR0aDogUHJvcFR5cGVzLm51bWJlcixcblxuICBhY2Nlc3NvcnM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgY29tcG9uZW50czogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBnZXR0ZXJzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGxvY2FsaXplcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuXG4gIHNlbGVjdGVkOiBQcm9wVHlwZXMub2JqZWN0LFxuICBzZWxlY3RhYmxlOiBQcm9wVHlwZXMub25lT2YoW3RydWUsIGZhbHNlLCAnaWdub3JlRXZlbnRzJ10pLFxuICBsb25nUHJlc3NUaHJlc2hvbGQ6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgb25OYXZpZ2F0ZTogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0U2xvdDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0RXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICBvbkRvdWJsZUNsaWNrRXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICBvbktleVByZXNzRXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICBvblNob3dNb3JlOiBQcm9wVHlwZXMuZnVuYyxcbiAgc2hvd0FsbEV2ZW50czogUHJvcFR5cGVzLmJvb2wsXG4gIGRvU2hvd01vcmVEcmlsbERvd246IFByb3BUeXBlcy5ib29sLFxuICBvbkRyaWxsRG93bjogUHJvcFR5cGVzLmZ1bmMsXG4gIGdldERyaWxsZG93blZpZXc6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG5cbiAgcG9wdXA6IFByb3BUeXBlcy5ib29sLFxuICBoYW5kbGVEcmFnU3RhcnQ6IFByb3BUeXBlcy5mdW5jLFxuXG4gIHBvcHVwT2Zmc2V0OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICBQcm9wVHlwZXMubnVtYmVyLFxuICAgIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICB4OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgICAgeTogUHJvcFR5cGVzLm51bWJlcixcbiAgICB9KSxcbiAgXSksXG59XG5cbk1vbnRoVmlldy5yYW5nZSA9IChkYXRlLCB7IGxvY2FsaXplciB9KSA9PiB7XG4gIGxldCBzdGFydCA9IGxvY2FsaXplci5maXJzdFZpc2libGVEYXkoZGF0ZSwgbG9jYWxpemVyKVxuICBsZXQgZW5kID0gbG9jYWxpemVyLmxhc3RWaXNpYmxlRGF5KGRhdGUsIGxvY2FsaXplcilcbiAgcmV0dXJuIHsgc3RhcnQsIGVuZCB9XG59XG5cbk1vbnRoVmlldy5uYXZpZ2F0ZSA9IChkYXRlLCBhY3Rpb24sIHsgbG9jYWxpemVyIH0pID0+IHtcbiAgc3dpdGNoIChhY3Rpb24pIHtcbiAgICBjYXNlIG5hdmlnYXRlLlBSRVZJT1VTOlxuICAgICAgcmV0dXJuIGxvY2FsaXplci5hZGQoZGF0ZSwgLTEsICdtb250aCcpXG5cbiAgICBjYXNlIG5hdmlnYXRlLk5FWFQ6XG4gICAgICByZXR1cm4gbG9jYWxpemVyLmFkZChkYXRlLCAxLCAnbW9udGgnKVxuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBkYXRlXG4gIH1cbn1cblxuTW9udGhWaWV3LnRpdGxlID0gKGRhdGUsIHsgbG9jYWxpemVyIH0pID0+XG4gIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ21vbnRoSGVhZGVyRm9ybWF0JylcblxuZXhwb3J0IGRlZmF1bHQgTW9udGhWaWV3XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IG5hdmlnYXRlIH0gZnJvbSAnLi91dGlscy9jb25zdGFudHMnXG5pbXBvcnQgeyBEYXlMYXlvdXRBbGdvcml0aG1Qcm9wVHlwZSB9IGZyb20gJy4vdXRpbHMvcHJvcFR5cGVzJ1xuXG5pbXBvcnQgVGltZUdyaWQgZnJvbSAnLi9UaW1lR3JpZCdcblxuY2xhc3MgRGF5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIC8qKlxuICAgICAqIFRoaXMgYWxsb3dzIHVzIHRvIGRlZmF1bHQgbWluLCBtYXgsIGFuZCBzY3JvbGxUb1RpbWVcbiAgICAgKiB1c2luZyBvdXIgbG9jYWxpemVyLiBUaGlzIGlzIG5lY2Vzc2FyeSB1bnRpbCBzdWNoIHRpbWVcbiAgICAgKiBhcyBUT0RPOiBUaW1lR3JpZCBpcyBjb252ZXJ0ZWQgdG8gYSBmdW5jdGlvbmFsIGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBsZXQge1xuICAgICAgZGF0ZSxcbiAgICAgIGxvY2FsaXplcixcbiAgICAgIG1pbiA9IGxvY2FsaXplci5zdGFydE9mKG5ldyBEYXRlKCksICdkYXknKSxcbiAgICAgIG1heCA9IGxvY2FsaXplci5lbmRPZihuZXcgRGF0ZSgpLCAnZGF5JyksXG4gICAgICBzY3JvbGxUb1RpbWUgPSBsb2NhbGl6ZXIuc3RhcnRPZihuZXcgRGF0ZSgpLCAnZGF5JyksXG4gICAgICBlbmFibGVBdXRvU2Nyb2xsID0gdHJ1ZSxcbiAgICAgIC4uLnByb3BzXG4gICAgfSA9IHRoaXMucHJvcHNcbiAgICBsZXQgcmFuZ2UgPSBEYXkucmFuZ2UoZGF0ZSwgeyBsb2NhbGl6ZXI6IGxvY2FsaXplciB9KVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxUaW1lR3JpZFxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgIHJhbmdlPXtyYW5nZX1cbiAgICAgICAgZXZlbnRPZmZzZXQ9ezEwfVxuICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgbWluPXttaW59XG4gICAgICAgIG1heD17bWF4fVxuICAgICAgICBzY3JvbGxUb1RpbWU9e3Njcm9sbFRvVGltZX1cbiAgICAgICAgZW5hYmxlQXV0b1Njcm9sbD17ZW5hYmxlQXV0b1Njcm9sbH1cbiAgICAgIC8+XG4gICAgKVxuICB9XG59XG5cbkRheS5wcm9wVHlwZXMgPSB7XG4gIGRhdGU6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLmlzUmVxdWlyZWQsXG5cbiAgZXZlbnRzOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgYmFja2dyb3VuZEV2ZW50czogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gIHJlc291cmNlczogUHJvcFR5cGVzLmFycmF5LFxuXG4gIHN0ZXA6IFByb3BUeXBlcy5udW1iZXIsXG4gIHRpbWVzbG90czogUHJvcFR5cGVzLm51bWJlcixcbiAgcmFuZ2U6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpKSxcbiAgbWluOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKSxcbiAgbWF4OiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKSxcbiAgZ2V0Tm93OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuXG4gIHNjcm9sbFRvVGltZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG4gIGVuYWJsZUF1dG9TY3JvbGw6IFByb3BUeXBlcy5ib29sLFxuICBzaG93TXVsdGlEYXlUaW1lczogUHJvcFR5cGVzLmJvb2wsXG5cbiAgcnRsOiBQcm9wVHlwZXMuYm9vbCxcbiAgcmVzaXphYmxlOiBQcm9wVHlwZXMuYm9vbCxcbiAgd2lkdGg6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgYWNjZXNzb3JzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGNvbXBvbmVudHM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgZ2V0dGVyczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICBhbGxEYXlNYXhSb3dzOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gIHNlbGVjdGVkOiBQcm9wVHlwZXMub2JqZWN0LFxuICBzZWxlY3RhYmxlOiBQcm9wVHlwZXMub25lT2YoW3RydWUsIGZhbHNlLCAnaWdub3JlRXZlbnRzJ10pLFxuICBsb25nUHJlc3NUaHJlc2hvbGQ6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgb25OYXZpZ2F0ZTogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0U2xvdDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0RW5kOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25TZWxlY3RTdGFydDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0RXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICBvbkRvdWJsZUNsaWNrRXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICBvbktleVByZXNzRXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICBvblNob3dNb3JlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25EcmlsbERvd246IFByb3BUeXBlcy5mdW5jLFxuICBnZXREcmlsbGRvd25WaWV3OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuXG4gIGRheUxheW91dEFsZ29yaXRobTogRGF5TGF5b3V0QWxnb3JpdGhtUHJvcFR5cGUsXG5cbiAgc2hvd0FsbEV2ZW50czogUHJvcFR5cGVzLmJvb2wsXG4gIGRvU2hvd01vcmVEcmlsbERvd246IFByb3BUeXBlcy5ib29sLFxuXG4gIHBvcHVwOiBQcm9wVHlwZXMuYm9vbCxcbiAgaGFuZGxlRHJhZ1N0YXJ0OiBQcm9wVHlwZXMuZnVuYyxcblxuICBwb3B1cE9mZnNldDogUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgUHJvcFR5cGVzLm51bWJlcixcbiAgICBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgeDogUHJvcFR5cGVzLm51bWJlcixcbiAgICAgIHk6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgfSksXG4gIF0pLFxufVxuXG5EYXkucmFuZ2UgPSAoZGF0ZSwgeyBsb2NhbGl6ZXIgfSkgPT4ge1xuICByZXR1cm4gW2xvY2FsaXplci5zdGFydE9mKGRhdGUsICdkYXknKV1cbn1cblxuRGF5Lm5hdmlnYXRlID0gKGRhdGUsIGFjdGlvbiwgeyBsb2NhbGl6ZXIgfSkgPT4ge1xuICBzd2l0Y2ggKGFjdGlvbikge1xuICAgIGNhc2UgbmF2aWdhdGUuUFJFVklPVVM6XG4gICAgICByZXR1cm4gbG9jYWxpemVyLmFkZChkYXRlLCAtMSwgJ2RheScpXG5cbiAgICBjYXNlIG5hdmlnYXRlLk5FWFQ6XG4gICAgICByZXR1cm4gbG9jYWxpemVyLmFkZChkYXRlLCAxLCAnZGF5JylcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gZGF0ZVxuICB9XG59XG5cbkRheS50aXRsZSA9IChkYXRlLCB7IGxvY2FsaXplciB9KSA9PiBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdkYXlIZWFkZXJGb3JtYXQnKVxuXG5leHBvcnQgZGVmYXVsdCBEYXlcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHsgbmF2aWdhdGUgfSBmcm9tICcuL3V0aWxzL2NvbnN0YW50cydcbmltcG9ydCB7IERheUxheW91dEFsZ29yaXRobVByb3BUeXBlIH0gZnJvbSAnLi91dGlscy9wcm9wVHlwZXMnXG5cbmltcG9ydCBUaW1lR3JpZCBmcm9tICcuL1RpbWVHcmlkJ1xuXG5jbGFzcyBXZWVrIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIC8qKlxuICAgICAqIFRoaXMgYWxsb3dzIHVzIHRvIGRlZmF1bHQgbWluLCBtYXgsIGFuZCBzY3JvbGxUb1RpbWVcbiAgICAgKiB1c2luZyBvdXIgbG9jYWxpemVyLiBUaGlzIGlzIG5lY2Vzc2FyeSB1bnRpbCBzdWNoIHRpbWVcbiAgICAgKiBhcyBUaW1lR3JpZCBpcyBjb252ZXJ0ZWQgdG8gYSBmdW5jdGlvbmFsIGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBsZXQge1xuICAgICAgZGF0ZSxcbiAgICAgIGxvY2FsaXplcixcbiAgICAgIG1pbiA9IGxvY2FsaXplci5zdGFydE9mKG5ldyBEYXRlKCksICdkYXknKSxcbiAgICAgIG1heCA9IGxvY2FsaXplci5lbmRPZihuZXcgRGF0ZSgpLCAnZGF5JyksXG4gICAgICBzY3JvbGxUb1RpbWUgPSBsb2NhbGl6ZXIuc3RhcnRPZihuZXcgRGF0ZSgpLCAnZGF5JyksXG4gICAgICBlbmFibGVBdXRvU2Nyb2xsID0gdHJ1ZSxcbiAgICAgIC4uLnByb3BzXG4gICAgfSA9IHRoaXMucHJvcHNcbiAgICBsZXQgcmFuZ2UgPSBXZWVrLnJhbmdlKGRhdGUsIHRoaXMucHJvcHMpXG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRpbWVHcmlkXG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgcmFuZ2U9e3JhbmdlfVxuICAgICAgICBldmVudE9mZnNldD17MTV9XG4gICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICBtaW49e21pbn1cbiAgICAgICAgbWF4PXttYXh9XG4gICAgICAgIHNjcm9sbFRvVGltZT17c2Nyb2xsVG9UaW1lfVxuICAgICAgICBlbmFibGVBdXRvU2Nyb2xsPXtlbmFibGVBdXRvU2Nyb2xsfVxuICAgICAgLz5cbiAgICApXG4gIH1cbn1cblxuV2Vlay5wcm9wVHlwZXMgPSB7XG4gIGRhdGU6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLmlzUmVxdWlyZWQsXG5cbiAgZXZlbnRzOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgYmFja2dyb3VuZEV2ZW50czogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gIHJlc291cmNlczogUHJvcFR5cGVzLmFycmF5LFxuXG4gIHN0ZXA6IFByb3BUeXBlcy5udW1iZXIsXG4gIHRpbWVzbG90czogUHJvcFR5cGVzLm51bWJlcixcbiAgcmFuZ2U6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpKSxcbiAgbWluOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKSxcbiAgbWF4OiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKSxcbiAgZ2V0Tm93OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuXG4gIHNjcm9sbFRvVGltZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG4gIGVuYWJsZUF1dG9TY3JvbGw6IFByb3BUeXBlcy5ib29sLFxuICBzaG93TXVsdGlEYXlUaW1lczogUHJvcFR5cGVzLmJvb2wsXG5cbiAgcnRsOiBQcm9wVHlwZXMuYm9vbCxcbiAgcmVzaXphYmxlOiBQcm9wVHlwZXMuYm9vbCxcbiAgd2lkdGg6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgYWNjZXNzb3JzOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGNvbXBvbmVudHM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgZ2V0dGVyczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICBhbGxEYXlNYXhSb3dzOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gIHNlbGVjdGVkOiBQcm9wVHlwZXMub2JqZWN0LFxuICBzZWxlY3RhYmxlOiBQcm9wVHlwZXMub25lT2YoW3RydWUsIGZhbHNlLCAnaWdub3JlRXZlbnRzJ10pLFxuICBsb25nUHJlc3NUaHJlc2hvbGQ6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgb25OYXZpZ2F0ZTogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0U2xvdDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0RW5kOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25TZWxlY3RTdGFydDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0RXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICBvbkRvdWJsZUNsaWNrRXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICBvbktleVByZXNzRXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICBvblNob3dNb3JlOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25EcmlsbERvd246IFByb3BUeXBlcy5mdW5jLFxuICBnZXREcmlsbGRvd25WaWV3OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuXG4gIGRheUxheW91dEFsZ29yaXRobTogRGF5TGF5b3V0QWxnb3JpdGhtUHJvcFR5cGUsXG5cbiAgc2hvd0FsbEV2ZW50czogUHJvcFR5cGVzLmJvb2wsXG4gIGRvU2hvd01vcmVEcmlsbERvd246IFByb3BUeXBlcy5ib29sLFxuXG4gIHBvcHVwOiBQcm9wVHlwZXMuYm9vbCxcbiAgaGFuZGxlRHJhZ1N0YXJ0OiBQcm9wVHlwZXMuZnVuYyxcblxuICBwb3B1cE9mZnNldDogUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgUHJvcFR5cGVzLm51bWJlcixcbiAgICBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgeDogUHJvcFR5cGVzLm51bWJlcixcbiAgICAgIHk6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgfSksXG4gIF0pLFxufVxuXG5XZWVrLmRlZmF1bHRQcm9wcyA9IFRpbWVHcmlkLmRlZmF1bHRQcm9wc1xuXG5XZWVrLm5hdmlnYXRlID0gKGRhdGUsIGFjdGlvbiwgeyBsb2NhbGl6ZXIgfSkgPT4ge1xuICBzd2l0Y2ggKGFjdGlvbikge1xuICAgIGNhc2UgbmF2aWdhdGUuUFJFVklPVVM6XG4gICAgICByZXR1cm4gbG9jYWxpemVyLmFkZChkYXRlLCAtMSwgJ3dlZWsnKVxuXG4gICAgY2FzZSBuYXZpZ2F0ZS5ORVhUOlxuICAgICAgcmV0dXJuIGxvY2FsaXplci5hZGQoZGF0ZSwgMSwgJ3dlZWsnKVxuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBkYXRlXG4gIH1cbn1cblxuV2Vlay5yYW5nZSA9IChkYXRlLCB7IGxvY2FsaXplciB9KSA9PiB7XG4gIGxldCBmaXJzdE9mV2VlayA9IGxvY2FsaXplci5zdGFydE9mV2VlaygpXG4gIGxldCBzdGFydCA9IGxvY2FsaXplci5zdGFydE9mKGRhdGUsICd3ZWVrJywgZmlyc3RPZldlZWspXG4gIGxldCBlbmQgPSBsb2NhbGl6ZXIuZW5kT2YoZGF0ZSwgJ3dlZWsnLCBmaXJzdE9mV2VlaylcblxuICByZXR1cm4gbG9jYWxpemVyLnJhbmdlKHN0YXJ0LCBlbmQpXG59XG5cbldlZWsudGl0bGUgPSAoZGF0ZSwgeyBsb2NhbGl6ZXIgfSkgPT4ge1xuICBsZXQgW3N0YXJ0LCAuLi5yZXN0XSA9IFdlZWsucmFuZ2UoZGF0ZSwgeyBsb2NhbGl6ZXIgfSlcbiAgcmV0dXJuIGxvY2FsaXplci5mb3JtYXQoeyBzdGFydCwgZW5kOiByZXN0LnBvcCgpIH0sICdkYXlSYW5nZUhlYWRlckZvcm1hdCcpXG59XG5cbmV4cG9ydCBkZWZhdWx0IFdlZWtcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW1wb3J0IFdlZWsgZnJvbSAnLi9XZWVrJ1xuaW1wb3J0IFRpbWVHcmlkIGZyb20gJy4vVGltZUdyaWQnXG5cbmZ1bmN0aW9uIHdvcmtXZWVrUmFuZ2UoZGF0ZSwgb3B0aW9ucykge1xuICByZXR1cm4gV2Vlay5yYW5nZShkYXRlLCBvcHRpb25zKS5maWx0ZXIoXG4gICAgKGQpID0+IFs2LCAwXS5pbmRleE9mKGQuZ2V0RGF5KCkpID09PSAtMVxuICApXG59XG5cbmNsYXNzIFdvcmtXZWVrIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIC8qKlxuICAgICAqIFRoaXMgYWxsb3dzIHVzIHRvIGRlZmF1bHQgbWluLCBtYXgsIGFuZCBzY3JvbGxUb1RpbWVcbiAgICAgKiB1c2luZyBvdXIgbG9jYWxpemVyLiBUaGlzIGlzIG5lY2Vzc2FyeSB1bnRpbCBzdWNoIHRpbWVcbiAgICAgKiBhcyBUaW1lR3JpZCBpcyBjb252ZXJ0ZWQgdG8gYSBmdW5jdGlvbmFsIGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBsZXQge1xuICAgICAgZGF0ZSxcbiAgICAgIGxvY2FsaXplcixcbiAgICAgIG1pbiA9IGxvY2FsaXplci5zdGFydE9mKG5ldyBEYXRlKCksICdkYXknKSxcbiAgICAgIG1heCA9IGxvY2FsaXplci5lbmRPZihuZXcgRGF0ZSgpLCAnZGF5JyksXG4gICAgICBzY3JvbGxUb1RpbWUgPSBsb2NhbGl6ZXIuc3RhcnRPZihuZXcgRGF0ZSgpLCAnZGF5JyksXG4gICAgICBlbmFibGVBdXRvU2Nyb2xsID0gdHJ1ZSxcbiAgICAgIC4uLnByb3BzXG4gICAgfSA9IHRoaXMucHJvcHNcbiAgICBsZXQgcmFuZ2UgPSB3b3JrV2Vla1JhbmdlKGRhdGUsIHRoaXMucHJvcHMpXG4gICAgcmV0dXJuIChcbiAgICAgIDxUaW1lR3JpZFxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgIHJhbmdlPXtyYW5nZX1cbiAgICAgICAgZXZlbnRPZmZzZXQ9ezE1fVxuICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgbWluPXttaW59XG4gICAgICAgIG1heD17bWF4fVxuICAgICAgICBzY3JvbGxUb1RpbWU9e3Njcm9sbFRvVGltZX1cbiAgICAgICAgZW5hYmxlQXV0b1Njcm9sbD17ZW5hYmxlQXV0b1Njcm9sbH1cbiAgICAgIC8+XG4gICAgKVxuICB9XG59XG5cbldvcmtXZWVrLnByb3BUeXBlcyA9IHtcbiAgZGF0ZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSkuaXNSZXF1aXJlZCxcbiAgbG9jYWxpemVyOiBQcm9wVHlwZXMuYW55LFxuICBtaW46IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuICBtYXg6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuICBzY3JvbGxUb1RpbWU6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuICBlbmFibGVBdXRvU2Nyb2xsOiBQcm9wVHlwZXMuYm9vbCxcbn1cblxuV29ya1dlZWsuZGVmYXVsdFByb3BzID0gVGltZUdyaWQuZGVmYXVsdFByb3BzXG5cbldvcmtXZWVrLnJhbmdlID0gd29ya1dlZWtSYW5nZVxuXG5Xb3JrV2Vlay5uYXZpZ2F0ZSA9IFdlZWsubmF2aWdhdGVcblxuV29ya1dlZWsudGl0bGUgPSAoZGF0ZSwgeyBsb2NhbGl6ZXIgfSkgPT4ge1xuICBsZXQgW3N0YXJ0LCAuLi5yZXN0XSA9IHdvcmtXZWVrUmFuZ2UoZGF0ZSwgeyBsb2NhbGl6ZXIgfSlcblxuICByZXR1cm4gbG9jYWxpemVyLmZvcm1hdCh7IHN0YXJ0LCBlbmQ6IHJlc3QucG9wKCkgfSwgJ2RheVJhbmdlSGVhZGVyRm9ybWF0Jylcbn1cblxuZXhwb3J0IGRlZmF1bHQgV29ya1dlZWtcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGFkZENsYXNzIGZyb20gJ2RvbS1oZWxwZXJzL2FkZENsYXNzJ1xuaW1wb3J0IHJlbW92ZUNsYXNzIGZyb20gJ2RvbS1oZWxwZXJzL3JlbW92ZUNsYXNzJ1xuaW1wb3J0IGdldFdpZHRoIGZyb20gJ2RvbS1oZWxwZXJzL3dpZHRoJ1xuaW1wb3J0IHNjcm9sbGJhclNpemUgZnJvbSAnZG9tLWhlbHBlcnMvc2Nyb2xsYmFyU2l6ZSdcblxuaW1wb3J0IHsgbmF2aWdhdGUgfSBmcm9tICcuL3V0aWxzL2NvbnN0YW50cydcbmltcG9ydCB7IGluUmFuZ2UgfSBmcm9tICcuL3V0aWxzL2V2ZW50TGV2ZWxzJ1xuaW1wb3J0IHsgaXNTZWxlY3RlZCB9IGZyb20gJy4vdXRpbHMvc2VsZWN0aW9uJ1xuXG5jb25zdCBERUZBVUxUX0xFTkdUSCA9IDMwO1xuZnVuY3Rpb24gQWdlbmRhKHtcbiAgYWNjZXNzb3JzLFxuICBjb21wb25lbnRzLFxuICBkYXRlLFxuICBldmVudHMsXG4gIGdldHRlcnMsXG4gIGxlbmd0aCA9IERFRkFVTFRfTEVOR1RILFxuICBsb2NhbGl6ZXIsXG4gIG9uRG91YmxlQ2xpY2tFdmVudCxcbiAgb25TZWxlY3RFdmVudCxcbiAgc2VsZWN0ZWQsXG59KSB7XG4gIGNvbnN0IGhlYWRlclJlZiA9IHVzZVJlZihudWxsKVxuICBjb25zdCBkYXRlQ29sUmVmID0gdXNlUmVmKG51bGwpXG4gIGNvbnN0IHRpbWVDb2xSZWYgPSB1c2VSZWYobnVsbClcbiAgY29uc3QgY29udGVudFJlZiA9IHVzZVJlZihudWxsKVxuICBjb25zdCB0Ym9keVJlZiA9IHVzZVJlZihudWxsKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgX2FkanVzdEhlYWRlcigpXG4gIH0pXG5cbiAgY29uc3QgcmVuZGVyRGF5ID0gKGRheSwgZXZlbnRzLCBkYXlLZXkpID0+IHtcbiAgICBjb25zdCB7IGV2ZW50OiBFdmVudCwgZGF0ZTogQWdlbmRhRGF0ZSB9ID0gY29tcG9uZW50c1xuXG4gICAgZXZlbnRzID0gZXZlbnRzLmZpbHRlcigoZSkgPT5cbiAgICAgIGluUmFuZ2UoXG4gICAgICAgIGUsXG4gICAgICAgIGxvY2FsaXplci5zdGFydE9mKGRheSwgJ2RheScpLFxuICAgICAgICBsb2NhbGl6ZXIuZW5kT2YoZGF5LCAnZGF5JyksXG4gICAgICAgIGFjY2Vzc29ycyxcbiAgICAgICAgbG9jYWxpemVyXG4gICAgICApXG4gICAgKVxuXG4gICAgcmV0dXJuIGV2ZW50cy5tYXAoKGV2ZW50LCBpZHgpID0+IHtcbiAgICAgIGxldCB0aXRsZSA9IGFjY2Vzc29ycy50aXRsZShldmVudClcbiAgICAgIGxldCBlbmQgPSBhY2Nlc3NvcnMuZW5kKGV2ZW50KVxuICAgICAgbGV0IHN0YXJ0ID0gYWNjZXNzb3JzLnN0YXJ0KGV2ZW50KVxuXG4gICAgICBjb25zdCB1c2VyUHJvcHMgPSBnZXR0ZXJzLmV2ZW50UHJvcChcbiAgICAgICAgZXZlbnQsXG4gICAgICAgIHN0YXJ0LFxuICAgICAgICBlbmQsXG4gICAgICAgIGlzU2VsZWN0ZWQoZXZlbnQsIHNlbGVjdGVkKVxuICAgICAgKVxuXG4gICAgICBsZXQgZGF0ZUxhYmVsID0gaWR4ID09PSAwICYmIGxvY2FsaXplci5mb3JtYXQoZGF5LCAnYWdlbmRhRGF0ZUZvcm1hdCcpXG4gICAgICBsZXQgZmlyc3QgPVxuICAgICAgICBpZHggPT09IDAgPyAoXG4gICAgICAgICAgPHRkIHJvd1NwYW49e2V2ZW50cy5sZW5ndGh9IGNsYXNzTmFtZT1cInJiYy1hZ2VuZGEtZGF0ZS1jZWxsXCI+XG4gICAgICAgICAgICB7QWdlbmRhRGF0ZSA/IChcbiAgICAgICAgICAgICAgPEFnZW5kYURhdGUgZGF5PXtkYXl9IGxhYmVsPXtkYXRlTGFiZWx9IC8+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICBkYXRlTGFiZWxcbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC90ZD5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICBmYWxzZVxuICAgICAgICApXG5cbiAgICAgIHJldHVybiAoXG4gICAgICAgIDx0clxuICAgICAgICAgIGtleT17ZGF5S2V5ICsgJ18nICsgaWR4fVxuICAgICAgICAgIGNsYXNzTmFtZT17dXNlclByb3BzLmNsYXNzTmFtZX1cbiAgICAgICAgICBzdHlsZT17dXNlclByb3BzLnN0eWxlfVxuICAgICAgICA+XG4gICAgICAgICAge2ZpcnN0fVxuICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJyYmMtYWdlbmRhLXRpbWUtY2VsbFwiPnt0aW1lUmFuZ2VMYWJlbChkYXksIGV2ZW50KX08L3RkPlxuICAgICAgICAgIDx0ZFxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicmJjLWFnZW5kYS1ldmVudC1jZWxsXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9eyhlKSA9PiBvblNlbGVjdEV2ZW50ICYmIG9uU2VsZWN0RXZlbnQoZXZlbnQsIGUpfVxuICAgICAgICAgICAgb25Eb3VibGVDbGljaz17KGUpID0+XG4gICAgICAgICAgICAgIG9uRG91YmxlQ2xpY2tFdmVudCAmJiBvbkRvdWJsZUNsaWNrRXZlbnQoZXZlbnQsIGUpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAge0V2ZW50ID8gPEV2ZW50IGV2ZW50PXtldmVudH0gdGl0bGU9e3RpdGxlfSAvPiA6IHRpdGxlfVxuICAgICAgICAgIDwvdGQ+XG4gICAgICAgIDwvdHI+XG4gICAgICApXG4gICAgfSwgW10pXG4gIH1cblxuICBjb25zdCB0aW1lUmFuZ2VMYWJlbCA9IChkYXksIGV2ZW50KSA9PiB7XG4gICAgbGV0IGxhYmVsQ2xhc3MgPSAnJyxcbiAgICAgIFRpbWVDb21wb25lbnQgPSBjb21wb25lbnRzLnRpbWUsXG4gICAgICBsYWJlbCA9IGxvY2FsaXplci5tZXNzYWdlcy5hbGxEYXlcblxuICAgIGxldCBlbmQgPSBhY2Nlc3NvcnMuZW5kKGV2ZW50KVxuICAgIGxldCBzdGFydCA9IGFjY2Vzc29ycy5zdGFydChldmVudClcblxuICAgIGlmICghYWNjZXNzb3JzLmFsbERheShldmVudCkpIHtcbiAgICAgIGlmIChsb2NhbGl6ZXIuZXEoc3RhcnQsIGVuZCkpIHtcbiAgICAgICAgbGFiZWwgPSBsb2NhbGl6ZXIuZm9ybWF0KHN0YXJ0LCAnYWdlbmRhVGltZUZvcm1hdCcpXG4gICAgICB9IGVsc2UgaWYgKGxvY2FsaXplci5pc1NhbWVEYXRlKHN0YXJ0LCBlbmQpKSB7XG4gICAgICAgIGxhYmVsID0gbG9jYWxpemVyLmZvcm1hdCh7IHN0YXJ0LCBlbmQgfSwgJ2FnZW5kYVRpbWVSYW5nZUZvcm1hdCcpXG4gICAgICB9IGVsc2UgaWYgKGxvY2FsaXplci5pc1NhbWVEYXRlKGRheSwgc3RhcnQpKSB7XG4gICAgICAgIGxhYmVsID0gbG9jYWxpemVyLmZvcm1hdChzdGFydCwgJ2FnZW5kYVRpbWVGb3JtYXQnKVxuICAgICAgfSBlbHNlIGlmIChsb2NhbGl6ZXIuaXNTYW1lRGF0ZShkYXksIGVuZCkpIHtcbiAgICAgICAgbGFiZWwgPSBsb2NhbGl6ZXIuZm9ybWF0KGVuZCwgJ2FnZW5kYVRpbWVGb3JtYXQnKVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChsb2NhbGl6ZXIuZ3QoZGF5LCBzdGFydCwgJ2RheScpKSBsYWJlbENsYXNzID0gJ3JiYy1jb250aW51ZXMtcHJpb3InXG4gICAgaWYgKGxvY2FsaXplci5sdChkYXksIGVuZCwgJ2RheScpKSBsYWJlbENsYXNzICs9ICcgcmJjLWNvbnRpbnVlcy1hZnRlcidcblxuICAgIHJldHVybiAoXG4gICAgICA8c3BhbiBjbGFzc05hbWU9e2xhYmVsQ2xhc3MudHJpbSgpfT5cbiAgICAgICAge1RpbWVDb21wb25lbnQgPyAoXG4gICAgICAgICAgPFRpbWVDb21wb25lbnQgZXZlbnQ9e2V2ZW50fSBkYXk9e2RheX0gbGFiZWw9e2xhYmVsfSAvPlxuICAgICAgICApIDogKFxuICAgICAgICAgIGxhYmVsXG4gICAgICAgICl9XG4gICAgICA8L3NwYW4+XG4gICAgKVxuICB9XG5cbiAgY29uc3QgX2FkanVzdEhlYWRlciA9ICgpID0+IHtcbiAgICBpZiAoIXRib2R5UmVmLmN1cnJlbnQpIHJldHVyblxuXG4gICAgbGV0IGhlYWRlciA9IGhlYWRlclJlZi5jdXJyZW50XG4gICAgbGV0IGZpcnN0Um93ID0gdGJvZHlSZWYuY3VycmVudC5maXJzdENoaWxkXG5cbiAgICBpZiAoIWZpcnN0Um93KSByZXR1cm5cblxuICAgIGxldCBpc092ZXJmbG93aW5nID1cbiAgICAgIGNvbnRlbnRSZWYuY3VycmVudC5zY3JvbGxIZWlnaHQgPiBjb250ZW50UmVmLmN1cnJlbnQuY2xpZW50SGVpZ2h0XG5cbiAgICBsZXQgX3dpZHRocyA9IFtdXG4gICAgbGV0IHdpZHRocyA9IF93aWR0aHNcblxuICAgIF93aWR0aHMgPSBbZ2V0V2lkdGgoZmlyc3RSb3cuY2hpbGRyZW5bMF0pLCBnZXRXaWR0aChmaXJzdFJvdy5jaGlsZHJlblsxXSldXG5cbiAgICBpZiAod2lkdGhzWzBdICE9PSBfd2lkdGhzWzBdIHx8IHdpZHRoc1sxXSAhPT0gX3dpZHRoc1sxXSkge1xuICAgICAgZGF0ZUNvbFJlZi5jdXJyZW50LnN0eWxlLndpZHRoID0gX3dpZHRoc1swXSArICdweCdcbiAgICAgIHRpbWVDb2xSZWYuY3VycmVudC5zdHlsZS53aWR0aCA9IF93aWR0aHNbMV0gKyAncHgnXG4gICAgfVxuXG4gICAgaWYgKGlzT3ZlcmZsb3dpbmcpIHtcbiAgICAgIGFkZENsYXNzKGhlYWRlciwgJ3JiYy1oZWFkZXItb3ZlcmZsb3dpbmcnKVxuICAgICAgaGVhZGVyLnN0eWxlLm1hcmdpblJpZ2h0ID0gc2Nyb2xsYmFyU2l6ZSgpICsgJ3B4J1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmVDbGFzcyhoZWFkZXIsICdyYmMtaGVhZGVyLW92ZXJmbG93aW5nJylcbiAgICB9XG4gIH1cblxuICBsZXQgeyBtZXNzYWdlcyB9ID0gbG9jYWxpemVyXG4gIGxldCBlbmQgPSBsb2NhbGl6ZXIuYWRkKGRhdGUsIGxlbmd0aCwgJ2RheScpXG5cbiAgbGV0IHJhbmdlID0gbG9jYWxpemVyLnJhbmdlKGRhdGUsIGVuZCwgJ2RheScpXG5cbiAgZXZlbnRzID0gZXZlbnRzLmZpbHRlcigoZXZlbnQpID0+XG4gICAgaW5SYW5nZShcbiAgICAgIGV2ZW50LFxuICAgICAgbG9jYWxpemVyLnN0YXJ0T2YoZGF0ZSwgJ2RheScpLFxuICAgICAgbG9jYWxpemVyLmVuZE9mKGVuZCwgJ2RheScpLFxuICAgICAgYWNjZXNzb3JzLFxuICAgICAgbG9jYWxpemVyXG4gICAgKVxuICApXG5cbiAgZXZlbnRzLnNvcnQoKGEsIGIpID0+ICthY2Nlc3NvcnMuc3RhcnQoYSkgLSArYWNjZXNzb3JzLnN0YXJ0KGIpKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJyYmMtYWdlbmRhLXZpZXdcIj5cbiAgICAgIHtldmVudHMubGVuZ3RoICE9PSAwID8gKFxuICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgPHRhYmxlIHJlZj17aGVhZGVyUmVmfSBjbGFzc05hbWU9XCJyYmMtYWdlbmRhLXRhYmxlXCI+XG4gICAgICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicmJjLWhlYWRlclwiIHJlZj17ZGF0ZUNvbFJlZn0+XG4gICAgICAgICAgICAgICAgICB7bWVzc2FnZXMuZGF0ZX1cbiAgICAgICAgICAgICAgICA8L3RoPlxuICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJyYmMtaGVhZGVyXCIgcmVmPXt0aW1lQ29sUmVmfT5cbiAgICAgICAgICAgICAgICAgIHttZXNzYWdlcy50aW1lfVxuICAgICAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInJiYy1oZWFkZXJcIj57bWVzc2FnZXMuZXZlbnR9PC90aD5cbiAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDwvdGhlYWQ+XG4gICAgICAgICAgPC90YWJsZT5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJiYy1hZ2VuZGEtY29udGVudFwiIHJlZj17Y29udGVudFJlZn0+XG4gICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwicmJjLWFnZW5kYS10YWJsZVwiPlxuICAgICAgICAgICAgICA8dGJvZHkgcmVmPXt0Ym9keVJlZn0+XG4gICAgICAgICAgICAgICAge3JhbmdlLm1hcCgoZGF5LCBpZHgpID0+IHJlbmRlckRheShkYXksIGV2ZW50cywgaWR4KSl9XG4gICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgKSA6IChcbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicmJjLWFnZW5kYS1lbXB0eVwiPnttZXNzYWdlcy5ub0V2ZW50c0luUmFuZ2V9PC9zcGFuPlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5BZ2VuZGEucHJvcFR5cGVzID0ge1xuICBhY2Nlc3NvcnM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgY29tcG9uZW50czogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBkYXRlOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKSxcbiAgZXZlbnRzOiBQcm9wVHlwZXMuYXJyYXksXG4gIGdldHRlcnM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgbGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIGxvY2FsaXplcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBvblNlbGVjdEV2ZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgb25Eb3VibGVDbGlja0V2ZW50OiBQcm9wVHlwZXMuZnVuYyxcbiAgc2VsZWN0ZWQ6IFByb3BUeXBlcy5vYmplY3QsXG59XG5cbkFnZW5kYS5yYW5nZSA9IChzdGFydCwgeyBsZW5ndGggPSBERUZBVUxUX0xFTkdUSCwgbG9jYWxpemVyIH0pID0+IHtcbiAgbGV0IGVuZCA9IGxvY2FsaXplci5hZGQoc3RhcnQsIGxlbmd0aCwgJ2RheScpXG4gIHJldHVybiB7IHN0YXJ0LCBlbmQgfVxufVxuXG5BZ2VuZGEubmF2aWdhdGUgPSAoXG4gIGRhdGUsXG4gIGFjdGlvbixcbiAgeyBsZW5ndGggPSBERUZBVUxUX0xFTkdUSCwgbG9jYWxpemVyIH1cbikgPT4ge1xuICBzd2l0Y2ggKGFjdGlvbikge1xuICAgIGNhc2UgbmF2aWdhdGUuUFJFVklPVVM6XG4gICAgICByZXR1cm4gbG9jYWxpemVyLmFkZChkYXRlLCAtbGVuZ3RoLCAnZGF5JylcblxuICAgIGNhc2UgbmF2aWdhdGUuTkVYVDpcbiAgICAgIHJldHVybiBsb2NhbGl6ZXIuYWRkKGRhdGUsIGxlbmd0aCwgJ2RheScpXG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGRhdGVcbiAgfVxufVxuXG5BZ2VuZGEudGl0bGUgPSAoc3RhcnQsIHsgbGVuZ3RoID0gREVGQVVMVF9MRU5HVEgsIGxvY2FsaXplciB9KSA9PiB7XG4gIGxldCBlbmQgPSBsb2NhbGl6ZXIuYWRkKHN0YXJ0LCBsZW5ndGgsICdkYXknKVxuICByZXR1cm4gbG9jYWxpemVyLmZvcm1hdCh7IHN0YXJ0LCBlbmQgfSwgJ2FnZW5kYUhlYWRlckZvcm1hdCcpXG59XG5cbmV4cG9ydCBkZWZhdWx0IEFnZW5kYVxuIiwiaW1wb3J0IHsgdmlld3MgfSBmcm9tICcuL3V0aWxzL2NvbnN0YW50cydcbmltcG9ydCBNb250aCBmcm9tICcuL01vbnRoJ1xuaW1wb3J0IERheSBmcm9tICcuL0RheSdcbmltcG9ydCBXZWVrIGZyb20gJy4vV2VlaydcbmltcG9ydCBXb3JrV2VlayBmcm9tICcuL1dvcmtXZWVrJ1xuaW1wb3J0IEFnZW5kYSBmcm9tICcuL0FnZW5kYSdcblxuY29uc3QgVklFV1MgPSB7XG4gIFt2aWV3cy5NT05USF06IE1vbnRoLFxuICBbdmlld3MuV0VFS106IFdlZWssXG4gIFt2aWV3cy5XT1JLX1dFRUtdOiBXb3JrV2VlayxcbiAgW3ZpZXdzLkRBWV06IERheSxcbiAgW3ZpZXdzLkFHRU5EQV06IEFnZW5kYSxcbn1cblxuZXhwb3J0IGRlZmF1bHQgVklFV1NcbiIsImltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyB1bmNvbnRyb2xsYWJsZSB9IGZyb20gJ3VuY29udHJvbGxhYmxlJ1xuaW1wb3J0IHtcbiAgYWNjZXNzb3IsXG4gIHZpZXdzIGFzIGNvbXBvbmVudFZpZXdzLFxuICBkYXRlRm9ybWF0LFxuICBkYXRlUmFuZ2VGb3JtYXQsXG4gIERheUxheW91dEFsZ29yaXRobVByb3BUeXBlLFxufSBmcm9tICcuL3V0aWxzL3Byb3BUeXBlcydcblxuaW1wb3J0IHsgbWVyZ2VXaXRoRGVmYXVsdHMgfSBmcm9tICcuL2xvY2FsaXplcidcbmltcG9ydCBOb29wV3JhcHBlciBmcm9tICcuL05vb3BXcmFwcGVyJ1xuaW1wb3J0IFRvb2xiYXIgZnJvbSAnLi9Ub29sYmFyJ1xuaW1wb3J0IHsgbmF2aWdhdGUsIHZpZXdzIH0gZnJvbSAnLi91dGlscy9jb25zdGFudHMnXG5pbXBvcnQgeyBub3RpZnkgfSBmcm9tICcuL3V0aWxzL2hlbHBlcnMnXG5pbXBvcnQgbWVzc2FnZSBmcm9tICcuL3V0aWxzL21lc3NhZ2VzJ1xuaW1wb3J0IG1vdmVEYXRlIGZyb20gJy4vdXRpbHMvbW92ZSdcbmltcG9ydCBWSUVXUyBmcm9tICcuL1ZpZXdzJ1xuXG5pbXBvcnQgZGVmYXVsdHMgZnJvbSAnbG9kYXNoL2RlZmF1bHRzJ1xuaW1wb3J0IG1hcFZhbHVlcyBmcm9tICdsb2Rhc2gvbWFwVmFsdWVzJ1xuaW1wb3J0IG9taXQgZnJvbSAnbG9kYXNoL29taXQnXG5pbXBvcnQgdHJhbnNmb3JtIGZyb20gJ2xvZGFzaC90cmFuc2Zvcm0nXG5pbXBvcnQgeyB3cmFwQWNjZXNzb3IgfSBmcm9tICcuL3V0aWxzL2FjY2Vzc29ycydcblxuZnVuY3Rpb24gdmlld05hbWVzKF92aWV3cykge1xuICBpZiAoQXJyYXkuaXNBcnJheShfdmlld3MpKSB7XG4gICAgcmV0dXJuIF92aWV3c1xuICB9XG4gIGNvbnN0IHZpZXdzID0gW11cbiAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoX3ZpZXdzKSkge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdmlld3MucHVzaChrZXkpXG4gICAgfVxuICB9XG4gIHJldHVybiB2aWV3c1xufVxuXG5mdW5jdGlvbiBpc1ZhbGlkVmlldyh2aWV3LCB7IHZpZXdzOiBfdmlld3MgfSkge1xuICBsZXQgbmFtZXMgPSB2aWV3TmFtZXMoX3ZpZXdzKVxuICByZXR1cm4gbmFtZXMuaW5kZXhPZih2aWV3KSAhPT0gLTFcbn1cblxuY2xhc3MgQ2FsZW5kYXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8qKlxuICAgICAqIFRoZSBsb2NhbGl6ZXIgdXNlZCBmb3IgZm9ybWF0dGluZyBkYXRlcyBhbmQgdGltZXMgYWNjb3JkaW5nIHRvIHRoZSBgZm9ybWF0YCBhbmQgYGN1bHR1cmVgXG4gICAgICpcbiAgICAgKiBnbG9iYWxpemVcbiAgICAgKiBgYGBqc1xuICAgICAqIGltcG9ydCB7Z2xvYmFsaXplTG9jYWxpemVyfSBmcm9tICdyZWFjdC1iaWctY2FsZW5kYXInXG4gICAgICogaW1wb3J0IGdsb2JhbGl6ZSBmcm9tICdnbG9iYWxpemUnXG4gICAgICpcbiAgICAgKiBjb25zdCBsb2NhbGl6ZXIgPSBnbG9iYWxpemVMb2NhbGl6ZXIoZ2xvYmFsaXplKVxuICAgICAqIGBgYFxuICAgICAqIG1vbWVudFxuICAgICAqIGBganNcbiAgICAgKiBpbXBvcnQge21vbWVudExvY2FsaXplcn0gZnJvbSAncmVhY3QtYmlnLWNhbGVuZGFyJ1xuICAgICAqIGltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuICAgICAqIC8vIGFuZCwgZm9yIG9wdGlvbmFsIHRpbWUgem9uZSBzdXBwb3J0XG4gICAgICogaW1wb3J0ICdtb21lbnQtdGltZXpvbmUnXG4gICAgICpcbiAgICAgKiBtb21lbnQudHouc2V0RGVmYXVsdCgnQW1lcmljYS9Mb3NfQW5nZWxlcycpXG4gICAgICogLy8gZW5kIG9wdGlvbmFsIHRpbWUgem9uZSBzdXBwb3J0XG4gICAgICpcbiAgICAgKiBjb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogTHV4b25cbiAgICAgKiBgYGBqc1xuICAgICAqIGltcG9ydCB7bHV4b25Mb2NhbGl6ZXJ9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbiAgICAgKiBpbXBvcnQge0RhdGVUaW1lLCBTZXR0aW5nc30gZnJvbSAnbHV4b24nXG4gICAgICogLy8gb25seSB1c2UgYFNldHRpbmdzYCBpZiB5b3UgcmVxdWlyZSBvcHRpb25hbCB0aW1lIHpvbmUgc3VwcG9ydFxuICAgICAqIFNldHRpbmdzLmRlZmF1bHRab25lID0gJ0FtZXJpY2EvTG9zX0FuZ2VsZXMnXG4gICAgICogLy8gZW5kIG9wdGlvbmFsIHRpbWUgem9uZSBzdXBwb3J0XG4gICAgICpcbiAgICAgKiAvLyBMdXhvbiB1c2VzIHRoZSBJbnRsIEFQSSwgd2hpY2ggY3VycmVudGx5IGRvZXMgbm90IGNvbnRhaW4gYHdlZWtJbmZvYFxuICAgICAqIC8vIHRvIGRldGVybWluZSB3aGljaCB3ZWVrZGF5IGlzIHRoZSBzdGFydCBvZiB0aGUgd2VlayBieSBgY3VsdHVyZWAuXG4gICAgICogLy8gVGhlIGBsdXhvbkxvY2FsaXplcmAgZGVmYXVsdHMgdGhpcyB0byBTdW5kYXksIHdoaWNoIGRpZmZlcnMgZnJvbVxuICAgICAqIC8vIHRoZSBMdXhvbiBkZWZhdWx0IG9mIE1vbmRheS4gVGhlIGxvY2FsaXplciByZXF1aXJlcyB0aGlzIG9wdGlvblxuICAgICAqIC8vIHRvIGNoYW5nZSB0aGUgZGlzcGxheSwgYW5kIHRoZSBkYXRlIG1hdGggZm9yIGRldGVybWluaW5nIHRoZVxuICAgICAqIC8vIHN0YXJ0IG9mIGEgd2Vlay4gTHV4b24gdXNlcyBub24temVybyBiYXNlZCB2YWx1ZXMgZm9yIGB3ZWVrZGF5YC5cbiAgICAgKiBjb25zdCBsb2NhbGl6ZXIgPSBsdXhvbkxvY2FsaXplcihEYXRlVGltZSwge2ZpcnN0RGF5T2ZXZWVrOiA3fSlcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICAgIC8qKlxuICAgICAqIFByb3BzIHBhc3NlZCB0byBtYWluIGNhbGVuZGFyIGA8ZGl2PmAuXG4gICAgICpcbiAgICAgKi9cbiAgICBlbGVtZW50UHJvcHM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgY3VycmVudCBkYXRlIHZhbHVlIG9mIHRoZSBjYWxlbmRhci4gRGV0ZXJtaW5lcyB0aGUgdmlzaWJsZSB2aWV3IHJhbmdlLlxuICAgICAqIElmIGBkYXRlYCBpcyBvbWl0dGVkIHRoZW4gdGhlIHJlc3VsdCBvZiBgZ2V0Tm93YCBpcyB1c2VkOyBvdGhlcndpc2UgdGhlXG4gICAgICogY3VycmVudCBkYXRlIGlzIHVzZWQuXG4gICAgICpcbiAgICAgKiBAY29udHJvbGxhYmxlIG9uTmF2aWdhdGVcbiAgICAgKi9cbiAgICBkYXRlOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKSxcblxuICAgIC8qKlxuICAgICAqIFRoZSBjdXJyZW50IHZpZXcgb2YgdGhlIGNhbGVuZGFyLlxuICAgICAqXG4gICAgICogQGRlZmF1bHQgJ21vbnRoJ1xuICAgICAqIEBjb250cm9sbGFibGUgb25WaWV3XG4gICAgICovXG4gICAgdmlldzogUHJvcFR5cGVzLnN0cmluZyxcblxuICAgIC8qKlxuICAgICAqIFRoZSBpbml0aWFsIHZpZXcgc2V0IGZvciB0aGUgQ2FsZW5kYXIuXG4gICAgICogQHR5cGUgQ2FsZW5kYXIuVmlld3MgKCdtb250aCd8J3dlZWsnfCd3b3JrX3dlZWsnfCdkYXknfCdhZ2VuZGEnKVxuICAgICAqIEBkZWZhdWx0ICdtb250aCdcbiAgICAgKi9cbiAgICBkZWZhdWx0VmlldzogUHJvcFR5cGVzLnN0cmluZyxcblxuICAgIC8qKlxuICAgICAqIEFuIGFycmF5IG9mIGV2ZW50IG9iamVjdHMgdG8gZGlzcGxheSBvbiB0aGUgY2FsZW5kYXIuIEV2ZW50cyBvYmplY3RzXG4gICAgICogY2FuIGJlIGFueSBzaGFwZSwgYXMgbG9uZyBhcyB0aGUgQ2FsZW5kYXIga25vd3MgaG93IHRvIHJldHJpZXZlIHRoZVxuICAgICAqIGZvbGxvd2luZyBkZXRhaWxzIG9mIHRoZSBldmVudDpcbiAgICAgKlxuICAgICAqICAtIHN0YXJ0IHRpbWVcbiAgICAgKiAgLSBlbmQgdGltZVxuICAgICAqICAtIHRpdGxlXG4gICAgICogIC0gd2hldGhlciBpdHMgYW4gXCJhbGwgZGF5XCIgZXZlbnQgb3Igbm90XG4gICAgICogIC0gYW55IHJlc291cmNlIHRoZSBldmVudCBtYXkgYmUgcmVsYXRlZCB0b1xuICAgICAqXG4gICAgICogRWFjaCBvZiB0aGVzZSBwcm9wZXJ0aWVzIGNhbiBiZSBjdXN0b21pemVkIG9yIGdlbmVyYXRlZCBkeW5hbWljYWxseSBieVxuICAgICAqIHNldHRpbmcgdGhlIHZhcmlvdXMgXCJhY2Nlc3NvclwiIHByb3BzLiBXaXRob3V0IGFueSBjb25maWd1cmF0aW9uIHRoZSBkZWZhdWx0XG4gICAgICogZXZlbnQgc2hvdWxkIGxvb2sgbGlrZTpcbiAgICAgKlxuICAgICAqIGBgYGpzXG4gICAgICogRXZlbnQge1xuICAgICAqICAgdGl0bGU6IHN0cmluZyxcbiAgICAgKiAgIHN0YXJ0OiBEYXRlLFxuICAgICAqICAgZW5kOiBEYXRlLFxuICAgICAqICAgYWxsRGF5PzogYm9vbGVhblxuICAgICAqICAgcmVzb3VyY2U/OiBhbnksXG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGV2ZW50czogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9iamVjdCksXG5cbiAgICAvKipcbiAgICAgKiBBbiBhcnJheSBvZiBiYWNrZ3JvdW5kIGV2ZW50IG9iamVjdHMgdG8gZGlzcGxheSBvbiB0aGUgY2FsZW5kYXIuIEJhY2tncm91bmRcbiAgICAgKiBFdmVudHMgYmVoYXZlIHNpbWlsYXJseSB0byBFdmVudHMgYnV0IGFyZSBub3QgZmFjdG9yZWQgaW50byBFdmVudCBvdmVybGFwIGxvZ2ljLFxuICAgICAqIGFsbG93aW5nIHRoZW0gdG8gc2l0IGJlaGluZCBhbnkgRXZlbnRzIHRoYXQgbWF5IG9jY3VyIGR1cmluZyB0aGUgc2FtZSBwZXJpb2QuXG4gICAgICogQmFja2dyb3VuZCBFdmVudHMgb2JqZWN0cyBjYW4gYmUgYW55IHNoYXBlLCBhcyBsb25nIGFzIHRoZSBDYWxlbmRhciBrbm93cyBob3cgdG9cbiAgICAgKiByZXRyaWV2ZSB0aGUgZm9sbG93aW5nIGRldGFpbHMgb2YgdGhlIGV2ZW50OlxuICAgICAqXG4gICAgICogIC0gc3RhcnQgdGltZVxuICAgICAqICAtIGVuZCB0aW1lXG4gICAgICpcbiAgICAgKiBFYWNoIG9mIHRoZXNlIHByb3BlcnRpZXMgY2FuIGJlIGN1c3RvbWl6ZWQgb3IgZ2VuZXJhdGVkIGR5bmFtaWNhbGx5IGJ5XG4gICAgICogc2V0dGluZyB0aGUgdmFyaW91cyBcImFjY2Vzc29yXCIgcHJvcHMuIFdpdGhvdXQgYW55IGNvbmZpZ3VyYXRpb24gdGhlIGRlZmF1bHRcbiAgICAgKiBldmVudCBzaG91bGQgbG9vayBsaWtlOlxuICAgICAqXG4gICAgICogYGBganNcbiAgICAgKiBCYWNrZ3JvdW5kRXZlbnQge1xuICAgICAqICAgc3RhcnQ6IERhdGUsXG4gICAgICogICBlbmQ6IERhdGUsXG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGJhY2tncm91bmRFdmVudHM6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vYmplY3QpLFxuXG4gICAgLyoqXG4gICAgICogQWNjZXNzb3IgZm9yIHRoZSBldmVudCB0aXRsZSwgdXNlZCB0byBkaXNwbGF5IGV2ZW50IGluZm9ybWF0aW9uLiBTaG91bGRcbiAgICAgKiByZXNvbHZlIHRvIGEgYHJlbmRlcmFibGVgIHZhbHVlLlxuICAgICAqXG4gICAgICogYGBganNcbiAgICAgKiBzdHJpbmcgfCAoZXZlbnQ6IE9iamVjdCkgPT4gc3RyaW5nXG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAdHlwZSB7KGZ1bmN8c3RyaW5nKX1cbiAgICAgKi9cbiAgICB0aXRsZUFjY2Vzc29yOiBhY2Nlc3NvcixcblxuICAgIC8qKlxuICAgICAqIEFjY2Vzc29yIGZvciB0aGUgZXZlbnQgdG9vbHRpcC4gU2hvdWxkXG4gICAgICogcmVzb2x2ZSB0byBhIGByZW5kZXJhYmxlYCB2YWx1ZS4gUmVtb3ZlcyB0aGUgdG9vbHRpcCBpZiBudWxsLlxuICAgICAqXG4gICAgICogYGBganNcbiAgICAgKiBzdHJpbmcgfCAoZXZlbnQ6IE9iamVjdCkgPT4gc3RyaW5nXG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAdHlwZSB7KGZ1bmN8c3RyaW5nKX1cbiAgICAgKi9cbiAgICB0b29sdGlwQWNjZXNzb3I6IGFjY2Vzc29yLFxuXG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBldmVudCBzaG91bGQgYmUgY29uc2lkZXJlZCBhbiBcImFsbCBkYXlcIiBldmVudCBhbmQgaWdub3JlIHRpbWUuXG4gICAgICogTXVzdCByZXNvbHZlIHRvIGEgYGJvb2xlYW5gIHZhbHVlLlxuICAgICAqXG4gICAgICogYGBganNcbiAgICAgKiBzdHJpbmcgfCAoZXZlbnQ6IE9iamVjdCkgPT4gYm9vbGVhblxuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHR5cGUgeyhmdW5jfHN0cmluZyl9XG4gICAgICovXG4gICAgYWxsRGF5QWNjZXNzb3I6IGFjY2Vzc29yLFxuXG4gICAgLyoqXG4gICAgICogVGhlIHN0YXJ0IGRhdGUvdGltZSBvZiB0aGUgZXZlbnQuIE11c3QgcmVzb2x2ZSB0byBhIEphdmFTY3JpcHQgYERhdGVgIG9iamVjdC5cbiAgICAgKlxuICAgICAqIGBgYGpzXG4gICAgICogc3RyaW5nIHwgKGV2ZW50OiBPYmplY3QpID0+IERhdGVcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEB0eXBlIHsoZnVuY3xzdHJpbmcpfVxuICAgICAqL1xuICAgIHN0YXJ0QWNjZXNzb3I6IGFjY2Vzc29yLFxuXG4gICAgLyoqXG4gICAgICogVGhlIGVuZCBkYXRlL3RpbWUgb2YgdGhlIGV2ZW50LiBNdXN0IHJlc29sdmUgdG8gYSBKYXZhU2NyaXB0IGBEYXRlYCBvYmplY3QuXG4gICAgICpcbiAgICAgKiBgYGBqc1xuICAgICAqIHN0cmluZyB8IChldmVudDogT2JqZWN0KSA9PiBEYXRlXG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAdHlwZSB7KGZ1bmN8c3RyaW5nKX1cbiAgICAgKi9cbiAgICBlbmRBY2Nlc3NvcjogYWNjZXNzb3IsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgaWQgb2YgdGhlIGV2ZW50LiBNdXN0IHJlc29sdmUgdG8gYSBzdHJpbmcgb3IgbnVtYmVyLiBVc2VkIGFzIHRoZSBrZXkgZm9yIHRoZSBldmVudCBpbiB0aGUgRE9NLiBJZiBub3QgcHJvdmlkZWQsIHRoZSBldmVudCB3aWxsIGJlIGdpdmVuIGEga2V5IG9mICdldnRcXF97aW5kZXh9Jy5cbiAgICAgKlxuICAgICAqIGBgYGpzXG4gICAgICogc3RyaW5nIHwgbnVtYmVyIHwgKGV2ZW50OiBPYmplY3QpID0+IHN0cmluZyB8IG51bWJlclxuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQHR5cGUgeyhmdW5jfHN0cmluZyl9XG4gICAgICovXG4gICAgZXZlbnRJZEFjY2Vzc29yOiBhY2Nlc3NvcixcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGlkIG9mIHRoZSBgcmVzb3VyY2VgIHRoYXQgdGhlIGV2ZW50IGlzIGEgbWVtYmVyIG9mLiBUaGlzXG4gICAgICogaWQgc2hvdWxkIG1hdGNoIGF0IGxlYXN0IG9uZSByZXNvdXJjZSBpbiB0aGUgYHJlc291cmNlc2AgYXJyYXkuXG4gICAgICpcbiAgICAgKiBgYGBqc1xuICAgICAqIHN0cmluZyB8IChldmVudDogT2JqZWN0KSA9PiBEYXRlXG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAdHlwZSB7KGZ1bmN8c3RyaW5nKX1cbiAgICAgKi9cbiAgICByZXNvdXJjZUFjY2Vzc29yOiBhY2Nlc3NvcixcblxuICAgIC8qKlxuICAgICAqIEFuIGFycmF5IG9mIHJlc291cmNlIG9iamVjdHMgdGhhdCBtYXAgZXZlbnRzIHRvIGEgc3BlY2lmaWMgcmVzb3VyY2UuXG4gICAgICogUmVzb3VyY2Ugb2JqZWN0cywgbGlrZSBldmVudHMsIGNhbiBiZSBhbnkgc2hhcGUgb3IgaGF2ZSBhbnkgcHJvcGVydGllcyxcbiAgICAgKiBidXQgc2hvdWxkIGJlIHVuaXF1bHkgaWRlbnRpZmlhYmxlIHZpYSB0aGUgYHJlc291cmNlSWRBY2Nlc3NvcmAsIGFzXG4gICAgICogd2VsbCBhcyBhIFwidGl0bGVcIiBvciBuYW1lIGFzIHByb3ZpZGVkIGJ5IHRoZSBgcmVzb3VyY2VUaXRsZUFjY2Vzc29yYCBwcm9wLlxuICAgICAqL1xuICAgIHJlc291cmNlczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9iamVjdCksXG5cbiAgICAvKipcbiAgICAgKiBQcm92aWRlcyBhIHVuaXF1ZSBpZGVudGlmaWVyLCBvciBhbiBhcnJheSBvZiB1bmlxdWUgaWRlbnRpZmllcnMsIGZvciBlYWNoIHJlc291cmNlIGluIHRoZSBgcmVzb3VyY2VzYCBhcnJheVxuICAgICAqXG4gICAgICogYGBganNcbiAgICAgKiBzdHJpbmcgfCAocmVzb3VyY2U6IE9iamVjdCkgPT4gYW55XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAdHlwZSB7KGZ1bmN8c3RyaW5nKX1cbiAgICAgKi9cbiAgICByZXNvdXJjZUlkQWNjZXNzb3I6IGFjY2Vzc29yLFxuXG4gICAgLyoqXG4gICAgICogUHJvdmlkZXMgYSBodW1hbiByZWFkYWJsZSBuYW1lIGZvciB0aGUgcmVzb3VyY2Ugb2JqZWN0LCB1c2VkIGluIGhlYWRlcnMuXG4gICAgICpcbiAgICAgKiBgYGBqc1xuICAgICAqIHN0cmluZyB8IChyZXNvdXJjZTogT2JqZWN0KSA9PiBhbnlcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqIEB0eXBlIHsoZnVuY3xzdHJpbmcpfVxuICAgICAqL1xuICAgIHJlc291cmNlVGl0bGVBY2Nlc3NvcjogYWNjZXNzb3IsXG5cbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmVzIHRoZSBjdXJyZW50IGRhdGUvdGltZSB3aGljaCBpcyBoaWdobGlnaHRlZCBpbiB0aGUgdmlld3MuXG4gICAgICpcbiAgICAgKiBUaGUgdmFsdWUgYWZmZWN0cyB3aGljaCBkYXkgaXMgc2hhZGVkIGFuZCB3aGljaCB0aW1lIGlzIHNob3duIGFzXG4gICAgICogdGhlIGN1cnJlbnQgdGltZS4gSXQgYWxzbyBhZmZlY3RzIHRoZSBkYXRlIHVzZWQgYnkgdGhlIFRvZGF5IGJ1dHRvbiBpblxuICAgICAqIHRoZSB0b29sYmFyLlxuICAgICAqXG4gICAgICogUHJvdmlkaW5nIGEgdmFsdWUgaGVyZSBjYW4gYmUgdXNlZnVsIHdoZW4geW91IGFyZSBpbXBsZW1lbnRpbmcgdGltZSB6b25lc1xuICAgICAqIHVzaW5nIHRoZSBgc3RhcnRBY2Nlc3NvcmAgYW5kIGBlbmRBY2Nlc3NvcmAgcHJvcGVydGllcy5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtmdW5jfVxuICAgICAqIEBkZWZhdWx0ICgpID0+IG5ldyBEYXRlKClcbiAgICAgKi9cbiAgICBnZXROb3c6IFByb3BUeXBlcy5mdW5jLFxuXG4gICAgLyoqXG4gICAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgYGRhdGVgIHZhbHVlIGNoYW5nZXMuXG4gICAgICpcbiAgICAgKiBAY29udHJvbGxhYmxlIGRhdGVcbiAgICAgKi9cbiAgICBvbk5hdmlnYXRlOiBQcm9wVHlwZXMuZnVuYyxcblxuICAgIC8qKlxuICAgICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gdGhlIGB2aWV3YCB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqXG4gICAgICogQGNvbnRyb2xsYWJsZSB2aWV3XG4gICAgICovXG4gICAgb25WaWV3OiBQcm9wVHlwZXMuZnVuYyxcblxuICAgIC8qKlxuICAgICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gZGF0ZSBoZWFkZXIsIG9yIHRoZSB0cnVuY2F0ZWQgZXZlbnRzIGxpbmtzIGFyZSBjbGlja2VkXG4gICAgICpcbiAgICAgKi9cbiAgICBvbkRyaWxsRG93bjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIGBgYGpzXG4gICAgICogKGRhdGVzOiBEYXRlW10gfCB7IHN0YXJ0OiBEYXRlOyBlbmQ6IERhdGUgfSwgdmlldzogJ21vbnRoJ3wnd2Vlayd8J3dvcmtfd2Vlayd8J2RheSd8J2FnZW5kYSd8dW5kZWZpbmVkKSA9PiB2b2lkXG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSB2aXNpYmxlIGRhdGUgcmFuZ2UgY2hhbmdlcy4gUmV0dXJucyBhbiBBcnJheSBvZiBkYXRlc1xuICAgICAqIG9yIGFuIG9iamVjdCB3aXRoIHN0YXJ0IGFuZCBlbmQgZGF0ZXMgZm9yIEJVSUxUSU4gdmlld3MuIE9wdGlvbmFsbHkgbmV3IGB2aWV3YFxuICAgICAqIHdpbGwgYmUgcmV0dXJuZWQgd2hlbiBjYWxsYmFjayBjYWxsZWQgYWZ0ZXIgdmlldyBjaGFuZ2UuXG4gICAgICpcbiAgICAgKiBDdXN0b20gdmlld3MgbWF5IHJldHVybiBzb21ldGhpbmcgZGlmZmVyZW50LlxuICAgICAqL1xuICAgIG9uUmFuZ2VDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuXG4gICAgLyoqXG4gICAgICogQSBjYWxsYmFjayBmaXJlZCB3aGVuIGEgZGF0ZSBzZWxlY3Rpb24gaXMgbWFkZS4gT25seSBmaXJlcyB3aGVuIGBzZWxlY3RhYmxlYCBpcyBgdHJ1ZWAuXG4gICAgICpcbiAgICAgKiBgYGBqc1xuICAgICAqIChcbiAgICAgKiAgIHNsb3RJbmZvOiB7XG4gICAgICogICAgIHN0YXJ0OiBEYXRlLFxuICAgICAqICAgICBlbmQ6IERhdGUsXG4gICAgICogICAgIHJlc291cmNlSWQ6ICAobnVtYmVyfHN0cmluZyksXG4gICAgICogICAgIHNsb3RzOiBBcnJheTxEYXRlPixcbiAgICAgKiAgICAgYWN0aW9uOiBcInNlbGVjdFwiIHwgXCJjbGlja1wiIHwgXCJkb3VibGVDbGlja1wiLFxuICAgICAqICAgICBib3VuZHM6ID97IC8vIEZvciBcInNlbGVjdFwiIGFjdGlvblxuICAgICAqICAgICAgIHg6IG51bWJlcixcbiAgICAgKiAgICAgICB5OiBudW1iZXIsXG4gICAgICogICAgICAgdG9wOiBudW1iZXIsXG4gICAgICogICAgICAgcmlnaHQ6IG51bWJlcixcbiAgICAgKiAgICAgICBsZWZ0OiBudW1iZXIsXG4gICAgICogICAgICAgYm90dG9tOiBudW1iZXIsXG4gICAgICogICAgIH0sXG4gICAgICogICAgIGJveDogP3sgLy8gRm9yIFwiY2xpY2tcIiBvciBcImRvdWJsZUNsaWNrXCIgYWN0aW9uc1xuICAgICAqICAgICAgIGNsaWVudFg6IG51bWJlcixcbiAgICAgKiAgICAgICBjbGllbnRZOiBudW1iZXIsXG4gICAgICogICAgICAgeDogbnVtYmVyLFxuICAgICAqICAgICAgIHk6IG51bWJlcixcbiAgICAgKiAgICAgfSxcbiAgICAgKiAgIH1cbiAgICAgKiApID0+IGFueVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIG9uU2VsZWN0U2xvdDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgICAvKipcbiAgICAgKiBDYWxsYmFjayBmaXJlZCB3aGVuIGEgY2FsZW5kYXIgZXZlbnQgaXMgc2VsZWN0ZWQuXG4gICAgICpcbiAgICAgKiBgYGBqc1xuICAgICAqIChldmVudDogT2JqZWN0LCBlOiBTeW50aGV0aWNFdmVudCkgPT4gYW55XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAY29udHJvbGxhYmxlIHNlbGVjdGVkXG4gICAgICovXG4gICAgb25TZWxlY3RFdmVudDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgICAvKipcbiAgICAgKiBDYWxsYmFjayBmaXJlZCB3aGVuIGEgY2FsZW5kYXIgZXZlbnQgaXMgY2xpY2tlZCB0d2ljZS5cbiAgICAgKlxuICAgICAqIGBgYGpzXG4gICAgICogKGV2ZW50OiBPYmplY3QsIGU6IFN5bnRoZXRpY0V2ZW50KSA9PiB2b2lkXG4gICAgICogYGBgXG4gICAgICovXG4gICAgb25Eb3VibGVDbGlja0V2ZW50OiBQcm9wVHlwZXMuZnVuYyxcblxuICAgIC8qKlxuICAgICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gYSBmb2N1c2VkIGNhbGVuZGFyIGV2ZW50IHJlY2VpdmVzIGEga2V5IHByZXNzLlxuICAgICAqXG4gICAgICogYGBganNcbiAgICAgKiAoZXZlbnQ6IE9iamVjdCwgZTogU3ludGhldGljRXZlbnQpID0+IHZvaWRcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBvbktleVByZXNzRXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuXG4gICAgLyoqXG4gICAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiBkcmFnZ2luZyBhIHNlbGVjdGlvbiBpbiB0aGUgVGltZSB2aWV3cy5cbiAgICAgKlxuICAgICAqIFJldHVybmluZyBgZmFsc2VgIGZyb20gdGhlIGhhbmRsZXIgd2lsbCBwcmV2ZW50IGEgc2VsZWN0aW9uLlxuICAgICAqXG4gICAgICogYGBganNcbiAgICAgKiAocmFuZ2U6IHsgc3RhcnQ6IERhdGUsIGVuZDogRGF0ZSwgcmVzb3VyY2VJZDogKG51bWJlcnxzdHJpbmcpIH0pID0+ID9ib29sZWFuXG4gICAgICogYGBgXG4gICAgICovXG4gICAgb25TZWxlY3Rpbmc6IFByb3BUeXBlcy5mdW5jLFxuXG4gICAgLyoqXG4gICAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiBhICt7Y291bnR9IG1vcmUgaXMgY2xpY2tlZFxuICAgICAqXG4gICAgICogYGBganNcbiAgICAgKiAoZXZlbnRzOiBPYmplY3QsIGRhdGU6IERhdGUpID0+IGFueVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIG9uU2hvd01vcmU6IFByb3BUeXBlcy5mdW5jLFxuXG4gICAgLyoqXG4gICAgICogRGlzcGxheXMgYWxsIGV2ZW50cyBvbiB0aGUgbW9udGggdmlldyBpbnN0ZWFkIG9mXG4gICAgICogaGF2aW5nIHNvbWUgaGlkZGVuIGJlaGluZCAre2NvdW50fSBtb3JlLiBUaGlzIHdpbGxcbiAgICAgKiBjYXVzZSB0aGUgcm93cyBpbiB0aGUgbW9udGggdmlldyB0byBiZSBzY3JvbGxhYmxlIGlmXG4gICAgICogdGhlIG51bWJlciBvZiBldmVudHMgZXhjZWVkIHRoZSBoZWlnaHQgb2YgdGhlIHJvdy5cbiAgICAgKi9cbiAgICBzaG93QWxsRXZlbnRzOiBQcm9wVHlwZXMuYm9vbCxcblxuICAgIC8qKlxuICAgICAqIFRoZSBzZWxlY3RlZCBldmVudCwgaWYgYW55LlxuICAgICAqL1xuICAgIHNlbGVjdGVkOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gICAgLyoqXG4gICAgICogQW4gYXJyYXkgb2YgYnVpbHQtaW4gdmlldyBuYW1lcyB0byBhbGxvdyB0aGUgY2FsZW5kYXIgdG8gZGlzcGxheS5cbiAgICAgKiBhY2NlcHRzIGVpdGhlciBhbiBhcnJheSBvZiBidWlsdGluIHZpZXcgbmFtZXMsXG4gICAgICpcbiAgICAgKiBgYGBqc3hcbiAgICAgKiB2aWV3cz17Wydtb250aCcsICdkYXknLCAnYWdlbmRhJ119XG4gICAgICogYGBgXG4gICAgICogb3IgYW4gb2JqZWN0IGhhc2ggb2YgdGhlIHZpZXcgbmFtZSBhbmQgdGhlIGNvbXBvbmVudCAob3IgYm9vbGVhbiBmb3IgYnVpbHRpbikuXG4gICAgICpcbiAgICAgKiBgYGBqc3hcbiAgICAgKiB2aWV3cz17e1xuICAgICAqICAgbW9udGg6IHRydWUsXG4gICAgICogICB3ZWVrOiBmYWxzZSxcbiAgICAgKiAgIG15d2VlazogV29ya1dlZWtWaWV3Q29tcG9uZW50LFxuICAgICAqIH19XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBDdXN0b20gdmlld3MgY2FuIGJlIGFueSBSZWFjdCBjb21wb25lbnQsIHRoYXQgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nXG4gICAgICogaW50ZXJmYWNlOlxuICAgICAqXG4gICAgICogYGBganNcbiAgICAgKiBpbnRlcmZhY2UgVmlldyB7XG4gICAgICogICBzdGF0aWMgdGl0bGUoZGF0ZTogRGF0ZSwgeyBmb3JtYXRzOiBEYXRlRm9ybWF0W10sIGN1bHR1cmU6IHN0cmluZz8sIC4uLnByb3BzIH0pOiBzdHJpbmdcbiAgICAgKiAgIHN0YXRpYyBuYXZpZ2F0ZShkYXRlOiBEYXRlLCBhY3Rpb246ICdQUkVWJyB8ICdORVhUJyB8ICdEQVRFJyk6IERhdGVcbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBAdHlwZSBWaWV3cyAoJ21vbnRoJ3wnd2Vlayd8J3dvcmtfd2Vlayd8J2RheSd8J2FnZW5kYScpXG4gICAgICogQFZpZXdcbiAgICAgWydtb250aCcsICd3ZWVrJywgJ2RheScsICdhZ2VuZGEnXVxuICAgICAqL1xuICAgIHZpZXdzOiBjb21wb25lbnRWaWV3cyxcblxuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgd2hldGhlciB0aGUgZHJpbGwgZG93biBzaG91bGQgb2NjdXIgd2hlbiBjbGlja2luZyBvbiB0aGUgXCIrX3hfIG1vcmVcIiBsaW5rLlxuICAgICAqIElmIGBwb3B1cGAgaXMgZmFsc2UsIGFuZCBgZG9TaG93TW9yZURyaWxsRG93bmAgaXMgdHJ1ZSwgdGhlIGRyaWxsIGRvd24gd2lsbCBvY2N1ciBhcyB1c3VhbC5cbiAgICAgKiBJZiBgcG9wdXBgIGlzIGZhbHNlLCBhbmQgYGRvU2hvd01vcmVEcmlsbERvd25gIGlzIGZhbHNlLCB0aGUgZHJpbGwgZG93biB3aWxsIG5vdCBvY2N1ciBhbmQgdGhlIGBvblNob3dNb3JlYCBmdW5jdGlvbiB3aWxsIHRyaWdnZXIuXG4gICAgICovXG4gICAgZG9TaG93TW9yZURyaWxsRG93bjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgc3RyaW5nIG5hbWUgb2YgdGhlIGRlc3RpbmF0aW9uIHZpZXcgZm9yIGRyaWxsLWRvd24gYWN0aW9ucywgc3VjaFxuICAgICAqIGFzIGNsaWNraW5nIGEgZGF0ZSBoZWFkZXIsIG9yIHRoZSB0cnVuY2F0ZWQgZXZlbnRzIGxpbmtzLiBJZlxuICAgICAqIGBnZXREcmlsbGRvd25WaWV3YCBpcyBhbHNvIHNwZWNpZmllZCBpdCB3aWxsIGJlIHVzZWQgaW5zdGVhZC5cbiAgICAgKlxuICAgICAqIFNldCB0byBgbnVsbGAgdG8gZGlzYWJsZSBkcmlsbC1kb3duIGFjdGlvbnMuXG4gICAgICpcbiAgICAgKiBgYGBqc1xuICAgICAqIDxDYWxlbmRhclxuICAgICAqICAgZHJpbGxkb3duVmlldz1cImFnZW5kYVwiXG4gICAgICogLz5cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBkcmlsbGRvd25WaWV3OiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb25hbGx5IGVxdWl2YWxlbnQgdG8gYGRyaWxsZG93blZpZXdgLCBidXQgYWNjZXB0cyBhIGZ1bmN0aW9uXG4gICAgICogdGhhdCBjYW4gcmV0dXJuIGEgdmlldyBuYW1lLiBJdCdzIHVzZWZ1bCBmb3IgY3VzdG9taXppbmcgdGhlIGRyaWxsLWRvd25cbiAgICAgKiBhY3Rpb25zIGRlcGVuZGluZyBvbiB0aGUgdGFyZ2V0IGRhdGUgYW5kIHRyaWdnZXJpbmcgdmlldy5cbiAgICAgKlxuICAgICAqIFJldHVybiBgbnVsbGAgdG8gZGlzYWJsZSBkcmlsbC1kb3duIGFjdGlvbnMuXG4gICAgICpcbiAgICAgKiBgYGBqc1xuICAgICAqIDxDYWxlbmRhclxuICAgICAqICAgZ2V0RHJpbGxkb3duVmlldz17KHRhcmdldERhdGUsIGN1cnJlbnRWaWV3TmFtZSwgY29uZmlndXJlZFZpZXdOYW1lcykgPT5cbiAgICAgKiAgICAgaWYgKGN1cnJlbnRWaWV3TmFtZSA9PT0gJ21vbnRoJyAmJiBjb25maWd1cmVkVmlld05hbWVzLmluY2x1ZGVzKCd3ZWVrJykpXG4gICAgICogICAgICAgcmV0dXJuICd3ZWVrJ1xuICAgICAqXG4gICAgICogICAgIHJldHVybiBudWxsO1xuICAgICAqICAgfX1cbiAgICAgKiAvPlxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGdldERyaWxsZG93blZpZXc6IFByb3BUeXBlcy5mdW5jLFxuXG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lcyB0aGUgZW5kIGRhdGUgZnJvbSBkYXRlIHByb3AgaW4gdGhlIGFnZW5kYSB2aWV3XG4gICAgICogZGF0ZSBwcm9wICsgbGVuZ3RoIChpbiBudW1iZXIgb2YgZGF5cykgPSBlbmQgZGF0ZVxuICAgICAqL1xuICAgIGxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcblxuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgd2hldGhlciB0aGUgdG9vbGJhciBpcyBkaXNwbGF5ZWRcbiAgICAgKi9cbiAgICB0b29sYmFyOiBQcm9wVHlwZXMuYm9vbCxcblxuICAgIC8qKlxuICAgICAqIFNob3cgdHJ1bmNhdGVkIGV2ZW50cyBpbiBhbiBvdmVybGF5IHdoZW4geW91IGNsaWNrIHRoZSBcIitfeF8gbW9yZVwiIGxpbmsuXG4gICAgICovXG4gICAgcG9wdXA6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgLyoqXG4gICAgICogRGlzdGFuY2UgaW4gcGl4ZWxzLCBmcm9tIHRoZSBlZGdlcyBvZiB0aGUgdmlld3BvcnQsIHRoZSBcInNob3cgbW9yZVwiIG92ZXJsYXkgc2hvdWxkIGJlIHBvc2l0aW9uZWQuXG4gICAgICpcbiAgICAgKiBgYGBqc3hcbiAgICAgKiA8Q2FsZW5kYXIgcG9wdXBPZmZzZXQ9ezMwfS8+XG4gICAgICogPENhbGVuZGFyIHBvcHVwT2Zmc2V0PXt7eDogMzAsIHk6IDIwfX0vPlxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHBvcHVwT2Zmc2V0OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICAgIFByb3BUeXBlcy5udW1iZXIsXG4gICAgICBQcm9wVHlwZXMuc2hhcGUoeyB4OiBQcm9wVHlwZXMubnVtYmVyLCB5OiBQcm9wVHlwZXMubnVtYmVyIH0pLFxuICAgIF0pLFxuXG4gICAgLyoqXG4gICAgICogQWxsb3dzIG1vdXNlIHNlbGVjdGlvbiBvZiByYW5nZXMgb2YgZGF0ZXMvdGltZXMuXG4gICAgICpcbiAgICAgKiBUaGUgJ2lnbm9yZUV2ZW50cycgb3B0aW9uIHByZXZlbnRzIHNlbGVjdGlvbiBjb2RlIGZyb20gcnVubmluZyB3aGVuIGFcbiAgICAgKiBkcmFnIGJlZ2lucyBvdmVyIGFuIGV2ZW50LiBVc2VmdWwgd2hlbiB5b3Ugd2FudCBjdXN0b20gZXZlbnQgY2xpY2sgb3IgZHJhZ1xuICAgICAqIGxvZ2ljXG4gICAgICovXG4gICAgc2VsZWN0YWJsZTogUHJvcFR5cGVzLm9uZU9mKFt0cnVlLCBmYWxzZSwgJ2lnbm9yZUV2ZW50cyddKSxcblxuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0aGUgdXNlciBtdXN0IHByZXNzIGFuZCBob2xkIG9uIHRoZSBzY3JlZW4gZm9yIGEgdG91Y2hcbiAgICAgKiB0byBiZSBjb25zaWRlcmVkIGEgXCJsb25nIHByZXNzLlwiIExvbmcgcHJlc3NlcyBhcmUgdXNlZCBmb3IgdGltZSBzbG90IHNlbGVjdGlvbiBvbiB0b3VjaFxuICAgICAqIGRldmljZXMuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqIEBkZWZhdWx0IDI1MFxuICAgICAqL1xuICAgIGxvbmdQcmVzc1RocmVzaG9sZDogUHJvcFR5cGVzLm51bWJlcixcblxuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgdGhlIHNlbGVjdGFibGUgdGltZSBpbmNyZW1lbnRzIGluIHdlZWsgYW5kIGRheSB2aWV3cywgaW4gbWludXRlcy5cbiAgICAgKi9cbiAgICBzdGVwOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gICAgLyoqXG4gICAgICogVGhlIG51bWJlciBvZiBzbG90cyBwZXIgXCJzZWN0aW9uXCIgaW4gdGhlIHRpbWUgZ3JpZCB2aWV3cy4gQWRqdXN0IHdpdGggYHN0ZXBgXG4gICAgICogdG8gY2hhbmdlIHRoZSBkZWZhdWx0IG9mIDEgaG91ciBsb25nIGdyb3Vwcywgd2l0aCAzMCBtaW51dGUgc2xvdHMuXG4gICAgICovXG4gICAgdGltZXNsb3RzOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gICAgLyoqXG4gICAgICpTd2l0Y2ggdGhlIGNhbGVuZGFyIHRvIGEgYHJpZ2h0LXRvLWxlZnRgIHJlYWQgZGlyZWN0aW9uLlxuICAgICAqL1xuICAgIHJ0bDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBPcHRpb25hbGx5IHByb3ZpZGUgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gb2JqZWN0IG9mIGNsYXNzTmFtZSBvciBzdHlsZSBwcm9wc1xuICAgICAqIHRvIGJlIGFwcGxpZWQgdG8gdGhlIHRoZSBldmVudCBub2RlLlxuICAgICAqXG4gICAgICogYGBganNcbiAgICAgKiAoXG4gICAgICogXHRldmVudDogT2JqZWN0LFxuICAgICAqIFx0c3RhcnQ6IERhdGUsXG4gICAgICogXHRlbmQ6IERhdGUsXG4gICAgICogXHRpc1NlbGVjdGVkOiBib29sZWFuXG4gICAgICogKSA9PiB7IGNsYXNzTmFtZT86IHN0cmluZywgc3R5bGU/OiBPYmplY3QgfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGV2ZW50UHJvcEdldHRlcjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgICAvKipcbiAgICAgKiBPcHRpb25hbGx5IHByb3ZpZGUgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gb2JqZWN0IG9mIGNsYXNzTmFtZSBvciBzdHlsZSBwcm9wc1xuICAgICAqIHRvIGJlIGFwcGxpZWQgdG8gdGhlIHRpbWUtc2xvdCBub2RlLiBDYXV0aW9uISBTdHlsZXMgdGhhdCBjaGFuZ2UgbGF5b3V0IG9yXG4gICAgICogcG9zaXRpb24gbWF5IGJyZWFrIHRoZSBjYWxlbmRhciBpbiB1bmV4cGVjdGVkIHdheXMuXG4gICAgICpcbiAgICAgKiBgYGBqc1xuICAgICAqIChkYXRlOiBEYXRlLCByZXNvdXJjZUlkOiAobnVtYmVyfHN0cmluZykpID0+IHsgY2xhc3NOYW1lPzogc3RyaW5nLCBzdHlsZT86IE9iamVjdCB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgc2xvdFByb3BHZXR0ZXI6IFByb3BUeXBlcy5mdW5jLFxuXG4gICAgLyoqXG4gICAgICogT3B0aW9uYWxseSBwcm92aWRlIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGFuIG9iamVjdCBvZiBwcm9wcyB0byBiZSBhcHBsaWVkXG4gICAgICogdG8gdGhlIHRpbWUtc2xvdCBncm91cCBub2RlLiBVc2VmdWwgdG8gZHluYW1pY2FsbHkgY2hhbmdlIHRoZSBzaXppbmcgb2YgdGltZSBub2Rlcy5cbiAgICAgKiBgYGBqc1xuICAgICAqIChncm91cDogRGF0ZVtdKSA9PiB7IHN0eWxlPzogT2JqZWN0IH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBzbG90R3JvdXBQcm9wR2V0dGVyOiBQcm9wVHlwZXMuZnVuYyxcblxuICAgIC8qKlxuICAgICAqIE9wdGlvbmFsbHkgcHJvdmlkZSBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhbiBvYmplY3Qgb2YgY2xhc3NOYW1lIG9yIHN0eWxlIHByb3BzXG4gICAgICogdG8gYmUgYXBwbGllZCB0byB0aGUgdGhlIGRheSBiYWNrZ3JvdW5kLiBDYXV0aW9uISBTdHlsZXMgdGhhdCBjaGFuZ2UgbGF5b3V0IG9yXG4gICAgICogcG9zaXRpb24gbWF5IGJyZWFrIHRoZSBjYWxlbmRhciBpbiB1bmV4cGVjdGVkIHdheXMuXG4gICAgICpcbiAgICAgKiBgYGBqc1xuICAgICAqIChkYXRlOiBEYXRlKSA9PiB7IGNsYXNzTmFtZT86IHN0cmluZywgc3R5bGU/OiBPYmplY3QgfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGRheVByb3BHZXR0ZXI6IFByb3BUeXBlcy5mdW5jLFxuXG4gICAgLyoqXG4gICAgICogU3VwcG9ydCB0byBzaG93IG11bHRpLWRheSBldmVudHMgd2l0aCBzcGVjaWZpYyBzdGFydCBhbmQgZW5kIHRpbWVzIGluIHRoZVxuICAgICAqIG1haW4gdGltZSBncmlkIChyYXRoZXIgdGhhbiBpbiB0aGUgYWxsIGRheSBoZWFkZXIpLlxuICAgICAqXG4gICAgICogKipOb3RlOiBUaGlzIG1heSBjYXVzZSBjYWxlbmRhcnMgd2l0aCBzZXZlcmFsIGV2ZW50cyB0byBsb29rIHZlcnkgYnVzeSBpblxuICAgICAqIHRoZSB3ZWVrIGFuZCBkYXkgdmlld3MuKipcbiAgICAgKi9cbiAgICBzaG93TXVsdGlEYXlUaW1lczogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmVzIGEgbWF4aW11bSBhbW91bnQgb2Ygcm93cyBvZiBldmVudHMgdG8gZGlzcGxheSBpbiB0aGUgYWxsIGRheVxuICAgICAqIHNlY3Rpb24gZm9yIFdlZWsgYW5kIERheSB2aWV3cywgd2lsbCBkaXNwbGF5IGBzaG93TW9yZWAgYnV0dG9uIGlmXG4gICAgICogZXZlbnRzIGV4Y2VkZSB0aGlzIG51bWJlci5cbiAgICAgKlxuICAgICAqIERlZmF1bHRzIHRvIGBJbmZpbml0eWBcbiAgICAgKi9cbiAgICBhbGxEYXlNYXhSb3dzOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gICAgLyoqXG4gICAgICogQ29uc3RyYWlucyB0aGUgbWluaW11bSBfdGltZV8gb2YgdGhlIERheSBhbmQgV2VlayB2aWV3cy5cbiAgICAgKi9cbiAgICBtaW46IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuXG4gICAgLyoqXG4gICAgICogQ29uc3RyYWlucyB0aGUgbWF4aW11bSBfdGltZV8gb2YgdGhlIERheSBhbmQgV2VlayB2aWV3cy5cbiAgICAgKi9cbiAgICBtYXg6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuXG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lcyBob3cgZmFyIGRvd24gdGhlIHNjcm9sbCBwYW5lIGlzIGluaXRpYWxseSBzY3JvbGxlZCBkb3duLlxuICAgICAqL1xuICAgIHNjcm9sbFRvVGltZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSksXG5cbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHNjcm9sbCBwYW5lIGlzIGF1dG9tYXRpY2FsbHkgc2Nyb2xsZWQgZG93biBvciBub3QuXG4gICAgICovXG4gICAgZW5hYmxlQXV0b1Njcm9sbDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmVzIHRoZSBsYXlvdXQgb2YgcmVzb3VyY2UgZ3JvdXBzIGluIHRoZSBjYWxlbmRhci5cbiAgICAgKiBXaGVuIGB0cnVlYCwgcmVzb3VyY2VzIHdpbGwgYmUgZ3JvdXBlZCBieSBkYXRlIGluIHRoZSB3ZWVrIHZpZXcuXG4gICAgICogV2hlbiBgZmFsc2VgLCByZXNvdXJjZXMgd2lsbCBiZSBncm91cGVkIGJ5IHdlZWsuXG4gICAgICovXG4gICAgcmVzb3VyY2VHcm91cGluZ0xheW91dDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBTcGVjaWZ5IGEgc3BlY2lmaWMgY3VsdHVyZSBjb2RlIGZvciB0aGUgQ2FsZW5kYXIuXG4gICAgICpcbiAgICAgKiAqKk5vdGU6IGl0J3MgZ2VuZXJhbGx5IGJldHRlciB0byBoYW5kbGUgdGhpcyBnbG9iYWxseSB2aWEgeW91ciBpMThuIGxpYnJhcnkuKipcbiAgICAgKi9cbiAgICBjdWx0dXJlOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gICAgLyoqXG4gICAgICogTG9jYWxpemVyIHNwZWNpZmljIGZvcm1hdHMsIHRlbGwgdGhlIENhbGVuZGFyIGhvdyB0byBmb3JtYXQgYW5kIGRpc3BsYXkgZGF0ZXMuXG4gICAgICpcbiAgICAgKiBgZm9ybWF0YCB0eXBlcyBhcmUgZGVwZW5kZW50IG9uIHRoZSBjb25maWd1cmVkIGxvY2FsaXplcjsgTW9tZW50LCBMdXhvbiBhbmQgR2xvYmFsaXplXG4gICAgICogYWNjZXB0IHN0cmluZ3Mgb2YgdG9rZW5zIGFjY29yZGluZyB0byB0aGVpciBvd24gc3BlY2lmaWNhdGlvbiwgc3VjaCBhczogYCdERCBtbSB5eXl5J2AuXG4gICAgICpcbiAgICAgKiBgYGBqc3hcbiAgICAgKiBsZXQgZm9ybWF0cyA9IHtcbiAgICAgKiAgIGRhdGVGb3JtYXQ6ICdkZCcsXG4gICAgICpcbiAgICAgKiAgIGRheUZvcm1hdDogKGRhdGUsICwgbG9jYWxpemVyKSA9PlxuICAgICAqICAgICBsb2NhbGl6ZXIuZm9ybWF0KGRhdGUsICdEREQnLCBjdWx0dXJlKSxcbiAgICAgKlxuICAgICAqICAgZGF5UmFuZ2VIZWFkZXJGb3JtYXQ6ICh7IHN0YXJ0LCBlbmQgfSwgY3VsdHVyZSwgbG9jYWxpemVyKSA9PlxuICAgICAqICAgICBsb2NhbGl6ZXIuZm9ybWF0KHN0YXJ0LCB7IGRhdGU6ICdzaG9ydCcgfSwgY3VsdHVyZSkgKyAnIOKAkyAnICtcbiAgICAgKiAgICAgbG9jYWxpemVyLmZvcm1hdChlbmQsIHsgZGF0ZTogJ3Nob3J0JyB9LCBjdWx0dXJlKVxuICAgICAqIH1cbiAgICAgKlxuICAgICAqIDxDYWxlbmRhciBmb3JtYXRzPXtmb3JtYXRzfSAvPlxuICAgICAqIGBgYFxuICAgICAqXG4gICAgICogQWxsIGxvY2FsaXplcnMgYWNjZXB0IGEgZnVuY3Rpb24gb2ZcbiAgICAgKiB0aGUgZm9ybSBgKGRhdGU6IERhdGUsIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogTG9jYWxpemVyKSAtPiBzdHJpbmdgXG4gICAgICovXG4gICAgZm9ybWF0czogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIC8qKlxuICAgICAgICogRm9ybWF0IGZvciB0aGUgZGF5IG9mIHRoZSBtb250aCBoZWFkaW5nIGluIHRoZSBNb250aCB2aWV3LlxuICAgICAgICogZS5nLiBcIjAxXCIsIFwiMDJcIiwgXCIwM1wiLCBldGNcbiAgICAgICAqL1xuICAgICAgZGF0ZUZvcm1hdCxcblxuICAgICAgLyoqXG4gICAgICAgKiBBIGRheSBvZiB0aGUgd2VlayBmb3JtYXQgZm9yIFdlZWsgYW5kIERheSBoZWFkaW5ncyxcbiAgICAgICAqIGUuZy4gXCJXZWQgMDEvMDRcIlxuICAgICAgICpcbiAgICAgICAqL1xuICAgICAgZGF5Rm9ybWF0OiBkYXRlRm9ybWF0LFxuXG4gICAgICAvKipcbiAgICAgICAqIFdlZWsgZGF5IG5hbWUgZm9ybWF0IGZvciB0aGUgTW9udGggd2VlayBkYXkgaGVhZGluZ3MsXG4gICAgICAgKiBlLmc6IFwiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIGV0Y1xuICAgICAgICpcbiAgICAgICAqL1xuICAgICAgd2Vla2RheUZvcm1hdDogZGF0ZUZvcm1hdCxcblxuICAgICAgLyoqXG4gICAgICAgKiBUaGUgdGltZXN0YW1wIGNlbGwgZm9ybWF0cyBpbiBXZWVrIGFuZCBUaW1lIHZpZXdzLCBlLmcuIFwiNDowMCBBTVwiXG4gICAgICAgKi9cbiAgICAgIHRpbWVHdXR0ZXJGb3JtYXQ6IGRhdGVGb3JtYXQsXG5cbiAgICAgIC8qKlxuICAgICAgICogVG9vbGJhciBoZWFkZXIgZm9ybWF0IGZvciB0aGUgTW9udGggdmlldywgZS5nIFwiMjAxNSBBcHJpbFwiXG4gICAgICAgKlxuICAgICAgICovXG4gICAgICBtb250aEhlYWRlckZvcm1hdDogZGF0ZUZvcm1hdCxcblxuICAgICAgLyoqXG4gICAgICAgKiBUb29sYmFyIGhlYWRlciBmb3JtYXQgZm9yIHRoZSBXZWVrIHZpZXdzLCBlLmcuIFwiTWFyIDI5IC0gQXByIDA0XCJcbiAgICAgICAqL1xuICAgICAgZGF5UmFuZ2VIZWFkZXJGb3JtYXQ6IGRhdGVSYW5nZUZvcm1hdCxcblxuICAgICAgLyoqXG4gICAgICAgKiBUb29sYmFyIGhlYWRlciBmb3JtYXQgZm9yIHRoZSBEYXkgdmlldywgZS5nLiBcIldlZG5lc2RheSBBcHIgMDFcIlxuICAgICAgICovXG4gICAgICBkYXlIZWFkZXJGb3JtYXQ6IGRhdGVGb3JtYXQsXG5cbiAgICAgIC8qKlxuICAgICAgICogVG9vbGJhciBoZWFkZXIgZm9ybWF0IGZvciB0aGUgQWdlbmRhIHZpZXcsIGUuZy4gXCI0LzEvMjAxNSDigJMgNS8xLzIwMTVcIlxuICAgICAgICovXG4gICAgICBhZ2VuZGFIZWFkZXJGb3JtYXQ6IGRhdGVSYW5nZUZvcm1hdCxcblxuICAgICAgLyoqXG4gICAgICAgKiBBIHRpbWUgcmFuZ2UgZm9ybWF0IGZvciBzZWxlY3RpbmcgdGltZSBzbG90cywgZS5nIFwiODowMGFtIOKAkyAyOjAwcG1cIlxuICAgICAgICovXG4gICAgICBzZWxlY3RSYW5nZUZvcm1hdDogZGF0ZVJhbmdlRm9ybWF0LFxuXG4gICAgICBhZ2VuZGFEYXRlRm9ybWF0OiBkYXRlRm9ybWF0LFxuICAgICAgYWdlbmRhVGltZUZvcm1hdDogZGF0ZUZvcm1hdCxcbiAgICAgIGFnZW5kYVRpbWVSYW5nZUZvcm1hdDogZGF0ZVJhbmdlRm9ybWF0LFxuXG4gICAgICAvKipcbiAgICAgICAqIFRpbWUgcmFuZ2UgZGlzcGxheWVkIG9uIGV2ZW50cy5cbiAgICAgICAqL1xuICAgICAgZXZlbnRUaW1lUmFuZ2VGb3JtYXQ6IGRhdGVSYW5nZUZvcm1hdCxcblxuICAgICAgLyoqXG4gICAgICAgKiBBbiBvcHRpb25hbCBldmVudCB0aW1lIHJhbmdlIGZvciBldmVudHMgdGhhdCBjb250aW51ZSBvbnRvIGFub3RoZXIgZGF5XG4gICAgICAgKi9cbiAgICAgIGV2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQ6IGRhdGVGb3JtYXQsXG5cbiAgICAgIC8qKlxuICAgICAgICogQW4gb3B0aW9uYWwgZXZlbnQgdGltZSByYW5nZSBmb3IgZXZlbnRzIHRoYXQgY29udGludWUgZnJvbSBhbm90aGVyIGRheVxuICAgICAgICovXG4gICAgICBldmVudFRpbWVSYW5nZUVuZEZvcm1hdDogZGF0ZUZvcm1hdCxcbiAgICB9KSxcblxuICAgIC8qKlxuICAgICAqIEN1c3RvbWl6ZSBob3cgZGlmZmVyZW50IHNlY3Rpb25zIG9mIHRoZSBjYWxlbmRhciByZW5kZXIgYnkgcHJvdmlkaW5nIGN1c3RvbSBDb21wb25lbnRzLlxuICAgICAqIEluIHBhcnRpY3VsYXIgdGhlIGBFdmVudGAgY29tcG9uZW50IGNhbiBiZSBzcGVjaWZpZWQgZm9yIHRoZSBlbnRpcmUgY2FsZW5kYXIsIG9yIHlvdSBjYW5cbiAgICAgKiBwcm92aWRlIGFuIGluZGl2aWR1YWwgY29tcG9uZW50IGZvciBlYWNoIHZpZXcgdHlwZS5cbiAgICAgKlxuICAgICAqIGBgYGpzeFxuICAgICAqIGxldCBjb21wb25lbnRzID0ge1xuICAgICAqICAgZXZlbnQ6IE15RXZlbnQsIC8vIHVzZWQgYnkgZWFjaCB2aWV3IChNb250aCwgRGF5LCBXZWVrKVxuICAgICAqICAgZXZlbnRXcmFwcGVyOiBNeUV2ZW50V3JhcHBlcixcbiAgICAgKiAgIGV2ZW50Q29udGFpbmVyV3JhcHBlcjogTXlFdmVudENvbnRhaW5lcldyYXBwZXIsXG4gICAgICogICBkYXRlQ2VsbFdyYXBwZXI6IE15RGF0ZUNlbGxXcmFwcGVyLFxuICAgICAqICAgdGltZVNsb3RXcmFwcGVyOiBNeVRpbWVTbG90V3JhcHBlcixcbiAgICAgKiAgIHRpbWVHdXR0ZXJIZWFkZXI6IE15VGltZUd1dHRlcldyYXBwZXIsXG4gICAgICogICB0aW1lR3V0dGVyV3JhcHBlcjogTXlUaW1lR3V0dGVyV3JhcHBlcixcbiAgICAgKiAgIHJlc291cmNlSGVhZGVyOiBNeVJlc291cmNlSGVhZGVyLFxuICAgICAqICAgc2hvd01vcmU6IE15U2hvd01vcmVFdmVudCxcbiAgICAgKiAgIHRvb2xiYXI6IE15VG9vbGJhcixcbiAgICAgKiAgIGFnZW5kYToge1xuICAgICAqICAgXHQgZXZlbnQ6IE15QWdlbmRhRXZlbnQsIC8vIHdpdGggdGhlIGFnZW5kYSB2aWV3IHVzZSBhIGRpZmZlcmVudCBjb21wb25lbnQgdG8gcmVuZGVyIGV2ZW50c1xuICAgICAqICAgICB0aW1lOiBNeUFnZW5kYVRpbWUsXG4gICAgICogICAgIGRhdGU6IE15QWdlbmRhRGF0ZSxcbiAgICAgKiAgIH0sXG4gICAgICogICBkYXk6IHtcbiAgICAgKiAgICAgaGVhZGVyOiBNeURheUhlYWRlcixcbiAgICAgKiAgICAgZXZlbnQ6IE15RGF5RXZlbnQsXG4gICAgICogICB9LFxuICAgICAqICAgd2Vlazoge1xuICAgICAqICAgICBoZWFkZXI6IE15V2Vla0hlYWRlcixcbiAgICAgKiAgICAgZXZlbnQ6IE15V2Vla0V2ZW50LFxuICAgICAqICAgfSxcbiAgICAgKiAgIG1vbnRoOiB7XG4gICAgICogICAgIGhlYWRlcjogTXlNb250aEhlYWRlcixcbiAgICAgKiAgICAgZGF0ZUhlYWRlcjogTXlNb250aERhdGVIZWFkZXIsXG4gICAgICogICAgIGV2ZW50OiBNeU1vbnRoRXZlbnQsXG4gICAgICogICB9XG4gICAgICogfVxuICAgICAqIDxDYWxlbmRhciBjb21wb25lbnRzPXtjb21wb25lbnRzfSAvPlxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNvbXBvbmVudHM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBldmVudDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuICAgICAgZXZlbnRXcmFwcGVyOiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG4gICAgICBldmVudENvbnRhaW5lcldyYXBwZXI6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICAgIGRhdGVDZWxsV3JhcHBlcjogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuICAgICAgZGF5Q29sdW1uV3JhcHBlcjogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuICAgICAgdGltZVNsb3RXcmFwcGVyOiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG4gICAgICB0aW1lR3V0dGVySGVhZGVyOiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG4gICAgICB0aW1lR3V0dGVyV3JhcHBlcjogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuICAgICAgcmVzb3VyY2VIZWFkZXI6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICAgIHNob3dNb3JlOiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG5cbiAgICAgIHRvb2xiYXI6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcblxuICAgICAgYWdlbmRhOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgICBkYXRlOiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG4gICAgICAgIHRpbWU6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICAgICAgZXZlbnQ6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICAgIH0pLFxuXG4gICAgICBkYXk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICAgIGhlYWRlcjogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuICAgICAgICBldmVudDogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuICAgICAgfSksXG4gICAgICB3ZWVrOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgICBoZWFkZXI6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICAgICAgZXZlbnQ6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICAgIH0pLFxuICAgICAgbW9udGg6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICAgIGhlYWRlcjogUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuICAgICAgICBkYXRlSGVhZGVyOiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG4gICAgICAgIGV2ZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUsXG4gICAgICB9KSxcbiAgICB9KSxcblxuICAgIC8qKlxuICAgICAqIFN0cmluZyBtZXNzYWdlcyB1c2VkIHRocm91Z2hvdXQgdGhlIGNvbXBvbmVudCwgb3ZlcnJpZGUgdG8gcHJvdmlkZSBsb2NhbGl6YXRpb25zXG4gICAgICpcbiAgICAgKiBgYGBqc3hcbiAgICAgKiBjb25zdCBtZXNzYWdlcyA9IHtcbiAgICAgKiAgIGRhdGU6ICdEYXRlJyxcbiAgICAgKiAgIHRpbWU6ICdUaW1lJyxcbiAgICAgKiAgIGV2ZW50OiAnRXZlbnQnLFxuICAgICAqICAgYWxsRGF5OiAnQWxsIERheScsXG4gICAgICogICB3ZWVrOiAnV2VlaycsXG4gICAgICogICB3b3JrX3dlZWs6ICdXb3JrIFdlZWsnLFxuICAgICAqICAgZGF5OiAnRGF5JyxcbiAgICAgKiAgIG1vbnRoOiAnTW9udGgnLFxuICAgICAqICAgcHJldmlvdXM6ICdCYWNrJyxcbiAgICAgKiAgIG5leHQ6ICdOZXh0JyxcbiAgICAgKiAgIHllc3RlcmRheTogJ1llc3RlcmRheScsXG4gICAgICogICB0b21vcnJvdzogJ1RvbW9ycm93JyxcbiAgICAgKiAgIHRvZGF5OiAnVG9kYXknLFxuICAgICAqICAgYWdlbmRhOiAnQWdlbmRhJyxcbiAgICAgKlxuICAgICAqICAgbm9FdmVudHNJblJhbmdlOiAnVGhlcmUgYXJlIG5vIGV2ZW50cyBpbiB0aGlzIHJhbmdlLicsXG4gICAgICpcbiAgICAgKiAgIHNob3dNb3JlOiB0b3RhbCA9PiBgKyAke3RvdGFsfSBtb3JlYCxcbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiA8Q2FsZW5kYXIgbWVzc2FnZXM9e21lc3NhZ2VzfSAvPlxuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgbWVzc2FnZXM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBhbGxEYXk6IFByb3BUeXBlcy5ub2RlLFxuICAgICAgcHJldmlvdXM6IFByb3BUeXBlcy5ub2RlLFxuICAgICAgbmV4dDogUHJvcFR5cGVzLm5vZGUsXG4gICAgICB0b2RheTogUHJvcFR5cGVzLm5vZGUsXG4gICAgICBtb250aDogUHJvcFR5cGVzLm5vZGUsXG4gICAgICB3ZWVrOiBQcm9wVHlwZXMubm9kZSxcbiAgICAgIGRheTogUHJvcFR5cGVzLm5vZGUsXG4gICAgICBhZ2VuZGE6IFByb3BUeXBlcy5ub2RlLFxuICAgICAgZGF0ZTogUHJvcFR5cGVzLm5vZGUsXG4gICAgICB0aW1lOiBQcm9wVHlwZXMubm9kZSxcbiAgICAgIGV2ZW50OiBQcm9wVHlwZXMubm9kZSxcbiAgICAgIG5vRXZlbnRzSW5SYW5nZTogUHJvcFR5cGVzLm5vZGUsXG4gICAgICBzaG93TW9yZTogUHJvcFR5cGVzLmZ1bmMsXG4gICAgfSksXG5cbiAgICAvKipcbiAgICAgKiBBIGRheSBldmVudCBsYXlvdXQoYXJyYW5nZW1lbnQpIGFsZ29yaXRobS5cbiAgICAgKlxuICAgICAqIGBvdmVybGFwYCBhbGxvd3MgZXZlbnRzIHRvIGJlIG92ZXJsYXBwZWQuXG4gICAgICpcbiAgICAgKiBgbm8tb3ZlcmxhcGAgcmVzaXplcyBldmVudHMgdG8gYXZvaWQgb3ZlcmxhcC5cbiAgICAgKlxuICAgICAqIG9yIGN1c3RvbSBgRnVuY3Rpb24oZXZlbnRzLCBtaW5pbXVtU3RhcnREaWZmZXJlbmNlLCBzbG90TWV0cmljcywgYWNjZXNzb3JzKWBcbiAgICAgKi9cbiAgICBkYXlMYXlvdXRBbGdvcml0aG06IERheUxheW91dEFsZ29yaXRobVByb3BUeXBlLFxuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBldmVudHM6IFtdLFxuICAgIGJhY2tncm91bmRFdmVudHM6IFtdLFxuICAgIGVsZW1lbnRQcm9wczoge30sXG4gICAgcG9wdXA6IGZhbHNlLFxuICAgIHRvb2xiYXI6IHRydWUsXG4gICAgdmlldzogdmlld3MuTU9OVEgsXG4gICAgdmlld3M6IFt2aWV3cy5NT05USCwgdmlld3MuV0VFSywgdmlld3MuREFZLCB2aWV3cy5BR0VOREFdLFxuICAgIHN0ZXA6IDMwLFxuICAgIGxlbmd0aDogMzAsXG4gICAgYWxsRGF5TWF4Um93czogSW5maW5pdHksXG5cbiAgICBkb1Nob3dNb3JlRHJpbGxEb3duOiB0cnVlLFxuICAgIGRyaWxsZG93blZpZXc6IHZpZXdzLkRBWSxcblxuICAgIHRpdGxlQWNjZXNzb3I6ICd0aXRsZScsXG4gICAgdG9vbHRpcEFjY2Vzc29yOiAndGl0bGUnLFxuICAgIGFsbERheUFjY2Vzc29yOiAnYWxsRGF5JyxcbiAgICBzdGFydEFjY2Vzc29yOiAnc3RhcnQnLFxuICAgIGVuZEFjY2Vzc29yOiAnZW5kJyxcbiAgICByZXNvdXJjZUFjY2Vzc29yOiAncmVzb3VyY2VJZCcsXG5cbiAgICByZXNvdXJjZUlkQWNjZXNzb3I6ICdpZCcsXG4gICAgcmVzb3VyY2VUaXRsZUFjY2Vzc29yOiAndGl0bGUnLFxuXG4gICAgZXZlbnRJZEFjY2Vzc29yOiAnaWQnLFxuXG4gICAgbG9uZ1ByZXNzVGhyZXNob2xkOiAyNTAsXG4gICAgZ2V0Tm93OiAoKSA9PiBuZXcgRGF0ZSgpLFxuICAgIGRheUxheW91dEFsZ29yaXRobTogJ292ZXJsYXAnLFxuICB9XG5cbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIHN1cGVyKC4uLmFyZ3MpXG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgY29udGV4dDogQ2FsZW5kYXIuZ2V0Q29udGV4dCh0aGlzLnByb3BzKSxcbiAgICB9XG4gIH1cbiAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhuZXh0UHJvcHMpIHtcbiAgICByZXR1cm4geyBjb250ZXh0OiBDYWxlbmRhci5nZXRDb250ZXh0KG5leHRQcm9wcykgfVxuICB9XG5cbiAgc3RhdGljIGdldENvbnRleHQoe1xuICAgIHN0YXJ0QWNjZXNzb3IsXG4gICAgZW5kQWNjZXNzb3IsXG4gICAgYWxsRGF5QWNjZXNzb3IsXG4gICAgdG9vbHRpcEFjY2Vzc29yLFxuICAgIHRpdGxlQWNjZXNzb3IsXG4gICAgcmVzb3VyY2VBY2Nlc3NvcixcbiAgICByZXNvdXJjZUlkQWNjZXNzb3IsXG4gICAgcmVzb3VyY2VUaXRsZUFjY2Vzc29yLFxuICAgIGV2ZW50SWRBY2Nlc3NvcixcbiAgICBldmVudFByb3BHZXR0ZXIsXG4gICAgYmFja2dyb3VuZEV2ZW50UHJvcEdldHRlcixcbiAgICBzbG90UHJvcEdldHRlcixcbiAgICBzbG90R3JvdXBQcm9wR2V0dGVyLFxuICAgIGRheVByb3BHZXR0ZXIsXG4gICAgdmlldyxcbiAgICB2aWV3cyxcbiAgICBsb2NhbGl6ZXIsXG4gICAgY3VsdHVyZSxcbiAgICBtZXNzYWdlcyA9IHt9LFxuICAgIGNvbXBvbmVudHMgPSB7fSxcbiAgICBmb3JtYXRzID0ge30sXG4gIH0pIHtcbiAgICBsZXQgbmFtZXMgPSB2aWV3TmFtZXModmlld3MpXG4gICAgY29uc3QgbXNncyA9IG1lc3NhZ2UobWVzc2FnZXMpXG4gICAgcmV0dXJuIHtcbiAgICAgIHZpZXdOYW1lczogbmFtZXMsXG4gICAgICBsb2NhbGl6ZXI6IG1lcmdlV2l0aERlZmF1bHRzKGxvY2FsaXplciwgY3VsdHVyZSwgZm9ybWF0cywgbXNncyksXG4gICAgICBnZXR0ZXJzOiB7XG4gICAgICAgIGV2ZW50UHJvcDogKC4uLmFyZ3MpID0+XG4gICAgICAgICAgKGV2ZW50UHJvcEdldHRlciAmJiBldmVudFByb3BHZXR0ZXIoLi4uYXJncykpIHx8IHt9LFxuICAgICAgICBiYWNrZ3JvdW5kRXZlbnRQcm9wOiAoLi4uYXJncykgPT5cbiAgICAgICAgICAoYmFja2dyb3VuZEV2ZW50UHJvcEdldHRlciAmJiBiYWNrZ3JvdW5kRXZlbnRQcm9wR2V0dGVyKC4uLmFyZ3MpKSB8fFxuICAgICAgICAgIHt9LFxuICAgICAgICBzbG90UHJvcDogKC4uLmFyZ3MpID0+XG4gICAgICAgICAgKHNsb3RQcm9wR2V0dGVyICYmIHNsb3RQcm9wR2V0dGVyKC4uLmFyZ3MpKSB8fCB7fSxcbiAgICAgICAgc2xvdEdyb3VwUHJvcDogKC4uLmFyZ3MpID0+XG4gICAgICAgICAgKHNsb3RHcm91cFByb3BHZXR0ZXIgJiYgc2xvdEdyb3VwUHJvcEdldHRlciguLi5hcmdzKSkgfHwge30sXG4gICAgICAgIGRheVByb3A6ICguLi5hcmdzKSA9PiAoZGF5UHJvcEdldHRlciAmJiBkYXlQcm9wR2V0dGVyKC4uLmFyZ3MpKSB8fCB7fSxcbiAgICAgIH0sXG4gICAgICBjb21wb25lbnRzOiBkZWZhdWx0cyhjb21wb25lbnRzW3ZpZXddIHx8IHt9LCBvbWl0KGNvbXBvbmVudHMsIG5hbWVzKSwge1xuICAgICAgICBldmVudFdyYXBwZXI6IE5vb3BXcmFwcGVyLFxuICAgICAgICBiYWNrZ3JvdW5kRXZlbnRXcmFwcGVyOiBOb29wV3JhcHBlcixcbiAgICAgICAgZXZlbnRDb250YWluZXJXcmFwcGVyOiBOb29wV3JhcHBlcixcbiAgICAgICAgZGF0ZUNlbGxXcmFwcGVyOiBOb29wV3JhcHBlcixcbiAgICAgICAgd2Vla1dyYXBwZXI6IE5vb3BXcmFwcGVyLFxuICAgICAgICB0aW1lU2xvdFdyYXBwZXI6IE5vb3BXcmFwcGVyLFxuICAgICAgICB0aW1lR3V0dGVyV3JhcHBlcjogTm9vcFdyYXBwZXIsXG4gICAgICB9KSxcbiAgICAgIGFjY2Vzc29yczoge1xuICAgICAgICBzdGFydDogd3JhcEFjY2Vzc29yKHN0YXJ0QWNjZXNzb3IpLFxuICAgICAgICBlbmQ6IHdyYXBBY2Nlc3NvcihlbmRBY2Nlc3NvciksXG4gICAgICAgIGFsbERheTogd3JhcEFjY2Vzc29yKGFsbERheUFjY2Vzc29yKSxcbiAgICAgICAgdG9vbHRpcDogd3JhcEFjY2Vzc29yKHRvb2x0aXBBY2Nlc3NvciksXG4gICAgICAgIHRpdGxlOiB3cmFwQWNjZXNzb3IodGl0bGVBY2Nlc3NvciksXG4gICAgICAgIHJlc291cmNlOiB3cmFwQWNjZXNzb3IocmVzb3VyY2VBY2Nlc3NvciksXG4gICAgICAgIHJlc291cmNlSWQ6IHdyYXBBY2Nlc3NvcihyZXNvdXJjZUlkQWNjZXNzb3IpLFxuICAgICAgICByZXNvdXJjZVRpdGxlOiB3cmFwQWNjZXNzb3IocmVzb3VyY2VUaXRsZUFjY2Vzc29yKSxcbiAgICAgICAgZXZlbnRJZDogd3JhcEFjY2Vzc29yKGV2ZW50SWRBY2Nlc3NvciksXG4gICAgICB9LFxuICAgIH1cbiAgfVxuXG4gIGdldFZpZXdzID0gKCkgPT4ge1xuICAgIGNvbnN0IHZpZXdzID0gdGhpcy5wcm9wcy52aWV3c1xuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmlld3MpKSB7XG4gICAgICByZXR1cm4gdHJhbnNmb3JtKHZpZXdzLCAob2JqLCBuYW1lKSA9PiAob2JqW25hbWVdID0gVklFV1NbbmFtZV0pLCB7fSlcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHZpZXdzID09PSAnb2JqZWN0Jykge1xuICAgICAgcmV0dXJuIG1hcFZhbHVlcyh2aWV3cywgKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgaWYgKHZhbHVlID09PSB0cnVlKSB7XG4gICAgICAgICAgcmV0dXJuIFZJRVdTW2tleV1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB2YWx1ZVxuICAgICAgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gVklFV1NcbiAgfVxuXG4gIGdldFZpZXcgPSAoKSA9PiB7XG4gICAgY29uc3Qgdmlld3MgPSB0aGlzLmdldFZpZXdzKClcblxuICAgIHJldHVybiB2aWV3c1t0aGlzLnByb3BzLnZpZXddXG4gIH1cblxuICBnZXREcmlsbGRvd25WaWV3ID0gKGRhdGUpID0+IHtcbiAgICBjb25zdCB7IHZpZXcsIGRyaWxsZG93blZpZXcsIGdldERyaWxsZG93blZpZXcgfSA9IHRoaXMucHJvcHNcblxuICAgIGlmICghZ2V0RHJpbGxkb3duVmlldykgcmV0dXJuIGRyaWxsZG93blZpZXdcblxuICAgIHJldHVybiBnZXREcmlsbGRvd25WaWV3KGRhdGUsIHZpZXcsIE9iamVjdC5rZXlzKHRoaXMuZ2V0Vmlld3MoKSkpXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgbGV0IHtcbiAgICAgIHZpZXcsXG4gICAgICB0b29sYmFyLFxuICAgICAgZXZlbnRzLFxuICAgICAgYmFja2dyb3VuZEV2ZW50cyxcbiAgICAgIHJlc291cmNlR3JvdXBpbmdMYXlvdXQsXG4gICAgICBzdHlsZSxcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIGVsZW1lbnRQcm9wcyxcbiAgICAgIGRhdGU6IGN1cnJlbnQsXG4gICAgICBnZXROb3csXG4gICAgICBsZW5ndGgsXG4gICAgICBzaG93TXVsdGlEYXlUaW1lcyxcbiAgICAgIG9uU2hvd01vcmUsXG4gICAgICBkb1Nob3dNb3JlRHJpbGxEb3duLFxuICAgICAgY29tcG9uZW50czogXzAsXG4gICAgICBmb3JtYXRzOiBfMSxcbiAgICAgIG1lc3NhZ2VzOiBfMixcbiAgICAgIGN1bHR1cmU6IF8zLFxuICAgICAgLi4ucHJvcHNcbiAgICB9ID0gdGhpcy5wcm9wc1xuXG4gICAgY3VycmVudCA9IGN1cnJlbnQgfHwgZ2V0Tm93KClcblxuICAgIGxldCBWaWV3ID0gdGhpcy5nZXRWaWV3KClcbiAgICBjb25zdCB7IGFjY2Vzc29ycywgY29tcG9uZW50cywgZ2V0dGVycywgbG9jYWxpemVyLCB2aWV3TmFtZXMgfSA9XG4gICAgICB0aGlzLnN0YXRlLmNvbnRleHRcblxuICAgIGxldCBDYWxUb29sYmFyID0gY29tcG9uZW50cy50b29sYmFyIHx8IFRvb2xiYXJcbiAgICBjb25zdCBsYWJlbCA9IFZpZXcudGl0bGUoY3VycmVudCwgeyBsb2NhbGl6ZXIsIGxlbmd0aCB9KVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgey4uLmVsZW1lbnRQcm9wc31cbiAgICAgICAgY2xhc3NOYW1lPXtjbHN4KGNsYXNzTmFtZSwgJ3JiYy1jYWxlbmRhcicsIHByb3BzLnJ0bCAmJiAncmJjLXJ0bCcpfVxuICAgICAgICBzdHlsZT17c3R5bGV9XG4gICAgICA+XG4gICAgICAgIHt0b29sYmFyICYmIChcbiAgICAgICAgICA8Q2FsVG9vbGJhclxuICAgICAgICAgICAgZGF0ZT17Y3VycmVudH1cbiAgICAgICAgICAgIHZpZXc9e3ZpZXd9XG4gICAgICAgICAgICB2aWV3cz17dmlld05hbWVzfVxuICAgICAgICAgICAgbGFiZWw9e2xhYmVsfVxuICAgICAgICAgICAgb25WaWV3PXt0aGlzLmhhbmRsZVZpZXdDaGFuZ2V9XG4gICAgICAgICAgICBvbk5hdmlnYXRlPXt0aGlzLmhhbmRsZU5hdmlnYXRlfVxuICAgICAgICAgICAgbG9jYWxpemVyPXtsb2NhbGl6ZXJ9XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgICAgPFZpZXdcbiAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgZXZlbnRzPXtldmVudHN9XG4gICAgICAgICAgYmFja2dyb3VuZEV2ZW50cz17YmFja2dyb3VuZEV2ZW50c31cbiAgICAgICAgICBkYXRlPXtjdXJyZW50fVxuICAgICAgICAgIGdldE5vdz17Z2V0Tm93fVxuICAgICAgICAgIGxlbmd0aD17bGVuZ3RofVxuICAgICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICAgIGdldHRlcnM9e2dldHRlcnN9XG4gICAgICAgICAgY29tcG9uZW50cz17Y29tcG9uZW50c31cbiAgICAgICAgICBhY2Nlc3NvcnM9e2FjY2Vzc29yc31cbiAgICAgICAgICBzaG93TXVsdGlEYXlUaW1lcz17c2hvd011bHRpRGF5VGltZXN9XG4gICAgICAgICAgZ2V0RHJpbGxkb3duVmlldz17dGhpcy5nZXREcmlsbGRvd25WaWV3fVxuICAgICAgICAgIG9uTmF2aWdhdGU9e3RoaXMuaGFuZGxlTmF2aWdhdGV9XG4gICAgICAgICAgb25EcmlsbERvd249e3RoaXMuaGFuZGxlRHJpbGxEb3dufVxuICAgICAgICAgIG9uU2VsZWN0RXZlbnQ9e3RoaXMuaGFuZGxlU2VsZWN0RXZlbnR9XG4gICAgICAgICAgb25Eb3VibGVDbGlja0V2ZW50PXt0aGlzLmhhbmRsZURvdWJsZUNsaWNrRXZlbnR9XG4gICAgICAgICAgb25LZXlQcmVzc0V2ZW50PXt0aGlzLmhhbmRsZUtleVByZXNzRXZlbnR9XG4gICAgICAgICAgb25TZWxlY3RTbG90PXt0aGlzLmhhbmRsZVNlbGVjdFNsb3R9XG4gICAgICAgICAgb25TaG93TW9yZT17b25TaG93TW9yZX1cbiAgICAgICAgICBkb1Nob3dNb3JlRHJpbGxEb3duPXtkb1Nob3dNb3JlRHJpbGxEb3dufVxuICAgICAgICAgIHJlc291cmNlR3JvdXBpbmdMYXlvdXQ9e3Jlc291cmNlR3JvdXBpbmdMYXlvdXR9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHBhcmFtIGRhdGVcbiAgICogQHBhcmFtIHZpZXdDb21wb25lbnRcbiAgICogQHBhcmFtIHsnbW9udGgnfCd3ZWVrJ3wnd29ya193ZWVrJ3wnZGF5J3wnYWdlbmRhJ30gW3ZpZXddIC0gb3B0aW9uYWxcbiAgICogcGFyYW1ldGVyLiBJdCBhcHBlYXJzIHdoZW4gcmFuZ2UgY2hhbmdlIG9uIHZpZXcgY2hhbmdpbmcuIEl0IGNvdWxkIGJlIGhhbmR5XG4gICAqIHdoZW4geW91IG5lZWQgdG8gaGF2ZSBib3RoOiByYW5nZSBhbmQgdmlldyB0eXBlIGF0IG9uY2UsIGkuZS4gZm9yIG1hbmFnZSByYmNcbiAgICogc3RhdGUgdmlhIHVybFxuICAgKi9cbiAgaGFuZGxlUmFuZ2VDaGFuZ2UgPSAoZGF0ZSwgdmlld0NvbXBvbmVudCwgdmlldykgPT4ge1xuICAgIGxldCB7IG9uUmFuZ2VDaGFuZ2UsIGxvY2FsaXplciB9ID0gdGhpcy5wcm9wc1xuXG4gICAgaWYgKG9uUmFuZ2VDaGFuZ2UpIHtcbiAgICAgIGlmICh2aWV3Q29tcG9uZW50LnJhbmdlKSB7XG4gICAgICAgIG9uUmFuZ2VDaGFuZ2Uodmlld0NvbXBvbmVudC5yYW5nZShkYXRlLCB7IGxvY2FsaXplciB9KSwgdmlldylcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignb25SYW5nZUNoYW5nZSBwcm9wIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgdmlldycpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBoYW5kbGVOYXZpZ2F0ZSA9IChhY3Rpb24sIG5ld0RhdGUpID0+IHtcbiAgICBsZXQgeyB2aWV3LCBkYXRlLCBnZXROb3csIG9uTmF2aWdhdGUsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzXG4gICAgbGV0IFZpZXdDb21wb25lbnQgPSB0aGlzLmdldFZpZXcoKVxuICAgIGxldCB0b2RheSA9IGdldE5vdygpXG5cbiAgICBkYXRlID0gbW92ZURhdGUoVmlld0NvbXBvbmVudCwge1xuICAgICAgLi4ucHJvcHMsXG4gICAgICBhY3Rpb24sXG4gICAgICBkYXRlOiBuZXdEYXRlIHx8IGRhdGUgfHwgdG9kYXksXG4gICAgICB0b2RheSxcbiAgICB9KVxuXG4gICAgb25OYXZpZ2F0ZShkYXRlLCB2aWV3LCBhY3Rpb24pXG4gICAgdGhpcy5oYW5kbGVSYW5nZUNoYW5nZShkYXRlLCBWaWV3Q29tcG9uZW50KVxuICB9XG5cbiAgaGFuZGxlVmlld0NoYW5nZSA9ICh2aWV3KSA9PiB7XG4gICAgaWYgKHZpZXcgIT09IHRoaXMucHJvcHMudmlldyAmJiBpc1ZhbGlkVmlldyh2aWV3LCB0aGlzLnByb3BzKSkge1xuICAgICAgdGhpcy5wcm9wcy5vblZpZXcodmlldylcbiAgICB9XG5cbiAgICBsZXQgdmlld3MgPSB0aGlzLmdldFZpZXdzKClcbiAgICB0aGlzLmhhbmRsZVJhbmdlQ2hhbmdlKFxuICAgICAgdGhpcy5wcm9wcy5kYXRlIHx8IHRoaXMucHJvcHMuZ2V0Tm93KCksXG4gICAgICB2aWV3c1t2aWV3XSxcbiAgICAgIHZpZXdcbiAgICApXG4gIH1cblxuICBoYW5kbGVTZWxlY3RFdmVudCA9ICguLi5hcmdzKSA9PiB7XG4gICAgbm90aWZ5KHRoaXMucHJvcHMub25TZWxlY3RFdmVudCwgYXJncylcbiAgfVxuXG4gIGhhbmRsZURvdWJsZUNsaWNrRXZlbnQgPSAoLi4uYXJncykgPT4ge1xuICAgIG5vdGlmeSh0aGlzLnByb3BzLm9uRG91YmxlQ2xpY2tFdmVudCwgYXJncylcbiAgfVxuXG4gIGhhbmRsZUtleVByZXNzRXZlbnQgPSAoLi4uYXJncykgPT4ge1xuICAgIG5vdGlmeSh0aGlzLnByb3BzLm9uS2V5UHJlc3NFdmVudCwgYXJncylcbiAgfVxuXG4gIGhhbmRsZVNlbGVjdFNsb3QgPSAoc2xvdEluZm8pID0+IHtcbiAgICBub3RpZnkodGhpcy5wcm9wcy5vblNlbGVjdFNsb3QsIHNsb3RJbmZvKVxuICB9XG5cbiAgaGFuZGxlRHJpbGxEb3duID0gKGRhdGUsIHZpZXcpID0+IHtcbiAgICBjb25zdCB7IG9uRHJpbGxEb3duIH0gPSB0aGlzLnByb3BzXG4gICAgaWYgKG9uRHJpbGxEb3duKSB7XG4gICAgICBvbkRyaWxsRG93bihkYXRlLCB2aWV3LCB0aGlzLmRyaWxsZG93blZpZXcpXG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgaWYgKHZpZXcpIHRoaXMuaGFuZGxlVmlld0NoYW5nZSh2aWV3KVxuXG4gICAgdGhpcy5oYW5kbGVOYXZpZ2F0ZShuYXZpZ2F0ZS5EQVRFLCBkYXRlKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHVuY29udHJvbGxhYmxlKENhbGVuZGFyLCB7XG4gIHZpZXc6ICdvblZpZXcnLFxuICBkYXRlOiAnb25OYXZpZ2F0ZScsXG4gIHNlbGVjdGVkOiAnb25TZWxlY3RFdmVudCcsXG59KVxuIiwiaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnXG5pbXBvcnQgeyBuYXZpZ2F0ZSB9IGZyb20gJy4vY29uc3RhbnRzJ1xuaW1wb3J0IFZJRVdTIGZyb20gJy4uL1ZpZXdzJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtb3ZlRGF0ZShWaWV3LCB7IGFjdGlvbiwgZGF0ZSwgdG9kYXksIC4uLnByb3BzIH0pIHtcbiAgVmlldyA9IHR5cGVvZiBWaWV3ID09PSAnc3RyaW5nJyA/IFZJRVdTW1ZpZXddIDogVmlld1xuXG4gIHN3aXRjaCAoYWN0aW9uKSB7XG4gICAgY2FzZSBuYXZpZ2F0ZS5UT0RBWTpcbiAgICAgIGRhdGUgPSB0b2RheSB8fCBuZXcgRGF0ZSgpXG4gICAgICBicmVha1xuICAgIGNhc2UgbmF2aWdhdGUuREFURTpcbiAgICAgIGJyZWFrXG4gICAgZGVmYXVsdDpcbiAgICAgIGludmFyaWFudChcbiAgICAgICAgVmlldyAmJiB0eXBlb2YgVmlldy5uYXZpZ2F0ZSA9PT0gJ2Z1bmN0aW9uJyxcbiAgICAgICAgJ0NhbGVuZGFyIFZpZXcgY29tcG9uZW50cyBtdXN0IGltcGxlbWVudCBhIHN0YXRpYyBgLm5hdmlnYXRlKGRhdGUsIGFjdGlvbilgIG1ldGhvZC5zJ1xuICAgICAgKVxuICAgICAgZGF0ZSA9IFZpZXcubmF2aWdhdGUoZGF0ZSwgYWN0aW9uLCBwcm9wcylcbiAgfVxuICByZXR1cm4gZGF0ZVxufVxuIiwiaW1wb3J0IHsgRGF0ZUxvY2FsaXplciB9IGZyb20gJy4uL2xvY2FsaXplcidcblxuY29uc3Qgd2Vla1JhbmdlRm9ybWF0ID0gKHsgc3RhcnQsIGVuZCB9LCBjdWx0dXJlLCBsb2NhbCkgPT5cbiAgbG9jYWwuZm9ybWF0KHN0YXJ0LCAnTU1NTSBERCcsIGN1bHR1cmUpICtcbiAgJyDigJMgJyArXG4gIC8vIHVwZGF0ZWQgdG8gdXNlIHRoaXMgbG9jYWxpemVyICdlcSgpJyBtZXRob2RcbiAgbG9jYWwuZm9ybWF0KGVuZCwgbG9jYWwuZXEoc3RhcnQsIGVuZCwgJ21vbnRoJykgPyAnREQnIDogJ01NTU0gREQnLCBjdWx0dXJlKVxuXG5jb25zdCBkYXRlUmFuZ2VGb3JtYXQgPSAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsKSA9PlxuICBsb2NhbC5mb3JtYXQoc3RhcnQsICdMJywgY3VsdHVyZSkgKyAnIOKAkyAnICsgbG9jYWwuZm9ybWF0KGVuZCwgJ0wnLCBjdWx0dXJlKVxuXG5jb25zdCB0aW1lUmFuZ2VGb3JtYXQgPSAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsKSA9PlxuICBsb2NhbC5mb3JtYXQoc3RhcnQsICdMVCcsIGN1bHR1cmUpICsgJyDigJMgJyArIGxvY2FsLmZvcm1hdChlbmQsICdMVCcsIGN1bHR1cmUpXG5cbmNvbnN0IHRpbWVSYW5nZVN0YXJ0Rm9ybWF0ID0gKHsgc3RhcnQgfSwgY3VsdHVyZSwgbG9jYWwpID0+XG4gIGxvY2FsLmZvcm1hdChzdGFydCwgJ0xUJywgY3VsdHVyZSkgKyAnIOKAkyAnXG5cbmNvbnN0IHRpbWVSYW5nZUVuZEZvcm1hdCA9ICh7IGVuZCB9LCBjdWx0dXJlLCBsb2NhbCkgPT5cbiAgJyDigJMgJyArIGxvY2FsLmZvcm1hdChlbmQsICdMVCcsIGN1bHR1cmUpXG5cbmV4cG9ydCBjb25zdCBmb3JtYXRzID0ge1xuICBkYXRlRm9ybWF0OiAnREQnLFxuICBkYXlGb3JtYXQ6ICdERCBkZGQnLFxuICB3ZWVrZGF5Rm9ybWF0OiAnZGRkJyxcblxuICBzZWxlY3RSYW5nZUZvcm1hdDogdGltZVJhbmdlRm9ybWF0LFxuICBldmVudFRpbWVSYW5nZUZvcm1hdDogdGltZVJhbmdlRm9ybWF0LFxuICBldmVudFRpbWVSYW5nZVN0YXJ0Rm9ybWF0OiB0aW1lUmFuZ2VTdGFydEZvcm1hdCxcbiAgZXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXQ6IHRpbWVSYW5nZUVuZEZvcm1hdCxcblxuICB0aW1lR3V0dGVyRm9ybWF0OiAnTFQnLFxuXG4gIG1vbnRoSGVhZGVyRm9ybWF0OiAnTU1NTSBZWVlZJyxcbiAgZGF5SGVhZGVyRm9ybWF0OiAnZGRkZCBNTU0gREQnLFxuICBkYXlSYW5nZUhlYWRlckZvcm1hdDogd2Vla1JhbmdlRm9ybWF0LFxuICBhZ2VuZGFIZWFkZXJGb3JtYXQ6IGRhdGVSYW5nZUZvcm1hdCxcblxuICBhZ2VuZGFEYXRlRm9ybWF0OiAnZGRkIE1NTSBERCcsXG4gIGFnZW5kYVRpbWVGb3JtYXQ6ICdMVCcsXG4gIGFnZW5kYVRpbWVSYW5nZUZvcm1hdDogdGltZVJhbmdlRm9ybWF0LFxufVxuXG5mdW5jdGlvbiBmaXhVbml0KHVuaXQpIHtcbiAgbGV0IGRhdGVQYXJ0ID0gdW5pdCA/IHVuaXQudG9Mb3dlckNhc2UoKSA6IHVuaXRcbiAgaWYgKGRhdGVQYXJ0ID09PSAnRnVsbFllYXInKSB7XG4gICAgZGF0ZVBhcnQgPSAneWVhcidcbiAgfSBlbHNlIGlmICghZGF0ZVBhcnQpIHtcbiAgICBkYXRlUGFydCA9IHVuZGVmaW5lZFxuICB9XG4gIHJldHVybiBkYXRlUGFydFxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAobW9tZW50KSB7XG4gIGNvbnN0IGxvY2FsZSA9IChtLCBjKSA9PiAoYyA/IG0ubG9jYWxlKGMpIDogbSlcblxuICBmdW5jdGlvbiBnZXRUaW1lem9uZU9mZnNldChkYXRlKSB7XG4gICAgLy8gZW5zdXJlcyB0aGlzIGdldHMgY2FzdCB0byB0aW1lem9uZVxuICAgIHJldHVybiBtb21lbnQoZGF0ZSkudG9EYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0RHN0T2Zmc2V0KHN0YXJ0LCBlbmQpIHtcbiAgICAvLyBjb252ZXJ0IHRvIG1vbWVudCwgaW4gY2FzZVxuICAgIC8vIENhbGN1bGF0ZSB0aGUgb2Zmc2V0IGluIHRoZSB0aW1lem9uZSBvZiB0aGUgRXZlbnRzIChsb2NhbClcbiAgICAvLyBub3QgaW4gdGhlIHRpbWV6b25lIG9mIHRoZSBjYWxlbmRhciAobW9tZW50LnR6KVxuICAgIGNvbnN0IHN0ID0gbW9tZW50KHN0YXJ0KS5sb2NhbCgpXG4gICAgY29uc3QgZWQgPSBtb21lbnQoZW5kKS5sb2NhbCgpXG4gICAgLy8gaWYgbm90IHVzaW5nIG1vbWVudCB0aW1lem9uZVxuICAgIGlmICghbW9tZW50LnR6KSB7XG4gICAgICByZXR1cm4gc3QudG9EYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKSAtIGVkLnRvRGF0ZSgpLmdldFRpbWV6b25lT2Zmc2V0KClcbiAgICB9XG4gICAgLyoqXG4gICAgICogSWYgdXNpbmcgbW9tZW50LXRpbWV6b25lLCBhbmQgYSB0aW1lem9uZSBoYXMgYmVlbiBhcHBsaWVkLCB0aGVuXG4gICAgICogdXNlIHRoaXMgdG8gZ2V0IHRoZSBwcm9wZXIgdGltZXpvbmUgb2Zmc2V0LCBvdGhlcndpc2UgZGVmYXVsdFxuICAgICAqIHRoZSB0aW1lem9uZSB0byB0aGUgYnJvd3NlciBsb2NhbFxuICAgICAqL1xuICAgIGNvbnN0IHR6TmFtZSA9IHN0Py5fej8ubmFtZSA/PyBtb21lbnQudHouZ3Vlc3MoKVxuICAgIGNvbnN0IHN0YXJ0T2Zmc2V0ID0gbW9tZW50LnR6LnpvbmUodHpOYW1lKS51dGNPZmZzZXQoK3N0KVxuICAgIGNvbnN0IGVuZE9mZnNldCA9IG1vbWVudC50ei56b25lKHR6TmFtZSkudXRjT2Zmc2V0KCtlZClcbiAgICByZXR1cm4gc3RhcnRPZmZzZXQgLSBlbmRPZmZzZXRcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldERheVN0YXJ0RHN0T2Zmc2V0KHN0YXJ0KSB7XG4gICAgY29uc3QgZGF5U3RhcnQgPSBtb21lbnQoc3RhcnQpLnN0YXJ0T2YoJ2RheScpXG4gICAgcmV0dXJuIGdldERzdE9mZnNldChkYXlTdGFydCwgc3RhcnQpXG4gIH1cblxuICAvKioqIEJFR0lOIGxvY2FsaXplZCBkYXRlIGFyaXRobWV0aWMgbWV0aG9kcyB3aXRoIG1vbWVudCAqKiovXG4gIGZ1bmN0aW9uIGRlZmluZUNvbXBhcmF0b3JzKGEsIGIsIHVuaXQpIHtcbiAgICBjb25zdCBkYXRlUGFydCA9IGZpeFVuaXQodW5pdClcbiAgICBjb25zdCBkdEEgPSBkYXRlUGFydCA/IG1vbWVudChhKS5zdGFydE9mKGRhdGVQYXJ0KSA6IG1vbWVudChhKVxuICAgIGNvbnN0IGR0QiA9IGRhdGVQYXJ0ID8gbW9tZW50KGIpLnN0YXJ0T2YoZGF0ZVBhcnQpIDogbW9tZW50KGIpXG4gICAgcmV0dXJuIFtkdEEsIGR0QiwgZGF0ZVBhcnRdXG4gIH1cblxuICBmdW5jdGlvbiBzdGFydE9mKGRhdGUgPSBudWxsLCB1bml0KSB7XG4gICAgY29uc3QgZGF0ZVBhcnQgPSBmaXhVbml0KHVuaXQpXG4gICAgaWYgKGRhdGVQYXJ0KSB7XG4gICAgICByZXR1cm4gbW9tZW50KGRhdGUpLnN0YXJ0T2YoZGF0ZVBhcnQpLnRvRGF0ZSgpXG4gICAgfVxuICAgIHJldHVybiBtb21lbnQoZGF0ZSkudG9EYXRlKClcbiAgfVxuXG4gIGZ1bmN0aW9uIGVuZE9mKGRhdGUgPSBudWxsLCB1bml0KSB7XG4gICAgY29uc3QgZGF0ZVBhcnQgPSBmaXhVbml0KHVuaXQpXG4gICAgaWYgKGRhdGVQYXJ0KSB7XG4gICAgICByZXR1cm4gbW9tZW50KGRhdGUpLmVuZE9mKGRhdGVQYXJ0KS50b0RhdGUoKVxuICAgIH1cbiAgICByZXR1cm4gbW9tZW50KGRhdGUpLnRvRGF0ZSgpXG4gIH1cblxuICAvLyBtb21lbnQgY29tcGFyaXNvbiBvcGVyYXRpb25zICphbHdheXMqIGNvbnZlcnQgYm90aCBzaWRlcyB0byBtb21lbnQgb2JqZWN0c1xuICAvLyBwcmlvciB0byBydW5uaW5nIHRoZSBjb21wYXJpc29uc1xuICBmdW5jdGlvbiBlcShhLCBiLCB1bml0KSB7XG4gICAgY29uc3QgW2R0QSwgZHRCLCBkYXRlUGFydF0gPSBkZWZpbmVDb21wYXJhdG9ycyhhLCBiLCB1bml0KVxuICAgIHJldHVybiBkdEEuaXNTYW1lKGR0QiwgZGF0ZVBhcnQpXG4gIH1cblxuICBmdW5jdGlvbiBuZXEoYSwgYiwgdW5pdCkge1xuICAgIHJldHVybiAhZXEoYSwgYiwgdW5pdClcbiAgfVxuXG4gIGZ1bmN0aW9uIGd0KGEsIGIsIHVuaXQpIHtcbiAgICBjb25zdCBbZHRBLCBkdEIsIGRhdGVQYXJ0XSA9IGRlZmluZUNvbXBhcmF0b3JzKGEsIGIsIHVuaXQpXG4gICAgcmV0dXJuIGR0QS5pc0FmdGVyKGR0QiwgZGF0ZVBhcnQpXG4gIH1cblxuICBmdW5jdGlvbiBsdChhLCBiLCB1bml0KSB7XG4gICAgY29uc3QgW2R0QSwgZHRCLCBkYXRlUGFydF0gPSBkZWZpbmVDb21wYXJhdG9ycyhhLCBiLCB1bml0KVxuICAgIHJldHVybiBkdEEuaXNCZWZvcmUoZHRCLCBkYXRlUGFydClcbiAgfVxuXG4gIGZ1bmN0aW9uIGd0ZShhLCBiLCB1bml0KSB7XG4gICAgY29uc3QgW2R0QSwgZHRCLCBkYXRlUGFydF0gPSBkZWZpbmVDb21wYXJhdG9ycyhhLCBiLCB1bml0KVxuICAgIHJldHVybiBkdEEuaXNTYW1lT3JCZWZvcmUoZHRCLCBkYXRlUGFydClcbiAgfVxuXG4gIGZ1bmN0aW9uIGx0ZShhLCBiLCB1bml0KSB7XG4gICAgY29uc3QgW2R0QSwgZHRCLCBkYXRlUGFydF0gPSBkZWZpbmVDb21wYXJhdG9ycyhhLCBiLCB1bml0KVxuICAgIHJldHVybiBkdEEuaXNTYW1lT3JCZWZvcmUoZHRCLCBkYXRlUGFydClcbiAgfVxuXG4gIGZ1bmN0aW9uIGluUmFuZ2UoZGF5LCBtaW4sIG1heCwgdW5pdCA9ICdkYXknKSB7XG4gICAgY29uc3QgZGF0ZVBhcnQgPSBmaXhVbml0KHVuaXQpXG4gICAgY29uc3QgbURheSA9IG1vbWVudChkYXkpXG4gICAgY29uc3QgbU1pbiA9IG1vbWVudChtaW4pXG4gICAgY29uc3QgbU1heCA9IG1vbWVudChtYXgpXG4gICAgcmV0dXJuIG1EYXkuaXNCZXR3ZWVuKG1NaW4sIG1NYXgsIGRhdGVQYXJ0LCAnW10nKVxuICB9XG5cbiAgZnVuY3Rpb24gbWluKGRhdGVBLCBkYXRlQikge1xuICAgIGNvbnN0IGR0QSA9IG1vbWVudChkYXRlQSlcbiAgICBjb25zdCBkdEIgPSBtb21lbnQoZGF0ZUIpXG4gICAgY29uc3QgbWluRHQgPSBtb21lbnQubWluKGR0QSwgZHRCKVxuICAgIHJldHVybiBtaW5EdC50b0RhdGUoKVxuICB9XG5cbiAgZnVuY3Rpb24gbWF4KGRhdGVBLCBkYXRlQikge1xuICAgIGNvbnN0IGR0QSA9IG1vbWVudChkYXRlQSlcbiAgICBjb25zdCBkdEIgPSBtb21lbnQoZGF0ZUIpXG4gICAgY29uc3QgbWF4RHQgPSBtb21lbnQubWF4KGR0QSwgZHRCKVxuICAgIHJldHVybiBtYXhEdC50b0RhdGUoKVxuICB9XG5cbiAgZnVuY3Rpb24gbWVyZ2UoZGF0ZSwgdGltZSkge1xuICAgIGlmICghZGF0ZSAmJiAhdGltZSkgcmV0dXJuIG51bGxcblxuICAgIGNvbnN0IHRtID0gbW9tZW50KHRpbWUpLmZvcm1hdCgnSEg6bW06c3MnKVxuICAgIGNvbnN0IGR0ID0gbW9tZW50KGRhdGUpLnN0YXJ0T2YoJ2RheScpLmZvcm1hdCgnTU0vREQvWVlZWScpXG4gICAgLy8gV2UgZG8gaXQgdGhpcyB3YXkgdG8gYXZvaWQgaXNzdWVzIHdoZW4gdGltZXpvbmUgc3dpdGNoaW5nXG4gICAgcmV0dXJuIG1vbWVudChgJHtkdH0gJHt0bX1gLCAnTU0vREQvWVlZWSBISDptbTpzcycpLnRvRGF0ZSgpXG4gIH1cblxuICBmdW5jdGlvbiBhZGQoZGF0ZSwgYWRkZXIsIHVuaXQpIHtcbiAgICBjb25zdCBkYXRlUGFydCA9IGZpeFVuaXQodW5pdClcbiAgICByZXR1cm4gbW9tZW50KGRhdGUpLmFkZChhZGRlciwgZGF0ZVBhcnQpLnRvRGF0ZSgpXG4gIH1cblxuICBmdW5jdGlvbiByYW5nZShzdGFydCwgZW5kLCB1bml0ID0gJ2RheScpIHtcbiAgICBjb25zdCBkYXRlUGFydCA9IGZpeFVuaXQodW5pdClcbiAgICAvLyBiZWNhdXNlIHRoZSBhZGQgbWV0aG9kIHdpbGwgcHV0IHRoZXNlIGluIHR6LCB3ZSBoYXZlIHRvIHN0YXJ0IHRoYXQgd2F5XG4gICAgbGV0IGN1cnJlbnQgPSBtb21lbnQoc3RhcnQpLnRvRGF0ZSgpXG4gICAgY29uc3QgZGF5cyA9IFtdXG5cbiAgICB3aGlsZSAobHRlKGN1cnJlbnQsIGVuZCkpIHtcbiAgICAgIGRheXMucHVzaChjdXJyZW50KVxuICAgICAgY3VycmVudCA9IGFkZChjdXJyZW50LCAxLCBkYXRlUGFydClcbiAgICB9XG5cbiAgICByZXR1cm4gZGF5c1xuICB9XG5cbiAgZnVuY3Rpb24gY2VpbChkYXRlLCB1bml0KSB7XG4gICAgY29uc3QgZGF0ZVBhcnQgPSBmaXhVbml0KHVuaXQpXG4gICAgY29uc3QgZmxvb3IgPSBzdGFydE9mKGRhdGUsIGRhdGVQYXJ0KVxuXG4gICAgcmV0dXJuIGVxKGZsb29yLCBkYXRlKSA/IGZsb29yIDogYWRkKGZsb29yLCAxLCBkYXRlUGFydClcbiAgfVxuXG4gIGZ1bmN0aW9uIGRpZmYoYSwgYiwgdW5pdCA9ICdkYXknKSB7XG4gICAgY29uc3QgZGF0ZVBhcnQgPSBmaXhVbml0KHVuaXQpXG4gICAgLy8gZG9uJ3QgdXNlICdkZWZpbmVDb21wYXJhdG9ycycgaGVyZSwgYXMgd2UgZG9uJ3Qgd2FudCB0byBtdXRhdGUgdGhlIHZhbHVlc1xuICAgIGNvbnN0IGR0QSA9IG1vbWVudChhKVxuICAgIGNvbnN0IGR0QiA9IG1vbWVudChiKVxuICAgIHJldHVybiBkdEIuZGlmZihkdEEsIGRhdGVQYXJ0KVxuICB9XG5cbiAgZnVuY3Rpb24gbWludXRlcyhkYXRlKSB7XG4gICAgY29uc3QgZHQgPSBtb21lbnQoZGF0ZSlcbiAgICByZXR1cm4gZHQubWludXRlcygpXG4gIH1cblxuICBmdW5jdGlvbiBmaXJzdE9mV2VlayhjdWx0dXJlKSB7XG4gICAgY29uc3QgZGF0YSA9IGN1bHR1cmUgPyBtb21lbnQubG9jYWxlRGF0YShjdWx0dXJlKSA6IG1vbWVudC5sb2NhbGVEYXRhKClcbiAgICByZXR1cm4gZGF0YSA/IGRhdGEuZmlyc3REYXlPZldlZWsoKSA6IDBcbiAgfVxuXG4gIGZ1bmN0aW9uIGZpcnN0VmlzaWJsZURheShkYXRlKSB7XG4gICAgcmV0dXJuIG1vbWVudChkYXRlKS5zdGFydE9mKCdtb250aCcpLnN0YXJ0T2YoJ3dlZWsnKS50b0RhdGUoKVxuICB9XG5cbiAgZnVuY3Rpb24gbGFzdFZpc2libGVEYXkoZGF0ZSkge1xuICAgIHJldHVybiBtb21lbnQoZGF0ZSkuZW5kT2YoJ21vbnRoJykuZW5kT2YoJ3dlZWsnKS50b0RhdGUoKVxuICB9XG5cbiAgZnVuY3Rpb24gdmlzaWJsZURheXMoZGF0ZSkge1xuICAgIGxldCBjdXJyZW50ID0gZmlyc3RWaXNpYmxlRGF5KGRhdGUpXG4gICAgY29uc3QgbGFzdCA9IGxhc3RWaXNpYmxlRGF5KGRhdGUpXG4gICAgY29uc3QgZGF5cyA9IFtdXG5cbiAgICB3aGlsZSAobHRlKGN1cnJlbnQsIGxhc3QpKSB7XG4gICAgICBkYXlzLnB1c2goY3VycmVudClcbiAgICAgIGN1cnJlbnQgPSBhZGQoY3VycmVudCwgMSwgJ2QnKVxuICAgIH1cblxuICAgIHJldHVybiBkYXlzXG4gIH1cbiAgLyoqKiBFTkQgbG9jYWxpemVkIGRhdGUgYXJpdGhtZXRpYyBtZXRob2RzIHdpdGggbW9tZW50ICoqKi9cblxuICAvKipcbiAgICogTW92ZWQgZnJvbSBUaW1lU2xvdHMuanMsIHRoaXMgbWV0aG9kIG92ZXJyaWRlcyB0aGUgbWV0aG9kIG9mIHRoZSBzYW1lIG5hbWVcbiAgICogaW4gdGhlIGxvY2FsaXplci5qcywgdXNpbmcgbW9tZW50IHRvIGNvbnN0cnVjdCB0aGUganMgRGF0ZVxuICAgKiBAcGFyYW0ge0RhdGV9IGR0IC0gZGF0ZSB0byBzdGFydCB3aXRoXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBtaW51dGVzRnJvbU1pZG5pZ2h0XG4gICAqIEBwYXJhbSB7TnVtYmVyfSBvZmZzZXRcbiAgICogQHJldHVybnMge0RhdGV9XG4gICAqL1xuICBmdW5jdGlvbiBnZXRTbG90RGF0ZShkdCwgbWludXRlc0Zyb21NaWRuaWdodCwgb2Zmc2V0KSB7XG4gICAgcmV0dXJuIG1vbWVudChkdClcbiAgICAgIC5zdGFydE9mKCdkYXknKVxuICAgICAgLm1pbnV0ZShtaW51dGVzRnJvbU1pZG5pZ2h0ICsgb2Zmc2V0KVxuICAgICAgLnRvRGF0ZSgpXG4gIH1cblxuICAvLyBtb21lbnQgd2lsbCBhdXRvbWF0aWNhbGx5IGhhbmRsZSBEU1QgZGlmZmVyZW5jZXMgaW4gaXQncyBjYWxjdWxhdGlvbnNcbiAgZnVuY3Rpb24gZ2V0VG90YWxNaW4oc3RhcnQsIGVuZCkge1xuICAgIHJldHVybiBkaWZmKHN0YXJ0LCBlbmQsICdtaW51dGVzJylcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldE1pbnV0ZXNGcm9tTWlkbmlnaHQoc3RhcnQpIHtcbiAgICBjb25zdCBkYXlTdGFydCA9IG1vbWVudChzdGFydCkuc3RhcnRPZignZGF5JylcbiAgICBjb25zdCBkYXkgPSBtb21lbnQoc3RhcnQpXG4gICAgcmV0dXJuIGRheS5kaWZmKGRheVN0YXJ0LCAnbWludXRlcycpICsgZ2V0RGF5U3RhcnREc3RPZmZzZXQoc3RhcnQpXG4gIH1cblxuICAvLyBUaGVzZSB0d28gYXJlIHVzZWQgYnkgRGF0ZVNsb3RNZXRyaWNzXG4gIGZ1bmN0aW9uIGNvbnRpbnVlc1ByaW9yKHN0YXJ0LCBmaXJzdCkge1xuICAgIGNvbnN0IG1TdGFydCA9IG1vbWVudChzdGFydClcbiAgICBjb25zdCBtRmlyc3QgPSBtb21lbnQoZmlyc3QpXG4gICAgcmV0dXJuIG1TdGFydC5pc0JlZm9yZShtRmlyc3QsICdkYXknKVxuICB9XG5cbiAgZnVuY3Rpb24gY29udGludWVzQWZ0ZXIoc3RhcnQsIGVuZCwgbGFzdCkge1xuICAgIGNvbnN0IG1FbmQgPSBtb21lbnQoZW5kKVxuICAgIGNvbnN0IG1MYXN0ID0gbW9tZW50KGxhc3QpXG4gICAgcmV0dXJuIG1FbmQuaXNTYW1lT3JBZnRlcihtTGFzdCwgJ21pbnV0ZXMnKVxuICB9XG5cbiAgZnVuY3Rpb24gZGF5U3BhbihzdGFydCwgZW5kKSB7XG4gICAgY29uc3QgbVN0YXJ0ID0gbW9tZW50KHN0YXJ0KVxuICAgIGNvbnN0IG1FbmQgPSBtb21lbnQoZW5kKVxuICAgIGNvbnN0IGR1ciA9IG1vbWVudC5kdXJhdGlvbihtRW5kLmRpZmYobVN0YXJ0KSlcbiAgICByZXR1cm4gZHVyLmRheXMoKVxuICB9XG5cbiAgLy8gVGhlc2UgdHdvIGFyZSB1c2VkIGJ5IGV2ZW50TGV2ZWxzXG4gIGZ1bmN0aW9uIHNvcnRFdmVudHMoe1xuICAgIGV2dEE6IHsgc3RhcnQ6IGFTdGFydCwgZW5kOiBhRW5kLCBhbGxEYXk6IGFBbGxEYXkgfSxcbiAgICBldnRCOiB7IHN0YXJ0OiBiU3RhcnQsIGVuZDogYkVuZCwgYWxsRGF5OiBiQWxsRGF5IH0sXG4gIH0pIHtcbiAgICBjb25zdCBzdGFydFNvcnQgPSArc3RhcnRPZihhU3RhcnQsICdkYXknKSAtICtzdGFydE9mKGJTdGFydCwgJ2RheScpXG5cbiAgICBjb25zdCBkdXJBID0gZGF5U3BhbihhU3RhcnQsIGFFbmQpXG5cbiAgICBjb25zdCBkdXJCID0gZGF5U3BhbihiU3RhcnQsIGJFbmQpXG5cbiAgICByZXR1cm4gKFxuICAgICAgc3RhcnRTb3J0IHx8IC8vIHNvcnQgYnkgc3RhcnQgRGF5IGZpcnN0XG4gICAgICBkdXJCIC0gZHVyQSB8fCAvLyBldmVudHMgc3Bhbm5pbmcgbXVsdGlwbGUgZGF5cyBnbyBmaXJzdFxuICAgICAgISFiQWxsRGF5IC0gISFhQWxsRGF5IHx8IC8vIHRoZW4gYWxsRGF5IHNpbmdsZSBkYXkgZXZlbnRzXG4gICAgICArYVN0YXJ0IC0gK2JTdGFydCB8fCAvLyB0aGVuIHNvcnQgYnkgc3RhcnQgdGltZSAqZG9uJ3QgbmVlZCBtb21lbnQgY29udmVyc2lvbiBoZXJlXG4gICAgICArYUVuZCAtICtiRW5kIC8vIHRoZW4gc29ydCBieSBlbmQgdGltZSAqZG9uJ3QgbmVlZCBtb21lbnQgY29udmVyc2lvbiBoZXJlIGVpdGhlclxuICAgIClcbiAgfVxuXG4gIGZ1bmN0aW9uIGluRXZlbnRSYW5nZSh7XG4gICAgZXZlbnQ6IHsgc3RhcnQsIGVuZCB9LFxuICAgIHJhbmdlOiB7IHN0YXJ0OiByYW5nZVN0YXJ0LCBlbmQ6IHJhbmdlRW5kIH0sXG4gIH0pIHtcbiAgICBjb25zdCBzdGFydE9mRGF5ID0gbW9tZW50KHN0YXJ0KS5zdGFydE9mKCdkYXknKVxuICAgIGNvbnN0IGVFbmQgPSBtb21lbnQoZW5kKVxuICAgIGNvbnN0IHJTdGFydCA9IG1vbWVudChyYW5nZVN0YXJ0KVxuICAgIGNvbnN0IHJFbmQgPSBtb21lbnQocmFuZ2VFbmQpXG5cbiAgICBjb25zdCBzdGFydHNCZWZvcmVFbmQgPSBzdGFydE9mRGF5LmlzU2FtZU9yQmVmb3JlKHJFbmQsICdkYXknKVxuICAgIC8vIHdoZW4gdGhlIGV2ZW50IGlzIHplcm8gZHVyYXRpb24gd2UgbmVlZCB0byBoYW5kbGUgYSBiaXQgZGlmZmVyZW50bHlcbiAgICBjb25zdCBzYW1lTWluID0gIXN0YXJ0T2ZEYXkuaXNTYW1lKGVFbmQsICdtaW51dGVzJylcbiAgICBjb25zdCBlbmRzQWZ0ZXJTdGFydCA9IHNhbWVNaW5cbiAgICAgID8gZUVuZC5pc0FmdGVyKHJTdGFydCwgJ21pbnV0ZXMnKVxuICAgICAgOiBlRW5kLmlzU2FtZU9yQWZ0ZXIoclN0YXJ0LCAnbWludXRlcycpXG5cbiAgICByZXR1cm4gc3RhcnRzQmVmb3JlRW5kICYmIGVuZHNBZnRlclN0YXJ0XG4gIH1cblxuICBmdW5jdGlvbiBpc1NhbWVEYXRlKGRhdGUxLCBkYXRlMikge1xuICAgIGNvbnN0IGR0ID0gbW9tZW50KGRhdGUxKVxuICAgIGNvbnN0IGR0MiA9IG1vbWVudChkYXRlMilcbiAgICByZXR1cm4gZHQuaXNTYW1lKGR0MiwgJ2RheScpXG4gIH1cblxuICAvKipcbiAgICogVGhpcyBtZXRob2QsIGNhbGxlZCBvbmNlIGluIHRoZSBsb2NhbGl6ZXIgY29uc3RydWN0b3IsIGlzIHVzZWQgYnkgZXZlbnRMZXZlbHNcbiAgICogJ2V2ZW50U2VnbWVudHMoKScgdG8gYXNzaXN0IGluIGRldGVybWluaW5nIHRoZSAnc3Bhbicgb2YgdGhlIGV2ZW50IGluIHRoZSBkaXNwbGF5LFxuICAgKiBzcGVjaWZpY2FsbHkgd2hlbiB1c2luZyBhIHRpbWV6b25lIHRoYXQgaXMgZ3JlYXRlciB0aGFuIHRoZSBicm93c2VyIG5hdGl2ZSB0aW1lem9uZS5cbiAgICogQHJldHVybnMgbnVtYmVyXG4gICAqL1xuICBmdW5jdGlvbiBicm93c2VyVFpPZmZzZXQoKSB7XG4gICAgLyoqXG4gICAgICogRGF0ZS5wcm90b3R5cGUuZ2V0VGltZXpvbmVPZmZzZXQgaG9ycmlmaWNhbGx5IGZsaXBzIHRoZSBwb3NpdGl2ZS9uZWdhdGl2ZSBmcm9tXG4gICAgICogd2hhdCB5b3Ugc2VlIGluIGl0J3Mgc3RyaW5nLCBzbyB3ZSBoYXZlIHRvIGp1bXAgdGhyb3VnaCBzb21lIGhvb3BzIHRvIGdldCBhIHZhbHVlXG4gICAgICogd2UgY2FuIGFjdHVhbGx5IGNvbXBhcmUuXG4gICAgICovXG4gICAgY29uc3QgZHQgPSBuZXcgRGF0ZSgpXG4gICAgY29uc3QgbmVnID0gLy0vLnRlc3QoZHQudG9TdHJpbmcoKSkgPyAnLScgOiAnJ1xuICAgIGNvbnN0IGR0T2Zmc2V0ID0gZHQuZ2V0VGltZXpvbmVPZmZzZXQoKVxuICAgIGNvbnN0IGNvbXBhcmF0b3IgPSBOdW1iZXIoYCR7bmVnfSR7TWF0aC5hYnMoZHRPZmZzZXQpfWApXG4gICAgLy8gbW9tZW50IGNvcnJlY3RseSBwcm92aWRlcyBwb3NpdGl2ZS9uZWdhdGl2ZSBvZmZzZXQsIGFzIGV4cGVjdGVkXG4gICAgY29uc3QgbXRPZmZzZXQgPSBtb21lbnQoKS51dGNPZmZzZXQoKVxuICAgIHJldHVybiBtdE9mZnNldCA+IGNvbXBhcmF0b3IgPyAxIDogMFxuICB9XG5cbiAgcmV0dXJuIG5ldyBEYXRlTG9jYWxpemVyKHtcbiAgICBmb3JtYXRzLFxuXG4gICAgZmlyc3RPZldlZWssXG4gICAgZmlyc3RWaXNpYmxlRGF5LFxuICAgIGxhc3RWaXNpYmxlRGF5LFxuICAgIHZpc2libGVEYXlzLFxuXG4gICAgZm9ybWF0KHZhbHVlLCBmb3JtYXQsIGN1bHR1cmUpIHtcbiAgICAgIHJldHVybiBsb2NhbGUobW9tZW50KHZhbHVlKSwgY3VsdHVyZSkuZm9ybWF0KGZvcm1hdClcbiAgICB9LFxuXG4gICAgbHQsXG4gICAgbHRlLFxuICAgIGd0LFxuICAgIGd0ZSxcbiAgICBlcSxcbiAgICBuZXEsXG4gICAgbWVyZ2UsXG4gICAgaW5SYW5nZSxcbiAgICBzdGFydE9mLFxuICAgIGVuZE9mLFxuICAgIHJhbmdlLFxuICAgIGFkZCxcbiAgICBkaWZmLFxuICAgIGNlaWwsXG4gICAgbWluLFxuICAgIG1heCxcbiAgICBtaW51dGVzLFxuXG4gICAgZ2V0U2xvdERhdGUsXG4gICAgZ2V0VGltZXpvbmVPZmZzZXQsXG4gICAgZ2V0RHN0T2Zmc2V0LFxuICAgIGdldFRvdGFsTWluLFxuICAgIGdldE1pbnV0ZXNGcm9tTWlkbmlnaHQsXG4gICAgY29udGludWVzUHJpb3IsXG4gICAgY29udGludWVzQWZ0ZXIsXG4gICAgc29ydEV2ZW50cyxcbiAgICBpbkV2ZW50UmFuZ2UsXG4gICAgaXNTYW1lRGF0ZSxcbiAgICBkYXlTcGFuLFxuICAgIGJyb3dzZXJUWk9mZnNldCxcbiAgfSlcbn1cbiIsImltcG9ydCB7IERhdGVMb2NhbGl6ZXIgfSBmcm9tICcuLi9sb2NhbGl6ZXInXG5cbmZ1bmN0aW9uIHBsdXJhbGl6ZVVuaXQodW5pdCkge1xuICByZXR1cm4gL3MkLy50ZXN0KHVuaXQpID8gdW5pdCA6IHVuaXQgKyAncydcbn1cblxuY29uc3Qgd2Vla1JhbmdlRm9ybWF0ID0gKHsgc3RhcnQsIGVuZCB9LCBjdWx0dXJlLCBsb2NhbCkgPT5cbiAgbG9jYWwuZm9ybWF0KHN0YXJ0LCAnTU1NTSBkZCcsIGN1bHR1cmUpICtcbiAgJyDigJMgJyArXG4gIC8vIHVwZGF0ZWQgdG8gdXNlIHRoaXMgbG9jYWxpemVyICdlcSgpJyBtZXRob2RcbiAgbG9jYWwuZm9ybWF0KGVuZCwgbG9jYWwuZXEoc3RhcnQsIGVuZCwgJ21vbnRoJykgPyAnZGQnIDogJ01NTU0gZGQnLCBjdWx0dXJlKVxuXG5jb25zdCBkYXRlUmFuZ2VGb3JtYXQgPSAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsKSA9PlxuICBsb2NhbC5mb3JtYXQoc3RhcnQsICdEJywgY3VsdHVyZSkgKyAnIOKAkyAnICsgbG9jYWwuZm9ybWF0KGVuZCwgJ0QnLCBjdWx0dXJlKVxuXG5jb25zdCB0aW1lUmFuZ2VGb3JtYXQgPSAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsKSA9PlxuICBsb2NhbC5mb3JtYXQoc3RhcnQsICd0JywgY3VsdHVyZSkgKyAnIOKAkyAnICsgbG9jYWwuZm9ybWF0KGVuZCwgJ3QnLCBjdWx0dXJlKVxuXG5jb25zdCB0aW1lUmFuZ2VTdGFydEZvcm1hdCA9ICh7IHN0YXJ0IH0sIGN1bHR1cmUsIGxvY2FsKSA9PlxuICBsb2NhbC5mb3JtYXQoc3RhcnQsICd0JywgY3VsdHVyZSkgKyAnIOKAkyAnXG5cbmNvbnN0IHRpbWVSYW5nZUVuZEZvcm1hdCA9ICh7IGVuZCB9LCBjdWx0dXJlLCBsb2NhbCkgPT5cbiAgJyDigJMgJyArIGxvY2FsLmZvcm1hdChlbmQsICd0JywgY3VsdHVyZSlcblxuZXhwb3J0IGNvbnN0IGZvcm1hdHMgPSB7XG4gIGRhdGVGb3JtYXQ6ICdkZCcsXG4gIGRheUZvcm1hdDogJ2RkIEVFRScsXG4gIHdlZWtkYXlGb3JtYXQ6ICdFRUUnLFxuXG4gIHNlbGVjdFJhbmdlRm9ybWF0OiB0aW1lUmFuZ2VGb3JtYXQsXG4gIGV2ZW50VGltZVJhbmdlRm9ybWF0OiB0aW1lUmFuZ2VGb3JtYXQsXG4gIGV2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQ6IHRpbWVSYW5nZVN0YXJ0Rm9ybWF0LFxuICBldmVudFRpbWVSYW5nZUVuZEZvcm1hdDogdGltZVJhbmdlRW5kRm9ybWF0LFxuXG4gIHRpbWVHdXR0ZXJGb3JtYXQ6ICd0JyxcblxuICBtb250aEhlYWRlckZvcm1hdDogJ01NTU0geXl5eScsXG4gIGRheUhlYWRlckZvcm1hdDogJ0VFRUUgTU1NIGRkJyxcbiAgZGF5UmFuZ2VIZWFkZXJGb3JtYXQ6IHdlZWtSYW5nZUZvcm1hdCxcbiAgYWdlbmRhSGVhZGVyRm9ybWF0OiBkYXRlUmFuZ2VGb3JtYXQsXG5cbiAgYWdlbmRhRGF0ZUZvcm1hdDogJ0VFRSBNTU0gZGQnLFxuICBhZ2VuZGFUaW1lRm9ybWF0OiAndCcsXG4gIGFnZW5kYVRpbWVSYW5nZUZvcm1hdDogdGltZVJhbmdlRm9ybWF0LFxufVxuXG5mdW5jdGlvbiBmaXhVbml0KHVuaXQpIHtcbiAgbGV0IGRhdGVQYXJ0ID0gdW5pdCA/IHBsdXJhbGl6ZVVuaXQodW5pdC50b0xvd2VyQ2FzZSgpKSA6IHVuaXRcbiAgaWYgKGRhdGVQYXJ0ID09PSAnRnVsbFllYXInKSB7XG4gICAgZGF0ZVBhcnQgPSAneWVhcidcbiAgfSBlbHNlIGlmICghZGF0ZVBhcnQpIHtcbiAgICBkYXRlUGFydCA9IHVuZGVmaW5lZFxuICB9XG4gIHJldHVybiBkYXRlUGFydFxufVxuXG4vLyBMdXhvbiBkb2VzIG5vdCBjdXJyZW50bHkgaGF2ZSB3ZWVrSW5mbyBieSBjdWx0dXJlXG4vLyBMdXhvbiB1c2VzIDEgYmFzZWQgdmFsdWVzIGZvciBtb250aCBhbmQgd2Vla2RheVxuLy8gU28gd2UgZGVmYXVsdCB0byBTdW5kYXkgKDcpXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoRGF0ZVRpbWUsIHsgZmlyc3REYXlPZldlZWsgPSA3IH0gPSB7fSkge1xuICBmdW5jdGlvbiBmb3JtYXREYXRlKHZhbHVlLCBmb3JtYXQpIHtcbiAgICByZXR1cm4gRGF0ZVRpbWUuZnJvbUpTRGF0ZSh2YWx1ZSkudG9Gb3JtYXQoZm9ybWF0KVxuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0RGF0ZVdpdGhDdWx0dXJlKHZhbHVlLCBjdWx0dXJlLCBmb3JtYXQpIHtcbiAgICByZXR1cm4gRGF0ZVRpbWUuZnJvbUpTRGF0ZSh2YWx1ZSkuc2V0TG9jYWxlKGN1bHR1cmUpLnRvRm9ybWF0KGZvcm1hdClcbiAgfVxuXG4gIC8qKiogQkVHSU4gbG9jYWxpemVkIGRhdGUgYXJpdGhtZXRpYyBtZXRob2RzIHdpdGggTHV4b24gKioqL1xuICBmdW5jdGlvbiBkZWZpbmVDb21wYXJhdG9ycyhhLCBiLCB1bml0KSB7XG4gICAgY29uc3QgZGF0ZVBhcnQgPSBmaXhVbml0KHVuaXQpXG4gICAgY29uc3QgZHRBID0gZGF0ZVBhcnRcbiAgICAgID8gRGF0ZVRpbWUuZnJvbUpTRGF0ZShhKS5zdGFydE9mKGRhdGVQYXJ0KVxuICAgICAgOiBEYXRlVGltZS5mcm9tSlNEYXRlKGEpXG4gICAgY29uc3QgZHRCID0gZGF0ZVBhcnRcbiAgICAgID8gRGF0ZVRpbWUuZnJvbUpTRGF0ZShiKS5zdGFydE9mKGRhdGVQYXJ0KVxuICAgICAgOiBEYXRlVGltZS5mcm9tSlNEYXRlKGIpXG4gICAgcmV0dXJuIFtkdEEsIGR0QiwgZGF0ZVBhcnRdXG4gIH1cblxuICAvLyBTaW5jZSBMdXhvbiAoYW5kIGN1cnJlbnQgSW50bCBBUEkpIGhhcyBubyBzdXBwb3J0XG4gIC8vIGZvciBjdWx0dXJlIGJhc2VkIHdlZWtJbmZvLCB3ZSBuZWVkIHRvIGhhbmRsZVxuICAvLyB0aGUgc3RhcnQgb2YgdGhlIHdlZWsgZGlmZmVyZW50bHlcbiAgLy8gZGVwZW5kaW5nIG9uIGxvY2FsZSwgdGhlIGZpcnN0RGF5T2ZXZWVrIGNvdWxkIGFsc28gYmUgU2F0dXJkYXksIFN1bmRheSBvciBNb25kYXlcbiAgZnVuY3Rpb24gc3RhcnRPZkRUV2VlayhkdE9iaikge1xuICAgIGNvbnN0IHdlZWtkYXkgPSBkdE9iai53ZWVrZGF5XG4gICAgaWYgKHdlZWtkYXkgPT09IGZpcnN0RGF5T2ZXZWVrKSB7XG4gICAgICByZXR1cm4gZHRPYmouc3RhcnRPZignZGF5JykgLy8gYWxyZWFkeSBiZWdpbm5pbmcgb2Ygd2Vla1xuICAgIH0gZWxzZSBpZiAoZmlyc3REYXlPZldlZWsgPT09IDEpIHtcbiAgICAgIHJldHVybiBkdE9iai5zdGFydE9mKCd3ZWVrJykgLy8gZm93IGlzIE1vbmRheSwgd2hpY2ggaXMgTHV4b24gZGVmYXVsdFxuICAgIH1cbiAgICBjb25zdCBkaWZmID0gZmlyc3REYXlPZldlZWsgPT09IDcgPyB3ZWVrZGF5IDogd2Vla2RheSArICg3IC0gZmlyc3REYXlPZldlZWspXG4gICAgcmV0dXJuIGR0T2JqLm1pbnVzKHsgZGF5OiBkaWZmIH0pLnN0YXJ0T2YoJ2RheScpXG4gIH1cblxuICBmdW5jdGlvbiBlbmRPZkRUV2VlayhkdE9iaikge1xuICAgIGNvbnN0IHdlZWtkYXkgPSBkdE9iai53ZWVrZGF5XG4gICAgY29uc3QgZW93ID0gZmlyc3REYXlPZldlZWsgPT09IDEgPyA3IDogZmlyc3REYXlPZldlZWsgLSAxXG4gICAgaWYgKHdlZWtkYXkgPT09IGVvdykge1xuICAgICAgcmV0dXJuIGR0T2JqLmVuZE9mKCdkYXknKSAvLyBhbHJlYWR5IGxhc3QgZGF5IG9mIHRoZSB3ZWVrXG4gICAgfSBlbHNlIGlmIChmaXJzdERheU9mV2VlayA9PT0gMSkge1xuICAgICAgcmV0dXJuIGR0T2JqLmVuZE9mKCd3ZWVrJykgLy8gdXNlIEx1eG9uIGRlZmF1bHQgKFN1bmRheSlcbiAgICB9XG4gICAgY29uc3QgZnJvbURhdGUgPVxuICAgICAgZmlyc3REYXlPZldlZWsgPiBlb3cgPyBkdE9iai5wbHVzKHsgZGF5OiBmaXJzdERheU9mV2VlayAtIGVvdyB9KSA6IGR0T2JqXG4gICAgcmV0dXJuIGZyb21EYXRlLnNldCh7IHdlZWtkYXk6IGVvdyB9KS5lbmRPZignZGF5JylcbiAgfVxuXG4gIC8vIFRoaXMgcmV0dXJucyBhIERhdGVUaW1lIGluc3RhbmNlXG4gIGZ1bmN0aW9uIHN0YXJ0T2ZEVChkYXRlID0gbmV3IERhdGUoKSwgdW5pdCkge1xuICAgIGNvbnN0IGRhdGVQYXJ0ID0gZml4VW5pdCh1bml0KVxuICAgIGlmIChkYXRlUGFydCkge1xuICAgICAgY29uc3QgZHQgPSBEYXRlVGltZS5mcm9tSlNEYXRlKGRhdGUpXG4gICAgICByZXR1cm4gZGF0ZVBhcnQuaW5jbHVkZXMoJ3dlZWsnKVxuICAgICAgICA/IHN0YXJ0T2ZEVFdlZWsoZHQpXG4gICAgICAgIDogZHQuc3RhcnRPZihkYXRlUGFydClcbiAgICB9XG4gICAgcmV0dXJuIERhdGVUaW1lLmZyb21KU0RhdGUoZGF0ZSlcbiAgfVxuXG4gIGZ1bmN0aW9uIGZpcnN0T2ZXZWVrKCkge1xuICAgIHJldHVybiBmaXJzdERheU9mV2Vla1xuICB9XG5cbiAgLy8gVGhpcyByZXR1cm5zIGEgSlMgRGF0ZSBmcm9tIGEgRGF0ZVRpbWUgaW5zdGFuY2VcbiAgZnVuY3Rpb24gc3RhcnRPZihkYXRlID0gbmV3IERhdGUoKSwgdW5pdCkge1xuICAgIHJldHVybiBzdGFydE9mRFQoZGF0ZSwgdW5pdCkudG9KU0RhdGUoKVxuICB9XG5cbiAgLy8gVGhpcyByZXR1cm5zIGEgRGF0ZVRpbWUgaW5zdGFuY2VcbiAgZnVuY3Rpb24gZW5kT2ZEVChkYXRlID0gbmV3IERhdGUoKSwgdW5pdCkge1xuICAgIGNvbnN0IGRhdGVQYXJ0ID0gZml4VW5pdCh1bml0KVxuICAgIGlmIChkYXRlUGFydCkge1xuICAgICAgY29uc3QgZHQgPSBEYXRlVGltZS5mcm9tSlNEYXRlKGRhdGUpXG4gICAgICByZXR1cm4gZGF0ZVBhcnQuaW5jbHVkZXMoJ3dlZWsnKSA/IGVuZE9mRFRXZWVrKGR0KSA6IGR0LmVuZE9mKGRhdGVQYXJ0KVxuICAgIH1cbiAgICByZXR1cm4gRGF0ZVRpbWUuZnJvbUpTRGF0ZShkYXRlKVxuICB9XG5cbiAgZnVuY3Rpb24gZW5kT2YoZGF0ZSA9IG5ldyBEYXRlKCksIHVuaXQpIHtcbiAgICByZXR1cm4gZW5kT2ZEVChkYXRlLCB1bml0KS50b0pTRGF0ZSgpXG4gIH1cblxuICBmdW5jdGlvbiBlcShhLCBiLCB1bml0KSB7XG4gICAgY29uc3QgW2R0QSwgZHRCXSA9IGRlZmluZUNvbXBhcmF0b3JzKGEsIGIsIHVuaXQpXG4gICAgcmV0dXJuICtkdEEgPT0gK2R0QlxuICB9XG5cbiAgZnVuY3Rpb24gbmVxKGEsIGIsIHVuaXQpIHtcbiAgICByZXR1cm4gIWVxKGEsIGIsIHVuaXQpXG4gIH1cblxuICBmdW5jdGlvbiBndChhLCBiLCB1bml0KSB7XG4gICAgY29uc3QgW2R0QSwgZHRCXSA9IGRlZmluZUNvbXBhcmF0b3JzKGEsIGIsIHVuaXQpXG4gICAgcmV0dXJuICtkdEEgPiArZHRCXG4gIH1cblxuICBmdW5jdGlvbiBsdChhLCBiLCB1bml0KSB7XG4gICAgY29uc3QgW2R0QSwgZHRCXSA9IGRlZmluZUNvbXBhcmF0b3JzKGEsIGIsIHVuaXQpXG4gICAgcmV0dXJuICtkdEEgPCArZHRCXG4gIH1cblxuICBmdW5jdGlvbiBndGUoYSwgYiwgdW5pdCkge1xuICAgIGNvbnN0IFtkdEEsIGR0Ql0gPSBkZWZpbmVDb21wYXJhdG9ycyhhLCBiLCB1bml0KVxuICAgIHJldHVybiArZHRBID49ICtkdEJcbiAgfVxuXG4gIGZ1bmN0aW9uIGx0ZShhLCBiLCB1bml0KSB7XG4gICAgY29uc3QgW2R0QSwgZHRCXSA9IGRlZmluZUNvbXBhcmF0b3JzKGEsIGIsIHVuaXQpXG4gICAgcmV0dXJuICtkdEEgPD0gK2R0QlxuICB9XG5cbiAgZnVuY3Rpb24gaW5SYW5nZShkYXksIG1pbiwgbWF4LCB1bml0ID0gJ2RheScpIHtcbiAgICBjb25zdCBkYXRlUGFydCA9IGZpeFVuaXQodW5pdClcbiAgICBjb25zdCBtRGF5ID0gc3RhcnRPZkRUKGRheSwgZGF0ZVBhcnQpXG4gICAgY29uc3QgbU1pbiA9IHN0YXJ0T2ZEVChtaW4sIGRhdGVQYXJ0KVxuICAgIGNvbnN0IG1NYXggPSBzdGFydE9mRFQobWF4LCBkYXRlUGFydClcbiAgICByZXR1cm4gK21EYXkgPj0gK21NaW4gJiYgK21EYXkgPD0gK21NYXhcbiAgfVxuXG4gIGZ1bmN0aW9uIG1pbihkYXRlQSwgZGF0ZUIpIHtcbiAgICBjb25zdCBkdEEgPSBEYXRlVGltZS5mcm9tSlNEYXRlKGRhdGVBKVxuICAgIGNvbnN0IGR0QiA9IERhdGVUaW1lLmZyb21KU0RhdGUoZGF0ZUIpXG4gICAgY29uc3QgbWluRHQgPSBEYXRlVGltZS5taW4oZHRBLCBkdEIpXG4gICAgcmV0dXJuIG1pbkR0LnRvSlNEYXRlKClcbiAgfVxuXG4gIGZ1bmN0aW9uIG1heChkYXRlQSwgZGF0ZUIpIHtcbiAgICBjb25zdCBkdEEgPSBEYXRlVGltZS5mcm9tSlNEYXRlKGRhdGVBKVxuICAgIGNvbnN0IGR0QiA9IERhdGVUaW1lLmZyb21KU0RhdGUoZGF0ZUIpXG4gICAgY29uc3QgbWF4RHQgPSBEYXRlVGltZS5tYXgoZHRBLCBkdEIpXG4gICAgcmV0dXJuIG1heER0LnRvSlNEYXRlKClcbiAgfVxuXG4gIGZ1bmN0aW9uIG1lcmdlKGRhdGUsIHRpbWUpIHtcbiAgICBpZiAoIWRhdGUgJiYgIXRpbWUpIHJldHVybiBudWxsXG5cbiAgICBjb25zdCB0bSA9IERhdGVUaW1lLmZyb21KU0RhdGUodGltZSlcbiAgICBjb25zdCBkdCA9IHN0YXJ0T2ZEVChkYXRlLCAnZGF5JylcbiAgICByZXR1cm4gZHRcbiAgICAgIC5zZXQoe1xuICAgICAgICBob3VyOiB0bS5ob3VyLFxuICAgICAgICBtaW51dGU6IHRtLm1pbnV0ZSxcbiAgICAgICAgc2Vjb25kOiB0bS5zZWNvbmQsXG4gICAgICAgIG1pbGxpc2Vjb25kOiB0bS5taWxsaXNlY29uZCxcbiAgICAgIH0pXG4gICAgICAudG9KU0RhdGUoKVxuICB9XG5cbiAgZnVuY3Rpb24gYWRkKGRhdGUsIGFkZGVyLCB1bml0KSB7XG4gICAgY29uc3QgZGF0ZVBhcnQgPSBmaXhVbml0KHVuaXQpXG4gICAgcmV0dXJuIERhdGVUaW1lLmZyb21KU0RhdGUoZGF0ZSlcbiAgICAgIC5wbHVzKHsgW2RhdGVQYXJ0XTogYWRkZXIgfSlcbiAgICAgIC50b0pTRGF0ZSgpXG4gIH1cblxuICBmdW5jdGlvbiByYW5nZShzdGFydCwgZW5kLCB1bml0ID0gJ2RheScpIHtcbiAgICBjb25zdCBkYXRlUGFydCA9IGZpeFVuaXQodW5pdClcbiAgICBsZXQgY3VycmVudCA9IERhdGVUaW1lLmZyb21KU0RhdGUoc3RhcnQpLnRvSlNEYXRlKCkgLy8gdGhpcyBpcyB0byBnZXQgaXQgdG8gdHpcbiAgICBjb25zdCBkYXlzID0gW11cblxuICAgIHdoaWxlIChsdGUoY3VycmVudCwgZW5kKSkge1xuICAgICAgZGF5cy5wdXNoKGN1cnJlbnQpXG4gICAgICBjdXJyZW50ID0gYWRkKGN1cnJlbnQsIDEsIGRhdGVQYXJ0KVxuICAgIH1cblxuICAgIHJldHVybiBkYXlzXG4gIH1cblxuICBmdW5jdGlvbiBjZWlsKGRhdGUsIHVuaXQpIHtcbiAgICBjb25zdCBkYXRlUGFydCA9IGZpeFVuaXQodW5pdClcbiAgICBjb25zdCBmbG9vciA9IHN0YXJ0T2YoZGF0ZSwgZGF0ZVBhcnQpXG5cbiAgICByZXR1cm4gZXEoZmxvb3IsIGRhdGUpID8gZmxvb3IgOiBhZGQoZmxvb3IsIDEsIGRhdGVQYXJ0KVxuICB9XG5cbiAgZnVuY3Rpb24gZGlmZihhLCBiLCB1bml0ID0gJ2RheScpIHtcbiAgICBjb25zdCBkYXRlUGFydCA9IGZpeFVuaXQodW5pdClcbiAgICAvLyBkb24ndCB1c2UgJ2RlZmluZUNvbXBhcmF0b3JzJyBoZXJlLCBhcyB3ZSBkb24ndCB3YW50IHRvIG11dGF0ZSB0aGUgdmFsdWVzXG4gICAgY29uc3QgZHRBID0gRGF0ZVRpbWUuZnJvbUpTRGF0ZShhKVxuICAgIGNvbnN0IGR0QiA9IERhdGVUaW1lLmZyb21KU0RhdGUoYilcbiAgICByZXR1cm4gTWF0aC5mbG9vcihcbiAgICAgIGR0Qi5kaWZmKGR0QSwgZGF0ZVBhcnQsIHsgY29udmVyc2lvbkFjY3VyYWN5OiAnbG9uZ3Rlcm0nIH0pLnRvT2JqZWN0KClbXG4gICAgICAgIGRhdGVQYXJ0XG4gICAgICBdXG4gICAgKVxuICB9XG5cbiAgZnVuY3Rpb24gZmlyc3RWaXNpYmxlRGF5KGRhdGUpIHtcbiAgICBjb25zdCBzdGFydE9mTW9udGggPSBzdGFydE9mRFQoZGF0ZSwgJ21vbnRoJylcbiAgICByZXR1cm4gc3RhcnRPZkRUV2VlayhzdGFydE9mTW9udGgpLnRvSlNEYXRlKClcbiAgfVxuXG4gIGZ1bmN0aW9uIGxhc3RWaXNpYmxlRGF5KGRhdGUpIHtcbiAgICBjb25zdCBlbmRPZk1vbnRoID0gZW5kT2ZEVChkYXRlLCAnbW9udGgnKVxuICAgIHJldHVybiBlbmRPZkRUV2VlayhlbmRPZk1vbnRoKS50b0pTRGF0ZSgpXG4gIH1cblxuICBmdW5jdGlvbiB2aXNpYmxlRGF5cyhkYXRlKSB7XG4gICAgbGV0IGN1cnJlbnQgPSBmaXJzdFZpc2libGVEYXkoZGF0ZSlcbiAgICBjb25zdCBsYXN0ID0gbGFzdFZpc2libGVEYXkoZGF0ZSlcbiAgICBjb25zdCBkYXlzID0gW11cblxuICAgIHdoaWxlIChsdGUoY3VycmVudCwgbGFzdCkpIHtcbiAgICAgIGRheXMucHVzaChjdXJyZW50KVxuICAgICAgY3VycmVudCA9IGFkZChjdXJyZW50LCAxLCAnZGF5JylcbiAgICB9XG5cbiAgICByZXR1cm4gZGF5c1xuICB9XG4gIC8qKiogRU5EIGxvY2FsaXplZCBkYXRlIGFyaXRobWV0aWMgbWV0aG9kcyB3aXRoIG1vbWVudCAqKiovXG5cbiAgLyoqXG4gICAqIE1vdmVkIGZyb20gVGltZVNsb3RzLmpzLCB0aGlzIG1ldGhvZCBvdmVycmlkZXMgdGhlIG1ldGhvZCBvZiB0aGUgc2FtZSBuYW1lXG4gICAqIGluIHRoZSBsb2NhbGl6ZXIuanMsIHVzaW5nIG1vbWVudCB0byBjb25zdHJ1Y3QgdGhlIGpzIERhdGVcbiAgICogQHBhcmFtIHtEYXRlfSBkdCAtIGRhdGUgdG8gc3RhcnQgd2l0aFxuICAgKiBAcGFyYW0ge051bWJlcn0gbWludXRlc0Zyb21NaWRuaWdodFxuICAgKiBAcGFyYW0ge051bWJlcn0gb2Zmc2V0XG4gICAqIEByZXR1cm5zIHtEYXRlfVxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0U2xvdERhdGUoZHQsIG1pbnV0ZXNGcm9tTWlkbmlnaHQsIG9mZnNldCkge1xuICAgIHJldHVybiBzdGFydE9mRFQoZHQsICdkYXknKVxuICAgICAgLnNldCh7IG1pbnV0ZXM6IG1pbnV0ZXNGcm9tTWlkbmlnaHQgKyBvZmZzZXQgfSlcbiAgICAgIC50b0pTRGF0ZSgpXG4gIH1cblxuICAvLyBMdXhvbiB3aWxsIGF1dG9tYXRpY2FsbHkgaGFuZGxlIERTVCBkaWZmZXJlbmNlcyBpbiBpdCdzIGNhbGN1bGF0aW9uc1xuICBmdW5jdGlvbiBnZXRUb3RhbE1pbihzdGFydCwgZW5kKSB7XG4gICAgcmV0dXJuIGRpZmYoc3RhcnQsIGVuZCwgJ21pbnV0ZXMnKVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TWludXRlc0Zyb21NaWRuaWdodChzdGFydCkge1xuICAgIGNvbnN0IGRheVN0YXJ0ID0gc3RhcnRPZkRUKHN0YXJ0LCAnZGF5JylcbiAgICBjb25zdCBkYXkgPSBEYXRlVGltZS5mcm9tSlNEYXRlKHN0YXJ0KVxuICAgIHJldHVybiBNYXRoLnJvdW5kKFxuICAgICAgZGF5XG4gICAgICAgIC5kaWZmKGRheVN0YXJ0LCAnbWludXRlcycsIHsgY29udmVyc2lvbkFjY3VyYWN5OiAnbG9uZ3Rlcm0nIH0pXG4gICAgICAgIC50b09iamVjdCgpLm1pbnV0ZXNcbiAgICApXG4gIH1cblxuICAvLyBUaGVzZSB0d28gYXJlIHVzZWQgYnkgRGF0ZVNsb3RNZXRyaWNzXG4gIGZ1bmN0aW9uIGNvbnRpbnVlc1ByaW9yKHN0YXJ0LCBmaXJzdCkge1xuICAgIHJldHVybiBsdChzdGFydCwgZmlyc3QpXG4gIH1cblxuICBmdW5jdGlvbiBjb250aW51ZXNBZnRlcihzdGFydCwgZW5kLCBsYXN0KSB7XG4gICAgcmV0dXJuIGd0ZShlbmQsIGxhc3QpXG4gIH1cblxuICBmdW5jdGlvbiBkYXlTcGFuKHN0YXJ0LCBlbmQpIHtcbiAgICBjb25zdCBkdFN0YXJ0ID0gRGF0ZVRpbWUuZnJvbUpTRGF0ZShzdGFydClcbiAgICBjb25zdCBkdEVuZCA9IERhdGVUaW1lLmZyb21KU0RhdGUoZW5kKVxuICAgIHJldHVybiBkdEVuZC5kaWZmKGR0U3RhcnQpLmFzKCdkYXlzJylcbiAgfVxuXG4gIC8vIFRoZXNlIHR3byBhcmUgdXNlZCBieSBldmVudExldmVsc1xuICBmdW5jdGlvbiBzb3J0RXZlbnRzKHtcbiAgICBldnRBOiB7IHN0YXJ0OiBhU3RhcnQsIGVuZDogYUVuZCwgYWxsRGF5OiBhQWxsRGF5IH0sXG4gICAgZXZ0QjogeyBzdGFydDogYlN0YXJ0LCBlbmQ6IGJFbmQsIGFsbERheTogYkFsbERheSB9LFxuICB9KSB7XG4gICAgY29uc3Qgc3RhcnRTb3J0ID0gK3N0YXJ0T2YoYVN0YXJ0LCAnZGF5JykgLSArc3RhcnRPZihiU3RhcnQsICdkYXknKVxuXG4gICAgY29uc3QgZHVyQSA9IGRheVNwYW4oYVN0YXJ0LCBhRW5kKVxuXG4gICAgY29uc3QgZHVyQiA9IGRheVNwYW4oYlN0YXJ0LCBiRW5kKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIHN0YXJ0U29ydCB8fCAvLyBzb3J0IGJ5IHN0YXJ0IERheSBmaXJzdFxuICAgICAgZHVyQiAtIGR1ckEgfHwgLy8gZXZlbnRzIHNwYW5uaW5nIG11bHRpcGxlIGRheXMgZ28gZmlyc3RcbiAgICAgICEhYkFsbERheSAtICEhYUFsbERheSB8fCAvLyB0aGVuIGFsbERheSBzaW5nbGUgZGF5IGV2ZW50c1xuICAgICAgK2FTdGFydCAtICtiU3RhcnQgfHwgLy8gdGhlbiBzb3J0IGJ5IHN0YXJ0IHRpbWUgKmRvbid0IG5lZWQgbW9tZW50IGNvbnZlcnNpb24gaGVyZVxuICAgICAgK2FFbmQgLSArYkVuZCAvLyB0aGVuIHNvcnQgYnkgZW5kIHRpbWUgKmRvbid0IG5lZWQgbW9tZW50IGNvbnZlcnNpb24gaGVyZSBlaXRoZXJcbiAgICApXG4gIH1cblxuICBmdW5jdGlvbiBpbkV2ZW50UmFuZ2Uoe1xuICAgIGV2ZW50OiB7IHN0YXJ0LCBlbmQgfSxcbiAgICByYW5nZTogeyBzdGFydDogcmFuZ2VTdGFydCwgZW5kOiByYW5nZUVuZCB9LFxuICB9KSB7XG4gICAgY29uc3QgZVN0YXJ0ID0gc3RhcnRPZihzdGFydCwgJ2RheScpXG5cbiAgICBjb25zdCBzdGFydHNCZWZvcmVFbmQgPSBsdGUoZVN0YXJ0LCByYW5nZUVuZCwgJ2RheScpXG4gICAgLy8gd2hlbiB0aGUgZXZlbnQgaXMgemVybyBkdXJhdGlvbiB3ZSBuZWVkIHRvIGhhbmRsZSBhIGJpdCBkaWZmZXJlbnRseVxuICAgIGNvbnN0IHNhbWVNaW4gPSBuZXEoZVN0YXJ0LCBlbmQsICdtaW51dGVzJylcbiAgICBjb25zdCBlbmRzQWZ0ZXJTdGFydCA9IHNhbWVNaW5cbiAgICAgID8gZ3QoZW5kLCByYW5nZVN0YXJ0LCAnbWludXRlcycpXG4gICAgICA6IGd0ZShlbmQsIHJhbmdlU3RhcnQsICdtaW51dGVzJylcbiAgICByZXR1cm4gc3RhcnRzQmVmb3JlRW5kICYmIGVuZHNBZnRlclN0YXJ0XG4gIH1cblxuICAvLyBtb21lbnQgdHJlYXRzICdkYXknIGFuZCAnZGF0ZScgZXF1YWxpdHkgdmVyeSBkaWZmZXJlbnRcbiAgLy8gbW9tZW50KGRhdGUxKS5pc1NhbWUoZGF0ZTIsICdkYXknKSB3b3VsZCB0ZXN0IHRoYXQgdGhleSB3ZXJlIGJvdGggdGhlIHNhbWUgZGF5IG9mIHRoZSB3ZWVrXG4gIC8vIG1vbWVudChkYXRlMSkuaXNTYW1lKGRhdGUyLCAnZGF0ZScpIHdvdWxkIHRlc3QgdGhhdCB0aGV5IHdlcmUgYm90aCB0aGUgc2FtZSBkYXRlIG9mIHRoZSBtb250aCBvZiB0aGUgeWVhclxuICBmdW5jdGlvbiBpc1NhbWVEYXRlKGRhdGUxLCBkYXRlMikge1xuICAgIGNvbnN0IGR0ID0gRGF0ZVRpbWUuZnJvbUpTRGF0ZShkYXRlMSlcbiAgICBjb25zdCBkdDIgPSBEYXRlVGltZS5mcm9tSlNEYXRlKGRhdGUyKVxuICAgIHJldHVybiBkdC5oYXNTYW1lKGR0MiwgJ2RheScpXG4gIH1cblxuICAvKipcbiAgICogVGhpcyBtZXRob2QsIGNhbGxlZCBvbmNlIGluIHRoZSBsb2NhbGl6ZXIgY29uc3RydWN0b3IsIGlzIHVzZWQgYnkgZXZlbnRMZXZlbHNcbiAgICogJ2V2ZW50U2VnbWVudHMoKScgdG8gYXNzaXN0IGluIGRldGVybWluaW5nIHRoZSAnc3Bhbicgb2YgdGhlIGV2ZW50IGluIHRoZSBkaXNwbGF5LFxuICAgKiBzcGVjaWZpY2FsbHkgd2hlbiB1c2luZyBhIHRpbWV6b25lIHRoYXQgaXMgZ3JlYXRlciB0aGFuIHRoZSBicm93c2VyIG5hdGl2ZSB0aW1lem9uZS5cbiAgICogQHJldHVybnMgbnVtYmVyXG4gICAqL1xuICBmdW5jdGlvbiBicm93c2VyVFpPZmZzZXQoKSB7XG4gICAgLyoqXG4gICAgICogRGF0ZS5wcm90b3R5cGUuZ2V0VGltZXpvbmVPZmZzZXQgaG9ycmlmaWNhbGx5IGZsaXBzIHRoZSBwb3NpdGl2ZS9uZWdhdGl2ZSBmcm9tXG4gICAgICogd2hhdCB5b3Ugc2VlIGluIGl0J3Mgc3RyaW5nLCBzbyB3ZSBoYXZlIHRvIGp1bXAgdGhyb3VnaCBzb21lIGhvb3BzIHRvIGdldCBhIHZhbHVlXG4gICAgICogd2UgY2FuIGFjdHVhbGx5IGNvbXBhcmUuXG4gICAgICovXG4gICAgY29uc3QgZHQgPSBuZXcgRGF0ZSgpXG4gICAgY29uc3QgbmVnID0gLy0vLnRlc3QoZHQudG9TdHJpbmcoKSkgPyAnLScgOiAnJ1xuICAgIGNvbnN0IGR0T2Zmc2V0ID0gZHQuZ2V0VGltZXpvbmVPZmZzZXQoKVxuICAgIGNvbnN0IGNvbXBhcmF0b3IgPSBOdW1iZXIoYCR7bmVnfSR7TWF0aC5hYnMoZHRPZmZzZXQpfWApXG4gICAgLy8gbW9tZW50IGNvcnJlY3RseSBwcm92aWRlcyBwb3NpdGl2ZS9uZWdhdGl2ZSBvZmZzZXQsIGFzIGV4cGVjdGVkXG4gICAgY29uc3QgbXRPZmZzZXQgPSBEYXRlVGltZS5sb2NhbCgpLm9mZnNldFxuICAgIHJldHVybiBtdE9mZnNldCA+IGNvbXBhcmF0b3IgPyAxIDogMFxuICB9XG5cbiAgcmV0dXJuIG5ldyBEYXRlTG9jYWxpemVyKHtcbiAgICBmb3JtYXQodmFsdWUsIGZvcm1hdCwgY3VsdHVyZSkge1xuICAgICAgaWYgKGN1bHR1cmUpIHtcbiAgICAgICAgcmV0dXJuIGZvcm1hdERhdGVXaXRoQ3VsdHVyZSh2YWx1ZSwgY3VsdHVyZSwgZm9ybWF0KVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZvcm1hdERhdGUodmFsdWUsIGZvcm1hdClcbiAgICB9LFxuXG4gICAgZm9ybWF0cyxcblxuICAgIGZpcnN0T2ZXZWVrLFxuICAgIGZpcnN0VmlzaWJsZURheSxcbiAgICBsYXN0VmlzaWJsZURheSxcbiAgICB2aXNpYmxlRGF5cyxcblxuICAgIGx0LFxuICAgIGx0ZSxcbiAgICBndCxcbiAgICBndGUsXG4gICAgZXEsXG4gICAgbmVxLFxuICAgIG1lcmdlLFxuICAgIGluUmFuZ2UsXG4gICAgc3RhcnRPZixcbiAgICBlbmRPZixcbiAgICByYW5nZSxcbiAgICBhZGQsXG4gICAgZGlmZixcbiAgICBjZWlsLFxuICAgIG1pbixcbiAgICBtYXgsXG5cbiAgICBnZXRTbG90RGF0ZSxcbiAgICBnZXRUb3RhbE1pbixcbiAgICBnZXRNaW51dGVzRnJvbU1pZG5pZ2h0LFxuICAgIGNvbnRpbnVlc1ByaW9yLFxuICAgIGNvbnRpbnVlc0FmdGVyLFxuICAgIHNvcnRFdmVudHMsXG4gICAgaW5FdmVudFJhbmdlLFxuICAgIGlzU2FtZURhdGUsXG4gICAgZGF5U3BhbixcbiAgICBicm93c2VyVFpPZmZzZXQsXG4gIH0pXG59XG4iLCJpbXBvcnQgKiBhcyBkYXRlcyBmcm9tICcuLi91dGlscy9kYXRlcydcbmltcG9ydCB7IERhdGVMb2NhbGl6ZXIgfSBmcm9tICcuLi9sb2NhbGl6ZXInXG5cbmxldCBkYXRlUmFuZ2VGb3JtYXQgPSAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsKSA9PlxuICBsb2NhbC5mb3JtYXQoc3RhcnQsICdkJywgY3VsdHVyZSkgKyAnIOKAkyAnICsgbG9jYWwuZm9ybWF0KGVuZCwgJ2QnLCBjdWx0dXJlKVxuXG5sZXQgdGltZVJhbmdlRm9ybWF0ID0gKHsgc3RhcnQsIGVuZCB9LCBjdWx0dXJlLCBsb2NhbCkgPT5cbiAgbG9jYWwuZm9ybWF0KHN0YXJ0LCAndCcsIGN1bHR1cmUpICsgJyDigJMgJyArIGxvY2FsLmZvcm1hdChlbmQsICd0JywgY3VsdHVyZSlcblxubGV0IHRpbWVSYW5nZVN0YXJ0Rm9ybWF0ID0gKHsgc3RhcnQgfSwgY3VsdHVyZSwgbG9jYWwpID0+XG4gIGxvY2FsLmZvcm1hdChzdGFydCwgJ3QnLCBjdWx0dXJlKSArICcg4oCTICdcblxubGV0IHRpbWVSYW5nZUVuZEZvcm1hdCA9ICh7IGVuZCB9LCBjdWx0dXJlLCBsb2NhbCkgPT5cbiAgJyDigJMgJyArIGxvY2FsLmZvcm1hdChlbmQsICd0JywgY3VsdHVyZSlcblxubGV0IHdlZWtSYW5nZUZvcm1hdCA9ICh7IHN0YXJ0LCBlbmQgfSwgY3VsdHVyZSwgbG9jYWwpID0+XG4gIGxvY2FsLmZvcm1hdChzdGFydCwgJ01NTSBkZCcsIGN1bHR1cmUpICtcbiAgJyDigJMgJyArXG4gIGxvY2FsLmZvcm1hdChlbmQsIGRhdGVzLmVxKHN0YXJ0LCBlbmQsICdtb250aCcpID8gJ2RkJyA6ICdNTU0gZGQnLCBjdWx0dXJlKVxuXG5leHBvcnQgbGV0IGZvcm1hdHMgPSB7XG4gIGRhdGVGb3JtYXQ6ICdkZCcsXG4gIGRheUZvcm1hdDogJ2RkZCBkZC9NTScsXG4gIHdlZWtkYXlGb3JtYXQ6ICdkZGQnLFxuXG4gIHNlbGVjdFJhbmdlRm9ybWF0OiB0aW1lUmFuZ2VGb3JtYXQsXG4gIGV2ZW50VGltZVJhbmdlRm9ybWF0OiB0aW1lUmFuZ2VGb3JtYXQsXG4gIGV2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQ6IHRpbWVSYW5nZVN0YXJ0Rm9ybWF0LFxuICBldmVudFRpbWVSYW5nZUVuZEZvcm1hdDogdGltZVJhbmdlRW5kRm9ybWF0LFxuXG4gIHRpbWVHdXR0ZXJGb3JtYXQ6ICd0JyxcblxuICBtb250aEhlYWRlckZvcm1hdDogJ1knLFxuICBkYXlIZWFkZXJGb3JtYXQ6ICdkZGRkIE1NTSBkZCcsXG4gIGRheVJhbmdlSGVhZGVyRm9ybWF0OiB3ZWVrUmFuZ2VGb3JtYXQsXG4gIGFnZW5kYUhlYWRlckZvcm1hdDogZGF0ZVJhbmdlRm9ybWF0LFxuXG4gIGFnZW5kYURhdGVGb3JtYXQ6ICdkZGQgTU1NIGRkJyxcbiAgYWdlbmRhVGltZUZvcm1hdDogJ3QnLFxuICBhZ2VuZGFUaW1lUmFuZ2VGb3JtYXQ6IHRpbWVSYW5nZUZvcm1hdCxcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKGdsb2JhbGl6ZSkge1xuICBmdW5jdGlvbiBnZXRDdWx0dXJlKGN1bHR1cmUpIHtcbiAgICByZXR1cm4gY3VsdHVyZSA/IGdsb2JhbGl6ZS5maW5kQ2xvc2VzdEN1bHR1cmUoY3VsdHVyZSkgOiBnbG9iYWxpemUuY3VsdHVyZSgpXG4gIH1cblxuICBmdW5jdGlvbiBmaXJzdE9mV2VlayhjdWx0dXJlKSB7XG4gICAgY3VsdHVyZSA9IGdldEN1bHR1cmUoY3VsdHVyZSlcbiAgICByZXR1cm4gKGN1bHR1cmUgJiYgY3VsdHVyZS5jYWxlbmRhci5maXJzdERheSkgfHwgMFxuICB9XG5cbiAgcmV0dXJuIG5ldyBEYXRlTG9jYWxpemVyKHtcbiAgICBmaXJzdE9mV2VlayxcbiAgICBmb3JtYXRzLFxuICAgIGZvcm1hdCh2YWx1ZSwgZm9ybWF0LCBjdWx0dXJlKSB7XG4gICAgICByZXR1cm4gZ2xvYmFsaXplLmZvcm1hdCh2YWx1ZSwgZm9ybWF0LCBjdWx0dXJlKVxuICAgIH0sXG4gIH0pXG59XG4iLCIvLyBUT0RPOiBmaXggdGhlIGdsb2JhbGl6ZUxvY2FsaXplciB0byB3b3JrIHdpdGggZ2xvYmFsaXplIDEueFxuXG5pbXBvcnQgKiBhcyBkYXRlcyBmcm9tICcuLi91dGlscy9kYXRlcydcbmltcG9ydCBvbGRHbG9iYWxpemUgZnJvbSAnLi9vbGRHbG9iYWxpemUnXG5pbXBvcnQgeyBEYXRlTG9jYWxpemVyIH0gZnJvbSAnLi4vbG9jYWxpemVyJ1xuXG5sZXQgZGF0ZVJhbmdlRm9ybWF0ID0gKHsgc3RhcnQsIGVuZCB9LCBjdWx0dXJlLCBsb2NhbCkgPT5cbiAgbG9jYWwuZm9ybWF0KHN0YXJ0LCB7IGRhdGU6ICdzaG9ydCcgfSwgY3VsdHVyZSkgK1xuICAnIOKAkyAnICtcbiAgbG9jYWwuZm9ybWF0KGVuZCwgeyBkYXRlOiAnc2hvcnQnIH0sIGN1bHR1cmUpXG5cbmxldCB0aW1lUmFuZ2VGb3JtYXQgPSAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsKSA9PlxuICBsb2NhbC5mb3JtYXQoc3RhcnQsIHsgdGltZTogJ3Nob3J0JyB9LCBjdWx0dXJlKSArXG4gICcg4oCTICcgK1xuICBsb2NhbC5mb3JtYXQoZW5kLCB7IHRpbWU6ICdzaG9ydCcgfSwgY3VsdHVyZSlcblxubGV0IHRpbWVSYW5nZVN0YXJ0Rm9ybWF0ID0gKHsgc3RhcnQgfSwgY3VsdHVyZSwgbG9jYWwpID0+XG4gIGxvY2FsLmZvcm1hdChzdGFydCwgeyB0aW1lOiAnc2hvcnQnIH0sIGN1bHR1cmUpICsgJyDigJMgJ1xuXG5sZXQgdGltZVJhbmdlRW5kRm9ybWF0ID0gKHsgZW5kIH0sIGN1bHR1cmUsIGxvY2FsKSA9PlxuICAnIOKAkyAnICsgbG9jYWwuZm9ybWF0KGVuZCwgeyB0aW1lOiAnc2hvcnQnIH0sIGN1bHR1cmUpXG5cbmxldCB3ZWVrUmFuZ2VGb3JtYXQgPSAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsKSA9PlxuICBsb2NhbC5mb3JtYXQoc3RhcnQsICdNTU0gZGQnLCBjdWx0dXJlKSArXG4gICcg4oCTICcgK1xuICBsb2NhbC5mb3JtYXQoZW5kLCBkYXRlcy5lcShzdGFydCwgZW5kLCAnbW9udGgnKSA/ICdkZCcgOiAnTU1NIGRkJywgY3VsdHVyZSlcblxuZXhwb3J0IGxldCBmb3JtYXRzID0ge1xuICBkYXRlRm9ybWF0OiAnZGQnLFxuICBkYXlGb3JtYXQ6ICdlZWUgZGQvTU0nLFxuICB3ZWVrZGF5Rm9ybWF0OiAnZWVlJyxcblxuICBzZWxlY3RSYW5nZUZvcm1hdDogdGltZVJhbmdlRm9ybWF0LFxuICBldmVudFRpbWVSYW5nZUZvcm1hdDogdGltZVJhbmdlRm9ybWF0LFxuICBldmVudFRpbWVSYW5nZVN0YXJ0Rm9ybWF0OiB0aW1lUmFuZ2VTdGFydEZvcm1hdCxcbiAgZXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXQ6IHRpbWVSYW5nZUVuZEZvcm1hdCxcblxuICB0aW1lR3V0dGVyRm9ybWF0OiB7IHRpbWU6ICdzaG9ydCcgfSxcblxuICBtb250aEhlYWRlckZvcm1hdDogJ01NTU0geXl5eScsXG4gIGRheUhlYWRlckZvcm1hdDogJ2VlZWUgTU1NIGRkJyxcbiAgZGF5UmFuZ2VIZWFkZXJGb3JtYXQ6IHdlZWtSYW5nZUZvcm1hdCxcbiAgYWdlbmRhSGVhZGVyRm9ybWF0OiBkYXRlUmFuZ2VGb3JtYXQsXG5cbiAgYWdlbmRhRGF0ZUZvcm1hdDogJ2VlZSBNTU0gZGQnLFxuICBhZ2VuZGFUaW1lRm9ybWF0OiB7IHRpbWU6ICdzaG9ydCcgfSxcbiAgYWdlbmRhVGltZVJhbmdlRm9ybWF0OiB0aW1lUmFuZ2VGb3JtYXQsXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChnbG9iYWxpemUpIHtcbiAgbGV0IGxvY2FsZSA9IChjdWx0dXJlKSA9PiAoY3VsdHVyZSA/IGdsb2JhbGl6ZShjdWx0dXJlKSA6IGdsb2JhbGl6ZSlcblxuICAvLyByZXR1cm4gdGhlIGZpcnN0IGRheSBvZiB0aGUgd2VlayBmcm9tIHRoZSBsb2NhbGUgZGF0YS4gRGVmYXVsdHMgdG8gJ3dvcmxkJ1xuICAvLyB0ZXJyaXRvcnkgaWYgbm8gdGVycml0b3J5IGlzIGRlcml2YWJsZSBmcm9tIENMRFIuXG4gIC8vIEZhaWxpbmcgdG8gdXNlIENMRFIgc3VwcGxlbWVudGFsIChub3QgbG9hZGVkPyksIHJldmVydCB0byB0aGUgb3JpZ2luYWxcbiAgLy8gbWV0aG9kIG9mIGdldHRpbmcgZmlyc3QgZGF5IG9mIHdlZWsuXG4gIGZ1bmN0aW9uIGZpcnN0T2ZXZWVrKGN1bHR1cmUpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZGF5cyA9IFsnc3VuJywgJ21vbicsICd0dWUnLCAnd2VkJywgJ3RodScsICdmcmknLCAnc2F0J11cbiAgICAgIGNvbnN0IGNsZHIgPSBsb2NhbGUoY3VsdHVyZSkuY2xkclxuICAgICAgY29uc3QgdGVycml0b3J5ID0gY2xkci5hdHRyaWJ1dGVzLnRlcnJpdG9yeVxuICAgICAgY29uc3Qgd2Vla0RhdGEgPSBjbGRyLmdldCgnc3VwcGxlbWVudGFsJykud2Vla0RhdGFcbiAgICAgIGNvbnN0IGZpcnN0RGF5ID0gd2Vla0RhdGEuZmlyc3REYXlbdGVycml0b3J5IHx8ICcwMDEnXVxuICAgICAgcmV0dXJuIGRheXMuaW5kZXhPZihmaXJzdERheSlcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICAgICdGYWlsZWQgdG8gYWNjdXJhdGVseSBkZXRlcm1pbmUgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLicgK1xuICAgICAgICAgICAgJyBJcyBzdXBwbGVtZW50YWwgZGF0YSBsb2FkZWQgaW50byBDTERSPydcbiAgICAgICAgKVxuICAgICAgfVxuICAgICAgLy8gbWF5YmUgY2xkciBzdXBwbGVtZW50YWwgaXMgbm90IGxvYWRlZD8gcmV2ZXJ0IHRvIG9yaWdpbmFsIG1ldGhvZFxuICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKClcbiAgICAgIC8vY2xkci1kYXRhIGRvZXNuJ3Qgc2VlbSB0byBiZSB6ZXJvIGJhc2VkXG4gICAgICBsZXQgbG9jYWxlRGF5ID0gTWF0aC5tYXgoXG4gICAgICAgIHBhcnNlSW50KGxvY2FsZShjdWx0dXJlKS5mb3JtYXREYXRlKGRhdGUsIHsgcmF3OiAnZScgfSksIDEwKSAtIDEsXG4gICAgICAgIDBcbiAgICAgIClcblxuICAgICAgcmV0dXJuIE1hdGguYWJzKGRhdGUuZ2V0RGF5KCkgLSBsb2NhbGVEYXkpXG4gICAgfVxuICB9XG5cbiAgaWYgKCFnbG9iYWxpemUubG9hZCkgcmV0dXJuIG9sZEdsb2JhbGl6ZShnbG9iYWxpemUpXG5cbiAgcmV0dXJuIG5ldyBEYXRlTG9jYWxpemVyKHtcbiAgICBmaXJzdE9mV2VlayxcbiAgICBmb3JtYXRzLFxuICAgIGZvcm1hdCh2YWx1ZSwgZm9ybWF0LCBjdWx0dXJlKSB7XG4gICAgICBmb3JtYXQgPSB0eXBlb2YgZm9ybWF0ID09PSAnc3RyaW5nJyA/IHsgcmF3OiBmb3JtYXQgfSA6IGZvcm1hdFxuICAgICAgcmV0dXJuIGxvY2FsZShjdWx0dXJlKS5mb3JtYXREYXRlKHZhbHVlLCBmb3JtYXQpXG4gICAgfSxcbiAgfSlcbn1cbiIsImltcG9ydCAqIGFzIGRhdGVzIGZyb20gJy4uL3V0aWxzL2RhdGVzJ1xuaW1wb3J0IHsgRGF0ZUxvY2FsaXplciB9IGZyb20gJy4uL2xvY2FsaXplcidcblxubGV0IGRhdGVSYW5nZUZvcm1hdCA9ICh7IHN0YXJ0LCBlbmQgfSwgY3VsdHVyZSwgbG9jYWwpID0+XG4gIGAke2xvY2FsLmZvcm1hdChzdGFydCwgJ1AnLCBjdWx0dXJlKX0g4oCTICR7bG9jYWwuZm9ybWF0KGVuZCwgJ1AnLCBjdWx0dXJlKX1gXG5cbmxldCB0aW1lUmFuZ2VGb3JtYXQgPSAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsKSA9PlxuICBgJHtsb2NhbC5mb3JtYXQoc3RhcnQsICdwJywgY3VsdHVyZSl9IOKAkyAke2xvY2FsLmZvcm1hdChlbmQsICdwJywgY3VsdHVyZSl9YFxuXG5sZXQgdGltZVJhbmdlU3RhcnRGb3JtYXQgPSAoeyBzdGFydCB9LCBjdWx0dXJlLCBsb2NhbCkgPT5cbiAgYCR7bG9jYWwuZm9ybWF0KHN0YXJ0LCAnaDptbWEnLCBjdWx0dXJlKX0g4oCTIGBcblxubGV0IHRpbWVSYW5nZUVuZEZvcm1hdCA9ICh7IGVuZCB9LCBjdWx0dXJlLCBsb2NhbCkgPT5cbiAgYCDigJMgJHtsb2NhbC5mb3JtYXQoZW5kLCAnaDptbWEnLCBjdWx0dXJlKX1gXG5cbmxldCB3ZWVrUmFuZ2VGb3JtYXQgPSAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsKSA9PlxuICBgJHtsb2NhbC5mb3JtYXQoc3RhcnQsICdNTU1NIGRkJywgY3VsdHVyZSl9IOKAkyAke2xvY2FsLmZvcm1hdChcbiAgICBlbmQsXG4gICAgZGF0ZXMuZXEoc3RhcnQsIGVuZCwgJ21vbnRoJykgPyAnZGQnIDogJ01NTU0gZGQnLFxuICAgIGN1bHR1cmVcbiAgKX1gXG5cbmV4cG9ydCBsZXQgZm9ybWF0cyA9IHtcbiAgZGF0ZUZvcm1hdDogJ2RkJyxcbiAgZGF5Rm9ybWF0OiAnZGQgZWVlJyxcbiAgd2Vla2RheUZvcm1hdDogJ2NjYycsXG5cbiAgc2VsZWN0UmFuZ2VGb3JtYXQ6IHRpbWVSYW5nZUZvcm1hdCxcbiAgZXZlbnRUaW1lUmFuZ2VGb3JtYXQ6IHRpbWVSYW5nZUZvcm1hdCxcbiAgZXZlbnRUaW1lUmFuZ2VTdGFydEZvcm1hdDogdGltZVJhbmdlU3RhcnRGb3JtYXQsXG4gIGV2ZW50VGltZVJhbmdlRW5kRm9ybWF0OiB0aW1lUmFuZ2VFbmRGb3JtYXQsXG5cbiAgdGltZUd1dHRlckZvcm1hdDogJ3AnLFxuXG4gIG1vbnRoSGVhZGVyRm9ybWF0OiAnTU1NTSB5eXl5JyxcbiAgZGF5SGVhZGVyRm9ybWF0OiAnY2NjYyBNTU0gZGQnLFxuICBkYXlSYW5nZUhlYWRlckZvcm1hdDogd2Vla1JhbmdlRm9ybWF0LFxuICBhZ2VuZGFIZWFkZXJGb3JtYXQ6IGRhdGVSYW5nZUZvcm1hdCxcblxuICBhZ2VuZGFEYXRlRm9ybWF0OiAnY2NjIE1NTSBkZCcsXG4gIGFnZW5kYVRpbWVGb3JtYXQ6ICdwJyxcbiAgYWdlbmRhVGltZVJhbmdlRm9ybWF0OiB0aW1lUmFuZ2VGb3JtYXQsXG59XG5cbmNvbnN0IGRhdGVGbnNMb2NhbGl6ZXIgPSBmdW5jdGlvbiAoe1xuICBzdGFydE9mV2VlayxcbiAgZ2V0RGF5LFxuICBmb3JtYXQ6IF9mb3JtYXQsXG4gIGxvY2FsZXMsXG59KSB7XG4gIHJldHVybiBuZXcgRGF0ZUxvY2FsaXplcih7XG4gICAgZm9ybWF0cyxcbiAgICBmaXJzdE9mV2VlayhjdWx0dXJlKSB7XG4gICAgICByZXR1cm4gZ2V0RGF5KHN0YXJ0T2ZXZWVrKG5ldyBEYXRlKCksIHsgbG9jYWxlOiBsb2NhbGVzW2N1bHR1cmVdIH0pKVxuICAgIH0sXG5cbiAgICBmb3JtYXQodmFsdWUsIGZvcm1hdFN0cmluZywgY3VsdHVyZSkge1xuICAgICAgcmV0dXJuIF9mb3JtYXQobmV3IERhdGUodmFsdWUpLCBmb3JtYXRTdHJpbmcsIHtcbiAgICAgICAgbG9jYWxlOiBsb2NhbGVzW2N1bHR1cmVdLFxuICAgICAgfSlcbiAgICB9LFxuICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCBkYXRlRm5zTG9jYWxpemVyXG4iLCJpbXBvcnQgeyBEYXRlTG9jYWxpemVyIH0gZnJvbSAnLi4vbG9jYWxpemVyJ1xuXG4vLyBpbXBvcnQgZGF5anMgcGx1Z2luc1xuLy8gTm90ZSB0aGF0IHRoZSB0aW1lem9uZSBwbHVnaW4gaXMgbm90IGltcG9ydGVkIGhlcmVcbi8vIHRoaXMgcGx1Z2luIGNhbiBiZSBvcHRpb25hbGx5IGxvYWRlZCBieSB0aGUgdXNlclxuaW1wb3J0IGlzQmV0d2VlbiBmcm9tICdkYXlqcy9wbHVnaW4vaXNCZXR3ZWVuJ1xuaW1wb3J0IGlzU2FtZU9yQWZ0ZXIgZnJvbSAnZGF5anMvcGx1Z2luL2lzU2FtZU9yQWZ0ZXInXG5pbXBvcnQgaXNTYW1lT3JCZWZvcmUgZnJvbSAnZGF5anMvcGx1Z2luL2lzU2FtZU9yQmVmb3JlJ1xuaW1wb3J0IGxvY2FsZURhdGEgZnJvbSAnZGF5anMvcGx1Z2luL2xvY2FsZURhdGEnXG5pbXBvcnQgbG9jYWxpemVkRm9ybWF0IGZyb20gJ2RheWpzL3BsdWdpbi9sb2NhbGl6ZWRGb3JtYXQnXG5pbXBvcnQgbWluTWF4IGZyb20gJ2RheWpzL3BsdWdpbi9taW5NYXgnXG5pbXBvcnQgdXRjIGZyb20gJ2RheWpzL3BsdWdpbi91dGMnXG5cbmNvbnN0IHdlZWtSYW5nZUZvcm1hdCA9ICh7IHN0YXJ0LCBlbmQgfSwgY3VsdHVyZSwgbG9jYWwpID0+XG4gIGxvY2FsLmZvcm1hdChzdGFydCwgJ01NTU0gREQnLCBjdWx0dXJlKSArXG4gICcg4oCTICcgK1xuICAvLyB1cGRhdGVkIHRvIHVzZSB0aGlzIGxvY2FsaXplciAnZXEoKScgbWV0aG9kXG4gIGxvY2FsLmZvcm1hdChlbmQsIGxvY2FsLmVxKHN0YXJ0LCBlbmQsICdtb250aCcpID8gJ0REJyA6ICdNTU1NIEREJywgY3VsdHVyZSlcblxuY29uc3QgZGF0ZVJhbmdlRm9ybWF0ID0gKHsgc3RhcnQsIGVuZCB9LCBjdWx0dXJlLCBsb2NhbCkgPT5cbiAgbG9jYWwuZm9ybWF0KHN0YXJ0LCAnTCcsIGN1bHR1cmUpICsgJyDigJMgJyArIGxvY2FsLmZvcm1hdChlbmQsICdMJywgY3VsdHVyZSlcblxuY29uc3QgdGltZVJhbmdlRm9ybWF0ID0gKHsgc3RhcnQsIGVuZCB9LCBjdWx0dXJlLCBsb2NhbCkgPT5cbiAgbG9jYWwuZm9ybWF0KHN0YXJ0LCAnTFQnLCBjdWx0dXJlKSArICcg4oCTICcgKyBsb2NhbC5mb3JtYXQoZW5kLCAnTFQnLCBjdWx0dXJlKVxuXG5jb25zdCB0aW1lUmFuZ2VTdGFydEZvcm1hdCA9ICh7IHN0YXJ0IH0sIGN1bHR1cmUsIGxvY2FsKSA9PlxuICBsb2NhbC5mb3JtYXQoc3RhcnQsICdMVCcsIGN1bHR1cmUpICsgJyDigJMgJ1xuXG5jb25zdCB0aW1lUmFuZ2VFbmRGb3JtYXQgPSAoeyBlbmQgfSwgY3VsdHVyZSwgbG9jYWwpID0+XG4gICcg4oCTICcgKyBsb2NhbC5mb3JtYXQoZW5kLCAnTFQnLCBjdWx0dXJlKVxuXG5leHBvcnQgY29uc3QgZm9ybWF0cyA9IHtcbiAgZGF0ZUZvcm1hdDogJ0REJyxcbiAgZGF5Rm9ybWF0OiAnREQgZGRkJyxcbiAgd2Vla2RheUZvcm1hdDogJ2RkZCcsXG5cbiAgc2VsZWN0UmFuZ2VGb3JtYXQ6IHRpbWVSYW5nZUZvcm1hdCxcbiAgZXZlbnRUaW1lUmFuZ2VGb3JtYXQ6IHRpbWVSYW5nZUZvcm1hdCxcbiAgZXZlbnRUaW1lUmFuZ2VTdGFydEZvcm1hdDogdGltZVJhbmdlU3RhcnRGb3JtYXQsXG4gIGV2ZW50VGltZVJhbmdlRW5kRm9ybWF0OiB0aW1lUmFuZ2VFbmRGb3JtYXQsXG5cbiAgdGltZUd1dHRlckZvcm1hdDogJ0xUJyxcblxuICBtb250aEhlYWRlckZvcm1hdDogJ01NTU0gWVlZWScsXG4gIGRheUhlYWRlckZvcm1hdDogJ2RkZGQgTU1NIEREJyxcbiAgZGF5UmFuZ2VIZWFkZXJGb3JtYXQ6IHdlZWtSYW5nZUZvcm1hdCxcbiAgYWdlbmRhSGVhZGVyRm9ybWF0OiBkYXRlUmFuZ2VGb3JtYXQsXG5cbiAgYWdlbmRhRGF0ZUZvcm1hdDogJ2RkZCBNTU0gREQnLFxuICBhZ2VuZGFUaW1lRm9ybWF0OiAnTFQnLFxuICBhZ2VuZGFUaW1lUmFuZ2VGb3JtYXQ6IHRpbWVSYW5nZUZvcm1hdCxcbn1cblxuZnVuY3Rpb24gZml4VW5pdCh1bml0KSB7XG4gIGxldCBkYXRlUGFydCA9IHVuaXQgPyB1bml0LnRvTG93ZXJDYXNlKCkgOiB1bml0XG4gIGlmIChkYXRlUGFydCA9PT0gJ0Z1bGxZZWFyJykge1xuICAgIGRhdGVQYXJ0ID0gJ3llYXInXG4gIH0gZWxzZSBpZiAoIWRhdGVQYXJ0KSB7XG4gICAgZGF0ZVBhcnQgPSB1bmRlZmluZWRcbiAgfVxuICByZXR1cm4gZGF0ZVBhcnRcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKGRheWpzTGliKSB7XG4gIC8vIGxvYWQgZGF5anMgcGx1Z2luc1xuICBkYXlqc0xpYi5leHRlbmQoaXNCZXR3ZWVuKVxuICBkYXlqc0xpYi5leHRlbmQoaXNTYW1lT3JBZnRlcilcbiAgZGF5anNMaWIuZXh0ZW5kKGlzU2FtZU9yQmVmb3JlKVxuICBkYXlqc0xpYi5leHRlbmQobG9jYWxlRGF0YSlcbiAgZGF5anNMaWIuZXh0ZW5kKGxvY2FsaXplZEZvcm1hdClcbiAgZGF5anNMaWIuZXh0ZW5kKG1pbk1heClcbiAgZGF5anNMaWIuZXh0ZW5kKHV0YylcblxuICBjb25zdCBsb2NhbGUgPSAoZGosIGMpID0+IChjID8gZGoubG9jYWxlKGMpIDogZGopXG5cbiAgLy8gaWYgdGhlIHRpbWV6b25lIHBsdWdpbiBpcyBsb2FkZWQsXG4gIC8vIHRoZW4gdXNlIHRoZSB0aW1lem9uZSBhd2FyZSB2ZXJzaW9uXG4gIGNvbnN0IGRheWpzID0gZGF5anNMaWIudHogPyBkYXlqc0xpYi50eiA6IGRheWpzTGliXG5cbiAgZnVuY3Rpb24gZ2V0VGltZXpvbmVPZmZzZXQoZGF0ZSkge1xuICAgIC8vIGVuc3VyZXMgdGhpcyBnZXRzIGNhc3QgdG8gdGltZXpvbmVcbiAgICByZXR1cm4gZGF5anMoZGF0ZSkudG9EYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0RHN0T2Zmc2V0KHN0YXJ0LCBlbmQpIHtcbiAgICAvLyBjb252ZXJ0IHRvIGRheWpzLCBpbiBjYXNlXG4gICAgY29uc3Qgc3QgPSBkYXlqcyhzdGFydClcbiAgICBjb25zdCBlZCA9IGRheWpzKGVuZClcbiAgICAvLyBpZiBub3QgdXNpbmcgdGhlIGRheWpzIHRpbWV6b25lIHBsdWdpblxuICAgIGlmICghZGF5anMudHopIHtcbiAgICAgIHJldHVybiBzdC50b0RhdGUoKS5nZXRUaW1lem9uZU9mZnNldCgpIC0gZWQudG9EYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBJZiBhIGRlZmF1bHQgdGltZXpvbmUgaGFzIGJlZW4gYXBwbGllZCwgdGhlblxuICAgICAqIHVzZSB0aGlzIHRvIGdldCB0aGUgcHJvcGVyIHRpbWV6b25lIG9mZnNldCwgb3RoZXJ3aXNlIGRlZmF1bHRcbiAgICAgKiB0aGUgdGltZXpvbmUgdG8gdGhlIGJyb3dzZXIgbG9jYWxcbiAgICAgKi9cbiAgICBjb25zdCB0ek5hbWUgPSBzdC50eigpLiR4LiR0aW1lem9uZSA/PyBkYXlqc0xpYi50ei5ndWVzcygpXG4gICAgLy8gaW52ZXJ0IG9mZnNldHMgdG8gYmUgaW5saW5lIHdpdGggbW9tZW50LmpzXG4gICAgY29uc3Qgc3RhcnRPZmZzZXQgPSAtZGF5anMudHooK3N0LCB0ek5hbWUpLnV0Y09mZnNldCgpXG4gICAgY29uc3QgZW5kT2Zmc2V0ID0gLWRheWpzLnR6KCtlZCwgdHpOYW1lKS51dGNPZmZzZXQoKVxuICAgIHJldHVybiBzdGFydE9mZnNldCAtIGVuZE9mZnNldFxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0RGF5U3RhcnREc3RPZmZzZXQoc3RhcnQpIHtcbiAgICBjb25zdCBkYXlTdGFydCA9IGRheWpzKHN0YXJ0KS5zdGFydE9mKCdkYXknKVxuICAgIHJldHVybiBnZXREc3RPZmZzZXQoZGF5U3RhcnQsIHN0YXJ0KVxuICB9XG5cbiAgLyoqKiBCRUdJTiBsb2NhbGl6ZWQgZGF0ZSBhcml0aG1ldGljIG1ldGhvZHMgd2l0aCBkYXlqcyAqKiovXG4gIGZ1bmN0aW9uIGRlZmluZUNvbXBhcmF0b3JzKGEsIGIsIHVuaXQpIHtcbiAgICBjb25zdCBkYXRlUGFydCA9IGZpeFVuaXQodW5pdClcbiAgICBjb25zdCBkdEEgPSBkYXRlUGFydCA/IGRheWpzKGEpLnN0YXJ0T2YoZGF0ZVBhcnQpIDogZGF5anMoYSlcbiAgICBjb25zdCBkdEIgPSBkYXRlUGFydCA/IGRheWpzKGIpLnN0YXJ0T2YoZGF0ZVBhcnQpIDogZGF5anMoYilcbiAgICByZXR1cm4gW2R0QSwgZHRCLCBkYXRlUGFydF1cbiAgfVxuXG4gIGZ1bmN0aW9uIHN0YXJ0T2YoZGF0ZSA9IG51bGwsIHVuaXQpIHtcbiAgICBjb25zdCBkYXRlUGFydCA9IGZpeFVuaXQodW5pdClcbiAgICBpZiAoZGF0ZVBhcnQpIHtcbiAgICAgIHJldHVybiBkYXlqcyhkYXRlKS5zdGFydE9mKGRhdGVQYXJ0KS50b0RhdGUoKVxuICAgIH1cbiAgICByZXR1cm4gZGF5anMoZGF0ZSkudG9EYXRlKClcbiAgfVxuXG4gIGZ1bmN0aW9uIGVuZE9mKGRhdGUgPSBudWxsLCB1bml0KSB7XG4gICAgY29uc3QgZGF0ZVBhcnQgPSBmaXhVbml0KHVuaXQpXG4gICAgaWYgKGRhdGVQYXJ0KSB7XG4gICAgICByZXR1cm4gZGF5anMoZGF0ZSkuZW5kT2YoZGF0ZVBhcnQpLnRvRGF0ZSgpXG4gICAgfVxuICAgIHJldHVybiBkYXlqcyhkYXRlKS50b0RhdGUoKVxuICB9XG5cbiAgLy8gZGF5anMgY29tcGFyaXNvbiBvcGVyYXRpb25zICphbHdheXMqIGNvbnZlcnQgYm90aCBzaWRlcyB0byBkYXlqcyBvYmplY3RzXG4gIC8vIHByaW9yIHRvIHJ1bm5pbmcgdGhlIGNvbXBhcmlzb25zXG4gIGZ1bmN0aW9uIGVxKGEsIGIsIHVuaXQpIHtcbiAgICBjb25zdCBbZHRBLCBkdEIsIGRhdGVQYXJ0XSA9IGRlZmluZUNvbXBhcmF0b3JzKGEsIGIsIHVuaXQpXG4gICAgcmV0dXJuIGR0QS5pc1NhbWUoZHRCLCBkYXRlUGFydClcbiAgfVxuXG4gIGZ1bmN0aW9uIG5lcShhLCBiLCB1bml0KSB7XG4gICAgcmV0dXJuICFlcShhLCBiLCB1bml0KVxuICB9XG5cbiAgZnVuY3Rpb24gZ3QoYSwgYiwgdW5pdCkge1xuICAgIGNvbnN0IFtkdEEsIGR0QiwgZGF0ZVBhcnRdID0gZGVmaW5lQ29tcGFyYXRvcnMoYSwgYiwgdW5pdClcbiAgICByZXR1cm4gZHRBLmlzQWZ0ZXIoZHRCLCBkYXRlUGFydClcbiAgfVxuXG4gIGZ1bmN0aW9uIGx0KGEsIGIsIHVuaXQpIHtcbiAgICBjb25zdCBbZHRBLCBkdEIsIGRhdGVQYXJ0XSA9IGRlZmluZUNvbXBhcmF0b3JzKGEsIGIsIHVuaXQpXG4gICAgcmV0dXJuIGR0QS5pc0JlZm9yZShkdEIsIGRhdGVQYXJ0KVxuICB9XG5cbiAgZnVuY3Rpb24gZ3RlKGEsIGIsIHVuaXQpIHtcbiAgICBjb25zdCBbZHRBLCBkdEIsIGRhdGVQYXJ0XSA9IGRlZmluZUNvbXBhcmF0b3JzKGEsIGIsIHVuaXQpXG4gICAgcmV0dXJuIGR0QS5pc1NhbWVPckJlZm9yZShkdEIsIGRhdGVQYXJ0KVxuICB9XG5cbiAgZnVuY3Rpb24gbHRlKGEsIGIsIHVuaXQpIHtcbiAgICBjb25zdCBbZHRBLCBkdEIsIGRhdGVQYXJ0XSA9IGRlZmluZUNvbXBhcmF0b3JzKGEsIGIsIHVuaXQpXG4gICAgcmV0dXJuIGR0QS5pc1NhbWVPckJlZm9yZShkdEIsIGRhdGVQYXJ0KVxuICB9XG5cbiAgZnVuY3Rpb24gaW5SYW5nZShkYXksIG1pbiwgbWF4LCB1bml0ID0gJ2RheScpIHtcbiAgICBjb25zdCBkYXRlUGFydCA9IGZpeFVuaXQodW5pdClcbiAgICBjb25zdCBkakRheSA9IGRheWpzKGRheSlcbiAgICBjb25zdCBkak1pbiA9IGRheWpzKG1pbilcbiAgICBjb25zdCBkak1heCA9IGRheWpzKG1heClcbiAgICByZXR1cm4gZGpEYXkuaXNCZXR3ZWVuKGRqTWluLCBkak1heCwgZGF0ZVBhcnQsICdbXScpXG4gIH1cblxuICBmdW5jdGlvbiBtaW4oZGF0ZUEsIGRhdGVCKSB7XG4gICAgY29uc3QgZHRBID0gZGF5anMoZGF0ZUEpXG4gICAgY29uc3QgZHRCID0gZGF5anMoZGF0ZUIpXG4gICAgY29uc3QgbWluRHQgPSBkYXlqc0xpYi5taW4oZHRBLCBkdEIpXG4gICAgcmV0dXJuIG1pbkR0LnRvRGF0ZSgpXG4gIH1cblxuICBmdW5jdGlvbiBtYXgoZGF0ZUEsIGRhdGVCKSB7XG4gICAgY29uc3QgZHRBID0gZGF5anMoZGF0ZUEpXG4gICAgY29uc3QgZHRCID0gZGF5anMoZGF0ZUIpXG4gICAgY29uc3QgbWF4RHQgPSBkYXlqc0xpYi5tYXgoZHRBLCBkdEIpXG4gICAgcmV0dXJuIG1heER0LnRvRGF0ZSgpXG4gIH1cblxuICBmdW5jdGlvbiBtZXJnZShkYXRlLCB0aW1lKSB7XG4gICAgaWYgKCFkYXRlICYmICF0aW1lKSByZXR1cm4gbnVsbFxuXG4gICAgY29uc3QgdG0gPSBkYXlqcyh0aW1lKS5mb3JtYXQoJ0hIOm1tOnNzJylcbiAgICBjb25zdCBkdCA9IGRheWpzKGRhdGUpLnN0YXJ0T2YoJ2RheScpLmZvcm1hdCgnTU0vREQvWVlZWScpXG4gICAgLy8gV2UgZG8gaXQgdGhpcyB3YXkgdG8gYXZvaWQgaXNzdWVzIHdoZW4gdGltZXpvbmUgc3dpdGNoaW5nXG4gICAgcmV0dXJuIGRheWpzTGliKGAke2R0fSAke3RtfWAsICdNTS9ERC9ZWVlZIEhIOm1tOnNzJykudG9EYXRlKClcbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZChkYXRlLCBhZGRlciwgdW5pdCkge1xuICAgIGNvbnN0IGRhdGVQYXJ0ID0gZml4VW5pdCh1bml0KVxuICAgIHJldHVybiBkYXlqcyhkYXRlKS5hZGQoYWRkZXIsIGRhdGVQYXJ0KS50b0RhdGUoKVxuICB9XG5cbiAgZnVuY3Rpb24gcmFuZ2Uoc3RhcnQsIGVuZCwgdW5pdCA9ICdkYXknKSB7XG4gICAgY29uc3QgZGF0ZVBhcnQgPSBmaXhVbml0KHVuaXQpXG4gICAgLy8gYmVjYXVzZSB0aGUgYWRkIG1ldGhvZCB3aWxsIHB1dCB0aGVzZSBpbiB0eiwgd2UgaGF2ZSB0byBzdGFydCB0aGF0IHdheVxuICAgIGxldCBjdXJyZW50ID0gZGF5anMoc3RhcnQpLnRvRGF0ZSgpXG4gICAgY29uc3QgZGF5cyA9IFtdXG5cbiAgICB3aGlsZSAobHRlKGN1cnJlbnQsIGVuZCkpIHtcbiAgICAgIGRheXMucHVzaChjdXJyZW50KVxuICAgICAgY3VycmVudCA9IGFkZChjdXJyZW50LCAxLCBkYXRlUGFydClcbiAgICB9XG5cbiAgICByZXR1cm4gZGF5c1xuICB9XG5cbiAgZnVuY3Rpb24gY2VpbChkYXRlLCB1bml0KSB7XG4gICAgY29uc3QgZGF0ZVBhcnQgPSBmaXhVbml0KHVuaXQpXG4gICAgY29uc3QgZmxvb3IgPSBzdGFydE9mKGRhdGUsIGRhdGVQYXJ0KVxuXG4gICAgcmV0dXJuIGVxKGZsb29yLCBkYXRlKSA/IGZsb29yIDogYWRkKGZsb29yLCAxLCBkYXRlUGFydClcbiAgfVxuXG4gIGZ1bmN0aW9uIGRpZmYoYSwgYiwgdW5pdCA9ICdkYXknKSB7XG4gICAgY29uc3QgZGF0ZVBhcnQgPSBmaXhVbml0KHVuaXQpXG4gICAgLy8gZG9uJ3QgdXNlICdkZWZpbmVDb21wYXJhdG9ycycgaGVyZSwgYXMgd2UgZG9uJ3Qgd2FudCB0byBtdXRhdGUgdGhlIHZhbHVlc1xuICAgIGNvbnN0IGR0QSA9IGRheWpzKGEpXG4gICAgY29uc3QgZHRCID0gZGF5anMoYilcbiAgICByZXR1cm4gZHRCLmRpZmYoZHRBLCBkYXRlUGFydClcbiAgfVxuXG4gIGZ1bmN0aW9uIG1pbnV0ZXMoZGF0ZSkge1xuICAgIGNvbnN0IGR0ID0gZGF5anMoZGF0ZSlcbiAgICByZXR1cm4gZHQubWludXRlcygpXG4gIH1cblxuICBmdW5jdGlvbiBmaXJzdE9mV2VlayhjdWx0dXJlKSB7XG4gICAgY29uc3QgZGF0YSA9IGN1bHR1cmUgPyBkYXlqc0xpYi5sb2NhbGVEYXRhKGN1bHR1cmUpIDogZGF5anNMaWIubG9jYWxlRGF0YSgpXG4gICAgcmV0dXJuIGRhdGEgPyBkYXRhLmZpcnN0RGF5T2ZXZWVrKCkgOiAwXG4gIH1cblxuICBmdW5jdGlvbiBmaXJzdFZpc2libGVEYXkoZGF0ZSkge1xuICAgIHJldHVybiBkYXlqcyhkYXRlKS5zdGFydE9mKCdtb250aCcpLnN0YXJ0T2YoJ3dlZWsnKS50b0RhdGUoKVxuICB9XG5cbiAgZnVuY3Rpb24gbGFzdFZpc2libGVEYXkoZGF0ZSkge1xuICAgIHJldHVybiBkYXlqcyhkYXRlKS5lbmRPZignbW9udGgnKS5lbmRPZignd2VlaycpLnRvRGF0ZSgpXG4gIH1cblxuICBmdW5jdGlvbiB2aXNpYmxlRGF5cyhkYXRlKSB7XG4gICAgbGV0IGN1cnJlbnQgPSBmaXJzdFZpc2libGVEYXkoZGF0ZSlcbiAgICBjb25zdCBsYXN0ID0gbGFzdFZpc2libGVEYXkoZGF0ZSlcbiAgICBjb25zdCBkYXlzID0gW11cblxuICAgIHdoaWxlIChsdGUoY3VycmVudCwgbGFzdCkpIHtcbiAgICAgIGRheXMucHVzaChjdXJyZW50KVxuICAgICAgY3VycmVudCA9IGFkZChjdXJyZW50LCAxLCAnZCcpXG4gICAgfVxuXG4gICAgcmV0dXJuIGRheXNcbiAgfVxuICAvKioqIEVORCBsb2NhbGl6ZWQgZGF0ZSBhcml0aG1ldGljIG1ldGhvZHMgd2l0aCBkYXlqcyAqKiovXG5cbiAgLyoqXG4gICAqIE1vdmVkIGZyb20gVGltZVNsb3RzLmpzLCB0aGlzIG1ldGhvZCBvdmVycmlkZXMgdGhlIG1ldGhvZCBvZiB0aGUgc2FtZSBuYW1lXG4gICAqIGluIHRoZSBsb2NhbGl6ZXIuanMsIHVzaW5nIGRheWpzIHRvIGNvbnN0cnVjdCB0aGUganMgRGF0ZVxuICAgKiBAcGFyYW0ge0RhdGV9IGR0IC0gZGF0ZSB0byBzdGFydCB3aXRoXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBtaW51dGVzRnJvbU1pZG5pZ2h0XG4gICAqIEBwYXJhbSB7TnVtYmVyfSBvZmZzZXRcbiAgICogQHJldHVybnMge0RhdGV9XG4gICAqL1xuICBmdW5jdGlvbiBnZXRTbG90RGF0ZShkdCwgbWludXRlc0Zyb21NaWRuaWdodCwgb2Zmc2V0KSB7XG4gICAgcmV0dXJuIGRheWpzKGR0KVxuICAgICAgLnN0YXJ0T2YoJ2RheScpXG4gICAgICAubWludXRlKG1pbnV0ZXNGcm9tTWlkbmlnaHQgKyBvZmZzZXQpXG4gICAgICAudG9EYXRlKClcbiAgfVxuXG4gIC8vIGRheWpzIHdpbGwgYXV0b21hdGljYWxseSBoYW5kbGUgRFNUIGRpZmZlcmVuY2VzIGluIGl0J3MgY2FsY3VsYXRpb25zXG4gIGZ1bmN0aW9uIGdldFRvdGFsTWluKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gZGlmZihzdGFydCwgZW5kLCAnbWludXRlcycpXG4gIH1cblxuICBmdW5jdGlvbiBnZXRNaW51dGVzRnJvbU1pZG5pZ2h0KHN0YXJ0KSB7XG4gICAgY29uc3QgZGF5U3RhcnQgPSBkYXlqcyhzdGFydCkuc3RhcnRPZignZGF5JylcbiAgICBjb25zdCBkYXkgPSBkYXlqcyhzdGFydClcbiAgICByZXR1cm4gZGF5LmRpZmYoZGF5U3RhcnQsICdtaW51dGVzJykgKyBnZXREYXlTdGFydERzdE9mZnNldChzdGFydClcbiAgfVxuXG4gIC8vIFRoZXNlIHR3byBhcmUgdXNlZCBieSBEYXRlU2xvdE1ldHJpY3NcbiAgZnVuY3Rpb24gY29udGludWVzUHJpb3Ioc3RhcnQsIGZpcnN0KSB7XG4gICAgY29uc3QgZGpTdGFydCA9IGRheWpzKHN0YXJ0KVxuICAgIGNvbnN0IGRqRmlyc3QgPSBkYXlqcyhmaXJzdClcbiAgICByZXR1cm4gZGpTdGFydC5pc0JlZm9yZShkakZpcnN0LCAnZGF5JylcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbnRpbnVlc0FmdGVyKHN0YXJ0LCBlbmQsIGxhc3QpIHtcbiAgICBjb25zdCBkakVuZCA9IGRheWpzKGVuZClcbiAgICBjb25zdCBkakxhc3QgPSBkYXlqcyhsYXN0KVxuICAgIHJldHVybiBkakVuZC5pc1NhbWVPckFmdGVyKGRqTGFzdCwgJ21pbnV0ZXMnKVxuICB9XG5cbiAgZnVuY3Rpb24gZGF5U3BhbihzdGFydCwgZW5kKSB7XG4gICAgY29uc3Qgc3RhcnREYXkgPSBkYXlqcyhzdGFydClcbiAgICBjb25zdCBlbmREYXkgPSBkYXlqcyhlbmQpXG4gICAgcmV0dXJuIGVuZERheS5kaWZmKHN0YXJ0RGF5LCAnZGF5JylcbiAgfVxuXG4gIC8vIFRoZXNlIHR3byBhcmUgdXNlZCBieSBldmVudExldmVsc1xuICBmdW5jdGlvbiBzb3J0RXZlbnRzKHtcbiAgICBldnRBOiB7IHN0YXJ0OiBhU3RhcnQsIGVuZDogYUVuZCwgYWxsRGF5OiBhQWxsRGF5IH0sXG4gICAgZXZ0QjogeyBzdGFydDogYlN0YXJ0LCBlbmQ6IGJFbmQsIGFsbERheTogYkFsbERheSB9LFxuICB9KSB7XG4gICAgY29uc3Qgc3RhcnRTb3J0ID0gK3N0YXJ0T2YoYVN0YXJ0LCAnZGF5JykgLSArc3RhcnRPZihiU3RhcnQsICdkYXknKVxuXG4gICAgY29uc3QgZHVyQSA9IGRheVNwYW4oYVN0YXJ0LCBhRW5kKVxuXG4gICAgY29uc3QgZHVyQiA9IGRheVNwYW4oYlN0YXJ0LCBiRW5kKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIHN0YXJ0U29ydCB8fCAvLyBzb3J0IGJ5IHN0YXJ0IERheSBmaXJzdFxuICAgICAgZHVyQiAtIGR1ckEgfHwgLy8gZXZlbnRzIHNwYW5uaW5nIG11bHRpcGxlIGRheXMgZ28gZmlyc3RcbiAgICAgICEhYkFsbERheSAtICEhYUFsbERheSB8fCAvLyB0aGVuIGFsbERheSBzaW5nbGUgZGF5IGV2ZW50c1xuICAgICAgK2FTdGFydCAtICtiU3RhcnQgfHwgLy8gdGhlbiBzb3J0IGJ5IHN0YXJ0IHRpbWUgKmRvbid0IG5lZWQgZGF5anMgY29udmVyc2lvbiBoZXJlXG4gICAgICArYUVuZCAtICtiRW5kIC8vIHRoZW4gc29ydCBieSBlbmQgdGltZSAqZG9uJ3QgbmVlZCBkYXlqcyBjb252ZXJzaW9uIGhlcmUgZWl0aGVyXG4gICAgKVxuICB9XG5cbiAgZnVuY3Rpb24gaW5FdmVudFJhbmdlKHtcbiAgICBldmVudDogeyBzdGFydCwgZW5kIH0sXG4gICAgcmFuZ2U6IHsgc3RhcnQ6IHJhbmdlU3RhcnQsIGVuZDogcmFuZ2VFbmQgfSxcbiAgfSkge1xuICAgIGNvbnN0IHN0YXJ0T2ZEYXkgPSBkYXlqcyhzdGFydCkuc3RhcnRPZignZGF5JylcbiAgICBjb25zdCBlRW5kID0gZGF5anMoZW5kKVxuICAgIGNvbnN0IHJTdGFydCA9IGRheWpzKHJhbmdlU3RhcnQpXG4gICAgY29uc3QgckVuZCA9IGRheWpzKHJhbmdlRW5kKVxuXG4gICAgY29uc3Qgc3RhcnRzQmVmb3JlRW5kID0gc3RhcnRPZkRheS5pc1NhbWVPckJlZm9yZShyRW5kLCAnZGF5JylcbiAgICAvLyB3aGVuIHRoZSBldmVudCBpcyB6ZXJvIGR1cmF0aW9uIHdlIG5lZWQgdG8gaGFuZGxlIGEgYml0IGRpZmZlcmVudGx5XG4gICAgY29uc3Qgc2FtZU1pbiA9ICFzdGFydE9mRGF5LmlzU2FtZShlRW5kLCAnbWludXRlcycpXG4gICAgY29uc3QgZW5kc0FmdGVyU3RhcnQgPSBzYW1lTWluXG4gICAgICA/IGVFbmQuaXNBZnRlcihyU3RhcnQsICdtaW51dGVzJylcbiAgICAgIDogZUVuZC5pc1NhbWVPckFmdGVyKHJTdGFydCwgJ21pbnV0ZXMnKVxuXG4gICAgcmV0dXJuIHN0YXJ0c0JlZm9yZUVuZCAmJiBlbmRzQWZ0ZXJTdGFydFxuICB9XG5cbiAgZnVuY3Rpb24gaXNTYW1lRGF0ZShkYXRlMSwgZGF0ZTIpIHtcbiAgICBjb25zdCBkdCA9IGRheWpzKGRhdGUxKVxuICAgIGNvbnN0IGR0MiA9IGRheWpzKGRhdGUyKVxuICAgIHJldHVybiBkdC5pc1NhbWUoZHQyLCAnZGF5JylcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGlzIG1ldGhvZCwgY2FsbGVkIG9uY2UgaW4gdGhlIGxvY2FsaXplciBjb25zdHJ1Y3RvciwgaXMgdXNlZCBieSBldmVudExldmVsc1xuICAgKiAnZXZlbnRTZWdtZW50cygpJyB0byBhc3Npc3QgaW4gZGV0ZXJtaW5pbmcgdGhlICdzcGFuJyBvZiB0aGUgZXZlbnQgaW4gdGhlIGRpc3BsYXksXG4gICAqIHNwZWNpZmljYWxseSB3aGVuIHVzaW5nIGEgdGltZXpvbmUgdGhhdCBpcyBncmVhdGVyIHRoYW4gdGhlIGJyb3dzZXIgbmF0aXZlIHRpbWV6b25lLlxuICAgKiBAcmV0dXJucyBudW1iZXJcbiAgICovXG4gIGZ1bmN0aW9uIGJyb3dzZXJUWk9mZnNldCgpIHtcbiAgICAvKipcbiAgICAgKiBEYXRlLnByb3RvdHlwZS5nZXRUaW1lem9uZU9mZnNldCBob3JyaWZpY2FsbHkgZmxpcHMgdGhlIHBvc2l0aXZlL25lZ2F0aXZlIGZyb21cbiAgICAgKiB3aGF0IHlvdSBzZWUgaW4gaXQncyBzdHJpbmcsIHNvIHdlIGhhdmUgdG8ganVtcCB0aHJvdWdoIHNvbWUgaG9vcHMgdG8gZ2V0IGEgdmFsdWVcbiAgICAgKiB3ZSBjYW4gYWN0dWFsbHkgY29tcGFyZS5cbiAgICAgKi9cbiAgICBjb25zdCBkdCA9IG5ldyBEYXRlKClcbiAgICBjb25zdCBuZWcgPSAvLS8udGVzdChkdC50b1N0cmluZygpKSA/ICctJyA6ICcnXG4gICAgY29uc3QgZHRPZmZzZXQgPSBkdC5nZXRUaW1lem9uZU9mZnNldCgpXG4gICAgY29uc3QgY29tcGFyYXRvciA9IE51bWJlcihgJHtuZWd9JHtNYXRoLmFicyhkdE9mZnNldCl9YClcbiAgICAvLyBkYXlqcyBjb3JyZWN0bHkgcHJvdmlkZXMgcG9zaXRpdmUvbmVnYXRpdmUgb2Zmc2V0LCBhcyBleHBlY3RlZFxuICAgIGNvbnN0IG10T2Zmc2V0ID0gZGF5anMoKS51dGNPZmZzZXQoKVxuICAgIHJldHVybiBtdE9mZnNldCA+IGNvbXBhcmF0b3IgPyAxIDogMFxuICB9XG5cbiAgcmV0dXJuIG5ldyBEYXRlTG9jYWxpemVyKHtcbiAgICBmb3JtYXRzLFxuXG4gICAgZmlyc3RPZldlZWssXG4gICAgZmlyc3RWaXNpYmxlRGF5LFxuICAgIGxhc3RWaXNpYmxlRGF5LFxuICAgIHZpc2libGVEYXlzLFxuXG4gICAgZm9ybWF0KHZhbHVlLCBmb3JtYXQsIGN1bHR1cmUpIHtcbiAgICAgIHJldHVybiBsb2NhbGUoZGF5anModmFsdWUpLCBjdWx0dXJlKS5mb3JtYXQoZm9ybWF0KVxuICAgIH0sXG5cbiAgICBsdCxcbiAgICBsdGUsXG4gICAgZ3QsXG4gICAgZ3RlLFxuICAgIGVxLFxuICAgIG5lcSxcbiAgICBtZXJnZSxcbiAgICBpblJhbmdlLFxuICAgIHN0YXJ0T2YsXG4gICAgZW5kT2YsXG4gICAgcmFuZ2UsXG4gICAgYWRkLFxuICAgIGRpZmYsXG4gICAgY2VpbCxcbiAgICBtaW4sXG4gICAgbWF4LFxuICAgIG1pbnV0ZXMsXG5cbiAgICBnZXRTbG90RGF0ZSxcbiAgICBnZXRUaW1lem9uZU9mZnNldCxcbiAgICBnZXREc3RPZmZzZXQsXG4gICAgZ2V0VG90YWxNaW4sXG4gICAgZ2V0TWludXRlc0Zyb21NaWRuaWdodCxcbiAgICBjb250aW51ZXNQcmlvcixcbiAgICBjb250aW51ZXNBZnRlcixcbiAgICBzb3J0RXZlbnRzLFxuICAgIGluRXZlbnRSYW5nZSxcbiAgICBpc1NhbWVEYXRlLFxuICAgIGJyb3dzZXJUWk9mZnNldCxcbiAgfSlcbn1cbiIsImltcG9ydCBFdmVudFdyYXBwZXIgZnJvbSAnLi9FdmVudFdyYXBwZXInXG5pbXBvcnQgQmFja2dyb3VuZFdyYXBwZXIgZnJvbSAnLi9CYWNrZ3JvdW5kV3JhcHBlcidcblxuZXhwb3J0IGNvbnN0IGNvbXBvbmVudHMgPSB7XG4gIGV2ZW50V3JhcHBlcjogRXZlbnRXcmFwcGVyLFxuICB0aW1lU2xvdFdyYXBwZXI6IEJhY2tncm91bmRXcmFwcGVyLFxuICBkYXRlQ2VsbFdyYXBwZXI6IEJhY2tncm91bmRXcmFwcGVyLFxufVxuXG5leHBvcnQgeyBkZWZhdWx0IGFzIENhbGVuZGFyIH0gZnJvbSAnLi9DYWxlbmRhcidcbmV4cG9ydCB7IERhdGVMb2NhbGl6ZXIgfSBmcm9tICcuL2xvY2FsaXplcidcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi9sb2NhbGl6ZXJzL21vbWVudCdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbHV4b25Mb2NhbGl6ZXIgfSBmcm9tICcuL2xvY2FsaXplcnMvbHV4b24nXG5leHBvcnQgeyBkZWZhdWx0IGFzIGdsb2JhbGl6ZUxvY2FsaXplciB9IGZyb20gJy4vbG9jYWxpemVycy9nbG9iYWxpemUnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGRhdGVGbnNMb2NhbGl6ZXIgfSBmcm9tICcuL2xvY2FsaXplcnMvZGF0ZS1mbnMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGRheWpzTG9jYWxpemVyIH0gZnJvbSAnLi9sb2NhbGl6ZXJzL2RheWpzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBtb3ZlIH0gZnJvbSAnLi91dGlscy9tb3ZlJ1xuZXhwb3J0IHsgdmlld3MgYXMgVmlld3MsIG5hdmlnYXRlIGFzIE5hdmlnYXRlIH0gZnJvbSAnLi91dGlscy9jb25zdGFudHMnXG4iLCIvKipcbiAqIFJldHJpZXZlIHZpYSBhbiBhY2Nlc3Nvci1saWtlIHByb3BlcnR5XG4gKlxuICogICAgYWNjZXNzb3Iob2JqLCAnbmFtZScpICAgLy8gPT4gcmV0cmlldmVzIG9ialsnbmFtZSddXG4gKiAgICBhY2Nlc3NvcihkYXRhLCBmdW5jKSAgICAvLyA9PiByZXRyaWV2ZXMgZnVuYyhkYXRhKVxuICogICAgLi4uIG90aGVyd2lzZSBudWxsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhY2Nlc3NvcihkYXRhLCBmaWVsZCkge1xuICB2YXIgdmFsdWUgPSBudWxsXG5cbiAgaWYgKHR5cGVvZiBmaWVsZCA9PT0gJ2Z1bmN0aW9uJykgdmFsdWUgPSBmaWVsZChkYXRhKVxuICBlbHNlIGlmIChcbiAgICB0eXBlb2YgZmllbGQgPT09ICdzdHJpbmcnICYmXG4gICAgdHlwZW9mIGRhdGEgPT09ICdvYmplY3QnICYmXG4gICAgZGF0YSAhPSBudWxsICYmXG4gICAgZmllbGQgaW4gZGF0YVxuICApXG4gICAgdmFsdWUgPSBkYXRhW2ZpZWxkXVxuXG4gIHJldHVybiB2YWx1ZVxufVxuXG5leHBvcnQgY29uc3Qgd3JhcEFjY2Vzc29yID0gKGFjYykgPT4gKGRhdGEpID0+IGFjY2Vzc29yKGRhdGEsIGFjYylcbiIsImV4cG9ydCBsZXQgbmF2aWdhdGUgPSB7XG4gIFBSRVZJT1VTOiAnUFJFVicsXG4gIE5FWFQ6ICdORVhUJyxcbiAgVE9EQVk6ICdUT0RBWScsXG4gIERBVEU6ICdEQVRFJyxcbn1cblxuZXhwb3J0IGxldCB2aWV3cyA9IHtcbiAgTU9OVEg6ICdtb250aCcsXG4gIFdFRUs6ICd3ZWVrJyxcbiAgV09SS19XRUVLOiAnd29ya193ZWVrJyxcbiAgREFZOiAnZGF5JyxcbiAgQUdFTkRBOiAnYWdlbmRhJyxcbn1cbiIsIi8qIGVzbGludCBuby1mYWxsdGhyb3VnaDogb2ZmICovXG5pbXBvcnQgKiBhcyBkYXRlcyBmcm9tICdkYXRlLWFyaXRobWV0aWMnXG5cbmV4cG9ydCB7XG4gIG1pbGxpc2Vjb25kcyxcbiAgc2Vjb25kcyxcbiAgbWludXRlcyxcbiAgaG91cnMsXG4gIG1vbnRoLFxuICBzdGFydE9mLFxuICBlbmRPZixcbiAgYWRkLFxuICBlcSxcbiAgbmVxLFxuICBndGUsXG4gIGd0LFxuICBsdGUsXG4gIGx0LFxuICBpblJhbmdlLFxuICBtaW4sXG4gIG1heCxcbn0gZnJvbSAnZGF0ZS1hcml0aG1ldGljJ1xuXG5jb25zdCBNSUxMSSA9IHtcbiAgc2Vjb25kczogMTAwMCxcbiAgbWludXRlczogMTAwMCAqIDYwLFxuICBob3VyczogMTAwMCAqIDYwICogNjAsXG4gIGRheTogMTAwMCAqIDYwICogNjAgKiAyNCxcbn1cblxuY29uc3QgTU9OVEhTID0gWzAsIDEsIDIsIDMsIDQsIDUsIDYsIDcsIDgsIDksIDEwLCAxMV1cblxuZXhwb3J0IGZ1bmN0aW9uIG1vbnRoc0luWWVhcih5ZWFyKSB7XG4gIGxldCBkYXRlID0gbmV3IERhdGUoeWVhciwgMCwgMSlcblxuICByZXR1cm4gTU9OVEhTLm1hcCgoaSkgPT4gZGF0ZXMubW9udGgoZGF0ZSwgaSkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaXJzdFZpc2libGVEYXkoZGF0ZSwgbG9jYWxpemVyKSB7XG4gIGxldCBmaXJzdE9mTW9udGggPSBkYXRlcy5zdGFydE9mKGRhdGUsICdtb250aCcpXG5cbiAgcmV0dXJuIGRhdGVzLnN0YXJ0T2YoZmlyc3RPZk1vbnRoLCAnd2VlaycsIGxvY2FsaXplci5zdGFydE9mV2VlaygpKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbGFzdFZpc2libGVEYXkoZGF0ZSwgbG9jYWxpemVyKSB7XG4gIGxldCBlbmRPZk1vbnRoID0gZGF0ZXMuZW5kT2YoZGF0ZSwgJ21vbnRoJylcblxuICByZXR1cm4gZGF0ZXMuZW5kT2YoZW5kT2ZNb250aCwgJ3dlZWsnLCBsb2NhbGl6ZXIuc3RhcnRPZldlZWsoKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHZpc2libGVEYXlzKGRhdGUsIGxvY2FsaXplcikge1xuICBsZXQgY3VycmVudCA9IGZpcnN0VmlzaWJsZURheShkYXRlLCBsb2NhbGl6ZXIpLFxuICAgIGxhc3QgPSBsYXN0VmlzaWJsZURheShkYXRlLCBsb2NhbGl6ZXIpLFxuICAgIGRheXMgPSBbXVxuXG4gIHdoaWxlIChkYXRlcy5sdGUoY3VycmVudCwgbGFzdCwgJ2RheScpKSB7XG4gICAgZGF5cy5wdXNoKGN1cnJlbnQpXG4gICAgY3VycmVudCA9IGRhdGVzLmFkZChjdXJyZW50LCAxLCAnZGF5JylcbiAgfVxuXG4gIHJldHVybiBkYXlzXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjZWlsKGRhdGUsIHVuaXQpIHtcbiAgbGV0IGZsb29yID0gZGF0ZXMuc3RhcnRPZihkYXRlLCB1bml0KVxuXG4gIHJldHVybiBkYXRlcy5lcShmbG9vciwgZGF0ZSkgPyBmbG9vciA6IGRhdGVzLmFkZChmbG9vciwgMSwgdW5pdClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJhbmdlKHN0YXJ0LCBlbmQsIHVuaXQgPSAnZGF5Jykge1xuICBsZXQgY3VycmVudCA9IHN0YXJ0LFxuICAgIGRheXMgPSBbXVxuXG4gIHdoaWxlIChkYXRlcy5sdGUoY3VycmVudCwgZW5kLCB1bml0KSkge1xuICAgIGRheXMucHVzaChjdXJyZW50KVxuICAgIGN1cnJlbnQgPSBkYXRlcy5hZGQoY3VycmVudCwgMSwgdW5pdClcbiAgfVxuXG4gIHJldHVybiBkYXlzXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZShkYXRlLCB0aW1lKSB7XG4gIGlmICh0aW1lID09IG51bGwgJiYgZGF0ZSA9PSBudWxsKSByZXR1cm4gbnVsbFxuXG4gIGlmICh0aW1lID09IG51bGwpIHRpbWUgPSBuZXcgRGF0ZSgpXG4gIGlmIChkYXRlID09IG51bGwpIGRhdGUgPSBuZXcgRGF0ZSgpXG5cbiAgZGF0ZSA9IGRhdGVzLnN0YXJ0T2YoZGF0ZSwgJ2RheScpXG4gIGRhdGUgPSBkYXRlcy5ob3VycyhkYXRlLCBkYXRlcy5ob3Vycyh0aW1lKSlcbiAgZGF0ZSA9IGRhdGVzLm1pbnV0ZXMoZGF0ZSwgZGF0ZXMubWludXRlcyh0aW1lKSlcbiAgZGF0ZSA9IGRhdGVzLnNlY29uZHMoZGF0ZSwgZGF0ZXMuc2Vjb25kcyh0aW1lKSlcbiAgcmV0dXJuIGRhdGVzLm1pbGxpc2Vjb25kcyhkYXRlLCBkYXRlcy5taWxsaXNlY29uZHModGltZSkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlcVRpbWUoZGF0ZUEsIGRhdGVCKSB7XG4gIHJldHVybiAoXG4gICAgZGF0ZXMuaG91cnMoZGF0ZUEpID09PSBkYXRlcy5ob3VycyhkYXRlQikgJiZcbiAgICBkYXRlcy5taW51dGVzKGRhdGVBKSA9PT0gZGF0ZXMubWludXRlcyhkYXRlQikgJiZcbiAgICBkYXRlcy5zZWNvbmRzKGRhdGVBKSA9PT0gZGF0ZXMuc2Vjb25kcyhkYXRlQilcbiAgKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNKdXN0RGF0ZShkYXRlKSB7XG4gIHJldHVybiAoXG4gICAgZGF0ZXMuaG91cnMoZGF0ZSkgPT09IDAgJiZcbiAgICBkYXRlcy5taW51dGVzKGRhdGUpID09PSAwICYmXG4gICAgZGF0ZXMuc2Vjb25kcyhkYXRlKSA9PT0gMCAmJlxuICAgIGRhdGVzLm1pbGxpc2Vjb25kcyhkYXRlKSA9PT0gMFxuICApXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkdXJhdGlvbihzdGFydCwgZW5kLCB1bml0LCBmaXJzdE9mV2Vlaykge1xuICBpZiAodW5pdCA9PT0gJ2RheScpIHVuaXQgPSAnZGF0ZSdcbiAgcmV0dXJuIE1hdGguYWJzKFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbmFtZXNwYWNlXG4gICAgZGF0ZXNbdW5pdF0oc3RhcnQsIHVuZGVmaW5lZCwgZmlyc3RPZldlZWspIC1cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbmFtZXNwYWNlXG4gICAgICBkYXRlc1t1bml0XShlbmQsIHVuZGVmaW5lZCwgZmlyc3RPZldlZWspXG4gIClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpZmYoZGF0ZUEsIGRhdGVCLCB1bml0KSB7XG4gIGlmICghdW5pdCB8fCB1bml0ID09PSAnbWlsbGlzZWNvbmRzJykgcmV0dXJuIE1hdGguYWJzKCtkYXRlQSAtICtkYXRlQilcblxuICAvLyB0aGUgLnJvdW5kKCkgaGFuZGxlcyBhbiBlZGdlIGNhc2VcbiAgLy8gd2l0aCBEU1Qgd2hlcmUgdGhlIHRvdGFsIHdvbid0IGJlIGV4YWN0XG4gIC8vIHNpbmNlIG9uZSBkYXkgaW4gdGhlIHJhbmdlIG1heSBiZSBzaG9ydGVyL2xvbmdlciBieSBhbiBob3VyXG4gIHJldHVybiBNYXRoLnJvdW5kKFxuICAgIE1hdGguYWJzKFxuICAgICAgK2RhdGVzLnN0YXJ0T2YoZGF0ZUEsIHVuaXQpIC8gTUlMTElbdW5pdF0gLVxuICAgICAgICArZGF0ZXMuc3RhcnRPZihkYXRlQiwgdW5pdCkgLyBNSUxMSVt1bml0XVxuICAgIClcbiAgKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdG90YWwoZGF0ZSwgdW5pdCkge1xuICBsZXQgbXMgPSBkYXRlLmdldFRpbWUoKSxcbiAgICBkaXYgPSAxXG5cbiAgc3dpdGNoICh1bml0KSB7XG4gICAgY2FzZSAnd2Vlayc6XG4gICAgICBkaXYgKj0gN1xuICAgIGNhc2UgJ2RheSc6XG4gICAgICBkaXYgKj0gMjRcbiAgICBjYXNlICdob3Vycyc6XG4gICAgICBkaXYgKj0gNjBcbiAgICBjYXNlICdtaW51dGVzJzpcbiAgICAgIGRpdiAqPSA2MFxuICAgIGNhc2UgJ3NlY29uZHMnOlxuICAgICAgZGl2ICo9IDEwMDBcbiAgfVxuXG4gIHJldHVybiBtcyAvIGRpdlxufVxuXG5leHBvcnQgZnVuY3Rpb24gd2VlayhkYXRlKSB7XG4gIHZhciBkID0gbmV3IERhdGUoZGF0ZSlcbiAgZC5zZXRIb3VycygwLCAwLCAwKVxuICBkLnNldERhdGUoZC5nZXREYXRlKCkgKyA0IC0gKGQuZ2V0RGF5KCkgfHwgNykpXG4gIHJldHVybiBNYXRoLmNlaWwoKChkIC0gbmV3IERhdGUoZC5nZXRGdWxsWWVhcigpLCAwLCAxKSkgLyA4LjY0ZTcgKyAxKSAvIDcpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b2RheSgpIHtcbiAgcmV0dXJuIGRhdGVzLnN0YXJ0T2YobmV3IERhdGUoKSwgJ2RheScpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB5ZXN0ZXJkYXkoKSB7XG4gIHJldHVybiBkYXRlcy5hZGQoZGF0ZXMuc3RhcnRPZihuZXcgRGF0ZSgpLCAnZGF5JyksIC0xLCAnZGF5Jylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRvbW9ycm93KCkge1xuICByZXR1cm4gZGF0ZXMuYWRkKGRhdGVzLnN0YXJ0T2YobmV3IERhdGUoKSwgJ2RheScpLCAxLCAnZGF5Jylcbn1cbiIsImltcG9ydCBmaW5kSW5kZXggZnJvbSAnbG9kYXNoL2ZpbmRJbmRleCdcblxuZXhwb3J0IGZ1bmN0aW9uIGVuZE9mUmFuZ2UoeyBkYXRlUmFuZ2UsIHVuaXQgPSAnZGF5JywgbG9jYWxpemVyIH0pIHtcbiAgcmV0dXJuIHtcbiAgICBmaXJzdDogZGF0ZVJhbmdlWzBdLFxuICAgIGxhc3Q6IGxvY2FsaXplci5hZGQoZGF0ZVJhbmdlW2RhdGVSYW5nZS5sZW5ndGggLSAxXSwgMSwgdW5pdCksXG4gIH1cbn1cblxuLy8gcHJvcGVybHkgY2FsY3VsYXRpbmcgc2VnbWVudHMgcmVxdWlyZXMgd29ya2luZyB3aXRoIGRhdGVzIGluXG4vLyB0aGUgdGltZXpvbmUgd2UncmUgd29ya2luZyB3aXRoLCBzbyB3ZSB1c2UgdGhlIGxvY2FsaXplclxuZXhwb3J0IGZ1bmN0aW9uIGV2ZW50U2VnbWVudHMoZXZlbnQsIHJhbmdlLCBhY2Nlc3NvcnMsIGxvY2FsaXplcikge1xuICBsZXQgeyBmaXJzdCwgbGFzdCB9ID0gZW5kT2ZSYW5nZSh7IGRhdGVSYW5nZTogcmFuZ2UsIGxvY2FsaXplciB9KVxuXG4gIGxldCBzbG90cyA9IGxvY2FsaXplci5kaWZmKGZpcnN0LCBsYXN0LCAnZGF5JylcbiAgbGV0IHN0YXJ0ID0gbG9jYWxpemVyLm1heChcbiAgICBsb2NhbGl6ZXIuc3RhcnRPZihhY2Nlc3NvcnMuc3RhcnQoZXZlbnQpLCAnZGF5JyksXG4gICAgZmlyc3RcbiAgKVxuICBsZXQgZW5kID0gbG9jYWxpemVyLm1pbihsb2NhbGl6ZXIuY2VpbChhY2Nlc3NvcnMuZW5kKGV2ZW50KSwgJ2RheScpLCBsYXN0KVxuXG4gIGxldCBwYWRkaW5nID0gZmluZEluZGV4KHJhbmdlLCAoeCkgPT4gbG9jYWxpemVyLmlzU2FtZURhdGUoeCwgc3RhcnQpKVxuICBsZXQgc3BhbiA9IGxvY2FsaXplci5kaWZmKHN0YXJ0LCBlbmQsICdkYXknKVxuXG4gIHNwYW4gPSBNYXRoLm1pbihzcGFuLCBzbG90cylcbiAgLy8gVGhlIHNlZ21lbnRPZmZzZXQgaXMgbmVjZXNzYXJ5IHdoZW4gYWRqdXN0aW5nIGZvciB0aW1lem9uZXNcbiAgLy8gYWhlYWQgb2YgdGhlIGJyb3dzZXIgdGltZXpvbmVcbiAgc3BhbiA9IE1hdGgubWF4KHNwYW4gLSBsb2NhbGl6ZXIuc2VnbWVudE9mZnNldCwgMSlcblxuICByZXR1cm4ge1xuICAgIGV2ZW50LFxuICAgIHNwYW4sXG4gICAgbGVmdDogcGFkZGluZyArIDEsXG4gICAgcmlnaHQ6IE1hdGgubWF4KHBhZGRpbmcgKyBzcGFuLCAxKSxcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZXZlbnRMZXZlbHMocm93U2VnbWVudHMsIGxpbWl0ID0gSW5maW5pdHkpIHtcbiAgbGV0IGksXG4gICAgaixcbiAgICBzZWcsXG4gICAgbGV2ZWxzID0gW10sXG4gICAgZXh0cmEgPSBbXVxuXG4gIGZvciAoaSA9IDA7IGkgPCByb3dTZWdtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHNlZyA9IHJvd1NlZ21lbnRzW2ldXG5cbiAgICBmb3IgKGogPSAwOyBqIDwgbGV2ZWxzLmxlbmd0aDsgaisrKSBpZiAoIXNlZ3NPdmVybGFwKHNlZywgbGV2ZWxzW2pdKSkgYnJlYWtcblxuICAgIGlmIChqID49IGxpbWl0KSB7XG4gICAgICBleHRyYS5wdXNoKHNlZylcbiAgICB9IGVsc2Uge1xuICAgICAgOyhsZXZlbHNbal0gfHwgKGxldmVsc1tqXSA9IFtdKSkucHVzaChzZWcpXG4gICAgfVxuICB9XG5cbiAgZm9yIChpID0gMDsgaSA8IGxldmVscy5sZW5ndGg7IGkrKykge1xuICAgIGxldmVsc1tpXS5zb3J0KChhLCBiKSA9PiBhLmxlZnQgLSBiLmxlZnQpIC8vZXNsaW50LWRpc2FibGUtbGluZVxuICB9XG5cbiAgcmV0dXJuIHsgbGV2ZWxzLCBleHRyYSB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpblJhbmdlKGUsIHN0YXJ0LCBlbmQsIGFjY2Vzc29ycywgbG9jYWxpemVyKSB7XG4gIGNvbnN0IGV2ZW50ID0ge1xuICAgIHN0YXJ0OiBhY2Nlc3NvcnMuc3RhcnQoZSksXG4gICAgZW5kOiBhY2Nlc3NvcnMuZW5kKGUpLFxuICB9XG4gIGNvbnN0IHJhbmdlID0geyBzdGFydCwgZW5kIH1cbiAgcmV0dXJuIGxvY2FsaXplci5pbkV2ZW50UmFuZ2UoeyBldmVudCwgcmFuZ2UgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlZ3NPdmVybGFwKHNlZywgb3RoZXJTZWdzKSB7XG4gIHJldHVybiBvdGhlclNlZ3Muc29tZShcbiAgICAob3RoZXJTZWcpID0+IG90aGVyU2VnLmxlZnQgPD0gc2VnLnJpZ2h0ICYmIG90aGVyU2VnLnJpZ2h0ID49IHNlZy5sZWZ0XG4gIClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRXZWVrRXZlbnRzKGV2ZW50cywgYWNjZXNzb3JzLCBsb2NhbGl6ZXIpIHtcbiAgY29uc3QgYmFzZSA9IFsuLi5ldmVudHNdXG4gIGNvbnN0IG11bHRpRGF5RXZlbnRzID0gW11cbiAgY29uc3Qgc3RhbmRhcmRFdmVudHMgPSBbXVxuICBiYXNlLmZvckVhY2goKGV2ZW50KSA9PiB7XG4gICAgY29uc3Qgc3RhcnRDaGVjayA9IGFjY2Vzc29ycy5zdGFydChldmVudClcbiAgICBjb25zdCBlbmRDaGVjayA9IGFjY2Vzc29ycy5lbmQoZXZlbnQpXG4gICAgaWYgKGxvY2FsaXplci5kYXlTcGFuKHN0YXJ0Q2hlY2ssIGVuZENoZWNrKSA+IDEpIHtcbiAgICAgIG11bHRpRGF5RXZlbnRzLnB1c2goZXZlbnQpXG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YW5kYXJkRXZlbnRzLnB1c2goZXZlbnQpXG4gICAgfVxuICB9KVxuICBjb25zdCBtdWx0aVNvcnRlZCA9IG11bHRpRGF5RXZlbnRzLnNvcnQoKGEsIGIpID0+XG4gICAgc29ydEV2ZW50cyhhLCBiLCBhY2Nlc3NvcnMsIGxvY2FsaXplcilcbiAgKVxuICBjb25zdCBzdGFuZGFyZFNvcnRlZCA9IHN0YW5kYXJkRXZlbnRzLnNvcnQoKGEsIGIpID0+XG4gICAgc29ydEV2ZW50cyhhLCBiLCBhY2Nlc3NvcnMsIGxvY2FsaXplcilcbiAgKVxuICByZXR1cm4gWy4uLm11bHRpU29ydGVkLCAuLi5zdGFuZGFyZFNvcnRlZF1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRFdmVudHMoZXZlbnRBLCBldmVudEIsIGFjY2Vzc29ycywgbG9jYWxpemVyKSB7XG4gIGNvbnN0IGV2dEEgPSB7XG4gICAgc3RhcnQ6IGFjY2Vzc29ycy5zdGFydChldmVudEEpLFxuICAgIGVuZDogYWNjZXNzb3JzLmVuZChldmVudEEpLFxuICAgIGFsbERheTogYWNjZXNzb3JzLmFsbERheShldmVudEEpLFxuICB9XG4gIGNvbnN0IGV2dEIgPSB7XG4gICAgc3RhcnQ6IGFjY2Vzc29ycy5zdGFydChldmVudEIpLFxuICAgIGVuZDogYWNjZXNzb3JzLmVuZChldmVudEIpLFxuICAgIGFsbERheTogYWNjZXNzb3JzLmFsbERheShldmVudEIpLFxuICB9XG4gIHJldHVybiBsb2NhbGl6ZXIuc29ydEV2ZW50cyh7IGV2dEEsIGV2dEIgfSlcbn1cbiIsInZhciBpZENvdW50ID0gMFxuXG5mdW5jdGlvbiB1bmlxdWVJZChwcmVmaXgpIHtcbiAgcmV0dXJuICcnICsgKChwcmVmaXggPT0gbnVsbCA/ICcnIDogcHJlZml4KSArICsraWRDb3VudClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG5vdGlmeShoYW5kbGVyLCBhcmdzKSB7XG4gIGhhbmRsZXIgJiYgaGFuZGxlci5hcHBseShudWxsLCBbXS5jb25jYXQoYXJncykpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnN0YW5jZUlkKGNvbXBvbmVudCwgc3VmZml4ID0gJycpIHtcbiAgY29tcG9uZW50Ll9faWQgfHwgKGNvbXBvbmVudC5fX2lkID0gdW5pcXVlSWQoJ3J3XycpKVxuICByZXR1cm4gKGNvbXBvbmVudC5wcm9wcy5pZCB8fCBjb21wb25lbnQuX19pZCkgKyBzdWZmaXhcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRmlyc3RGb2N1c2VkUmVuZGVyKGNvbXBvbmVudCkge1xuICByZXR1cm4gKFxuICAgIGNvbXBvbmVudC5fZmlyc3RGb2N1cyB8fFxuICAgIChjb21wb25lbnQuc3RhdGUuZm9jdXNlZCAmJiAoY29tcG9uZW50Ll9maXJzdEZvY3VzID0gdHJ1ZSkpXG4gIClcbn1cbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IHZpZXdzIGFzIFZpZXdzIH0gZnJvbSAnLi9jb25zdGFudHMnXG5cbmxldCB2aWV3TmFtZXMgPSBPYmplY3Qua2V5cyhWaWV3cykubWFwKChrKSA9PiBWaWV3c1trXSlcblxuZXhwb3J0IGxldCBhY2Nlc3NvciA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jXSlcblxuZXhwb3J0IGxldCBkYXRlRm9ybWF0ID0gUHJvcFR5cGVzLmFueVxuXG5leHBvcnQgbGV0IGRhdGVSYW5nZUZvcm1hdCA9IFByb3BUeXBlcy5mdW5jXG5cbi8qKlxuICogYWNjZXB0cyBlaXRoZXIgYW4gYXJyYXkgb2YgYnVpbHRpbiB2aWV3IG5hbWVzOlxuICpcbiAqIGBgYFxuICogdmlld3M9e1snbW9udGgnLCAnZGF5JywgJ2FnZW5kYSddfVxuICogYGBgXG4gKlxuICogb3IgYW4gb2JqZWN0IGhhc2ggb2YgdGhlIHZpZXcgbmFtZSBhbmQgdGhlIGNvbXBvbmVudCAob3IgYm9vbGVhbiBmb3IgYnVpbHRpbilcbiAqXG4gKiBgYGBcbiAqIHZpZXdzPXt7XG4gKiAgIG1vbnRoOiB0cnVlLFxuICogICB3ZWVrOiBmYWxzZSxcbiAqICAgd29ya3dlZWs6IFdvcmtXZWVrVmlld0NvbXBvbmVudCxcbiAqIH19XG4gKiBgYGBcbiAqL1xuXG5leHBvcnQgbGV0IHZpZXdzID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vbmVPZih2aWV3TmFtZXMpKSxcbiAgUHJvcFR5cGVzLm9iamVjdE9mKChwcm9wLCBrZXksIC4uLmFyZ3MpID0+IHtcbiAgICBsZXQgaXNCdWlsdGluVmlldyA9XG4gICAgICB2aWV3TmFtZXMuaW5kZXhPZihrZXkpICE9PSAtMSAmJiB0eXBlb2YgcHJvcFtrZXldID09PSAnYm9vbGVhbidcbiAgICBpZiAoaXNCdWlsdGluVmlldykge1xuICAgICAgcmV0dXJuIG51bGxcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIFByb3BUeXBlcy5lbGVtZW50VHlwZShwcm9wLCBrZXksIC4uLmFyZ3MpXG4gICAgfVxuICB9KSxcbl0pXG5cbmV4cG9ydCBjb25zdCBEYXlMYXlvdXRBbGdvcml0aG1Qcm9wVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICBQcm9wVHlwZXMub25lT2YoWydvdmVybGFwJywgJ25vLW92ZXJsYXAnXSksXG4gIFByb3BUeXBlcy5mdW5jLFxuXSlcbiIsImltcG9ydCBpc0VxdWFsIGZyb20gJ2xvZGFzaC9pc0VxdWFsJ1xuXG5leHBvcnQgZnVuY3Rpb24gaXNTZWxlY3RlZChldmVudCwgc2VsZWN0ZWQpIHtcbiAgaWYgKCFldmVudCB8fCBzZWxlY3RlZCA9PSBudWxsKSByZXR1cm4gZmFsc2VcbiAgcmV0dXJuIGlzRXF1YWwoZXZlbnQsIHNlbGVjdGVkKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2xvdFdpZHRoKHJvd0JveCwgc2xvdHMpIHtcbiAgbGV0IHJvd1dpZHRoID0gcm93Qm94LnJpZ2h0IC0gcm93Qm94LmxlZnRcbiAgbGV0IGNlbGxXaWR0aCA9IHJvd1dpZHRoIC8gc2xvdHNcblxuICByZXR1cm4gY2VsbFdpZHRoXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTbG90QXRYKHJvd0JveCwgeCwgcnRsLCBzbG90cykge1xuICBjb25zdCBjZWxsV2lkdGggPSBzbG90V2lkdGgocm93Qm94LCBzbG90cylcbiAgcmV0dXJuIHJ0bFxuICAgID8gc2xvdHMgLSAxIC0gTWF0aC5mbG9vcigoeCAtIHJvd0JveC5sZWZ0KSAvIGNlbGxXaWR0aClcbiAgICA6IE1hdGguZmxvb3IoKHggLSByb3dCb3gubGVmdCkgLyBjZWxsV2lkdGgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwb2ludEluQm94KGJveCwgeyB4LCB5IH0pIHtcbiAgcmV0dXJuIHkgPj0gYm94LnRvcCAmJiB5IDw9IGJveC5ib3R0b20gJiYgeCA+PSBib3gubGVmdCAmJiB4IDw9IGJveC5yaWdodFxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGF0ZUNlbGxTZWxlY3Rpb24oc3RhcnQsIHJvd0JveCwgYm94LCBzbG90cywgcnRsKSB7XG4gIGxldCBzdGFydElkeCA9IC0xXG4gIGxldCBlbmRJZHggPSAtMVxuICBsZXQgbGFzdFNsb3RJZHggPSBzbG90cyAtIDFcblxuICBsZXQgY2VsbFdpZHRoID0gc2xvdFdpZHRoKHJvd0JveCwgc2xvdHMpXG5cbiAgLy8gY2VsbCB1bmRlciB0aGUgbW91c2VcbiAgbGV0IGN1cnJlbnRTbG90ID0gZ2V0U2xvdEF0WChyb3dCb3gsIGJveC54LCBydGwsIHNsb3RzKVxuXG4gIC8vIElkZW50aWZ5IHJvdyBhcyBlaXRoZXIgdGhlIGluaXRpYWwgcm93XG4gIC8vIG9yIHRoZSByb3cgdW5kZXIgdGhlIGN1cnJlbnQgbW91c2UgcG9pbnRcbiAgbGV0IGlzQ3VycmVudFJvdyA9IHJvd0JveC50b3AgPCBib3gueSAmJiByb3dCb3guYm90dG9tID4gYm94LnlcbiAgbGV0IGlzU3RhcnRSb3cgPSByb3dCb3gudG9wIDwgc3RhcnQueSAmJiByb3dCb3guYm90dG9tID4gc3RhcnQueVxuXG4gIC8vIHRoaXMgcm93J3MgcG9zaXRpb24gcmVsYXRpdmUgdG8gdGhlIHN0YXJ0IHBvaW50XG4gIGxldCBpc0Fib3ZlU3RhcnQgPSBzdGFydC55ID4gcm93Qm94LmJvdHRvbVxuICBsZXQgaXNCZWxvd1N0YXJ0ID0gcm93Qm94LnRvcCA+IHN0YXJ0LnlcbiAgbGV0IGlzQmV0d2VlbiA9IGJveC50b3AgPCByb3dCb3gudG9wICYmIGJveC5ib3R0b20gPiByb3dCb3guYm90dG9tXG5cbiAgLy8gdGhpcyByb3cgaXMgYmV0d2VlbiB0aGUgY3VycmVudCBhbmQgc3RhcnQgcm93cywgc28gZW50aXJlbHkgc2VsZWN0ZWRcbiAgaWYgKGlzQmV0d2Vlbikge1xuICAgIHN0YXJ0SWR4ID0gMFxuICAgIGVuZElkeCA9IGxhc3RTbG90SWR4XG4gIH1cblxuICBpZiAoaXNDdXJyZW50Um93KSB7XG4gICAgaWYgKGlzQmVsb3dTdGFydCkge1xuICAgICAgc3RhcnRJZHggPSAwXG4gICAgICBlbmRJZHggPSBjdXJyZW50U2xvdFxuICAgIH0gZWxzZSBpZiAoaXNBYm92ZVN0YXJ0KSB7XG4gICAgICBzdGFydElkeCA9IGN1cnJlbnRTbG90XG4gICAgICBlbmRJZHggPSBsYXN0U2xvdElkeFxuICAgIH1cbiAgfVxuXG4gIGlmIChpc1N0YXJ0Um93KSB7XG4gICAgLy8gc2VsZWN0IHRoZSBjZWxsIHVuZGVyIHRoZSBpbml0aWFsIHBvaW50XG4gICAgc3RhcnRJZHggPSBlbmRJZHggPSBydGxcbiAgICAgID8gbGFzdFNsb3RJZHggLSBNYXRoLmZsb29yKChzdGFydC54IC0gcm93Qm94LmxlZnQpIC8gY2VsbFdpZHRoKVxuICAgICAgOiBNYXRoLmZsb29yKChzdGFydC54IC0gcm93Qm94LmxlZnQpIC8gY2VsbFdpZHRoKVxuXG4gICAgaWYgKGlzQ3VycmVudFJvdykge1xuICAgICAgaWYgKGN1cnJlbnRTbG90IDwgc3RhcnRJZHgpIHN0YXJ0SWR4ID0gY3VycmVudFNsb3RcbiAgICAgIGVsc2UgZW5kSWR4ID0gY3VycmVudFNsb3QgLy9zZWxlY3QgY3VycmVudCByYW5nZVxuICAgIH0gZWxzZSBpZiAoc3RhcnQueSA8IGJveC55KSB7XG4gICAgICAvLyB0aGUgY3VycmVudCByb3cgaXMgYmVsb3cgc3RhcnQgcm93XG4gICAgICAvLyBzZWxlY3QgY2VsbHMgdG8gdGhlIHJpZ2h0IG9mIHRoZSBzdGFydCBjZWxsXG4gICAgICBlbmRJZHggPSBsYXN0U2xvdElkeFxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBzZWxlY3QgY2VsbHMgdG8gdGhlIGxlZnQgb2YgdGhlIHN0YXJ0IGNlbGxcbiAgICAgIHN0YXJ0SWR4ID0gMFxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7IHN0YXJ0SWR4LCBlbmRJZHggfVxufVxuIiwiaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50IH0gZnJvbSAncmVhY3QnXG5cbmNvbnN0IGxpbmtCYXNlID1cbiAgJ2h0dHBzOi8vZ2l0aHViLmNvbS9qcXVlbnNlL3JlYWN0LWJpZy1jYWxlbmRhci9ibG9iL21hc3Rlci9zdG9yaWVzL2RlbW9zL2V4YW1wbGVDb2RlLydcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRGVtb0xpbmsoeyBmaWxlTmFtZSwgY2hpbGRyZW4gfSkge1xuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAxMCB9fT5cbiAgICAgICAgPGEgdGFyZ2V0PVwiX2JsYW5rXCIgaHJlZj17YCR7bGlua0Jhc2V9JHtmaWxlTmFtZX0uanNgfT5cbiAgICAgICAgICAmbHQ7XFwmZ3Q7IFZpZXcgRXhhbXBsZSBTb3VyY2UgQ29kZVxuICAgICAgICA8L2E+XG4gICAgICA8L2Rpdj5cbiAgICAgIHtjaGlsZHJlbiA/IDxkaXYgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAxMCB9fT57Y2hpbGRyZW59PC9kaXY+IDogbnVsbH1cbiAgICA8L0ZyYWdtZW50PlxuICApXG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgTGF5b3V0IGZyb20gJ3JlYWN0LXRhY2tsZS1ib3gvTGF5b3V0J1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5pbXBvcnQgJ21vbWVudC10aW1lem9uZSdcblxuY29uc3QgYWxsWm9uZXMgPSBtb21lbnQudHoubmFtZXMoKVxuYWxsWm9uZXMudW5zaGlmdCgnY2xlYXInKVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUaW1lem9uZVNlbGVjdCh7XG4gIHRpdGxlLFxuICBkZWZhdWx0VFogPSBtb21lbnQudHouZ3Vlc3MoKSxcbiAgdGltZXpvbmUsXG4gIHNldFRpbWV6b25lLFxufSkge1xuICBjb25zdCBvbkNoYW5nZSA9ICh7IHRhcmdldDogeyB2YWx1ZSB9IH0pID0+XG4gICAgc2V0VGltZXpvbmUodmFsdWUgPyB2YWx1ZSA6IGRlZmF1bHRUWilcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8TGF5b3V0IGRpcmVjdGlvbj1cImNvbHVtblwiIGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgIHt0aXRsZSA/IDxzdHJvbmcgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAxMCB9fT57dGl0bGV9PC9zdHJvbmc+IDogbnVsbH1cbiAgICAgICAgPGxhYmVsPlNlbGVjdCBhIFRpbWV6b25lPC9sYWJlbD57JyAnfVxuICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICBzdHlsZT17eyB3aWR0aDogMjAwLCBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyB9fVxuICAgICAgICAgIHZhbHVlPXt0aW1lem9uZX1cbiAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XG4gICAgICAgID5cbiAgICAgICAgICB7YWxsWm9uZXMubWFwKChjLCBpZHgpID0+IChcbiAgICAgICAgICAgIDxvcHRpb24ga2V5PXtpZHh9IHZhbHVlPXtjICE9PSAnY2xlYXInID8gYyA6ICcnfT5cbiAgICAgICAgICAgICAge2N9XG4gICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9zZWxlY3Q+XG4gICAgICA8L0xheW91dD5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5UaW1lem9uZVNlbGVjdC5wcm9wVHlwZXMgPSB7XG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBkZWZhdWx0VFo6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHRpbWV6b25lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzZXRUaW1lem9uZTogUHJvcFR5cGVzLmZ1bmMsXG59XG4iLCJpbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHtcbiAgQ2FsZW5kYXIsXG4gIFZpZXdzLFxuICBEYXRlTG9jYWxpemVyLFxuICBtb21lbnRMb2NhbGl6ZXIsXG59IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCBEZW1vTGluayBmcm9tICcuLi8uLi9EZW1vTGluay5jb21wb25lbnQnXG5pbXBvcnQgZXZlbnRzIGZyb20gJy4uLy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgKiBhcyBkYXRlcyBmcm9tICcuLi8uLi8uLi9zcmMvdXRpbHMvZGF0ZXMnXG5cbmNvbnN0IG1Mb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5jb25zdCBDb2xvcmVkRGF0ZUNlbGxXcmFwcGVyID0gKHsgY2hpbGRyZW4gfSkgPT5cbiAgUmVhY3QuY2xvbmVFbGVtZW50KFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pLCB7XG4gICAgc3R5bGU6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ2xpZ2h0Ymx1ZScsXG4gICAgfSxcbiAgfSlcblxuLyoqXG4gKiBXZSBhcmUgZGVmYXVsdGluZyB0aGUgbG9jYWxpemVyIGhlcmUgYmVjYXVzZSB3ZSBhcmUgdXNpbmcgdGhpcyBzYW1lXG4gKiBleGFtcGxlIG9uIHRoZSBtYWluICdBYm91dCcgcGFnZSBpbiBTdG9yeWJvb2tcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmFzaWMoe1xuICBsb2NhbGl6ZXIgPSBtTG9jYWxpemVyLFxuICBzaG93RGVtb0xpbmsgPSB0cnVlLFxuICAuLi5wcm9wc1xufSkge1xuICBjb25zdCB7IGNvbXBvbmVudHMsIGRlZmF1bHREYXRlLCBtYXgsIHZpZXdzIH0gPSB1c2VNZW1vKFxuICAgICgpID0+ICh7XG4gICAgICBjb21wb25lbnRzOiB7XG4gICAgICAgIHRpbWVTbG90V3JhcHBlcjogQ29sb3JlZERhdGVDZWxsV3JhcHBlcixcbiAgICAgIH0sXG4gICAgICBkZWZhdWx0RGF0ZTogbmV3IERhdGUoMjAxNSwgMywgMSksXG4gICAgICBtYXg6IGRhdGVzLmFkZChkYXRlcy5lbmRPZihuZXcgRGF0ZSgyMDE1LCAxNywgMSksICdkYXknKSwgLTEsICdob3VycycpLFxuICAgICAgdmlld3M6IE9iamVjdC5rZXlzKFZpZXdzKS5tYXAoKGspID0+IFZpZXdzW2tdKSxcbiAgICB9KSxcbiAgICBbXVxuICApXG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICB7c2hvd0RlbW9MaW5rID8gPERlbW9MaW5rIGZpbGVOYW1lPVwiYmFzaWNcIiAvPiA6IG51bGx9XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlaWdodDYwMFwiIHsuLi5wcm9wc30+XG4gICAgICAgIDxDYWxlbmRhclxuICAgICAgICAgIGNvbXBvbmVudHM9e2NvbXBvbmVudHN9XG4gICAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICAgIGV2ZW50cz17ZXZlbnRzfVxuICAgICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICAgIG1heD17bWF4fVxuICAgICAgICAgIHNob3dNdWx0aURheVRpbWVzXG4gICAgICAgICAgc3RlcD17NjB9XG4gICAgICAgICAgdmlld3M9e3ZpZXdzfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKVxufVxuQmFzaWMucHJvcFR5cGVzID0ge1xuICBsb2NhbGl6ZXI6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGVMb2NhbGl6ZXIpLFxuICBzaG93RGVtb0xpbms6IFByb3BUeXBlcy5ib29sLFxufVxuIiwiaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCB1c2VDYWxsYmFjaywgdXNlTWVtbywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBldmVudHMgZnJvbSAnLi4vLi4vcmVzb3VyY2VzL2V2ZW50cydcbmltcG9ydCB7IENhbGVuZGFyLCBWaWV3cywgRGF0ZUxvY2FsaXplciB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCBDYXJkIGZyb20gJy4uLy4uL3Jlc291cmNlcy9DYXJkJ1xuaW1wb3J0IERlbW9MaW5rIGZyb20gJy4uLy4uL0RlbW9MaW5rLmNvbXBvbmVudCdcbi8vIFN0b3J5Ym9vayBjYW5ub3QgYWxpYXMgdGhpcywgc28geW91IHdvdWxkIHVzZSAncmVhY3QtYmlnLWNhbGVuZGFyL2xpYi9hZGRvbnMvZHJhZ0FuZERyb3AnXG5pbXBvcnQgd2l0aERyYWdBbmREcm9wIGZyb20gJy4uLy4uLy4uL3NyYy9hZGRvbnMvZHJhZ0FuZERyb3AnXG4vLyBTdG9yeWJvb2sgY2Fubm90IGFsaWFzIHRoaXMsIHNvIHlvdSB3b3VsZCB1c2UgJ3JlYWN0LWJpZy1jYWxlbmRhci9saWIvYWRkb25zL2RyYWdBbmREcm9wL3N0eWxlcy5zY3NzJ1xuaW1wb3J0ICcuLi8uLi8uLi9zcmMvYWRkb25zL2RyYWdBbmREcm9wL3N0eWxlcy5zY3NzJ1xuXG5jb25zdCBEcmFnQW5kRHJvcENhbGVuZGFyID0gd2l0aERyYWdBbmREcm9wKENhbGVuZGFyKVxuXG5jb25zdCBhZGpFdmVudHMgPSBldmVudHMubWFwKChpdCwgaW5kKSA9PiAoe1xuICAuLi5pdCxcbiAgaXNEcmFnZ2FibGU6IGluZCAlIDIgPT09IDAsXG59KSlcblxuY29uc3QgZm9ybWF0TmFtZSA9IChuYW1lLCBjb3VudCkgPT4gYCR7bmFtZX0gSUQgJHtjb3VudH1gXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERuRE91dHNpZGVSZXNvdXJjZSh7IGxvY2FsaXplciB9KSB7XG4gIGNvbnN0IFtteUV2ZW50cywgc2V0TXlFdmVudHNdID0gdXNlU3RhdGUoYWRqRXZlbnRzKVxuICBjb25zdCBbZHJhZ2dlZEV2ZW50LCBzZXREcmFnZ2VkRXZlbnRdID0gdXNlU3RhdGUoKVxuICBjb25zdCBbZGlzcGxheURyYWdJdGVtSW5DZWxsLCBzZXREaXNwbGF5RHJhZ0l0ZW1JbkNlbGxdID0gdXNlU3RhdGUodHJ1ZSlcbiAgY29uc3QgW2NvdW50ZXJzLCBzZXRDb3VudGVyc10gPSB1c2VTdGF0ZSh7IGl0ZW0xOiAwLCBpdGVtMjogMCB9KVxuXG4gIGNvbnN0IGV2ZW50UHJvcEdldHRlciA9IHVzZUNhbGxiYWNrKFxuICAgIChldmVudCkgPT4gKHtcbiAgICAgIC4uLihldmVudC5pc0RyYWdnYWJsZVxuICAgICAgICA/IHsgY2xhc3NOYW1lOiAnaXNEcmFnZ2FibGUnIH1cbiAgICAgICAgOiB7IGNsYXNzTmFtZTogJ25vbkRyYWdnYWJsZScgfSksXG4gICAgfSksXG4gICAgW11cbiAgKVxuICAvLyxcbiAgY29uc3QgaGFuZGxlRHJhZ1N0YXJ0ID0gdXNlQ2FsbGJhY2soKGV2ZW50KSA9PiBzZXREcmFnZ2VkRXZlbnQoZXZlbnQpLCBbXSlcblxuICBjb25zdCBkcmFnRnJvbU91dHNpZGVJdGVtID0gdXNlQ2FsbGJhY2soKCkgPT4gZHJhZ2dlZEV2ZW50ID09PSAndW5kcm9wcGFibGUnID8gbnVsbCA6IGRyYWdnZWRFdmVudCwgW2RyYWdnZWRFdmVudF0pXG5cbiAgY29uc3QgY3VzdG9tT25EcmFnT3ZlckZyb21PdXRzaWRlID0gdXNlQ2FsbGJhY2soXG4gICAgKGRyYWdFdmVudCkgPT4ge1xuICAgICAgLy8gY2hlY2sgZm9yIHVuZHJvcHBhYmxlIGlzIHNwZWNpZmljIHRvIHRoaXMgZXhhbXBsZVxuICAgICAgLy8gYW5kIG5vdCBwYXJ0IG9mIEFQSS4gVGhpcyBqdXN0IGRlbW9uc3RyYXRlcyB0aGF0XG4gICAgICAvLyBvbkRyYWdPdmVyIGNhbiBvcHRpb25hbGx5IGJlIHBhc3NlZCB0byBjb25kaXRpb25hbGx5XG4gICAgICAvLyBhbGxvdyBkcmFnZ2FibGUgaXRlbXMgdG8gYmUgZHJvcHBlZCBvbiBjYWwsIGJhc2VkIG9uXG4gICAgICAvLyB3aGV0aGVyIGV2ZW50LnByZXZlbnREZWZhdWx0IGlzIGNhbGxlZFxuICAgICAgaWYgKGRyYWdnZWRFdmVudCAhPT0gJ3VuZHJvcHBhYmxlJykge1xuICAgICAgICBjb25zb2xlLmxvZygncHJldmVudERlZmF1bHQnKVxuICAgICAgICBkcmFnRXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgICAgfVxuICAgIH0sXG4gICAgW2RyYWdnZWRFdmVudF1cbiAgKVxuXG4gIGNvbnN0IGhhbmRsZURpc3BsYXlEcmFnSXRlbUluQ2VsbCA9IHVzZUNhbGxiYWNrKFxuICAgICgpID0+IHNldERpc3BsYXlEcmFnSXRlbUluQ2VsbCgocHJldikgPT4gIXByZXYpLFxuICAgIFtdXG4gIClcblxuICBjb25zdCBtb3ZlRXZlbnQgPSB1c2VDYWxsYmFjayhcbiAgICAoeyBldmVudCwgc3RhcnQsIGVuZCwgaXNBbGxEYXk6IGRyb3BwZWRPbkFsbERheVNsb3QgPSBmYWxzZSB9KSA9PiB7XG4gICAgICBjb25zdCB7IGFsbERheSB9ID0gZXZlbnRcbiAgICAgIGlmICghYWxsRGF5ICYmIGRyb3BwZWRPbkFsbERheVNsb3QpIHtcbiAgICAgICAgZXZlbnQuYWxsRGF5ID0gdHJ1ZVxuICAgICAgfVxuXG4gICAgICBzZXRNeUV2ZW50cygocHJldikgPT4ge1xuICAgICAgICBjb25zdCBleGlzdGluZyA9IHByZXYuZmluZCgoZXYpID0+IGV2LmlkID09PSBldmVudC5pZCkgPz8ge31cbiAgICAgICAgY29uc3QgZmlsdGVyZWQgPSBwcmV2LmZpbHRlcigoZXYpID0+IGV2LmlkICE9PSBldmVudC5pZClcbiAgICAgICAgcmV0dXJuIFsuLi5maWx0ZXJlZCwgeyAuLi5leGlzdGluZywgc3RhcnQsIGVuZCwgYWxsRGF5IH1dXG4gICAgICB9KVxuICAgIH0sXG4gICAgW3NldE15RXZlbnRzXVxuICApXG5cbiAgY29uc3QgbmV3RXZlbnQgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQpID0+IHtcbiAgICAgIHNldE15RXZlbnRzKChwcmV2KSA9PiB7XG4gICAgICAgIGNvbnN0IGlkTGlzdCA9IHByZXYubWFwKChpdGVtKSA9PiBpdGVtLmlkKVxuICAgICAgICBjb25zdCBuZXdJZCA9IE1hdGgubWF4KC4uLmlkTGlzdCkgKyAxXG4gICAgICAgIHJldHVybiBbLi4ucHJldiwgeyAuLi5ldmVudCwgaWQ6IG5ld0lkIH1dXG4gICAgICB9KVxuICAgIH0sXG4gICAgW3NldE15RXZlbnRzXVxuICApXG5cbiAgY29uc3Qgb25Ecm9wRnJvbU91dHNpZGUgPSB1c2VDYWxsYmFjayhcbiAgICAoeyBzdGFydCwgZW5kLCBhbGxEYXk6IGlzQWxsRGF5IH0pID0+IHtcbiAgICAgIGlmIChkcmFnZ2VkRXZlbnQgPT09ICd1bmRyb3BwYWJsZScpIHtcbiAgICAgICAgc2V0RHJhZ2dlZEV2ZW50KG51bGwpXG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBjb25zdCB7IG5hbWUgfSA9IGRyYWdnZWRFdmVudFxuICAgICAgY29uc3QgZXZlbnQgPSB7XG4gICAgICAgIHRpdGxlOiBmb3JtYXROYW1lKG5hbWUsIGNvdW50ZXJzW25hbWVdKSxcbiAgICAgICAgc3RhcnQsXG4gICAgICAgIGVuZCxcbiAgICAgICAgaXNBbGxEYXksXG4gICAgICB9XG4gICAgICBzZXREcmFnZ2VkRXZlbnQobnVsbClcbiAgICAgIHNldENvdW50ZXJzKChwcmV2KSA9PiB7XG4gICAgICAgIGNvbnN0IHsgW25hbWVdOiBjb3VudCB9ID0gcHJldlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnByZXYsXG4gICAgICAgICAgW25hbWVdOiBjb3VudCArIDEsXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICBuZXdFdmVudChldmVudClcbiAgICB9LFxuICAgIFtkcmFnZ2VkRXZlbnQsIGNvdW50ZXJzLCBzZXREcmFnZ2VkRXZlbnQsIHNldENvdW50ZXJzLCBuZXdFdmVudF1cbiAgKVxuXG4gIGNvbnN0IHJlc2l6ZUV2ZW50ID0gdXNlQ2FsbGJhY2soXG4gICAgKHsgZXZlbnQsIHN0YXJ0LCBlbmQgfSkgPT4ge1xuICAgICAgc2V0TXlFdmVudHMoKHByZXYpID0+IHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmcgPSBwcmV2LmZpbmQoKGV2KSA9PiBldi5pZCA9PT0gZXZlbnQuaWQpID8/IHt9XG4gICAgICAgIGNvbnN0IGZpbHRlcmVkID0gcHJldi5maWx0ZXIoKGV2KSA9PiBldi5pZCAhPT0gZXZlbnQuaWQpXG4gICAgICAgIHJldHVybiBbLi4uZmlsdGVyZWQsIHsgLi4uZXhpc3RpbmcsIHN0YXJ0LCBlbmQgfV1cbiAgICAgIH0pXG4gICAgfSxcbiAgICBbc2V0TXlFdmVudHNdXG4gIClcblxuICBjb25zdCBkZWZhdWx0RGF0ZSA9IHVzZU1lbW8oKCkgPT4gbmV3IERhdGUoMjAxNSwgMywgMTIpLCBbXSlcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxEZW1vTGluayBmaWxlTmFtZT1cImRuZE91dHNpZGVTb3VyY2VcIj5cbiAgICAgICAgPENhcmQgY2xhc3NOYW1lPVwiZG5kT3V0c2lkZVNvdXJjZUV4YW1wbGVcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImlubmVyXCI+XG4gICAgICAgICAgICA8aDQ+T3V0c2lkZSBEcmFnIFNvdXJjZXM8L2g0PlxuICAgICAgICAgICAgPHA+XG4gICAgICAgICAgICAgIExpZ2h0ZXIgY29sb3JlZCBldmVudHMsIGluIHRoZSBDYWxlbmRhciwgaGF2ZSBhbiBgaXNEcmFnZ2FibGVgIGtleVxuICAgICAgICAgICAgICBvZiBgZmFsc2VgLlxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAge09iamVjdC5lbnRyaWVzKGNvdW50ZXJzKS5tYXAoKFtuYW1lLCBjb3VudF0pID0+IChcbiAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIGRyYWdnYWJsZT1cInRydWVcIlxuICAgICAgICAgICAgICAgIGtleT17bmFtZX1cbiAgICAgICAgICAgICAgICBvbkRyYWdTdGFydD17KCkgPT5cbiAgICAgICAgICAgICAgICAgIGhhbmRsZURyYWdTdGFydCh7IHRpdGxlOiBmb3JtYXROYW1lKG5hbWUsIGNvdW50KSwgbmFtZSB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtmb3JtYXROYW1lKG5hbWUsIGNvdW50KX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgZHJhZ2dhYmxlPVwidHJ1ZVwiXG4gICAgICAgICAgICAgIG9uRHJhZ1N0YXJ0PXsoKSA9PiBoYW5kbGVEcmFnU3RhcnQoJ3VuZHJvcHBhYmxlJyl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIERyYWdnYWJsZSBidXQgbm90IGZvciBjYWxlbmRhci5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICBjaGVja2VkPXtkaXNwbGF5RHJhZ0l0ZW1JbkNlbGx9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZURpc3BsYXlEcmFnSXRlbUluQ2VsbH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgRGlzcGxheSBkcmFnZ2VkIGl0ZW0gaW4gY2VsbCB3aGlsZSBkcmFnZ2luZyBvdmVyXG4gICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L0NhcmQ+XG4gICAgICA8L0RlbW9MaW5rPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWlnaHQ2MDBcIj5cbiAgICAgICAgPERyYWdBbmREcm9wQ2FsZW5kYXJcbiAgICAgICAgICBkZWZhdWx0RGF0ZT17ZGVmYXVsdERhdGV9XG4gICAgICAgICAgZGVmYXVsdFZpZXc9e1ZpZXdzLk1PTlRIfVxuICAgICAgICAgIGRyYWdGcm9tT3V0c2lkZUl0ZW09e1xuICAgICAgICAgICAgZGlzcGxheURyYWdJdGVtSW5DZWxsID8gZHJhZ0Zyb21PdXRzaWRlSXRlbSA6IG51bGxcbiAgICAgICAgICB9XG4gICAgICAgICAgZHJhZ2dhYmxlQWNjZXNzb3I9XCJpc0RyYWdnYWJsZVwiXG4gICAgICAgICAgZXZlbnRQcm9wR2V0dGVyPXtldmVudFByb3BHZXR0ZXJ9XG4gICAgICAgICAgZXZlbnRzPXtteUV2ZW50c31cbiAgICAgICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgICAgICBvbkRyb3BGcm9tT3V0c2lkZT17b25Ecm9wRnJvbU91dHNpZGV9XG4gICAgICAgICAgb25EcmFnT3ZlckZyb21PdXRzaWRlPXtjdXN0b21PbkRyYWdPdmVyRnJvbU91dHNpZGV9XG4gICAgICAgICAgb25FdmVudERyb3A9e21vdmVFdmVudH1cbiAgICAgICAgICBvbkV2ZW50UmVzaXplPXtyZXNpemVFdmVudH1cbiAgICAgICAgICBvblNlbGVjdFNsb3Q9e25ld0V2ZW50fVxuICAgICAgICAgIHJlc2l6YWJsZVxuICAgICAgICAgIHNlbGVjdGFibGVcbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvRnJhZ21lbnQ+XG4gIClcbn1cbkRuRE91dHNpZGVSZXNvdXJjZS5wcm9wVHlwZXMgPSB7XG4gIGxvY2FsaXplcjogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZUxvY2FsaXplciksXG59XG4iLCJpbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQsIHVzZUNhbGxiYWNrLCB1c2VNZW1vLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IGV2ZW50cyBmcm9tICcuLi8uLi9yZXNvdXJjZXMvZXZlbnRzJ1xuaW1wb3J0IHsgQ2FsZW5kYXIsIFZpZXdzLCBEYXRlTG9jYWxpemVyIH0gZnJvbSAncmVhY3QtYmlnLWNhbGVuZGFyJ1xuaW1wb3J0IENhcmQgZnJvbSAnLi4vLi4vcmVzb3VyY2VzL0NhcmQnXG5pbXBvcnQgRGVtb0xpbmsgZnJvbSAnLi4vLi4vRGVtb0xpbmsuY29tcG9uZW50J1xuLy8gU3Rvcnlib29rIGNhbm5vdCBhbGlhcyB0aGlzLCBzbyB5b3Ugd291bGQgdXNlICdyZWFjdC1iaWctY2FsZW5kYXIvbGliL2FkZG9ucy9kcmFnQW5kRHJvcCdcbmltcG9ydCB3aXRoRHJhZ0FuZERyb3AgZnJvbSAnLi4vLi4vLi4vc3JjL2FkZG9ucy9kcmFnQW5kRHJvcCdcbi8vIFN0b3J5Ym9vayBjYW5ub3QgYWxpYXMgdGhpcywgc28geW91IHdvdWxkIHVzZSAncmVhY3QtYmlnLWNhbGVuZGFyL2xpYi9hZGRvbnMvZHJhZ0FuZERyb3Avc3R5bGVzLnNjc3MnXG5pbXBvcnQgJy4uLy4uLy4uL3NyYy9hZGRvbnMvZHJhZ0FuZERyb3Avc3R5bGVzLnNjc3MnXG5cbmNvbnN0IERyYWdBbmREcm9wQ2FsZW5kYXIgPSB3aXRoRHJhZ0FuZERyb3AoQ2FsZW5kYXIpXG5cbmNvbnN0IGFkakV2ZW50cyA9IGV2ZW50cy5tYXAoKGl0LCBpbmQpID0+ICh7XG4gIC4uLml0LFxuICBpc1Jlc2l6YWJsZTogaW5kICUgMiA9PT0gMCxcbiAgaXNEcmFnZ2FibGU6IGluZCAlIDIgPT09IDAsXG59KSlcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUmVzaXphYmxlKHsgbG9jYWxpemVyIH0pIHtcbiAgY29uc3QgW215RXZlbnRzLCBzZXRNeUV2ZW50c10gPSB1c2VTdGF0ZShhZGpFdmVudHMpXG4gIGNvbnN0IFtyZXNpemFibGUsIHNldFJlc2l6YWJsZV0gPSB1c2VTdGF0ZSh0cnVlKVxuXG4gIGNvbnN0IGV2ZW50UHJvcEdldHRlciA9IHVzZUNhbGxiYWNrKFxuICAgIChldmVudCkgPT4gKHtcbiAgICAgIC8vIGFkZCBjbGFzcyBpZiBub3QgYWxsb3dpbmcgcmVzaXppbmcgYXQgYWxsLCBvciBpZlxuICAgICAgLy8gYWxsb3dpbmcgcmVzaXppbmcsIGJ1dCBub3Qgb24gYSBzcGVjaWZpYyBldmVudFxuICAgICAgLi4uKCghcmVzaXphYmxlIHx8ICFldmVudC5pc1Jlc2l6YWJsZSkgJiYgeyBjbGFzc05hbWU6ICdub25SZXNpemFibGUnIH0pLFxuICAgIH0pLFxuICAgIFtyZXNpemFibGVdXG4gIClcblxuICBjb25zdCB0b2dnbGVSZXNpemluZyA9IHVzZUNhbGxiYWNrKCgpID0+IHNldFJlc2l6YWJsZSgocHJldikgPT4gIXByZXYpLCBbXSlcblxuICBjb25zdCByZXNpemVFdmVudCA9IHVzZUNhbGxiYWNrKFxuICAgICh7IGV2ZW50LCBzdGFydCwgZW5kIH0pID0+IHtcbiAgICAgIHNldE15RXZlbnRzKChwcmV2KSA9PiB7XG4gICAgICAgIGNvbnN0IGV4aXN0aW5nID0gcHJldi5maW5kKChldikgPT4gZXYuaWQgPT09IGV2ZW50LmlkKSA/PyB7fVxuICAgICAgICBjb25zdCBmaWx0ZXJlZCA9IHByZXYuZmlsdGVyKChldikgPT4gZXYuaWQgIT09IGV2ZW50LmlkKVxuICAgICAgICByZXR1cm4gWy4uLmZpbHRlcmVkLCB7IC4uLmV4aXN0aW5nLCBzdGFydCwgZW5kIH1dXG4gICAgICB9KVxuICAgIH0sXG4gICAgW3NldE15RXZlbnRzXVxuICApXG5cbiAgY29uc3QgZGVmYXVsdERhdGUgPSB1c2VNZW1vKCgpID0+IG5ldyBEYXRlKDIwMTUsIDMsIDEyKSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8RGVtb0xpbmsgZmlsZU5hbWU9XCJkbmRPdXRzaWRlU291cmNlXCI+XG4gICAgICAgIDxDYXJkIGNsYXNzTmFtZT1cImRuZE91dHNpZGVTb3VyY2VFeGFtcGxlXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbm5lclwiPlxuICAgICAgICAgICAgPGg0PlJlc2l6aW5nPC9oND5cbiAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICBFdmVudHMgYWxsb3dpbmcgcmVzaXppbmcgd2lsbCBzaG93IGRyYWcgaGFuZGxlcyB3aGVuIHlvdSBtb3VzZVxuICAgICAgICAgICAgICBvdmVyIHRoZW0uXG4gICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICBJbiB0aGlzIGV4YW1wbGUsIGxpZ2h0ZXIgY29sb3JlZCBldmVudHMgYXJlIG5vdCByZXNpemFibGUuXG4gICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICBUb2dnbGluZyB0aGUgY2hlY2tib3ggdG8gdGhlIHJpZ2h0IHdpbGwgdHVybiBvZmYvb24gcmVzaXppbmcgYWxsXG4gICAgICAgICAgICAgIHRvZ2V0aGVyLlxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICBjaGVja2VkPXtyZXNpemFibGV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RvZ2dsZVJlc2l6aW5nfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICBBbGxvdyBFdmVudCBSZXNpemluZ1xuICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9DYXJkPlxuICAgICAgPC9EZW1vTGluaz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVpZ2h0NjAwXCI+XG4gICAgICAgIDxEcmFnQW5kRHJvcENhbGVuZGFyXG4gICAgICAgICAgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfVxuICAgICAgICAgIGRlZmF1bHRWaWV3PXtWaWV3cy5NT05USH1cbiAgICAgICAgICBkcmFnZ2FibGVBY2Nlc3Nvcj1cImlzRHJhZ2dhYmxlXCJcbiAgICAgICAgICBldmVudFByb3BHZXR0ZXI9e2V2ZW50UHJvcEdldHRlcn1cbiAgICAgICAgICBldmVudHM9e215RXZlbnRzfVxuICAgICAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgICAgIG9uRXZlbnRSZXNpemU9e3Jlc2l6ZUV2ZW50fVxuICAgICAgICAgIHJlc2l6YWJsZT17cmVzaXphYmxlfVxuICAgICAgICAgIHJlc2l6YWJsZUFjY2Vzc29yPXtyZXNpemFibGUgPyAnaXNSZXNpemFibGUnIDogJ2Zha2VLZXknfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9GcmFnbWVudD5cbiAgKVxufVxuUmVzaXphYmxlLnByb3BUeXBlcyA9IHtcbiAgbG9jYWxpemVyOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlTG9jYWxpemVyKSxcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUV2ZW50cyhpZHggPSAwLCBkYXRlID0gbmV3IERhdGUoKSkge1xuICBjb25zdCB5ID0gZGF0ZS5nZXRGdWxsWWVhcigpXG4gIGNvbnN0IG0gPSBkYXRlLmdldE1vbnRoKClcbiAgY29uc3QgZCA9IGRhdGUuZ2V0RGF0ZSgpXG5cbiAgY29uc3Qgc2V0cyA9IFtcbiAgICBbXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgMScsXG4gICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSh5LCBtLCBkLCAxMCwgMzAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDEzLCAzMCwgMCwgMCksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDInLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgMTAsIDMwLCAwLCAwKSxcbiAgICAgICAgZW5kOiBuZXcgRGF0ZSh5LCBtLCBkLCAxMywgMzAsIDAsIDApLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6ICdFdmVudCAzJyxcbiAgICAgICAgc3RhcnQ6IG5ldyBEYXRlKHksIG0sIGQsIDEwLCAzMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgMTIsIDMwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgNCcsXG4gICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSh5LCBtLCBkLCA4LCAzMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgMTgsIDAsIDAsIDApLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6ICdFdmVudCA1JyxcbiAgICAgICAgc3RhcnQ6IG5ldyBEYXRlKHksIG0sIGQsIDE1LCAzMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgMTYsIDAsIDAsIDApLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6ICdFdmVudCA2JyxcbiAgICAgICAgc3RhcnQ6IG5ldyBEYXRlKHksIG0sIGQsIDExLCAwLCAwLCAwKSxcbiAgICAgICAgZW5kOiBuZXcgRGF0ZSh5LCBtLCBkLCAxMiwgMCwgMCwgMCksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDcnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgMSwgMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgMiwgMCwgMCwgMCksXG4gICAgICB9LFxuICAgIF0sXG4gICAgW1xuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDEnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgOSwgMzAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDE1LCAzMCwgMCwgMCksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDInLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgMTEsIDAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDEzLCAwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgMycsXG4gICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSh5LCBtLCBkLCA5LCAzMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgMTEsIDMwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgNCcsXG4gICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSh5LCBtLCBkLCA5LCAzMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgMTAsIDMwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgNScsXG4gICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSh5LCBtLCBkLCAxMCwgMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgMTEsIDAsIDAsIDApLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6ICdFdmVudCA2JyxcbiAgICAgICAgc3RhcnQ6IG5ldyBEYXRlKHksIG0sIGQsIDEwLCAwLCAwLCAwKSxcbiAgICAgICAgZW5kOiBuZXcgRGF0ZSh5LCBtLCBkLCAxMSwgMCwgMCwgMCksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDcnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgOSwgMzAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDEwLCAzMCwgMCwgMCksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDgnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgOSwgMzAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDEwLCAzMCwgMCwgMCksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDknLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgOSwgMzAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDEwLCAzMCwgMCwgMCksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDEwJyxcbiAgICAgICAgc3RhcnQ6IG5ldyBEYXRlKHksIG0sIGQsIDEwLCAzMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgMTIsIDMwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgMTEnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgMTIsIDAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDEzLCAwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgMTInLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgMTIsIDAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDEzLCAwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgMTMnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgMTIsIDAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDEzLCAwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgMTQnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgMTIsIDAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDEzLCAwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgMTUnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgNiwgMzAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDgsIDAsIDAsIDApLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6ICdFdmVudCAxNicsXG4gICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSh5LCBtLCBkLCAxNiwgMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgMTcsIDMwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgXSxcbiAgICBbXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgMScsXG4gICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSh5LCBtLCBkLCAyLCAzMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgNCwgMzAsIDAsIDApLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6ICdFdmVudCAyJyxcbiAgICAgICAgc3RhcnQ6IG5ldyBEYXRlKHksIG0sIGQsIDIsIDMwLCAwLCAwKSxcbiAgICAgICAgZW5kOiBuZXcgRGF0ZSh5LCBtLCBkLCAzLCAzMCwgMCwgMCksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDMnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgMywgMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgNCwgMCwgMCwgMCksXG4gICAgICB9LFxuICAgIF0sXG4gICAgW1xuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDEnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgNiwgMzAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDcsIDAsIDAsIDApLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6ICdFdmVudCAyJyxcbiAgICAgICAgc3RhcnQ6IG5ldyBEYXRlKHksIG0sIGQsIDgsIDAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDE3LCAwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgMycsXG4gICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSh5LCBtLCBkLCA4LCAwLCAwLCAwKSxcbiAgICAgICAgZW5kOiBuZXcgRGF0ZSh5LCBtLCBkLCAxMSwgMCwgMCwgMCksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDQnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgOCwgMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgMTIsIDAsIDAsIDApLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6ICdFdmVudCA1JyxcbiAgICAgICAgc3RhcnQ6IG5ldyBEYXRlKHksIG0sIGQsIDEwLCAwLCAwLCAwKSxcbiAgICAgICAgZW5kOiBuZXcgRGF0ZSh5LCBtLCBkLCAxMywgMCwgMCwgMCksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDYnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgMTAsIDAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDEzLCAwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgNycsXG4gICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSh5LCBtLCBkLCAxMCwgMCwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgMTMsIDAsIDAsIDApLFxuICAgICAgfSxcbiAgICBdLFxuICAgIFtcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6ICdFdmVudCAxJyxcbiAgICAgICAgc3RhcnQ6IG5ldyBEYXRlKHksIG0sIGQsIDE5LCAwLCAwLCAwKSxcbiAgICAgICAgZW5kOiBuZXcgRGF0ZSh5LCBtLCBkLCAyMCwgNTUsIDAsIDApLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6ICdFdmVudCAyJyxcbiAgICAgICAgc3RhcnQ6IG5ldyBEYXRlKHksIG0sIGQsIDE5LCAxNSwgMCwgMCksXG4gICAgICAgIGVuZDogbmV3IERhdGUoeSwgbSwgZCwgMjAsIDE1LCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgMycsXG4gICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSh5LCBtLCBkLCAxOSwgNDUsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDIyLCAzMCwgMCwgMCksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDQnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgMjAsIDQ1LCAwLCAwKSxcbiAgICAgICAgZW5kOiBuZXcgRGF0ZSh5LCBtLCBkLCAyMiwgNSwgMCwgMCksXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB0aXRsZTogJ0V2ZW50IDUnLFxuICAgICAgICBzdGFydDogbmV3IERhdGUoeSwgbSwgZCwgMTAsIDAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDExLCAwLCAwLCAwKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiAnRXZlbnQgNicsXG4gICAgICAgIHN0YXJ0OiBuZXcgRGF0ZSh5LCBtLCBkLCAxMCwgMzAsIDAsIDApLFxuICAgICAgICBlbmQ6IG5ldyBEYXRlKHksIG0sIGQsIDExLCAzMCwgMCwgMCksXG4gICAgICB9LFxuICAgIF0sXG4gIF1cblxuICByZXR1cm4gc2V0c1tpZHhdXG59XG4iLCJpbXBvcnQgeyBhY3Rpb24gfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWFjdGlvbnMnXG5cbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0ICdtb21lbnQtdGltZXpvbmUnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IENhbGVuZGFyIGFzIEJhc2VDYWxlbmRhciwgbW9tZW50TG9jYWxpemVyIH0gZnJvbSAnLi4vLi4vc3JjJ1xuXG4vLyBGb3IgVGVzdGluZyBTQVNTIHN0eWxpbmdcbmltcG9ydCAnLi4vLi4vc3JjL3Nhc3Mvc3R5bGVzLnNjc3MnXG5pbXBvcnQgJy4uLy4uL3NyYy9hZGRvbnMvZHJhZ0FuZERyb3Avc3R5bGVzLnNjc3MnXG5cbmltcG9ydCB3aXRoRHJhZ0FuZERyb3AgZnJvbSAnLi4vLi4vc3JjL2FkZG9ucy9kcmFnQW5kRHJvcCdcblxuZXhwb3J0IHsgVmlld3MgfSBmcm9tICcuLi8uLi9zcmMnXG5cbi8vIHVuY29tbWVudCBmb3IgdGltZXpvbmUgdGVzdGluZyBpbiBTdG9yeWJvb2tcbi8vbW9tZW50LnR6LnNldERlZmF1bHQoJ0FtZXJpY2EvTG9zX0FuZ2VsZXMnKVxuXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KVxuXG5leHBvcnQgY29uc3QgZGF0ZSA9ICguLi5hcmdzKSA9PiBtb21lbnQoLi4uYXJncykudG9EYXRlKClcblxuZXhwb3J0IGNvbnN0IENhbGVuZGFyID0gKHByb3BzKSA9PiAoXG4gIDxkaXYgc3R5bGU9e3sgaGVpZ2h0OiA2NTAgfX0+XG4gICAgPEJhc2VDYWxlbmRhciBsb2NhbGl6ZXI9e2xvY2FsaXplcn0gey4uLnByb3BzfSAvPlxuICA8L2Rpdj5cbilcblxuZXhwb3J0IGNvbnN0IERyYWdBbmREcm9wQ2FsZW5kYXIgPSB3aXRoRHJhZ0FuZERyb3AoQ2FsZW5kYXIpXG5cbmV4cG9ydCBjb25zdCBEcmFnYWJsZUNhbGVuZGFyID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPERyYWdBbmREcm9wQ2FsZW5kYXJcbiAgICAgIHBvcHVwXG4gICAgICBzZWxlY3RhYmxlXG4gICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgIG9uRXZlbnREcm9wPXthY3Rpb24oJ2V2ZW50IGRyb3BwZWQnKX1cbiAgICAgIG9uU2VsZWN0RXZlbnQ9e2FjdGlvbignZXZlbnQgc2VsZWN0ZWQnKX1cbiAgICAgIG9uU2VsZWN0U2xvdD17YWN0aW9uKCdzbG90IHNlbGVjdGVkJyl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgLz5cbiAgKVxufVxuXG5leHBvcnQgY29uc3QgZXZlbnRzID0gW1xuICB7XG4gICAgdGl0bGU6ICdleGFtcGxlIDEnLFxuICAgIHN0YXJ0OiBtb21lbnQoKS5zdGFydE9mKCdtb250aCcpLmFkZCgxLCAnaG91cnMnKS50b0RhdGUoKSxcbiAgICBlbmQ6IG1vbWVudCgpLnN0YXJ0T2YoJ21vbnRoJykuYWRkKDIsICdob3VycycpLnRvRGF0ZSgpLFxuICAgIGFsbERheTogZmFsc2UsXG4gIH0sXG4gIHtcbiAgICB0aXRsZTogJ2V4YW1wbGUgMicsXG4gICAgc3RhcnQ6IG1vbWVudCgpLnN0YXJ0T2YoJ21vbnRoJykuYWRkKDEsICdob3VycycpLnRvRGF0ZSgpLFxuICAgIGVuZDogbW9tZW50KCkuc3RhcnRPZignbW9udGgnKS5hZGQoMiwgJ2hvdXJzJykudG9EYXRlKCksXG4gICAgYWxsRGF5OiBmYWxzZSxcbiAgfSxcbiAge1xuICAgIHRpdGxlOiAnZXhhbXBsZSAzJyxcbiAgICBzdGFydDogbW9tZW50KCkuc3RhcnRPZignbW9udGgnKS5hZGQoMSwgJ2hvdXJzJykudG9EYXRlKCksXG4gICAgZW5kOiBtb21lbnQoKS5zdGFydE9mKCdtb250aCcpLmFkZCgyLCAnaG91cnMnKS50b0RhdGUoKSxcbiAgICBhbGxEYXk6IGZhbHNlLFxuICB9LFxuICB7XG4gICAgdGl0bGU6ICdleGFtcGxlIDQnLFxuICAgIHN0YXJ0OiBtb21lbnQoKS5zdGFydE9mKCdtb250aCcpLmFkZCgxLCAnaG91cnMnKS50b0RhdGUoKSxcbiAgICBlbmQ6IG1vbWVudCgpLnN0YXJ0T2YoJ21vbnRoJykuYWRkKDIsICdob3VycycpLnRvRGF0ZSgpLFxuICAgIGFsbERheTogZmFsc2UsXG4gIH0sXG4gIHtcbiAgICB0aXRsZTogJ2V4YW1wbGUgNScsXG4gICAgc3RhcnQ6IG1vbWVudCgpLnN0YXJ0T2YoJ21vbnRoJykuYWRkKDEsICdob3VycycpLnRvRGF0ZSgpLFxuICAgIGVuZDogbW9tZW50KCkuc3RhcnRPZignbW9udGgnKS5hZGQoMiwgJ2hvdXJzJykudG9EYXRlKCksXG4gICAgYWxsRGF5OiBmYWxzZSxcbiAgfSxcbiAge1xuICAgIHRpdGxlOiAndGVzdCcsXG4gICAgc3RhcnQ6IG1vbWVudCgpLmFkZCgxLCAnZGF5cycpLnN1YnRyYWN0KDUsICdob3VycycpLnRvRGF0ZSgpLFxuICAgIGVuZDogbW9tZW50KCkuYWRkKDEsICdkYXlzJykuc3VidHJhY3QoNCwgJ2hvdXJzJykudG9EYXRlKCksXG4gICAgYWxsRGF5OiBmYWxzZSxcbiAgfSxcbiAge1xuICAgIHRpdGxlOiAndGVzdCBsYXJnZXInLFxuICAgIHN0YXJ0OiBtb21lbnQoKS5zdGFydE9mKCdkYXknKS5hZGQoNSwgJ2hvdXJzJykudG9EYXRlKCksXG4gICAgZW5kOiBtb21lbnQoKS5zdGFydE9mKCdkYXknKS5hZGQoMTAsICdob3VycycpLnRvRGF0ZSgpLFxuICAgIGFsbERheTogZmFsc2UsXG4gIH0sXG5cbiAge1xuICAgIHRpdGxlOiAndGVzdCBsYXJnZXInLFxuICAgIHN0YXJ0OiBtb21lbnQoKS5zdGFydE9mKCdkYXknKS5hZGQoMTUsICdob3VycycpLnRvRGF0ZSgpLFxuICAgIGVuZDogbW9tZW50KCkuc3RhcnRPZignZGF5JykuYWRkKDIzLCAnaG91cnMnKS50b0RhdGUoKSxcbiAgICBhbGxEYXk6IGZhbHNlLFxuICB9LFxuICB7XG4gICAgdGl0bGU6ICd0ZXN0IGFsbCBkYXknLFxuICAgIHN0YXJ0OiBtb21lbnQoKS5zdGFydE9mKCdkYXknKS50b0RhdGUoKSxcbiAgICBlbmQ6IG1vbWVudCgpLnN0YXJ0T2YoJ2RheScpLmFkZCgxLCAnZGF5JykudG9EYXRlKCksXG4gICAgYWxsRGF5OiB0cnVlLFxuICB9LFxuICB7XG4gICAgdGl0bGU6ICd0ZXN0IDIgZGF5cycsXG4gICAgc3RhcnQ6IG1vbWVudCgpLnN0YXJ0T2YoJ2RheScpLnRvRGF0ZSgpLFxuICAgIGVuZDogbW9tZW50KCkuc3RhcnRPZignZGF5JykuYWRkKDIsICdkYXlzJykudG9EYXRlKCksXG4gICAgYWxsRGF5OiB0cnVlLFxuICB9LFxuICB7XG4gICAgdGl0bGU6ICd0ZXN0IG11bHRpLWRheScsXG4gICAgc3RhcnQ6IG1vbWVudCgpLnRvRGF0ZSgpLFxuICAgIGVuZDogbW9tZW50KCkuYWRkKDMsICdkYXlzJykudG9EYXRlKCksXG4gICAgYWxsRGF5OiBmYWxzZSxcbiAgfSxcbl1cblxuZXhwb3J0IGNvbnN0IGJhY2tncm91bmRFdmVudHMgPSBbXG4gIHtcbiAgICB0aXRsZTogJ3Rlc3QgYmFja2dyb3VuZCBldmVudCcsXG4gICAgc3RhcnQ6IG1vbWVudCgpLnN0YXJ0T2YoJ2RheScpLmFkZCgyLCAnaG91cnMnKS50b0RhdGUoKSxcbiAgICBlbmQ6IG1vbWVudCgpLnN0YXJ0T2YoJ2RheScpLmFkZCgxMiwgJ2hvdXJzJykudG9EYXRlKCksXG4gICAgYWxsRGF5OiBmYWxzZSxcbiAgfSxcbl1cblxuZXhwb3J0IGNvbnN0IHJlc291cmNlRXZlbnRzID0gW1xuICB7XG4gICAgdGl0bGU6ICdldmVudCAxJyxcbiAgICBzdGFydDogbW9tZW50KCkuc3RhcnRPZignZGF5JykuYWRkKDEsICdob3VycycpLnRvRGF0ZSgpLFxuICAgIGVuZDogbW9tZW50KCkuc3RhcnRPZignZGF5JykuYWRkKDIsICdob3VycycpLnRvRGF0ZSgpLFxuICAgIGFsbERheTogZmFsc2UsXG4gICAgcmVzb3VyY2VJZDogMSxcbiAgfSxcbiAge1xuICAgIHRpdGxlOiAnZXZlbnQgMicsXG4gICAgc3RhcnQ6IG1vbWVudCgpLnN0YXJ0T2YoJ2RheScpLmFkZCgzLCAnaG91cnMnKS50b0RhdGUoKSxcbiAgICBlbmQ6IG1vbWVudCgpLnN0YXJ0T2YoJ2RheScpLmFkZCg0LCAnaG91cnMnKS50b0RhdGUoKSxcbiAgICBhbGxEYXk6IGZhbHNlLFxuICAgIHJlc291cmNlSWQ6IFsxLCAyXSxcbiAgfSxcbiAge1xuICAgIHRpdGxlOiAnZXZlbnQgMycsXG4gICAgc3RhcnQ6IG1vbWVudCgpLnN0YXJ0T2YoJ2RheScpLmFkZCgxLCAnaG91cnMnKS50b0RhdGUoKSxcbiAgICBlbmQ6IG1vbWVudCgpLnN0YXJ0T2YoJ2RheScpLmFkZCgzLCAnaG91cnMnKS50b0RhdGUoKSxcbiAgICBhbGxEYXk6IGZhbHNlLFxuICAgIHJlc291cmNlSWQ6IDMsXG4gIH0sXG5dXG5cbmV4cG9ydCBjb25zdCByZXNvdXJjZXMgPSBbXG4gIHtcbiAgICBpZDogMSxcbiAgICBuYW1lOiAnUmVzb3VyY2UgT25lJyxcbiAgfSxcbiAge1xuICAgIGlkOiAyLFxuICAgIG5hbWU6ICdSZXNvdXJjZSBUd28nLFxuICB9LFxuICB7XG4gICAgaWQ6IDMsXG4gICAgbmFtZTogJ1Jlc291cmNlIFRocmVlJyxcbiAgfSxcbl1cbiIsImltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0IHsgbW9tZW50TG9jYWxpemVyLCBWaWV3cyB9IGZyb20gJy4uLy4uL3NyYydcbmltcG9ydCBkZW1vRXZlbnRzIGZyb20gJy4uL3Jlc291cmNlcy9ldmVudHMnXG5pbXBvcnQgcmVzb3VyY2VEYXRhIGZyb20gJy4uL3Jlc291cmNlcy9yZXNvdXJjZUV2ZW50cydcblxuY29uc3QgeyBldmVudHM6IHJlc291cmNlRXZlbnRzLCBsaXN0OiByZXNvdXJjZXMgfSA9IHJlc291cmNlRGF0YVxuXG5jb25zdCBtTG9jYWxpemVyID0gbW9tZW50TG9jYWxpemVyKG1vbWVudClcblxuLyoqIFNwZWNpZmljIHRvIGV2ZW50IGtleSBhY2Nlc3NvcnMgKi9cbmNvbnN0IGFkanVzdGVkID0gZGVtb0V2ZW50cy5tYXAoKGV2ZW50KSA9PiB7XG4gIGNvbnN0IHtcbiAgICBzdGFydDogc3RhcnREYXRlLFxuICAgIGVuZDogZW5kRGF0ZSxcbiAgICB0aXRsZTogbGFiZWwsXG4gICAgYWxsRGF5OiBhbGxEYXlFdmVudCxcbiAgICAuLi5vdGhlclxuICB9ID0gZXZlbnRcbiAgcmV0dXJuIHsgLi4ub3RoZXIsIHN0YXJ0RGF0ZSwgZW5kRGF0ZSwgbGFiZWwsIGFsbERheUV2ZW50IH1cbn0pXG5cbmV4cG9ydCBjb25zdCBhY2Nlc3NvclN0b3J5QXJncyA9IHtcbiAgYWxsRGF5QWNjZXNzb3I6ICdhbGxEYXlFdmVudCcsXG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMyksXG4gIGVuZEFjY2Vzc29yOiAnZW5kRGF0ZScsXG4gIGV2ZW50czogYWRqdXN0ZWQsXG4gIGxvY2FsaXplcjogbUxvY2FsaXplcixcbiAgdGl0bGVBY2Nlc3NvcjogJ2xhYmVsJyxcbiAgdG9vbHRpcEFjY2Vzc29yOiAnbGFiZWwnLFxuICBzdGFydEFjY2Vzc29yOiAnc3RhcnREYXRlJyxcbiAgaWRBY2Nlc3NvcjogJ2lkJyxcbn1cbi8qKiBFTkQgU3BlY2lmaWMgdG8gZXZlbnQga2V5IGFjY2Vzc29ycyAqL1xuXG4vKiogU3BlY2lmaWMgdG8gcmVzb3VyY2Uga2V5IGFjY2Vzc29ycyAqL1xuY29uc3QgYWRqdXN0ZWRSZXNvdXJjZXMgPSByZXNvdXJjZXMubWFwKCh7IGlkOiBJZCwgdGl0bGU6IFRpdGxlIH0pID0+ICh7XG4gIElkLFxuICBUaXRsZSxcbn0pKVxuXG5leHBvcnQgY29uc3QgcmVzb3VyY2VBY2Nlc3NvclN0b3J5QXJncyA9IHtcbiAgZGVmYXVsdERhdGU6IG5ldyBEYXRlKDIwMTUsIDMsIDQpLFxuICBkZWZhdWx0VmlldzogVmlld3MuREFZLFxuICBldmVudHM6IHJlc291cmNlRXZlbnRzLFxuICBsb2NhbGl6ZXI6IG1Mb2NhbGl6ZXIsXG4gIHJlc291cmNlSWRBY2Nlc3NvcjogJ0lkJyxcbiAgcmVzb3VyY2VzOiBhZGp1c3RlZFJlc291cmNlcyxcbiAgcmVzb3VyY2VUaXRsZUFjY2Vzc29yOiAnVGl0bGUnLFxufVxuLyoqIEVORFNwZWNpZmljIHRvIHJlc291cmNlIGtleSBhY2Nlc3NvcnMgKi9cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuY29uc3QgcHJvcFR5cGVzID0ge31cblxuZnVuY3Rpb24gQ2FyZCh7IGNoaWxkcmVuLCBjbGFzc05hbWUsIHN0eWxlIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17YCR7Y2xhc3NOYW1lIHx8ICcnfSBjYXJkYH0gc3R5bGU9e3N0eWxlfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5DYXJkLnByb3BUeXBlcyA9IHByb3BUeXBlc1xuXG5leHBvcnQgZGVmYXVsdCBDYXJkXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmNvbnN0IERheUNvbHVtbldyYXBwZXIgPSAoeyBjaGlsZHJlbiwgY2xhc3NOYW1lLCBzdHlsZSwgaW5uZXJSZWYgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWV9IHN0eWxlPXtzdHlsZX0gcmVmPXtpbm5lclJlZn0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVhY3QuZm9yd2FyZFJlZigoZGF5Q29sdW1uV3JhcHBlclByb3BzLCByZWYpID0+IHtcbiAgY29uc3QgcmVkQm9yZGVyID0gZGF5Q29sdW1uV3JhcHBlclByb3BzLnJlc291cmNlICUgMiA9PT0gMFxuICBjb25zdCBzdHlsZSA9IHtcbiAgICBib3JkZXJDb2xvcjogcmVkQm9yZGVyID8gJ3JlZCcgOiAnI2ZmZicsXG4gICAgYm9yZGVyU3R5bGU6ICdzb2xpZCcsXG4gICAgYm9yZGVyV2lkdGg6ICcxcHgnLFxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8RGF5Q29sdW1uV3JhcHBlciB7Li4uZGF5Q29sdW1uV3JhcHBlclByb3BzfSBzdHlsZT17c3R5bGV9IGlubmVyUmVmPXtyZWZ9IC8+XG4gIClcbn0pXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBhY3Rpb24gfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWFjdGlvbnMnXG5pbXBvcnQgQ3VzdG9tRGF5Q29sdW1uV3JhcHBlciBmcm9tICcuL0N1c3RvbURheUNvbHVtbldyYXBwZXInXG5cbmNvbnN0IGN1c3RvbUNvbXBvbmVudHMgPSB7XG4gIGRhdGVDZWxsV3JhcHBlcjogKGRhdGVDZWxsV3JhcHBlclByb3BzKSA9PiB7XG4gICAgLy8gU2hvdyAnY2xpY2sgbWUnIHRleHQgaW4gYXJiaXRyYXJ5IHBsYWNlcyBieSB1c2luZyB0aGUgcmFuZ2UgcHJvcFxuICAgIGNvbnN0IGhhc0FsZXJ0ID0gZGF0ZUNlbGxXcmFwcGVyUHJvcHMucmFuZ2VcbiAgICAgID8gZGF0ZUNlbGxXcmFwcGVyUHJvcHMucmFuZ2Uuc29tZSgoZGF0ZSkgPT4ge1xuICAgICAgICAgIHJldHVybiBkYXRlLmdldERhdGUoKSAlIDEyID09PSAwXG4gICAgICAgIH0pXG4gICAgICA6IGZhbHNlXG5cbiAgICBjb25zdCBzdHlsZSA9IHtcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGZsZXg6IDEsXG4gICAgICBib3JkZXJMZWZ0OiAnMXB4IHNvbGlkICNEREQnLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBoYXNBbGVydCA/ICcjZjVmNWRjJyA6ICcjZmZmJyxcbiAgICB9XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgc3R5bGU9e3N0eWxlfT5cbiAgICAgICAge2hhc0FsZXJ0ICYmIChcbiAgICAgICAgICA8YSBvbkNsaWNrPXthY3Rpb24oJ2N1c3RvbSBkYXRlQ2VsbFdyYXBwZXIgY29tcG9uZW50IGNsaWNrZWQnKX0+XG4gICAgICAgICAgICBDbGljayBtZVxuICAgICAgICAgIDwvYT5cbiAgICAgICAgKX1cbiAgICAgICAge2RhdGVDZWxsV3JhcHBlclByb3BzLmNoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9LFxuICBkYXlDb2x1bW5XcmFwcGVyOiBDdXN0b21EYXlDb2x1bW5XcmFwcGVyLFxuICB0aW1lU2xvdFdyYXBwZXI6ICh0aW1lU2xvdFdyYXBwZXJQcm9wcykgPT4ge1xuICAgIC8vIFNob3cgZGlmZmVyZW50IHN0eWxlcyBhdCBhcmJpdHJhcnkgdGltZVxuICAgIGNvbnN0IGhhc0N1c3RvbUluZm8gPSB0aW1lU2xvdFdyYXBwZXJQcm9wcy52YWx1ZVxuICAgICAgPyB0aW1lU2xvdFdyYXBwZXJQcm9wcy52YWx1ZS5nZXRIb3VycygpID09PSA0XG4gICAgICA6IGZhbHNlXG4gICAgY29uc3Qgc3R5bGUgPSB7XG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBmbGV4OiAxLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBoYXNDdXN0b21JbmZvID8gJyNmNWY1ZGMnIDogJyNmZmYnLFxuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBzdHlsZT17c3R5bGV9PlxuICAgICAgICB7aGFzQ3VzdG9tSW5mbyAmJiAnQ3VzdG9tIERheSBXcmFwcGVyJ31cbiAgICAgICAge3RpbWVTbG90V3JhcHBlclByb3BzLmNoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9LFxuICBldmVudFdyYXBwZXI6IChldmVudFdyYXBwZXJQcm9wcykgPT4ge1xuICAgIGNvbnN0IHN0eWxlID0ge1xuICAgICAgYm9yZGVyOiAnNHB4IHNvbGlkJyxcbiAgICAgIGJvcmRlckNvbG9yOlxuICAgICAgICBldmVudFdyYXBwZXJQcm9wcy5ldmVudC5zdGFydC5nZXRIb3VycygpICUgMiA9PT0gMCA/ICdncmVlbicgOiAncmVkJyxcbiAgICAgIHBhZGRpbmc6ICc1cHgnLFxuICAgIH1cbiAgICByZXR1cm4gPGRpdiBzdHlsZT17c3R5bGV9PntldmVudFdyYXBwZXJQcm9wcy5jaGlsZHJlbn08L2Rpdj5cbiAgfSxcbiAgdGltZVNsb3RXcmFwcGVyOiAodGltZVNsb3RXcmFwcGVyUHJvcHMpID0+IHtcbiAgICBjb25zdCBzdHlsZSA9XG4gICAgICB0aW1lU2xvdFdyYXBwZXJQcm9wcy5yZXNvdXJjZSA9PT0gbnVsbCB8fFxuICAgICAgdGltZVNsb3RXcmFwcGVyUHJvcHMudmFsdWUuZ2V0TWludXRlcygpICE9PSAwXG4gICAgICAgID8ge31cbiAgICAgICAgOiB7XG4gICAgICAgICAgICBib3JkZXI6ICc0cHggc29saWQnLFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOlxuICAgICAgICAgICAgICB0aW1lU2xvdFdyYXBwZXJQcm9wcy52YWx1ZS5nZXRIb3VycygpID49IDggJiZcbiAgICAgICAgICAgICAgdGltZVNsb3RXcmFwcGVyUHJvcHMudmFsdWUuZ2V0SG91cnMoKSA8PSAxN1xuICAgICAgICAgICAgICAgID8gJ2dyZWVuJ1xuICAgICAgICAgICAgICAgIDogJ3JlZCcsXG4gICAgICAgICAgICBwYWRkaW5nOiAnNXB4JyxcbiAgICAgICAgICB9XG4gICAgcmV0dXJuIDxkaXYgc3R5bGU9e3N0eWxlfT57dGltZVNsb3RXcmFwcGVyUHJvcHMuY2hpbGRyZW59PC9kaXY+XG4gIH0sXG4gIHRpbWVHdXR0ZXJXcmFwcGVyOiAodGltZUd1dHRlcldyYXBwZXJQcm9wcykgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIGlkPVwibXktY3VzdG9tLXRpbWUtZ3V0dGVyLXdyYXBwZXJcIlxuICAgICAgICBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6ICdncmF5JyB9fVxuICAgICAgPlxuICAgICAgICB7dGltZUd1dHRlcldyYXBwZXJQcm9wcy5jaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfSxcbiAgc2hvd01vcmU6IChzaG93TW9yZVByb3BzKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxidXR0b25cbiAgICAgICAgaWQ9XCJteS1jdXN0b20tc2hvdy1tb3JlXCJcbiAgICAgICAgc3R5bGU9e3sgYm9yZGVyOiAnNHB4IHNvbGlkIHJlZCcsIGN1cnNvcjogJ3BvaW50ZXInIH19XG4gICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnc2hvd01vcmVQcm9wcycsIHNob3dNb3JlUHJvcHMpXG4gICAgICAgICAgd2luZG93LmFsZXJ0KGBcbiAgICAgICAgICAgIENsaWNrZWQgJHtzaG93TW9yZVByb3BzLnNsb3REYXRlXG4gICAgICAgICAgICAgIC50b0lTT1N0cmluZygpXG4gICAgICAgICAgICAgIC5zdWJzdHIoMCwgMTApfSB3aXRoICR7XG4gICAgICAgICAgICBzaG93TW9yZVByb3BzLnJlbWFpbmluZ0V2ZW50cy5sZW5ndGhcbiAgICAgICAgICB9IHJlbWFpbmluZyBldmVudHMuXG4gICAgICAgICAgICBPcGVuIHRoZSBjb25zb2xlIGZvciB0aGUgZnVsbCBzZXQgb2YgcHJvcHMuXG4gICAgICAgICAgYClcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAge3Nob3dNb3JlUHJvcHMuY291bnR9IG1vcmUhXG4gICAgICA8L2J1dHRvbj5cbiAgICApXG4gIH0sXG59XG5cbmV4cG9ydCBkZWZhdWx0IGN1c3RvbUNvbXBvbmVudHNcbiIsImNvbnN0IG5vdyA9IG5ldyBEYXRlKClcblxuZXhwb3J0IGRlZmF1bHQgW1xuICAvKiB7XG4gICAgaWQ6IDAsXG4gICAgdGl0bGU6ICdBbGwgRGF5IEV2ZW50IHZlcnkgbG9uZyB0aXRsZScsXG4gICAgYWxsRGF5OiB0cnVlLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAwKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEpLFxuICB9LCAqL1xuICB7XG4gICAgaWQ6IDEsXG4gICAgdGl0bGU6ICdMb25nIEV2ZW50JyxcbiAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgNyksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMCksXG4gIH0sXG5cbiAge1xuICAgIGlkOiAyLFxuICAgIHRpdGxlOiAnRFRTIFNUQVJUUycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDIsIDEzLCAwLCAwLCAwKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDIsIDIwLCAwLCAwLCAwKSxcbiAgfSxcblxuICB7XG4gICAgaWQ6IDMsXG4gICAgdGl0bGU6ICdEVFMgRU5EUycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTYsIDEwLCA2LCAwLCAwLCAwKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTYsIDEwLCAxMywgMCwgMCwgMCksXG4gIH0sXG5cbiAge1xuICAgIGlkOiA0LFxuICAgIHRpdGxlOiAnU29tZSBFdmVudCcsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDksIDAsIDAsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgOSwgMCwgMCwgMCksXG4gICAgYWxsRGF5OiB0cnVlLFxuICB9LFxuXG4gIHtcbiAgICBpZDogOTIsXG4gICAgdGl0bGU6ICdTb21lIE90aGVyIEV2ZW50JyxcbiAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgOSwgOCwgMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMCwgMTEsIDMwLCAwKSxcbiAgfSxcbiAge1xuICAgIGlkOiA1LFxuICAgIHRpdGxlOiAnQ29uZmVyZW5jZScsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDExKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEzKSxcbiAgICBkZXNjOiAnQmlnIGNvbmZlcmVuY2UgZm9yIGltcG9ydGFudCBwZW9wbGUnLFxuICB9LFxuICB7XG4gICAgaWQ6IDYsXG4gICAgdGl0bGU6ICdNZWV0aW5nJyxcbiAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgMTIsIDEwLCAzMCwgMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMiwgMTIsIDMwLCAwLCAwKSxcbiAgICBkZXNjOiAnUHJlLW1lZXRpbmcgbWVldGluZywgdG8gcHJlcGFyZSBmb3IgdGhlIG1lZXRpbmcnLFxuICB9LFxuICB7XG4gICAgaWQ6IDcsXG4gICAgdGl0bGU6ICdMdW5jaCcsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEyLCAxMiwgMCwgMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMiwgMTMsIDAsIDAsIDApLFxuICAgIGRlc2M6ICdQb3dlciBsdW5jaCcsXG4gIH0sXG4gIHtcbiAgICBpZDogOCxcbiAgICB0aXRsZTogJ01lZXRpbmcnLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAxMiwgMTQsIDAsIDAsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgMTIsIDE1LCAwLCAwLCAwKSxcbiAgfSxcbiAge1xuICAgIGlkOiA5LFxuICAgIHRpdGxlOiAnSGFwcHkgSG91cicsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEyLCAxNywgMCwgMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMiwgMTcsIDMwLCAwLCAwKSxcbiAgICBkZXNjOiAnTW9zdCBpbXBvcnRhbnQgbWVhbCBvZiB0aGUgZGF5JyxcbiAgfSxcbiAge1xuICAgIGlkOiAxMCxcbiAgICB0aXRsZTogJ0Rpbm5lcicsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEyLCAyMCwgMCwgMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMiwgMjEsIDAsIDAsIDApLFxuICB9LFxuICB7XG4gICAgaWQ6IDExLFxuICAgIHRpdGxlOiAnUGxhbm5pbmcgTWVldGluZyB3aXRoIFBhaWdlJyxcbiAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgMTMsIDgsIDAsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgMTMsIDEwLCAzMCwgMCksXG4gIH0sXG4gIHtcbiAgICBpZDogMTEuMSxcbiAgICB0aXRsZTogJ0luY29udmVuaWVudCBDb25mZXJlbmNlIENhbGwnLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAxMywgOSwgMzAsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgMTMsIDEyLCAwLCAwKSxcbiAgfSxcbiAge1xuICAgIGlkOiAxMS4yLFxuICAgIHRpdGxlOiBcIlByb2plY3QgS2lja29mZiAtIExvdSdzIFNob2VzXCIsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEzLCAxMSwgMzAsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgMTMsIDE0LCAwLCAwKSxcbiAgfSxcbiAge1xuICAgIGlkOiAxMS4zLFxuICAgIHRpdGxlOiAnUXVvdGUgRm9sbG93LXVwIC0gVGVhIGJ5IFRpbmEnLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAxMywgMTUsIDMwLCAwKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEzLCAxNiwgMCwgMCksXG4gIH0sXG4gIHtcbiAgICBpZDogMTIsXG4gICAgdGl0bGU6ICdMYXRlIE5pZ2h0IEV2ZW50JyxcbiAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgMTcsIDE5LCAzMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxOCwgMiwgMCwgMCksXG4gIH0sXG4gIHtcbiAgICBpZDogMTIuNSxcbiAgICB0aXRsZTogJ0xhdGUgU2FtZSBOaWdodCBFdmVudCcsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDE3LCAxOSwgMzAsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgMTcsIDIzLCAzMCwgMCksXG4gIH0sXG4gIHtcbiAgICBpZDogMTMsXG4gICAgdGl0bGU6ICdNdWx0aS1kYXkgRXZlbnQnLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAyMCwgMTksIDMwLCAwKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDIyLCAyLCAwLCAwKSxcbiAgfSxcbiAge1xuICAgIGlkOiAxNCxcbiAgICB0aXRsZTogJ1RvZGF5JyxcbiAgICBzdGFydDogbmV3IERhdGUobmV3IERhdGUoKS5zZXRIb3VycyhuZXcgRGF0ZSgpLmdldEhvdXJzKCkgLSAzKSksXG4gICAgZW5kOiBuZXcgRGF0ZShuZXcgRGF0ZSgpLnNldEhvdXJzKG5ldyBEYXRlKCkuZ2V0SG91cnMoKSArIDMpKSxcbiAgfSxcbiAge1xuICAgIGlkOiAxNSxcbiAgICB0aXRsZTogJ1BvaW50IGluIFRpbWUgRXZlbnQnLFxuICAgIHN0YXJ0OiBub3csXG4gICAgZW5kOiBub3csXG4gIH0sXG4gIHtcbiAgICBpZDogMTYsXG4gICAgdGl0bGU6ICdWaWRlbyBSZWNvcmQnLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAxNCwgMTUsIDMwLCAwKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDE0LCAxOSwgMCwgMCksXG4gIH0sXG4gIHtcbiAgICBpZDogMTcsXG4gICAgdGl0bGU6ICdEdXRjaCBTb25nIFByb2R1Y2luZycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDE0LCAxNiwgMzAsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgMTQsIDIwLCAwLCAwKSxcbiAgfSxcbiAge1xuICAgIGlkOiAxOCxcbiAgICB0aXRsZTogJ0l0YWV3b24gTWVldGluZycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDE0LCAxNiwgMzAsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgMTQsIDE3LCAzMCwgMCksXG4gIH0sXG4gIHtcbiAgICBpZDogMTksXG4gICAgdGl0bGU6ICdPbmxpbmUgQ29kaW5nIFRlc3QnLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAxNCwgMTcsIDMwLCAwKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDE0LCAyMCwgMzAsIDApLFxuICB9LFxuICB7XG4gICAgaWQ6IDIwLFxuICAgIHRpdGxlOiAnQW4gb3ZlcmxhcHBlZCBFdmVudCcsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDE0LCAxNywgMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxNCwgMTgsIDMwLCAwKSxcbiAgfSxcbiAge1xuICAgIGlkOiAyMSxcbiAgICB0aXRsZTogJ1Bob25lIEludGVydmlldycsXG4gICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDE0LCAxNywgMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxNCwgMTgsIDMwLCAwKSxcbiAgfSxcbiAge1xuICAgIGlkOiAyMixcbiAgICB0aXRsZTogJ0Nvb2tpbmcgQ2xhc3MnLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCAxNCwgMTcsIDMwLCAwKSxcbiAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDE0LCAxOSwgMCwgMCksXG4gIH0sXG4gIHtcbiAgICBpZDogMjMsXG4gICAgdGl0bGU6ICdHbyB0byB0aGUgZ3ltJyxcbiAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgMTQsIDE4LCAzMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAxNCwgMjAsIDAsIDApLFxuICB9LFxuICB7XG4gICAgaWQ6IDI0LFxuICAgIHRpdGxlOiAnRFNUIGVuZHMgb24gdGhpcyBkYXkgKEV1cm9wZSknLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDIyLCA5LCAzMCwgMCwgMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDIyLCA5LCAzMCwgNCwgMzAsIDApLFxuICB9LFxuICB7XG4gICAgaWQ6IDI1LFxuICAgIHRpdGxlOiAnRFNUIGVuZHMgb24gdGhpcyBkYXkgKEFtZXJpY2EpJyxcbiAgICBzdGFydDogbmV3IERhdGUoMjAyMiwgMTAsIDYsIDAsIDAsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAyMiwgMTAsIDYsIDQsIDMwLCAwKSxcbiAgfSxcbiAge1xuICAgIGlkOiAyNixcbiAgICB0aXRsZTogJ0RTVCBzdGFydHMgb24gdGhpcyBkYXkgKEFtZXJpY2EpJyxcbiAgICBzdGFydDogbmV3IERhdGUoMjAyMywgMiwgMTIsIDAsIDAsIDApLFxuICAgIGVuZDogbmV3IERhdGUoMjAyMywgMiwgMTIsIDQsIDMwLCAwKSxcbiAgfSxcbiAge1xuICAgIGlkOiAyNyxcbiAgICB0aXRsZTogJ0RTVCBzdGFydHMgb24gdGhpcyBkYXkgKEV1cm9wZSknLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDIzLCAyLCAyNiwgMCwgMCwgMCksXG4gICAgZW5kOiBuZXcgRGF0ZSgyMDIzLCAyLCAyNiwgNCwgMzAsIDApLFxuICB9LFxuXVxuIiwiZXhwb3J0IGRlZmF1bHQge1xuICBldmVudHM6IFtcbiAgICB7XG4gICAgICB0aXRsZTogJ1JlbmNvbnRyZScsXG4gICAgICByZXNvdXJjZUlkOiAnYScsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgMiwgNSwgMzAsIDAsIDApLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCAyLCAxMCwgMzAsIDAsIDApLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdBbm90aGVyIE1lZXRpbmcnLFxuICAgICAgcmVzb3VyY2VJZDogJ2InLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDEsIDIsIDMwLCAwLCAwKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgMSwgNCwgMzAsIDAsIDApLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdBJyxcbiAgICAgIHJlc291cmNlSWQ6ICdhJyxcbiAgICAgIHN0YXJ0OiBuZXcgRGF0ZSgyMDE1LCAzLCA0LCA1LCAzMCwgMCwgMCksXG4gICAgICBlbmQ6IG5ldyBEYXRlKDIwMTUsIDMsIDQsIDEwLCAzMCwgMCwgMCksXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ0InLFxuICAgICAgcmVzb3VyY2VJZDogJ2InLFxuICAgICAgc3RhcnQ6IG5ldyBEYXRlKDIwMTUsIDMsIDQsIDUsIDMwLCAwLCAwKSxcbiAgICAgIGVuZDogbmV3IERhdGUoMjAxNSwgMywgNCwgMTAsIDMwLCAwLCAwKSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnQycsXG4gICAgICByZXNvdXJjZUlkOiAnYycsXG4gICAgICBzdGFydDogbmV3IERhdGUoMjAxNSwgMywgNCwgNSwgMzAsIDAsIDApLFxuICAgICAgZW5kOiBuZXcgRGF0ZSgyMDE1LCAzLCA0LCAxMCwgMzAsIDAsIDApLFxuICAgIH0sXG4gIF0sXG5cbiAgbGlzdDogW1xuICAgIHtcbiAgICAgIGlkOiAnYScsXG4gICAgICB0aXRsZTogJ1Jvb20gQScsXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogJ2InLFxuICAgICAgdGl0bGU6ICdSb29tIEInLFxuICAgIH0sXG4gICAge1xuICAgICAgaWQ6ICdjJyxcbiAgICAgIHRpdGxlOiAnUm9vbSBDJyxcbiAgICB9LFxuICBdLFxufVxuIiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgYXNzZXJ0SXNGbiwgQWRkQ29udGV4dCB9IGZyb20gXCJAc3Rvcnlib29rL2FkZG9uLWRvY3NcIjtcblxuaW1wb3J0IHsgTWV0YSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcbmltcG9ydCBCYXNpYyBmcm9tICcuL2RlbW9zL2V4YW1wbGVDb2RlL2Jhc2ljLmpzJ1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8TWV0YSB0aXRsZT1cIkFib3V0IEJpZyBDYWxlbmRhclwiIG1keFR5cGU9XCJNZXRhXCIgLz5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJiaWctY2FsZW5kYXJcIlxuICAgIH19PntgQmlnIENhbGVuZGFyYH08L2gxPlxuICAgIHsvKiBXZSB3b24ndCBsb2FkIHRoaXMgaW4gYSAnU3RvcnknIGJsb2NrLCBhcyB3ZSB3YW50IGl0IGlubGluZSB3aXRob3V0IGNyZWF0aW5nIHN1Ym5hdmlnYXRpb24gKi99XG4gICAgPEJhc2ljIHNob3dEZW1vTGluaz17ZmFsc2V9IHN0eWxlPXt7XG4gICAgICBtYXJnaW5Cb3R0b206IDE1XG4gICAgfX0gbWR4VHlwZT1cIkJhc2ljXCIgLz5cbiAgICA8aDIgey4uLntcbiAgICAgIFwiaWRcIjogXCJpbnRyb2R1Y3Rpb25cIlxuICAgIH19PntgSW50cm9kdWN0aW9uYH08L2gyPlxuICAgIDxwPntgQmlnIENhbGVuZGFyIGlzIGEgZnVsbCBmZWF0dXJlZCBDYWxlbmRhciBjb21wb25lbnQgZm9yIG1hbmFnaW5nIGV2ZW50cyBhbmQgZGF0ZXMuIEl0IHVzZXMgbW9kZXJuIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGZsZXhib3hgfTwvaW5saW5lQ29kZT57YCBmb3IgbGF5b3V0LCBtYWtpbmcgaXQgc3VwZXIgcmVzcG9uc2l2ZSBhbmQgcGVyZm9ybWFudC4gTGVhdmluZyBtb3N0IG9mIHRoZSBsYXlvdXQgaGVhdnkgbGlmdGluZyB0byB0aGUgYnJvd3Nlci5gfTwvcD5cbiAgICA8cD57YEhlcmUgeW91IHdpbGwgZmluZCBhbGwgb2YgdGhlIGRvY3VtZW50YXRpb24geW91IG5lZWQgZm9yIGltcGxlbWVudGluZyBCaWcgQ2FsZW5kYXIuIFdlIGV4cGxhaW4gdGhlIGJhc2ljcyBvZiBpbXBsZW1lbnRhdGlvbiwgZ2l2ZSB5b3UgY2xlYXIgZGV0YWlscyBhbmQgZXhhbXBsZXMgb2YgdGhlIHZhcmlvdXMgcHJvcHMgbmVlZGVkLCBhbmQgdHJ5IHRvIGFuc3dlciB5b3VyIHF1ZXN0aW9ucyBvbiBob3cgeW91IGNhbiB1c2UgQmlnIENhbGVuZGFyIHRvIGltcGxlbWVudCBjdXN0b20gc2NoZWR1bGluZyBzb2x1dGlvbnMuYH08L3A+XG4gICAgPGgyIHsuLi57XG4gICAgICBcImlkXCI6IFwiZ2V0dGluZy1zdGFydGVkXCJcbiAgICB9fT57YEdldHRpbmcgU3RhcnRlZGB9PC9oMj5cbiAgICA8cD57YFlvdSBjYW4gaW5zdGFsbCBCaWcgQ2FsZW5kYXIgdmlhIGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCJodHRwczovL3lhcm5wa2cuY29tL2VuL1wiLFxuICAgICAgICBcInRhcmdldFwiOiBcIl9ibGFua1wiLFxuICAgICAgICBcInJlbFwiOiBcIm5vZm9sbG93IG5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgfX0+e2B5YXJuYH08L2E+e2Agb3IgYH08YSBwYXJlbnROYW1lPVwicFwiIHsuLi57XG4gICAgICAgIFwiaHJlZlwiOiBcImh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9cIixcbiAgICAgICAgXCJ0YXJnZXRcIjogXCJfYmxhbmtcIixcbiAgICAgICAgXCJyZWxcIjogXCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgIH19PntgbnBtYH08L2E+e2A6YH08L3A+XG4gICAgPHA+PGVtIHBhcmVudE5hbWU9XCJwXCI+e2B5YXJuOmB9PC9lbT57YCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2B5YXJuIGFkZCByZWFjdC1iaWctY2FsZW5kYXJgfTwvaW5saW5lQ29kZT48L3A+XG4gICAgPHA+PGVtIHBhcmVudE5hbWU9XCJwXCI+e2BucG06YH08L2VtPntgIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG5wbSBpbnN0YWxsIC0tc2F2ZSByZWFjdC1iaWctY2FsZW5kYXJgfTwvaW5saW5lQ29kZT48L3A+XG4gICAgPHA+PGVtIHBhcmVudE5hbWU9XCJwXCI+e2BOb3RlYH08L2VtPntgOiBSZXF1aXJlcyBOb2RlID49IDE4YH08L3A+XG4gICAgPHA+e2BXaGVuIHlvdSBpbmNsdWRlIEJpZyBDYWxlbmRhciBpbiB5b3VyIGludGVyZmFjZSwgeW91IHdpbGwgbmVlZCB0aGUgY29yZSBzdHlsZXMuIFdlIHByb3ZpZGUgYSBwcmVjb21waWxlZCBzdHlsZSBzaGVldCAoYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgcmVhY3QtYmlnLWNhbGVuZGFyL2xpYi9jc3MvcmVhY3QtYmlnLWNhbGVuZGFyLmNzc2B9PC9pbmxpbmVDb2RlPntgKSBmb3IgeW91LCBvciB5b3UgY2FuIGRpcmVjdGx5IGltcG9ydCB0aGUgU0FTUyBpbnRvIHlvdXIgaW1wbGVtZW50YXRpb24uIEZvciBtb3JlIGluZm9ybWF0aW9uIG9uIHRoaXMsIHNlZSB0aGUgYH08TGlua1RvIGtpbmQ9XCJndWlkZXMtY3VzdG9tLXN0eWxpbmdcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BDdXN0b20gU3R5bGluZ2B9PC9MaW5rVG8+e2AgZ3VpZGUgZm9yIG1vcmUgZGV0YWlscy5gfTwvcD5cbiAgICA8cD57YEFsc28gbWFrZSBzdXJlIHRoYXQgeW91ciBjYWxlbmRhcidzIGNvbnRhaW5lciBlbGVtZW50IGhhcyBhIGhlaWdodCwgb3IgdGhlIGNhbGVuZGFyIHdvbid0IGJlIHZpc2libGUgKHNlZSB3aHkgYmVsb3cpLmB9PC9wPlxuICAgIDxwPntgRGF0ZSBpbnRlcm5hdGlvbmFsaXphdGlvbiBhbmQgbG9jYWxpemF0aW9uIGlzIGB9PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgaGFyZGB9PC9zdHJvbmc+e2AgYW5kIEJpZyBDYWxlbmRhciBkb2Vzbid0IGV2ZW4gYXR0ZW1wdCB0b1xuc29sdmUgdGhhdCBwcm9ibGVtLiBJbnN0ZWFkIHlvdSBjYW4gdXNlIG9uZSBvZiB0aGUgbWFueSBleGNlbGxlbnQgc29sdXRpb25zIGFscmVhZHlcbm91dCB0aGVyZSwgdmlhIGFkYXB0ZXJzIGNhbGxlZCBgfTxlbSBwYXJlbnROYW1lPVwicFwiPntgbG9jYWxpemVyc2B9PC9lbT57YC4gQmlnIENhbGVuZGFyIGNvbWVzIHdpdGggdGhyZWUgbG9jYWxpemVycyBmb3IgdXNlXG53aXRoIGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCJodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2dsb2JhbGl6ZVwiLFxuICAgICAgICBcInRhcmdldFwiOiBcIl9ibGFua1wiLFxuICAgICAgICBcInJlbFwiOiBcIm5vZm9sbG93IG5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgfX0+e2BHbG9iYWxpemUuanNgfTwvYT57YCwgYH08YSBwYXJlbnROYW1lPVwicFwiIHsuLi57XG4gICAgICAgIFwiaHJlZlwiOiBcImh0dHA6Ly9tb21lbnRqcy5jb20vXCIsXG4gICAgICAgIFwidGFyZ2V0XCI6IFwiX2JsYW5rXCIsXG4gICAgICAgIFwicmVsXCI6IFwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgICB9fT57YE1vbWVudC5qc2B9PC9hPntgIG9yIGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCJodHRwczovL21vbWVudC5naXRodWIuaW8vbHV4b25cIixcbiAgICAgICAgXCJ0YXJnZXRcIjogXCJfYmxhbmtcIixcbiAgICAgICAgXCJyZWxcIjogXCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgIH19PntgTHV4b25gfTwvYT57YC5gfTwvcD5cbiAgICA8cD57YENob29zZSB0aGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwibG9jYWxpemVyXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgbG9jYWxpemVyYH08L0xpbmtUbz57YCB0aGF0IGJlc3Qgc3VpdHMgeW91ciBuZWVkcywgb3Igd3JpdGUgeW91ciBvd24uIFdoYXRldmVyIHlvdSBkbywgeW91J2xsIG5lZWQgdG8gc2V0IGl0IHVwIGJlZm9yZSB5b3UgY2FuIHVzZSB0aGUgY2FsZW5kYXIgKHlvdSBvbmx5IG5lZWQgdG8gc2V0IGl0IHVwIG9uY2UpLmB9PC9wPlxuICAgIDxwcmU+PGNvZGUgcGFyZW50TmFtZT1cInByZVwiIHsuLi57XG4gICAgICAgIFwiY2xhc3NOYW1lXCI6IFwibGFuZ3VhZ2UtanN4XCJcbiAgICAgIH19PntgaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuXG4vLyBTZXR1cCB0aGUgbG9jYWxpemVyIGJ5IHByb3ZpZGluZyB0aGUgbW9tZW50IChvciBnbG9iYWxpemUsIG9yIEx1eG9uKSBPYmplY3Rcbi8vIHRvIHRoZSBjb3JyZWN0IGxvY2FsaXplci5cbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpIC8vIG9yIGdsb2JhbGl6ZUxvY2FsaXplclxuXG5jb25zdCBNeUNhbGVuZGFyID0gKHByb3BzKSA9PiAoXG4gIDxkaXYgY2xhc3NOYW1lPVwibXlDdXN0b21IZWlnaHRcIj5cbiAgICA8Q2FsZW5kYXJcbiAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgZXZlbnRzPXtteUV2ZW50c0xpc3R9XG4gICAgICBzdGFydEFjY2Vzc29yPVwic3RhcnRcIlxuICAgICAgZW5kQWNjZXNzb3I9XCJlbmRcIlxuICAgIC8+XG4gIDwvZGl2PlxuKVxuYH08L2NvZGU+PC9wcmU+XG4gICAgPHA+e2BPbmNlIHlvdSd2ZSBjb25maWd1cmVkIGEgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwibG9jYWxpemVyXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgbG9jYWxpemVyYH08L0xpbmtUbz57YCwgdGhlIENhbGVuZGFyIGlzIHJlYWR5IHRvIGFjY2VwdCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BkYXRlRm9ybWF0YH08L2lubGluZUNvZGU+e2AgcHJvcHMuIFRoZXNlIHByb3BzIGRldGVybWluZSBob3cgZGF0ZXMgd2lsbCBiZSBkaXNwbGF5ZWQgdGhyb3VnaG91dCB0aGUgY29tcG9uZW50IGFuZCBhcmUgc3BlY2lmaWMgdG8gdGhlIGxvY2FsaXplciBvZiB5b3VyIGNob2ljZS4gRm9yIGluc3RhbmNlIGlmIHlvdSBhcmUgdXNpbmcgdGhlIE1vbWVudCBsb2NhbGl6ZXIsIHRoZW4gYW55IGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCJodHRwOi8vbW9tZW50anMuY29tL2RvY3MvIy9kaXNwbGF5aW5nL2Zvcm1hdC9cIixcbiAgICAgICAgXCJ0YXJnZXRcIjogXCJfYmxhbmtcIixcbiAgICAgICAgXCJyZWxcIjogXCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgIH19PntgTW9tZW50IGZvcm1hdCBwYXR0ZXJuYH08L2E+e2AgaXMgdmFsaWQhYH08L3A+XG4gICAgPHA+e2BPbmUgdGhpbmcgdG8gbm90ZSBpcyB0aGF0LCBCaWcgQ2FsZW5kYXIgdHJlYXRzIGV2ZW50IHN0YXJ0L2VuZCBkYXRlcyBhcyBhbiBgfTxlbSBwYXJlbnROYW1lPVwicFwiPntgZXhjbHVzaXZlYH08L2VtPntgIHJhbmdlIHdoaWNoIG1lYW5zIHRoYXQgdGhlIGV2ZW50IHNwYW5zIHVwIHRvLCBidXQgbm90IGluY2x1ZGluZywgdGhlIGVuZCBkYXRlLiBJbiB0aGUgY2FzZSBvZiBkaXNwbGF5aW5nIGV2ZW50cyBvbiB3aG9sZSBkYXlzLCBlbmQgZGF0ZXMgYXJlIHJvdW5kZWQgYH08ZW0gcGFyZW50TmFtZT1cInBcIj57YHVwYH08L2VtPntgIHRvIHRoZSBuZXh0IGRheS4gU28gYW4gZXZlbnQgZW5kaW5nIG9uIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YEFwciA4dGggMTI6MDA6MDAgYW1gfTwvaW5saW5lQ29kZT57YCB3aWxsIG5vdCBhcHBlYXIgb24gdGhlIDh0aCwgd2hlcmVhcyBvbmUgZW5kaW5nXG5vbiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BBcHIgOHRoIDEyOjAxOjAwIGFtYH08L2lubGluZUNvZGU+e2Agd2lsbC4gSWYgeW91IHdhbnQgYH08ZW0gcGFyZW50TmFtZT1cInBcIj57YGluY2x1c2l2ZWB9PC9lbT57YCByYW5nZXMgY29uc2lkZXIgcHJvdmlkaW5nIGEgZnVuY3Rpb24gYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZW5kLWFjY2Vzc29yXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgZW5kQWNjZXNzb3JgfTwvTGlua1RvPntgIHRoYXQgcmV0dXJucyB0aGUgZW5kIGRhdGUgKyAxIGRheSBmb3IgdGhvc2UgZXZlbnRzIHRoYXQgZW5kIGF0IG1pZG5pZ2h0LmB9PC9wPlxuICAgIDxoMiB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm5leHQtc3RlcHNcIlxuICAgIH19PntgTmV4dCBTdGVwc2B9PC9oMj5cbiAgICA8cD57YFdlIGhhdmUgcHJvdmlkZWQgYSBudW1iZXIgb2YgYH08TGlua1RvIGtpbmQ9XCJhYm91dC1vdXItZXhhbXBsZXNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BFeGFtcGxlc2B9PC9MaW5rVG8+e2Agd2l0aGluIHRoaXMgZG9jdW1lbnRhdGlvbiwgaW5jbHVkaW5nIGluZGl2aWR1YWwgZXhhbXBsZXMgb2YgZWFjaCBhbmQgZXZlcnkgYH08TGlua1RvIGtpbmQ9XCJwcm9wcy1mdWxsLXByb3AtbGlzdFwiIG1keFR5cGU9XCJMaW5rVG9cIj57YHByb3BgfTwvTGlua1RvPntgLCBhcyB3ZWxsIGFzIHRoZSBEcmFnIGFuZCBEcm9wIGB9PExpbmtUbyBraW5kPVwiYWRkb25zLWludHJvZHVjdGlvblwiIG1keFR5cGU9XCJMaW5rVG9cIj57YEFkZG9uYH08L0xpbmtUbz57YC5gfTwvcD5cbiAgICA8cD57YFRoZSBkb2N1bWVudGF0aW9uICdDYW52YXMnIHRhYiwgYXQgdGhlIHRvcCBvZiB0aGUgcGFnZSwgd2lsbCBzaG93IHlvdSB0aGUgY29tcG9uZW50IGV4YW1wbGUgZm9yIHRoYXQgc3BlY2lmaWMgcGllY2Ugb2YgZG9jdW1lbnRhdGlvbi4gV2hpbGUgaW4gdGhlICdDYW52YXMnIHlvdSBtYXkgYWxzbyBoYXZlIGludGVyYWN0aXZlIGNvbnRyb2xzIGluIHRoZSAnQ29udHJvbHMnIHBhbmVsLCBhbGxvd2luZyB5b3UgdG8gcGxheSB3aXRoIGEgcHJvcCdzIGRpZmZlcmVudCB2YWx1ZXMuYH08L3A+XG4gICAgPHA+e2BUaGUgJ0RvY3MnIHRhYiB3aWxsIGNvbnRhaW4gYWRkaXRpb25hbCBpbmZvcm1hdGlvbiwgc3BlY2lhbCBjYXNlIHNjZW5hcmlvcywgYW5kIHRoZSByZW5kZXJlZCBleGFtcGxlLiBNb3N0IG9mIHRoZXNlIGV4YW1wbGVzIGNvbnRhaW4gYSAnU2hvdyBjb2RlJyBidXR0b24gKGJvdHRvbSByaWdodCksIG9yIGV2ZW4gYSBzcGVjaWFsIGxpbmsgYXQgdGhlIHRvcCB0byAnVmlldyBFeGFtcGxlIFNvdXJjZSBDb2RlJy5gfTwvcD5cbiAgICA8aDIgey4uLntcbiAgICAgIFwiaWRcIjogXCJqb2luLXRoZS1jb21tdW5pdHlcIlxuICAgIH19PntgSm9pbiB0aGUgQ29tbXVuaXR5YH08L2gyPlxuICAgIDxwPntgSGVscCB1cyBpbXByb3ZlIEJpZyBDYWxlbmRhciEgSm9pbiB1cyBvbiBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiaHR0cHM6Ly9qb2luLnNsYWNrLmNvbS90L2JpZ2NhbGVuZGFyL3NoYXJlZF9pbnZpdGUvenQtMW1sMWo5OWFmLXFJdnFPZm9zTW9nMVc3V3hNMH5qMlFcIixcbiAgICAgICAgXCJ0YXJnZXRcIjogXCJfYmxhbmtcIixcbiAgICAgICAgXCJyZWxcIjogXCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgIH19PntgU2xhY2tgfTwvYT57YC5gfTwvcD5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTtcblxuZXhwb3J0IGNvbnN0IF9fcGFnZSA9ICgpID0+IHsgdGhyb3cgbmV3IEVycm9yKFwiRG9jcy1vbmx5IHN0b3J5XCIpOyB9O1xuXG5fX3BhZ2UucGFyYW1ldGVycyA9IHsgZG9jc09ubHk6IHRydWUgfTtcblxuY29uc3QgY29tcG9uZW50TWV0YSA9IHsgdGl0bGU6ICdBYm91dCBCaWcgQ2FsZW5kYXInLCBpbmNsdWRlU3RvcmllczogW1wiX19wYWdlXCJdLCAgfTtcblxuY29uc3QgbWR4U3RvcnlOYW1lVG9LZXkgPSB7fTtcblxuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzID0gY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzIHx8IHt9O1xuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzLmRvY3MgPSB7XG4gIC4uLihjb21wb25lbnRNZXRhLnBhcmFtZXRlcnMuZG9jcyB8fCB7fSksXG4gIHBhZ2U6ICgpID0+IDxBZGRDb250ZXh0IG1keFN0b3J5TmFtZVRvS2V5PXttZHhTdG9yeU5hbWVUb0tleX0gbWR4Q29tcG9uZW50QW5ub3RhdGlvbnM9e2NvbXBvbmVudE1ldGF9PjxNRFhDb250ZW50IC8+PC9BZGRDb250ZXh0Pixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudE1ldGE7IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgYXNzZXJ0SXNGbiwgQWRkQ29udGV4dCB9IGZyb20gXCJAc3Rvcnlib29rL2FkZG9uLWRvY3NcIjtcblxuaW1wb3J0IHsgTWV0YSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPE1ldGEgdGl0bGU9XCJBYm91dCBPdXIgRXhhbXBsZXNcIiBtZHhUeXBlPVwiTWV0YVwiIC8+XG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwiYWJvdXQtb3VyLWV4YW1wbGVzXCJcbiAgICB9fT57YEFib3V0IE91ciBFeGFtcGxlc2B9PC9oMT5cbiAgICA8cD57YFdlIGhhdmUgYXR0ZW1wdGVkIHRvIHByb3ZpZGUgYmVzdCBwcmFjdGljZSBjb2RlIGV4YW1wbGVzIGZvciB1c2luZyBCaWcgQ2FsZW5kYXIuYH08L3A+XG4gICAgPHA+e2BCaWcgQ2FsZW5kYXIgaXMuLi4gd2VsbCwgXCJiaWdcIi4gSXQgaGFzIGRvemVucyBvZiBwcm9wcywgYW5kIGNhbiBiZSBjb25maWd1cmVkIGluIGEgbG90IG9mIGRpZmZlcmVudCB3YXlzIHRvIG1lZXQgYSB3aWRlIG51bWJlciBvZiB1c2UgY2FzZXMuIEl0IGFsc28gaGFzIHF1aXRlIGEgbnVtYmVyIG9mIHN1YmNvbXBvbmVudHMsIGFuZCBwcm92aWRlcyB0aGUgYWJpbGl0eSB0byBvdmVycmlkZSBtb3N0IGFsbCBvZiB0aGVtLmB9PC9wPlxuICAgIDxwPntgQmVjYXVzZSBvZiB0aGlzLCBpdCdzIGltcG9ydGFudCB0byB0aGluayBhYm91dCBob3cgeW91IGluaXRpYWxpemUgeW91ciBwcm9wZXJ0aWVzIGFzIHlvdSBwYXNzIHRoZW0gdG8gQmlnIENhbGVuZGFyLiBMZXQncyBsb29rIGF0IGEgc21hbGwgZXhhbXBsZTpgfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgLy8gZG9uJ3QgZG8gdGhpc1xuPENhbGVuZGFyIGRlZmF1bHREYXRlPXtuZXcgRGF0ZSgyMDE1LCAzLCAxMyl9IHsuLi5vdGhlclByb3BzfSAvPlxuYH08L2NvZGU+PC9wcmU+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YC8vIGRvIHRoaXNcbmNvbnN0IHtkZWZhdWx0RGF0ZX0gPSB1c2VNZW1vKCgpID0+ICh7XG4gIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgyMDE1LCAzLCAxMylcbn0pLCBbXSlcbi8vLi4uXG48Q2FsZW5kYXIgZGVmYXVsdERhdGU9e2RlZmF1bHREYXRlfSB7Li4ub3RoZXJQcm9wc30gLz5cbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxwPntgSW5zdGFudGlhdGluZyBhIG5ldyBKUyBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BEYXRlYH08L2lubGluZUNvZGU+e2AgY3JlYXRlcyBhIG5ldyBvYmplY3QuIFJlYWN0IHdpbGwgc2VlIHRoaXMgJ25ldycgcHJvcCBhbmQgcmUtcmVuZGVyIGV2ZXJ5IHN1YmNvbXBvbmVudCB0aGF0IHJlbGllcyB1cG9uIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGRlZmF1bHREYXRlYH08L2lubGluZUNvZGU+e2AsIGV2ZW4gaWYgKHRlY2huaWNhbGx5KSBpdCBkaWQgbm90IGNoYW5nZS5gfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgLy8gZG9uJ3QgZG8gdGhpc1xuPENhbGVuZGFyIG9uVmlldz17KG5ld1ZpZXcpID0+IHNldFZpZXcobmV3Vmlldyl9IHsuLi5vdGhlclByb3BzfSAvPlxuYH08L2NvZGU+PC9wcmU+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YC8vIGFuZCBkb24ndCBkbyB0aGlzXG5jb25zdCBvblZpZXcgPSAobmV3VmlldykgPT4gc2V0VmlldyhuZXdWaWV3KVxuPENhbGVuZGFyIG9uVmlldz17b25WaWV3fSB7Li4ub3RoZXJQcm9wc30gLz5cbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxwcmU+PGNvZGUgcGFyZW50TmFtZT1cInByZVwiIHsuLi57XG4gICAgICAgIFwiY2xhc3NOYW1lXCI6IFwibGFuZ3VhZ2UtanNcIlxuICAgICAgfX0+e2AvLyBkbyB0aGlzXG5jb25zdCBvblZpZXcgPSB1c2VDYWxsYmFjaygobmV3VmlldykgPT4gc2V0VmlldyhuZXdWaWV3KSwgW3NldFZpZXddKVxuPENhbGVuZGFyIG9uVmlldz17b25WaWV3fSB7Li4ub3RoZXJQcm9wc30gLz5cbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxwPntgSWYgYSBwcm9wIHRha2VzIGFuIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YE9iamVjdGB9PC9pbmxpbmVDb2RlPntgLCBhbiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BBcnJheWB9PC9pbmxpbmVDb2RlPntgLCBhIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YERhdGVgfTwvaW5saW5lQ29kZT57YCwgYSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BGdW5jdGlvbmB9PC9pbmxpbmVDb2RlPntgLCBvciBhbnkgb3RoZXIgbm9uLXNpbXBsZSB2YXJpYWJsZSB0eXBlLCBpdCBpcyBhbHdheXMgYSBnb29kIGlkZWEgdG8gbWVtb2l6ZSB0aG9zZSB2YWx1ZXMgcHJpb3IgdG8gcGFzc2luZyB0aGVtIGFzIHByb3BzLiBDaGFuY2VzIGFyZSB0aGF0IHNvbWUgcHJvcCBvciBzdGF0ZSBjaGFuZ2Ugd2lsbCB0cmlnZ2VyIGEgcmUtcmVuZGVyIG9mIHlvdXIgQ2FsZW5kYXIuIEhvdyB3ZWxsIHlvdSBtYW5hZ2UgeW91ciBwcm9wcyB3aWxsIGFmZmVjdCBvdmVyYWxsIHJlbmRlciBwZXJmb3JtYW5jZS5gfTwvcD5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTtcblxuZXhwb3J0IGNvbnN0IF9fcGFnZSA9ICgpID0+IHsgdGhyb3cgbmV3IEVycm9yKFwiRG9jcy1vbmx5IHN0b3J5XCIpOyB9O1xuXG5fX3BhZ2UucGFyYW1ldGVycyA9IHsgZG9jc09ubHk6IHRydWUgfTtcblxuY29uc3QgY29tcG9uZW50TWV0YSA9IHsgdGl0bGU6ICdBYm91dCBPdXIgRXhhbXBsZXMnLCBpbmNsdWRlU3RvcmllczogW1wiX19wYWdlXCJdLCAgfTtcblxuY29uc3QgbWR4U3RvcnlOYW1lVG9LZXkgPSB7fTtcblxuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzID0gY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzIHx8IHt9O1xuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzLmRvY3MgPSB7XG4gIC4uLihjb21wb25lbnRNZXRhLnBhcmFtZXRlcnMuZG9jcyB8fCB7fSksXG4gIHBhZ2U6ICgpID0+IDxBZGRDb250ZXh0IG1keFN0b3J5TmFtZVRvS2V5PXttZHhTdG9yeU5hbWVUb0tleX0gbWR4Q29tcG9uZW50QW5ub3RhdGlvbnM9e2NvbXBvbmVudE1ldGF9PjxNRFhDb250ZW50IC8+PC9BZGRDb250ZXh0Pixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudE1ldGE7IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgYXNzZXJ0SXNGbiwgQWRkQ29udGV4dCB9IGZyb20gXCJAc3Rvcnlib29rL2FkZG9uLWRvY3NcIjtcblxuaW1wb3J0IHsgTWV0YSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPE1ldGEgdGl0bGU9XCJBZGRvbnMvSW50cm9kdWN0aW9uXCIgbWR4VHlwZT1cIk1ldGFcIiAvPlxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcImFkZG9uc1wiXG4gICAgfX0+e2BBZGRvbnNgfTwvaDE+XG4gICAgPHA+e2BBbiBcIkFkZG9uXCIgaXMgc29tZSBiaXQgb2YgY29kZSB0byBlbmhhbmNlIGFuZCBleHBhbmQgdGhlIGZ1bmN0aW9uYWxpdHkgb2YgQmlnIENhbGVuZGFyLiBUaGVzZSBhcmUgdHlwaWNhbGx5IHByb3ZpZGVkIGJ5IHNvbWVvbmUgd2l0aGluIHRoZSBCaWcgQ2FsZW5kYXIgZGV2ZWxvcGVyIGNvbW11bml0eS5gfTwvcD5cbiAgICA8cD57YEluIHRoaXMgc2VjdGlvbiB3ZSBkb2N1bWVudCB0aG9zZSBBZGRvbnMgdGhhdCB3ZSBoYXZlIGluY2x1ZGVkIGRpcmVjdGx5IGluIHRoZSBCaWcgQ2FsZW5kYXIgY29kZWJhc2UuIElmIHlvdSBoYXZlIGFkZGl0aW9uYWwgQWRkLW9ucyB0aGF0IHlvdSBoYXZlIGNyZWF0ZWQgZm9yIEJpZyBDYWxlbmRhciBwbGVhc2UgbGV0IHVzIGtub3cgYW5kIHdlIG1heSBsaW5rIGl0IGhlcmUgaW4gdGhlIGRvY3VtZW50YXRpb24uYH08L3A+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1pbnRyb2R1Y3Rpb25cIiBtZHhUeXBlPVwiTGlua1RvXCI+RHJhZyBhbmQgRHJvcDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlO1xuXG5leHBvcnQgY29uc3QgX19wYWdlID0gKCkgPT4geyB0aHJvdyBuZXcgRXJyb3IoXCJEb2NzLW9ubHkgc3RvcnlcIik7IH07XG5cbl9fcGFnZS5wYXJhbWV0ZXJzID0geyBkb2NzT25seTogdHJ1ZSB9O1xuXG5jb25zdCBjb21wb25lbnRNZXRhID0geyB0aXRsZTogJ0FkZG9ucy9JbnRyb2R1Y3Rpb24nLCBpbmNsdWRlU3RvcmllczogW1wiX19wYWdlXCJdLCAgfTtcblxuY29uc3QgbWR4U3RvcnlOYW1lVG9LZXkgPSB7fTtcblxuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzID0gY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzIHx8IHt9O1xuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzLmRvY3MgPSB7XG4gIC4uLihjb21wb25lbnRNZXRhLnBhcmFtZXRlcnMuZG9jcyB8fCB7fSksXG4gIHBhZ2U6ICgpID0+IDxBZGRDb250ZXh0IG1keFN0b3J5TmFtZVRvS2V5PXttZHhTdG9yeU5hbWVUb0tleX0gbWR4Q29tcG9uZW50QW5ub3RhdGlvbnM9e2NvbXBvbmVudE1ldGF9PjxNRFhDb250ZW50IC8+PC9BZGRDb250ZXh0Pixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudE1ldGE7IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgYXNzZXJ0SXNGbiwgQWRkQ29udGV4dCB9IGZyb20gXCJAc3Rvcnlib29rL2FkZG9uLWRvY3NcIjtcblxuaW1wb3J0IHsgTWV0YSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPE1ldGEgdGl0bGU9XCJBZGRvbnMvRHJhZyBhbmQgRHJvcC9JbnRyb2R1Y3Rpb25cIiBtZHhUeXBlPVwiTWV0YVwiIC8+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZHJhZy1hbmQtZHJvcFwiXG4gICAgfX0+e2BEcmFnIGFuZCBEcm9wYH08L2gzPlxuICAgIDxwPntgQ3JlYXRlcyBhIGhpZ2hlci1vcmRlciBjb21wb25lbnQgKEhPQykgc3VwcG9ydGluZyBkcmFnICYgZHJvcCBmb3IgbW92aW5nIGFuZC9vciByZXNpemluZyBvZiBldmVudHM6YH08L3A+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YGltcG9ydCB7IENhbGVuZGFyIH0gZnJvbSAncmVhY3QtYmlnLWNhbGVuZGFyJ1xuaW1wb3J0IHdpdGhEcmFnQW5kRHJvcCBmcm9tICdyZWFjdC1iaWctY2FsZW5kYXIvbGliL2FkZG9ucy9kcmFnQW5kRHJvcCdcbmltcG9ydCAncmVhY3QtYmlnLWNhbGVuZGFyL2xpYi9hZGRvbnMvZHJhZ0FuZERyb3Avc3R5bGVzLmNzcydcblxuY29uc3QgRG5EQ2FsZW5kYXIgPSB3aXRoRHJhZ0FuZERyb3AoQ2FsZW5kYXIpXG5cbi8qIC4uLiAqL1xuXG5yZXR1cm4gKFxuICA8RG5EQ2FsZW5kYXJcbiAgICBsb2NhbGl6ZXI9e215TG9jYWxpemVyfVxuICAgIGV2ZW50cz17ZXZlbnRzfVxuICAgIGRyYWdnYWJsZUFjY2Vzc29yPXsoZXZlbnQpID0+IHRydWV9XG4gIC8+XG4pXG5gfTwvY29kZT48L3ByZT5cbiAgICA8cD57YFNldCBgfTxMaW5rVG8ga2luZD1cImFkZG9ucy1kcmFnLWFuZC1kcm9wLXByb3BzXCIgc3Rvcnk9XCJyZXNpemFibGVcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2ByZXNpemFibGVgfTwvTGlua1RvPntgIHRvIGZhbHNlIGluIHlvdXIgY2FsZW5kYXIgaWYgeW91IGRvbid0IHdhbnQgZXZlbnRzIHRvIGJlIHJlc2l6YWJsZS5cbmB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHJlc2l6YWJsZWB9PC9pbmxpbmVDb2RlPntgIGlzIHNldCB0byB0cnVlIGJ5IGRlZmF1bHQuYH08L3A+XG4gICAgPHA+e2BUaGUgSE9DIGFkZHMgYH08TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwib24tZXZlbnQtZHJvcFwiIG1keFR5cGU9XCJMaW5rVG9cIj57YG9uRXZlbnREcm9wYH08L0xpbmtUbz57YCwgYH08TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwib24tZXZlbnQtcmVzaXplXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgb25FdmVudFJlc2l6ZWB9PC9MaW5rVG8+e2AsIGFuZCBgfTxMaW5rVG8ga2luZD1cImFkZG9ucy1kcmFnLWFuZC1kcm9wLXByb3BzXCIgc3Rvcnk9XCJvbi1kcmFnLXN0YXJ0XCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgb25EcmFnU3RhcnRgfTwvTGlua1RvPntgIGNhbGxiYWNrIHByb3BlcnRpZXMgaWYgdGhlIGV2ZW50cyBhcmVcbm1vdmVkIG9yIHJlc2l6ZWQuIFRoZXNlIGNhbGxiYWNrcyBhcmUgY2FsbGVkIHdpdGggdGhlc2Ugc2lnbmF0dXJlczpgfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgZnVuY3Rpb24gb25FdmVudERyb3Aoe2V2ZW50LCBzdGFydCwgZW5kLCBhbGxEYXl9KSB7Li4ufVxuZnVuY3Rpb24gb25FdmVudFJlc2l6ZSh7ZXZlbnQsIHN0YXJ0LCBlbmQsIGFsbERheX0pIHsuLi59XG5mdW5jdGlvbiBvbkRyYWdTdGFydCh7ZXZlbnR9KSB7Li4ufVxuYH08L2NvZGU+PC9wcmU+XG4gICAgPHA+e2BNb3ZpbmcgYW5kIHJlc2l6aW5nIG9mIGV2ZW50cyBoYXMgc29tZSBzdWJ0bGV0eSB3aGljaCBvbmUgc2hvdWxkIGJlIGF3YXJlIG9mOmB9PC9wPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPHAgcGFyZW50TmFtZT1cImxpXCI+e2BJbiBzb21lIHNpdHVhdGlvbnMsIG5vbi1hbGxEYXkgZXZlbnRzIGFyZSBkaXNwbGF5ZWQgaW4gXCJyb3dcIiBmb3JtYXQgd2hlcmUgdGhleVxuYXJlIHJlbmRlcmVkIGhvcml6b250YWxseS4gVGhpcyBpcyB0aGUgY2FzZSBmb3IgQUxMIGV2ZW50cyBpbiBhIG1vbnRoIHZpZXcuIEl0XG5pcyBhbHNvIG9jY3VycyB3aXRoIG11bHRpLWRheSBldmVudHMgaW4gYSBkYXkgb3Igd2VlayB2aWV3ICh1bmxlc3MgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwic2hvdy1tdWx0aS1kYXktdGltZXNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BzaG93TXVsdGlEYXlUaW1lc2B9PC9MaW5rVG8+e2BcbmlzIHNldCkuYH08L3A+XG4gICAgICA8L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8cCBwYXJlbnROYW1lPVwibGlcIj57YFdoZW4gZHJvcHBpbmcgb3IgcmVzaXppbmcgbm9uLWFsbERheSBldmVudHMgaW50byBhIHRoZSBoZWFkZXIgYXJlYSBvciB3aGVuXG5yZXNpemluZyB0aGVtIGhvcml6b250YWxseSBiZWNhdXNlIHRoZXkgYXJlIGRpc3BsYXllZCBpbiByb3cgZm9ybWF0LCB0aGVpclxudGltZXMgYXJlIHByZXNlcnZlZCwgb25seSB0aGVpciBkYXRlIGlzIGNoYW5nZWQuYH08L3A+XG4gICAgICA8L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8cCBwYXJlbnROYW1lPVwibGlcIj57YElmIHlvdSBjYXJlIGFib3V0IHRoZXNlIGNvcm5lciBjYXNlcywgeW91IGNhbiBleGFtaW5lIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BhbGxEYXlgfTwvaW5saW5lQ29kZT57YCBwYXJhbSBzdXBwbGllZFxuaW4gdGhlIGNhbGxiYWNrIHRvIGRldGVybWluZSBob3cgdGhlIHVzZXIgZHJvcHBlZCBvciByZXNpemVkIHRoZSBldmVudC5gfTwvcD5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEFkZGl0aW9uYWxseSwgdGhpcyBIT0MgYWRkcyB0aGUgY2FsbGJhY2sgcHJvcHMgYH08TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwib24tZHJvcC1mcm9tLW91dHNpZGVcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BvbkRyb3BGcm9tT3V0c2lkZWB9PC9MaW5rVG8+e2AgYW5kIGB9PExpbmtUbyBraW5kPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtcHJvcHNcIiBzdG9yeT1cIm9uLWRyYWctb3ZlclwiIG1keFR5cGU9XCJMaW5rVG9cIj57YG9uRHJhZ092ZXJgfTwvTGlua1RvPntgOmB9PC9wPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPHAgcGFyZW50TmFtZT1cImxpXCI+e2BCeSBkZWZhdWx0LCB0aGUgY2FsZW5kYXIgd2lsbCBub3QgcmVzcG9uZCB0byBvdXRzaWRlIGRyYWdnYWJsZSBpdGVtcyBiZWluZyBkcm9wcGVkXG5vbnRvIGl0LiBIb3dldmVyLCBpZiBgfTxMaW5rVG8ga2luZD1cImFkZG9ucy1kcmFnLWFuZC1kcm9wLXByb3BzXCIgc3Rvcnk9XCJvbi1kcm9wLWZyb20tb3V0c2lkZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YG9uRHJvcEZyb21PdXRzaWRlYH08L0xpbmtUbz57YCBjYWxsYmFjayBpcyBwYXNzZWQsIHRoZW4gd2hlbiBkcmFnZ2FibGVcbkRPTSBlbGVtZW50cyBhcmUgZHJvcHBlZCBvbiB0aGUgY2FsZW5kYXIsIHRoZSBjYWxsYmFjayB3aWxsIGZpcmUsIHJlY2VpdmluZyBhblxub2JqZWN0IHdpdGggc3RhcnQgYW5kIGVuZCB0aW1lcywgYW5kIGFuIGFsbERheSBib29sZWFuLmB9PC9wPlxuICAgICAgPC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPHAgcGFyZW50TmFtZT1cImxpXCI+e2BJZiBgfTxMaW5rVG8ga2luZD1cImFkZG9ucy1kcmFnLWFuZC1kcm9wLXByb3BzXCIgc3Rvcnk9XCJvbi1kcm9wLWZyb20tb3V0c2lkZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YG9uRHJvcEZyb21PdXRzaWRlYH08L0xpbmtUbz57YCBpcyBwYXNzZWQsIGJ1dCBgfTxMaW5rVG8ga2luZD1cImFkZG9ucy1kcmFnLWFuZC1kcm9wLXByb3BzXCIgc3Rvcnk9XCJvbi1kcmFnLW92ZXJcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BvbkRyYWdPdmVyYH08L0xpbmtUbz57YCBpcyBub3QsIGFueSBkcmFnZ2FibGUgZXZlbnQgd2lsbCBiZVxuZHJvcHBhYmxlIG9udG8gdGhlIGNhbGVuZGFyIGJ5IGRlZmF1bHQuIE9uIHRoZSBvdGhlciBoYW5kLCBpZiBhbiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BvbkRyYWdPdmVyYH08L2lubGluZUNvZGU+e2AgY2FsbGJhY2tcbmB9PGVtIHBhcmVudE5hbWU9XCJwXCI+e2Bpc2B9PC9lbT57YCBwYXNzZWQsIHRoZW4gaXQgY2FuIGRpc2NyaW1pbmF0ZSBhcyB0byB3aGV0aGVyIGEgZHJhZ2dhYmxlIGl0ZW0gaXMgZHJvcHBhYmxlIG9uIHRoZVxuY2FsZW5kYXIuIFRvIGRlc2lnbmF0ZSBhIGRyYWdnYWJsZSBpdGVtIGFzIGRyb3BwYWJsZSwgY2FsbCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BldmVudC5wcmV2ZW50RGVmYXVsdGB9PC9pbmxpbmVDb2RlPntgXG5pbnNpZGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25EcmFnT3ZlcmB9PC9pbmxpbmVDb2RlPntgLiBJZiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BldmVudC5wcmV2ZW50RGVmYXVsdGB9PC9pbmxpbmVDb2RlPntgIGlzIG5vdCBjYWxsZWQgaW4gdGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG9uRHJhZ092ZXJgfTwvaW5saW5lQ29kZT57YFxuY2FsbGJhY2ssIHRoZW4gdGhlIGRyYWdnYWJsZSBpdGVtIHdpbGwgbm90IGJlIGRyb3BwYWJsZSBvbiB0aGUgY2FsZW5kYXIuYH08L3A+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YGZ1bmN0aW9uIG9uRHJvcEZyb21PdXRzaWRlKHsgc3RhcnQsIGVuZCwgYWxsRGF5IH0pIHsuLi59XG5mdW5jdGlvbiBvbkRyYWdPdmVyKERyYWdFdmVudDogU3ludGhldGljRXZlbnQpIHsuLi59XG5gfTwvY29kZT48L3ByZT5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTtcblxuZXhwb3J0IGNvbnN0IF9fcGFnZSA9ICgpID0+IHsgdGhyb3cgbmV3IEVycm9yKFwiRG9jcy1vbmx5IHN0b3J5XCIpOyB9O1xuXG5fX3BhZ2UucGFyYW1ldGVycyA9IHsgZG9jc09ubHk6IHRydWUgfTtcblxuY29uc3QgY29tcG9uZW50TWV0YSA9IHsgdGl0bGU6ICdBZGRvbnMvRHJhZyBhbmQgRHJvcC9JbnRyb2R1Y3Rpb24nLCBpbmNsdWRlU3RvcmllczogW1wiX19wYWdlXCJdLCAgfTtcblxuY29uc3QgbWR4U3RvcnlOYW1lVG9LZXkgPSB7fTtcblxuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzID0gY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzIHx8IHt9O1xuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzLmRvY3MgPSB7XG4gIC4uLihjb21wb25lbnRNZXRhLnBhcmFtZXRlcnMuZG9jcyB8fCB7fSksXG4gIHBhZ2U6ICgpID0+IDxBZGRDb250ZXh0IG1keFN0b3J5TmFtZVRvS2V5PXttZHhTdG9yeU5hbWVUb0tleX0gbWR4Q29tcG9uZW50QW5ub3RhdGlvbnM9e2NvbXBvbmVudE1ldGF9PjxNRFhDb250ZW50IC8+PC9BZGRDb250ZXh0Pixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudE1ldGE7IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgYXNzZXJ0SXNGbiwgQWRkQ29udGV4dCB9IGZyb20gXCJAc3Rvcnlib29rL2FkZG9uLWRvY3NcIjtcblxuaW1wb3J0IHsgTWV0YSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPE1ldGEgdGl0bGU9XCJBZGRvbnMvRHJhZyBhbmQgRHJvcC9wcm9wcy9GdWxsIFByb3AgTGlzdFwiIG1keFR5cGU9XCJNZXRhXCIgLz5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJhbGwtZHJhZy1hbmQtZHJvcHMtcHJvcHNcIlxuICAgIH19PntgQWxsIERyYWcgYW5kIERyb3BzIFByb3BzYH08L2gxPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm9uZXZlbnRkcm9wXCJcbiAgICB9fT57YG9uRXZlbnREcm9wYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoeyBldmVudCwgc3RhcnQsIGVuZCwgYWxsRGF5IH0pID0+IGFueWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cImFkZG9ucy1kcmFnLWFuZC1kcm9wLXByb3BzXCIgc3Rvcnk9XCJvbi1ldmVudC1kcm9wXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQSBjYWxsYmFjayBmaXJlZCB3aGVuIHVzZXIgZHJvcHMgYW4gaXRlbSBmcm9tIG9uZSBzbG90IHRvIGFub3RoZXIgZnJvbSB3aXRoaW4gdGhlIENhbGVuZGFyLiBEZXZlbG9wZXJzIHdpbGwgdHlwaWNhbGx5IHVzZSB0aGlzIG1ldGhvZCB0byB1cGRhdGUgYW4gaXRlbSdzIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHN0YXJ0YH08L2lubGluZUNvZGU+e2AgYW5kIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGVuZGB9PC9pbmxpbmVDb2RlPntgIGluIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImV2ZW50c1wiIG1keFR5cGU9XCJMaW5rVG9cIj57YGV2ZW50c2B9PC9MaW5rVG8+e2AuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwib25kcmFnc3RhcnRcIlxuICAgIH19Pntgb25EcmFnU3RhcnRgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uICh7IGV2ZW50LCBhY3Rpb24sIGRpcmVjdGlvbiB9KSA9PiBhbnlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwib24tZHJhZy1zdGFydFwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEEgY2FsbGJhY2sgZmlyZWQgd2hlbiB1c2VyIGJlZ2lucyB0byBkcmFnIGFuIGV2ZW50LmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm9uZHJvcGZyb21vdXRzaWRlXCJcbiAgICB9fT57YG9uRHJvcEZyb21PdXRzaWRlYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoeyBzdGFydCwgZW5kLCBhbGxEYXksIHJlc291cmNlIH0pID0+IGFueWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cImFkZG9ucy1kcmFnLWFuZC1kcm9wLXByb3BzXCIgc3Rvcnk9XCJvbi1kcm9wLWZyb20tb3V0c2lkZVwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEEgY2FsbGJhY2sgZmlyZWQgd2hlbiB1c2VyIGRyb3BzIGFuIGl0ZW0gb250byB0aGUgQ2FsZW5kYXIgZnJvbSBvdXRzaWRlIG9mIHRoZSBDYWxlbmRhci4gRGV2ZWxvcGVycyB3aWxsIHR5cGljYWxseSB1c2UgdGhpcyBtZXRob2QgdG8gYWRkIG5ldyBpdGVtcyB0byB0aGUgQ2FsZW5kYXIncyBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJldmVudHNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BldmVudHNgfTwvTGlua1RvPntgLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YEltcG9ydGFudDpgfTwvc3Ryb25nPntgIFRoZSBjYWxsYmFjayBkb2VzIGB9PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgbm90YH08L3N0cm9uZz57YCByZWNlaXZlIHRoZSBlbGVtZW50IGJlaW5nIGRyb3BwZWQuIEl0IG9ubHkgcmVjZWl2ZXMgdGhlIGRldGFpbHMgb2YgdGhlIHNsb3QgYW4gZWxlbWVudCB3YXMgZHJvcHBlZCBvbi5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJkcmFnZnJvbW91dHNpZGVpdGVtXCJcbiAgICB9fT57YGRyYWdGcm9tT3V0c2lkZUl0ZW1gfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uICgpID0+IGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwiZHJhZy1mcm9tLW91dHNpZGUtaXRlbVwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEEgY2FsbGJhY2sgdG8gZ2V0IGEgdGVtcG9yYXJ5IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGV2ZW50YH08L2lubGluZUNvZGU+e2AgdG8gZGlzcGxheSBpbiBhIHNsb3QgaW4gdGhlIHByb2Nlc3Mgb2YgZHJhZ2dpbmcgZnJvbSBvdXRzaWRlLiBUaGlzIGlzIG5vdCByZXF1aXJlZCBmb3IgRHJhZyBhbmQgRHJvcCB0byBmdW5jdGlvbiwgYnV0IHByb3ZpZGVzIGEgbmljZSB2aXN1YWwgY3VlIHRvIHRoZSB1c2VyIHdoZW4gZHJhZ2dpbmcgaW4gYW4gaXRlbSBmcm9tIG91dHNpZGUgb2YgdGhlIENhbGVuZGFyLmB9PC9wPlxuICAgIDxwPntgVGlwOiBUb2dnbGUgdGhlIGNoZWNrYm94LCBpbiB0aGUgZXhhbXBsZSwgYW5kIGRyYWcgYW4gb3V0c2lkZSBpdGVtIGluLiBEbyB0aGlzIGZyb20gYm90aCBjaGVja2JveCBzdGF0ZXMgdG8gc2VlIHRoZSBkaWZmZXJlbmNlIGluIGVmZmVjdC5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJvbmRyYWdvdmVyXCJcbiAgICB9fT57YG9uRHJhZ092ZXJgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChkcmFnRXZlbnQ6IFN5bnRoZXRpY0V2ZW50KSA9PiBhbnlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwib24tZHJhZy1vdmVyXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgSWYgYW4gYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25EcmFnT3ZlcmB9PC9pbmxpbmVDb2RlPntgIGNhbGxiYWNrIGB9PGVtIHBhcmVudE5hbWU9XCJwXCI+e2Bpc2B9PC9lbT57YCBwYXNzZWQsIHRoZW4gaXQgY2FuIGRpc2NyaW1pbmF0ZSBhcyB0byB3aGV0aGVyIGEgZHJhZ2dhYmxlIGl0ZW0gaXMgZHJvcHBhYmxlIG9uIHRoZSBjYWxlbmRhci4gVG8gZGVzaWduYXRlIGEgZHJhZ2dhYmxlIGl0ZW0gYXMgZHJvcHBhYmxlLCBjYWxsIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGV2ZW50LnByZXZlbnREZWZhdWx0YH08L2lubGluZUNvZGU+e2AgaW5zaWRlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG9uRHJhZ092ZXJgfTwvaW5saW5lQ29kZT57YC4gSWYgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZXZlbnQucHJldmVudERlZmF1bHRgfTwvaW5saW5lQ29kZT57YCBpcyBub3QgY2FsbGVkIGluIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BvbkRyYWdPdmVyYH08L2lubGluZUNvZGU+e2AgY2FsbGJhY2ssIHRoZW4gdGhlIGRyYWdnYWJsZSBpdGVtIHdpbGwgbm90IGJlIGRyb3BwYWJsZSBvbiB0aGUgY2FsZW5kYXIuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZHJhZ2dhYmxlYWNjZXNzb3JcIlxuICAgIH19PntgZHJhZ2dhYmxlQWNjZXNzb3JgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YHN0cmluZ3xmdW5jdGlvbiAoZXZlbnQpID0+IGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YCgpID0+IHRydWVgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwiZHJhZ2dhYmxlLWFjY2Vzc29yXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgV2hlbiB1c2VkLCBjYW4gZGV0ZXJtaW5lIHdoZXRoZXIgYW4gJ2V2ZW50JyBpcyBkcmFnZ2FibGVgfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJyZXNpemFibGVcIlxuICAgIH19PntgcmVzaXphYmxlYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2Bib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2B0cnVlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtcHJvcHNcIiBzdG9yeT1cInJlc2l6YWJsZVwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YERldGVybWluZXMgaWYgZXZlbnRzIG1heSBiZSByZXNpemVkIG9uIHRoZSBDYWxlbmRhci4gVXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIGB9PExpbmtUbyBraW5kPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtcHJvcHNcIiBzdG9yeT1cIm9uLWV2ZW50LXJlc2l6ZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YG9uRXZlbnRSZXNpemVgfTwvTGlua1RvPntgLiBXaGVuIHVzZWQgd2l0aCB0aGUgYH08TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwicmVzaXphYmxlLWFjY2Vzc29yXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgcmVzaXphYmxlQWNjZXNzb3JgfTwvTGlua1RvPntgIHRoZSBkZXZlbG9wZXIgaGFzIGV2ZW4gZ3JlYXRlciBjb250cm9sLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YE5vdGU6YH08L3N0cm9uZz57YCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2ByZXNpemFibGVgfTwvaW5saW5lQ29kZT57YCBldmVudHMgbXVzdCBhbHNvIGJlIGRyYWdnYWJsZS4gWW91IGNhbm5vdCByZXNpemUgYW4gZXZlbnQgd2l0aCBhIGB9PExpbmtUbyBraW5kPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtcHJvcHNcIiBzdG9yeT1cImRyYWdnYWJsZS1hY2Nlc3NvclwiIG1keFR5cGU9XCJMaW5rVG9cIj57YGRyYWdnYWJsZUFjY2Vzc29yYH08L0xpbmtUbz57YCBwcm9wIG9mIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGZhbHNlYH08L2lubGluZUNvZGU+e2AuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwib25ldmVudHJlc2l6ZVwiXG4gICAgfX0+e2BvbkV2ZW50UmVzaXplYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoeyBldmVudCwgc3RhcnQsIGVuZCB9KSA9PiBhbnlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwib24tZXZlbnQtcmVzaXplXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQSBjYWxsYmFjayBmaXJlZCB3aGVuIHVzZXIgcmVzaXplcyBhbiBldmVudC4gRGV2ZWxvcGVycyB3aWxsIHR5cGljYWxseSB1c2UgdGhpcyBtZXRob2QgdG8gdXBkYXRlIGFuIGl0ZW0ncyBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BzdGFydGB9PC9pbmxpbmVDb2RlPntgIGFuZCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BlbmRgfTwvaW5saW5lQ29kZT57YCBpbiBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJldmVudHNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BldmVudHNgfTwvTGlua1RvPntgLmB9PC9wPlxuICAgIDxwPntgVGhlIGB9PExpbmtUbyBraW5kPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtcHJvcHNcIiBzdG9yeT1cInJlc2l6YWJsZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YHJlc2l6YWJsZWB9PC9MaW5rVG8+e2AgcHJvcCBtdXN0IGJlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHRydWVgfTwvaW5saW5lQ29kZT57YCAodGhlIGRlZmF1bHQpIHRvIHVzZSB0aGUgbWV0aG9kLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YE5vdGU6YH08L3N0cm9uZz57YCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2ByZXNpemFibGVgfTwvaW5saW5lQ29kZT57YCBldmVudHMgbXVzdCBhbHNvIGJlIGRyYWdnYWJsZS4gWW91IGNhbm5vdCByZXNpemUgYW4gZXZlbnQgd2l0aCBhIGB9PExpbmtUbyBraW5kPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtcHJvcHNcIiBzdG9yeT1cImRyYWdnYWJsZS1hY2Nlc3NvclwiIG1keFR5cGU9XCJMaW5rVG9cIj57YGRyYWdnYWJsZUFjY2Vzc29yYH08L0xpbmtUbz57YCBwcm9wIG9mIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGZhbHNlYH08L2lubGluZUNvZGU+e2AuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwicmVzaXphYmxlYWNjZXNzb3JcIlxuICAgIH19PntgcmVzaXphYmxlQWNjZXNzb3JgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YHN0cmluZ3xmdW5jdGlvbiAoZXZlbnQpID0+IGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YCgpID0+IHRydWVgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwicmVzaXphYmxlLWFjY2Vzc29yXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgRGV0ZXJtaW5lcyBpZiBhbiBldmVudCBpcyByZXNpemFibGUuYH08L3A+XG4gICAgPHA+PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgTm90ZTpgfTwvc3Ryb25nPntgIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHJlc2l6YWJsZWB9PC9pbmxpbmVDb2RlPntgIGV2ZW50cyBtdXN0IGFsc28gYmUgZHJhZ2dhYmxlLiBZb3UgY2Fubm90IHJlc2l6ZSBhbiBldmVudCB3aXRoIGEgYH08TGlua1RvIGtpbmQ9XCJhZGRvbnMtZHJhZy1hbmQtZHJvcC1wcm9wc1wiIHN0b3J5PVwiZHJhZ2dhYmxlLWFjY2Vzc29yXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgZHJhZ2dhYmxlQWNjZXNzb3JgfTwvTGlua1RvPntgIHByb3Agb2YgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZmFsc2VgfTwvaW5saW5lQ29kZT57YC5gfTwvcD5cbiAgICA8L01EWExheW91dD47XG59XG47XG5NRFhDb250ZW50LmlzTURYQ29tcG9uZW50ID0gdHJ1ZTtcblxuZXhwb3J0IGNvbnN0IF9fcGFnZSA9ICgpID0+IHsgdGhyb3cgbmV3IEVycm9yKFwiRG9jcy1vbmx5IHN0b3J5XCIpOyB9O1xuXG5fX3BhZ2UucGFyYW1ldGVycyA9IHsgZG9jc09ubHk6IHRydWUgfTtcblxuY29uc3QgY29tcG9uZW50TWV0YSA9IHsgdGl0bGU6ICdBZGRvbnMvRHJhZyBhbmQgRHJvcC9wcm9wcy9GdWxsIFByb3AgTGlzdCcsIGluY2x1ZGVTdG9yaWVzOiBbXCJfX3BhZ2VcIl0sICB9O1xuXG5jb25zdCBtZHhTdG9yeU5hbWVUb0tleSA9IHt9O1xuXG5jb21wb25lbnRNZXRhLnBhcmFtZXRlcnMgPSBjb21wb25lbnRNZXRhLnBhcmFtZXRlcnMgfHwge307XG5jb21wb25lbnRNZXRhLnBhcmFtZXRlcnMuZG9jcyA9IHtcbiAgLi4uKGNvbXBvbmVudE1ldGEucGFyYW1ldGVycy5kb2NzIHx8IHt9KSxcbiAgcGFnZTogKCkgPT4gPEFkZENvbnRleHQgbWR4U3RvcnlOYW1lVG9LZXk9e21keFN0b3J5TmFtZVRvS2V5fSBtZHhDb21wb25lbnRBbm5vdGF0aW9ucz17Y29tcG9uZW50TWV0YX0+PE1EWENvbnRlbnQgLz48L0FkZENvbnRleHQ+LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50TWV0YTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBhc3NlcnRJc0ZuLCBBZGRDb250ZXh0IH0gZnJvbSBcIkBzdG9yeWJvb2svYWRkb24tZG9jc1wiO1xuXG5pbXBvcnQgeyBNZXRhIH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8TWV0YSB0aXRsZT1cIkV4YW1wbGVzL0RyYWcgYW5kIERyb3BcIiBtZHhUeXBlPVwiTWV0YVwiIC8+XG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwiZHJhZy1hbmQtZHJvcFwiXG4gICAgfX0+e2BEcmFnIGFuZCBEcm9wYH08L2gxPlxuICAgIDxwPntgVGhlIGB9PExpbmtUbyBraW5kPVwiYWRkb25zLWRyYWctYW5kLWRyb3AtaW50cm9kdWN0aW9uXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgRHJhZyBhbmQgRHJvcCBFeGFtcGxlc2B9PC9MaW5rVG8+e2AgaGF2ZSBiZWVuIG1vdmVkIGludG8gdGhlIGB9PExpbmtUbyBraW5kPVwiYWRkb25zLWludHJvZHVjdGlvblwiIG1keFR5cGU9XCJMaW5rVG9cIj57YEFkZE9uc2B9PC9MaW5rVG8+e2Agc2VjdGlvbiBvZiB0aGUgZG9jdW1lbnRhdGlvbmB9PC9wPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlO1xuXG5leHBvcnQgY29uc3QgX19wYWdlID0gKCkgPT4geyB0aHJvdyBuZXcgRXJyb3IoXCJEb2NzLW9ubHkgc3RvcnlcIik7IH07XG5cbl9fcGFnZS5wYXJhbWV0ZXJzID0geyBkb2NzT25seTogdHJ1ZSB9O1xuXG5jb25zdCBjb21wb25lbnRNZXRhID0geyB0aXRsZTogJ0V4YW1wbGVzL0RyYWcgYW5kIERyb3AnLCBpbmNsdWRlU3RvcmllczogW1wiX19wYWdlXCJdLCAgfTtcblxuY29uc3QgbWR4U3RvcnlOYW1lVG9LZXkgPSB7fTtcblxuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzID0gY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzIHx8IHt9O1xuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzLmRvY3MgPSB7XG4gIC4uLihjb21wb25lbnRNZXRhLnBhcmFtZXRlcnMuZG9jcyB8fCB7fSksXG4gIHBhZ2U6ICgpID0+IDxBZGRDb250ZXh0IG1keFN0b3J5TmFtZVRvS2V5PXttZHhTdG9yeU5hbWVUb0tleX0gbWR4Q29tcG9uZW50QW5ub3RhdGlvbnM9e2NvbXBvbmVudE1ldGF9PjxNRFhDb250ZW50IC8+PC9BZGRDb250ZXh0Pixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudE1ldGE7IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgYXNzZXJ0SXNGbiwgQWRkQ29udGV4dCB9IGZyb20gXCJAc3Rvcnlib29rL2FkZG9uLWRvY3NcIjtcblxuaW1wb3J0IHsgTWV0YSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPE1ldGEgdGl0bGU9XCJHdWlkZXMvQ3VzdG9tIFN0eWxpbmdcIiBtZHhUeXBlPVwiTWV0YVwiIC8+XG4gICAgPGgxIHsuLi57XG4gICAgICBcImlkXCI6IFwiY3VzdG9tLXN0eWxpbmdcIlxuICAgIH19PntgQ3VzdG9tIFN0eWxpbmdgfTwvaDE+XG4gICAgPHA+e2BPdXQgb2YgdGhlIGJveCwgeW91IGNhbiBpbmNsdWRlIHRoZSBjb21waWxlZCBDU1MgZmlsZXMgYW5kIGJlIHVwIGFuZCBydW5uaW5nLiBCdXQsIHNvbWV0aW1lcywgeW91IG1heSB3YW50IHRvIHN0eWxlIEJpZyBDYWxlbmRhciB0byBtYXRjaCB5b3VyIGFwcGxpY2F0aW9uIHN0eWxpbmcuIEZvciB0aGlzIHJlYXNvbiwgU0FTUyBmaWxlcyBhcmUgaW5jbHVkZWQgd2l0aCBCaWcgQ2FsZW5kYXIuYH08L3A+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1zYXNzXCJcbiAgICAgIH19PntgQGltcG9ydCAncmVhY3QtYmlnLWNhbGVuZGFyL2xpYi9zYXNzL3N0eWxlcyc7XG5AaW1wb3J0ICdyZWFjdC1iaWctY2FsZW5kYXIvbGliL2FkZG9ucy9kcmFnQW5kRHJvcC9zdHlsZXMnOyAvLyBpZiB1c2luZyBEbkRcbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxwPntgU0FTUyBpbXBsZW1lbnRhdGlvbiBwcm92aWRlcyBhIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHZhcmlhYmxlc2B9PC9pbmxpbmVDb2RlPntgIGZpbGUgY29udGFpbmluZyBjb2xvciBhbmQgc2l6aW5nIHZhcmlhYmxlcyB0aGF0IHlvdSBjYW4gdXBkYXRlIHRvIGZpdCB5b3VyIGFwcGxpY2F0aW9uLiBOb3RlOiBDaGFuZ2luZyBhbmQvb3Igb3ZlcnJpZGluZyBzdHlsZXMgY2FuIGNhdXNlIHJlbmRlcmluZyBpc3N1ZXMgd2l0aCB5b3VyIEJpZyBDYWxlbmRhci4gQ2FyZWZ1bGx5IHRlc3QgZWFjaCBjaGFuZ2UgYWNjb3JkaW5nbHkuYH08L3A+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7XG5cbmV4cG9ydCBjb25zdCBfX3BhZ2UgPSAoKSA9PiB7IHRocm93IG5ldyBFcnJvcihcIkRvY3Mtb25seSBzdG9yeVwiKTsgfTtcblxuX19wYWdlLnBhcmFtZXRlcnMgPSB7IGRvY3NPbmx5OiB0cnVlIH07XG5cbmNvbnN0IGNvbXBvbmVudE1ldGEgPSB7IHRpdGxlOiAnR3VpZGVzL0N1c3RvbSBTdHlsaW5nJywgaW5jbHVkZVN0b3JpZXM6IFtcIl9fcGFnZVwiXSwgIH07XG5cbmNvbnN0IG1keFN0b3J5TmFtZVRvS2V5ID0ge307XG5cbmNvbXBvbmVudE1ldGEucGFyYW1ldGVycyA9IGNvbXBvbmVudE1ldGEucGFyYW1ldGVycyB8fCB7fTtcbmNvbXBvbmVudE1ldGEucGFyYW1ldGVycy5kb2NzID0ge1xuICAuLi4oY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzLmRvY3MgfHwge30pLFxuICBwYWdlOiAoKSA9PiA8QWRkQ29udGV4dCBtZHhTdG9yeU5hbWVUb0tleT17bWR4U3RvcnlOYW1lVG9LZXl9IG1keENvbXBvbmVudEFubm90YXRpb25zPXtjb21wb25lbnRNZXRhfT48TURYQ29udGVudCAvPjwvQWRkQ29udGV4dD4sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnRNZXRhOyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IGFzc2VydElzRm4sIEFkZENvbnRleHQgfSBmcm9tIFwiQHN0b3J5Ym9vay9hZGRvbi1kb2NzXCI7XG5cbmltcG9ydCB7IE1ldGEgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5pbXBvcnQgTGlua1RvIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tbGlua3MvcmVhY3QnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5mdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxNZXRhIHRpdGxlPVwiR3VpZGVzL0NyZWF0aW5nIEN1c3RvbSBWaWV3c1wiIG1keFR5cGU9XCJNZXRhXCIgLz5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJjcmVhdGluZy1hLWN1c3RvbS12aWV3XCJcbiAgICB9fT57YENyZWF0aW5nIEEgQ3VzdG9tIFZpZXdgfTwvaDE+XG4gICAgPHA+e2BJdCBpcyBwb3NzaWJsZSB0byBvdmVycmlkZSBhbiBleGlzdGluZyBDYWxlbmRhciBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2B2aWV3YH08L2lubGluZUNvZGU+e2AsIG9yIGV2ZW4gY3JlYXRlIGEgbmV3IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHZpZXdgfTwvaW5saW5lQ29kZT57YCBhbGwgdG9nZXRoZXIsIGJ5IGFkaGVyaW5nIHRvIGEgc3BlY2lmaWMgaW50ZXJmYWNlLmB9PC9wPlxuICAgIDxMaW5rVG8ga2luZD1cImV4YW1wbGVzXCIgc3Rvcnk9XCJleGFtcGxlLTlcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIFZpZXcgQW4gRXhhbXBsZVxuICAgIDwvTGlua1RvPlxuICAgIDxwPntgRmlyc3QgYnVpbGQgeW91ciBjdXN0b20gYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgdmlld2B9PC9pbmxpbmVDb2RlPntgIGNvbXBvbmVudC4gVGhpcyBjb3VsZCBiZSBiYXNlZCBvZmYgYW4gZXhpc3RpbmcgY29tcG9uZW50LCBvciBzb21ldGhpbmcgY29tcGxldGVseSBjdXN0b20uYH08L3A+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YGltcG9ydCBSZWFjdCwge3VzZU1lbW99IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgTmF2aWdhdGUgfSBmcm9tICdyZWFjdC1iaWctY2FsZW5kYXInXG5pbXBvcnQgVGltZUdyaWQgZnJvbSAncmVhY3QtYmlnLWNhbGVuZGFyL2xpYi9UaW1lR3JpZCdcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ3VzdG9tV2Vla1ZpZXcoe1xuICBkYXRlLFxuICBsb2NhbGl6ZXIsXG4gIG1heCA9IGxvY2FsaXplci5lbmRPZihuZXcgRGF0ZSgpLCAnZGF5JyksXG4gIG1pbiA9IGxvY2FsaXplci5zdGFydE9mKG5ldyBEYXRlKCksICdkYXknKSxcbiAgc2Nyb2xsVG9UaW1lID0gbG9jYWxpemVyLnN0YXJ0T2YobmV3IERhdGUoKSwgJ2RheScpLFxuICAuLi5wcm9wc1xufSkge1xuICBjb25zdCBjdXJyUmFuZ2UgPSB1c2VNZW1vKFxuICAgICgpID0+IEN1c3RvbVdlZWtWaWV3LnJhbmdlKGRhdGUsIHsgbG9jYWxpemVyIH0pLFxuICAgIFtkYXRlLCBsb2NhbGl6ZXJdXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxUaW1lR3JpZFxuICAgICAgZGF0ZT17ZGF0ZX1cbiAgICAgIGV2ZW50T2Zmc2V0PXsxNX1cbiAgICAgIGxvY2FsaXplcj17bG9jYWxpemVyfVxuICAgICAgbWF4PXttYXh9XG4gICAgICBtaW49e21pbn1cbiAgICAgIHJhbmdlPXtjdXJyUmFuZ2V9XG4gICAgICBzY3JvbGxUb1RpbWU9e3Njcm9sbFRvVGltZX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICAvPlxuICApXG59XG5cbkN1c3RvbVdlZWtWaWV3LnByb3BUeXBlcyA9IHtcbiAgZGF0ZTogUHJvcFR5cGVzLmluc3RhbmNlT2YoRGF0ZSkuaXNSZXF1aXJlZCxcbiAgbG9jYWxpemVyOiBQcm9wVHlwZXMub2JqZWN0LFxuICBtYXg6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuICBtaW46IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxuICBzY3JvbGxUb1RpbWU6IFByb3BUeXBlcy5pbnN0YW5jZU9mKERhdGUpLFxufVxuXG5DdXN0b21XZWVrVmlldy5yYW5nZSA9IChkYXRlLCB7IGxvY2FsaXplciB9KSA9PiB7XG4gIGNvbnN0IHN0YXJ0ID0gZGF0ZVxuICBjb25zdCBlbmQgPSBsb2NhbGl6ZXIuYWRkKHN0YXJ0LCAyLCAnZGF5JylcblxuICBsZXQgY3VycmVudCA9IHN0YXJ0XG4gIGNvbnN0IHJhbmdlID0gW11cblxuICB3aGlsZSAobG9jYWxpemVyLmx0ZShjdXJyZW50LCBlbmQsICdkYXknKSkge1xuICAgIHJhbmdlLnB1c2goY3VycmVudClcbiAgICBjdXJyZW50ID0gbG9jYWxpemVyLmFkZChjdXJyZW50LCAxLCAnZGF5JylcbiAgfVxuXG4gIHJldHVybiByYW5nZVxufVxuXG5DdXN0b21XZWVrVmlldy5uYXZpZ2F0ZSA9IChkYXRlLCBhY3Rpb24sIHsgbG9jYWxpemVyIH0pID0+IHtcbiAgc3dpdGNoIChhY3Rpb24pIHtcbiAgICBjYXNlIE5hdmlnYXRlLlBSRVZJT1VTOlxuICAgICAgcmV0dXJuIGxvY2FsaXplci5hZGQoZGF0ZSwgLTMsICdkYXknKVxuXG4gICAgY2FzZSBOYXZpZ2F0ZS5ORVhUOlxuICAgICAgcmV0dXJuIGxvY2FsaXplci5hZGQoZGF0ZSwgMywgJ2RheScpXG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGRhdGVcbiAgfVxufVxuXG5DdXN0b21XZWVrVmlldy50aXRsZSA9IChkYXRlLCB7IGxvY2FsaXplciB9KSA9PiB7XG4gIGNvbnN0IFtzdGFydCwgLi4ucmVzdF0gPSBDdXN0b21XZWVrVmlldy5yYW5nZShkYXRlLCB7IGxvY2FsaXplciB9KVxuICByZXR1cm4gbG9jYWxpemVyLmZvcm1hdCh7IHN0YXJ0LCBlbmQ6IHJlc3QucG9wKCkgfSwgJ2RheVJhbmdlSGVhZGVyRm9ybWF0Jylcbn1cbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxwPntgUGF5IHNwZWNpYWwgYXR0ZW50aW9uIHRvIHRoZSBhZGRpdGlvbmFsIHN0YXRpYyBtZXRob2RzIGF0dGFjaGVkIHRvIHlvdXIgY29tcG9uZW50LiBBcyBzdGF0aWMgbWV0aG9kcywgdGhleSBoYXZlIG5vIGNvbmNlcHQgb2YgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgdGhpc2B9PC9pbmxpbmVDb2RlPntgLCBhbmQgaGF2ZSBzcGVjaWZpYyBhcmd1bWVudHMgdGhhdCB3aWxsIGJlIHBhc3NlZCBpbnRvIHRoZW0uYH08L3A+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YGludGVyZmFjZSBWaWV3IHtcbiAgc3RhdGljIHRpdGxlKGRhdGU6IERhdGUsIHsgZm9ybWF0czogRGF0ZUZvcm1hdFtdLCBjdWx0dXJlOiBzdHJpbmc/LCAuLi5wcm9wcyB9KTogc3RyaW5nXG4gIHN0YXRpYyBuYXZpZ2F0ZShkYXRlOiBEYXRlLCBhY3Rpb246ICdQUkVWJyB8ICdORVhUJyB8ICdEQVRFJyk6IERhdGVcbiAgc3RhdGljIHJhbmdlPyhkYXRlOiBEYXRlLCB7IGxvY2FsaXplcjogRGF0ZUxvY2FsaXplciwgLi4ucHJvcHMgfSk6IGFycmF5XG59XG5gfTwvY29kZT48L3ByZT5cbiAgICA8cD57YFRvIGltcGxlbWVudCB5b3VyIGN1c3RvbSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2B2aWV3YH08L2lubGluZUNvZGU+e2AsIGluY2x1ZGUgaXQgaW4geW91ciBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJ2aWV3c1wiIG1keFR5cGU9XCJMaW5rVG9cIj57YHZpZXdzYH08L0xpbmtUbz57YCBwcm9wLmB9PC9wPlxuICAgIDxwcmU+PGNvZGUgcGFyZW50TmFtZT1cInByZVwiIHsuLi57XG4gICAgICAgIFwiY2xhc3NOYW1lXCI6IFwibGFuZ3VhZ2UtanNcIlxuICAgICAgfX0+e2BpbXBvcnQgQ3VzdG9tV2Vla1ZpZXcgZnJvbSAnLi9DdXN0b21XZWVrVmlldydcbi8vLi4uXG5jb25zdCB7dmlld3MsIC4uLm90aGVyUHJvcHN9ID0gdXNlTWVtbygoKSA9PiAoe1xuICB2aWV3czoge1xuICAgIG1vbnRoOiB0cnVlLFxuICAgIHdlZWs6IEN1c3RvbVdlZWtWaWV3LFxuICAgIGRheTogdHJ1ZVxuICB9LFxuICAvLyAuLi4gb3RoZXIgcHJvcHNcbn0pLCBbXSlcbi8vLi4uXG48Q2FsZW5kYXIgdmlld3M9e3ZpZXdzfSB7Li4ub3RoZXJQcm9wc30gLz5cbmB9PC9jb2RlPjwvcHJlPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlO1xuXG5leHBvcnQgY29uc3QgX19wYWdlID0gKCkgPT4geyB0aHJvdyBuZXcgRXJyb3IoXCJEb2NzLW9ubHkgc3RvcnlcIik7IH07XG5cbl9fcGFnZS5wYXJhbWV0ZXJzID0geyBkb2NzT25seTogdHJ1ZSB9O1xuXG5jb25zdCBjb21wb25lbnRNZXRhID0geyB0aXRsZTogJ0d1aWRlcy9DcmVhdGluZyBDdXN0b20gVmlld3MnLCBpbmNsdWRlU3RvcmllczogW1wiX19wYWdlXCJdLCAgfTtcblxuY29uc3QgbWR4U3RvcnlOYW1lVG9LZXkgPSB7fTtcblxuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzID0gY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzIHx8IHt9O1xuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzLmRvY3MgPSB7XG4gIC4uLihjb21wb25lbnRNZXRhLnBhcmFtZXRlcnMuZG9jcyB8fCB7fSksXG4gIHBhZ2U6ICgpID0+IDxBZGRDb250ZXh0IG1keFN0b3J5TmFtZVRvS2V5PXttZHhTdG9yeU5hbWVUb0tleX0gbWR4Q29tcG9uZW50QW5ub3RhdGlvbnM9e2NvbXBvbmVudE1ldGF9PjxNRFhDb250ZW50IC8+PC9BZGRDb250ZXh0Pixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudE1ldGE7IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgYXNzZXJ0SXNGbiwgQWRkQ29udGV4dCB9IGZyb20gXCJAc3Rvcnlib29rL2FkZG9uLWRvY3NcIjtcblxuaW1wb3J0IHsgTWV0YSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPE1ldGEgdGl0bGU9XCJHdWlkZXMvVW5kZXJzdGFuZGluZyBEYXRlc1wiIG1keFR5cGU9XCJNZXRhXCIgLz5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJ1bmRlcnN0YW5kaW5nLWRhdGVzXCJcbiAgICB9fT57YFVuZGVyc3RhbmRpbmcgRGF0ZXNgfTwvaDE+XG4gICAgPHA+e2BCaWcgQ2FsZW5kYXIgaXMgYWxsIGFib3V0IGRhdGVzIGFuZCB0aW1lcy4gUHJvYmFibHkgb25lIG9mIHRoZSBlYXNpZXN0IHRoaW5ncyB0aGF0IGJlZ2lubmVycyBtaXNzLCB3aGVuIGZpcnN0IGltcGxlbWVudGluZyBCaWcgQ2FsZW5kYXIsIGlzIHRoYXQgd2UgYH08c3Ryb25nIHBhcmVudE5hbWU9XCJwXCI+e2ByZXF1aXJlYH08L3N0cm9uZz57YCB0cnVlIEpTIGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCJodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9EYXRlXCIsXG4gICAgICAgIFwidGFyZ2V0XCI6IFwiX2JsYW5rXCIsXG4gICAgICAgIFwicmVsXCI6IFwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgICB9fT57YERhdGVgfTwvYT57YCBvYmplY3RzIGluIG91ciBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJGdWxsIFByb3AgTGlzdFwiIG1keFR5cGU9XCJMaW5rVG9cIj57YHByb3BzYH08L0xpbmtUbz57YCBhbmQgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZXZlbnRgfTwvaW5saW5lQ29kZT57YCBkZWZpbml0aW9ucy5gfTwvcD5cbiAgICA8cD57YEl0IGlzIGB9PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgdXAgdG8gdGhlIGRldmVsb3BlcmB9PC9zdHJvbmc+e2AgdG8gaGFuZGxlIHRyYW5zbGF0aW5nIGRhdGUvdGltZSB2YWx1ZXMgYH08c3Ryb25nIHBhcmVudE5hbWU9XCJwXCI+e2B0byBhbmQgZnJvbSBKUyBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJzdHJvbmdcIj57YERhdGVgfTwvaW5saW5lQ29kZT57YCBmb3JtYXRgfTwvc3Ryb25nPntgLmB9PC9wPlxuICAgIDxwPntgV2hhdCBkb2VzIHRoaXMgbWVhbj9gfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgLy8gd2lsbCBjYXVzZSBlcnJvcnNcbmNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiAnMjAxNS0wNC0xMlQxMzo0NTowMC0wNTowMCcsIFtdKVxuXG4vLyB3aWxsIHdvcmsgYXMgZXhwZWN0ZWRcbmNvbnN0IGRlZmF1bHREYXRlID0gdXNlTWVtbygoKSA9PiBuZXcgRGF0ZSgnMjAxNS0wNC0xMlQxMzo0NTowMC0wNTowMCcpLCBbXSlcblxuLy8gd2lsbCBuZXZlciBkaXNwbGF5IGluIHRoZSBDYWxlbmRhclxuY29uc3QgZXZlbnRzID0gW1xuICB7XG4gICAgdGl0bGU6ICdNeSBFdmVudCdcbiAgICBzdGFydDogJzIwMTUtMDQtMTJUMTM6NDU6MDAtMDU6MDAnLFxuICAgIGVuZDogJzIwMTUtMDQtMTJUMTQ6MDA6MDAtMDU6MDAnXG4gIH1cbl1cblxuLy8gd2hhdCB5b3UgbXVzdCBoYXZlIGlzIHRoaXNcbmNvbnN0IGV2ZW50cyA9IFtcbiAge1xuICAgIHRpdGxlOiAnTXkgRXZlbnQnXG4gICAgc3RhcnQ6IG5ldyBEYXRlKCcyMDE1LTA0LTEyVDEzOjQ1OjAwLTA1OjAwJyksXG4gICAgZW5kOiBuZXcgRGF0ZSgnMjAxNS0wNC0xMlQxNDowMDowMC0wNTowMCcpXG4gIH1cbl1cbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxwPntgVGhlIG90aGVyIHRoaW5nIHRvIHJlbWVtYmVyIGlzIHRoYXQgdGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YERhdGVgfTwvaW5saW5lQ29kZT57YHMgeW91IHByb3ZpZGUgdG8gdGhlIENhbGVuZGFyIHdpbGwsIGJ5IGRlZmF1bHQsIGJlIGRpc3BsYXllZCBpbiB0aGUgYnJvd3NlcidzIG5hdGl2ZSBsb2NhbCB0aW1lem9uZSBhbmQgY3VsdHVyZSwgcmVnYXJkbGVzcyBvZiBhbnkgb2Zmc2V0cy4gVGhpcyBpcyBob3cgSlMgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgRGF0ZWB9PC9pbmxpbmVDb2RlPntgcyB3b3JrIGluIGJyb3dzZXJzIHRvZGF5LiBJZiB5b3UgbmVlZCB0byBkaXNwbGF5IGRhdGVzIGFuZCB0aW1lcyBpbiBhIHNwZWNpZmljIHRpbWV6b25lLCBvdGhlciB0aGFuIHRoZSBicm93c2VyIG5hdGl2ZSwgdGhlbiB5b3Ugc2hvdWxkIHJldmlldyBvdXIgYH08TGlua1RvIGtpbmQ9XCJndWlkZXMtdGltZXpvbmVzXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgVGltZXpvbmVzIEd1aWRlYH08L0xpbmtUbz57YCBvbiB1c2luZyBhIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImxvY2FsaWl6ZXJcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2Bsb2NhbGl6ZXJgfTwvTGlua1RvPntgIHRoYXQgc3VwcG9ydHMgdGltZXpvbmUgY29udmVyc2lvbnMuYH08L3A+XG4gICAgPHA+PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgU2lkZSBOb3RlOmB9PC9zdHJvbmc+e2AgU3RvcmluZyB5b3VyIGRhdGUvdGltZSB2YWx1ZXMgaW4gVVRDIChadWx1KSBkYXRlIGZvcm1hdCAoWVlZWS1NTS1ERFRISDptbTpzc1opIHdpbGwgbWFrZSB0aGVzZSB0eXBlcyBvZiB0cmFuc2Zvcm1hdGlvbnMgbXVjaCBlYXNpZXIgdG8gd29yayB3aXRoLmB9PC9wPlxuICAgIDwvTURYTGF5b3V0Pjtcbn1cbjtcbk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlO1xuXG5leHBvcnQgY29uc3QgX19wYWdlID0gKCkgPT4geyB0aHJvdyBuZXcgRXJyb3IoXCJEb2NzLW9ubHkgc3RvcnlcIik7IH07XG5cbl9fcGFnZS5wYXJhbWV0ZXJzID0geyBkb2NzT25seTogdHJ1ZSB9O1xuXG5jb25zdCBjb21wb25lbnRNZXRhID0geyB0aXRsZTogJ0d1aWRlcy9VbmRlcnN0YW5kaW5nIERhdGVzJywgaW5jbHVkZVN0b3JpZXM6IFtcIl9fcGFnZVwiXSwgIH07XG5cbmNvbnN0IG1keFN0b3J5TmFtZVRvS2V5ID0ge307XG5cbmNvbXBvbmVudE1ldGEucGFyYW1ldGVycyA9IGNvbXBvbmVudE1ldGEucGFyYW1ldGVycyB8fCB7fTtcbmNvbXBvbmVudE1ldGEucGFyYW1ldGVycy5kb2NzID0ge1xuICAuLi4oY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzLmRvY3MgfHwge30pLFxuICBwYWdlOiAoKSA9PiA8QWRkQ29udGV4dCBtZHhTdG9yeU5hbWVUb0tleT17bWR4U3RvcnlOYW1lVG9LZXl9IG1keENvbXBvbmVudEFubm90YXRpb25zPXtjb21wb25lbnRNZXRhfT48TURYQ29udGVudCAvPjwvQWRkQ29udGV4dD4sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnRNZXRhOyIsIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbWR4IH0gZnJvbSAnQG1keC1qcy9yZWFjdCdcblxuLyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqL1xuLyogQGpzeCBtZHggKi9cbmltcG9ydCB7IGFzc2VydElzRm4sIEFkZENvbnRleHQgfSBmcm9tIFwiQHN0b3J5Ym9vay9hZGRvbi1kb2NzXCI7XG5cbmltcG9ydCB7IE1ldGEgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWRvY3MnXG5cblxuY29uc3QgbGF5b3V0UHJvcHMgPSB7XG4gIFxufTtcbmNvbnN0IE1EWExheW91dCA9IFwid3JhcHBlclwiXG5mdW5jdGlvbiBNRFhDb250ZW50KHtcbiAgY29tcG9uZW50cyxcbiAgLi4ucHJvcHNcbn0pIHtcbiAgcmV0dXJuIDxNRFhMYXlvdXQgey4uLmxheW91dFByb3BzfSB7Li4ucHJvcHN9IGNvbXBvbmVudHM9e2NvbXBvbmVudHN9IG1keFR5cGU9XCJNRFhMYXlvdXRcIj5cblxuICAgIDxNZXRhIHRpdGxlPVwiR3VpZGVzL1RpbWV6b25lc1wiIG1keFR5cGU9XCJNZXRhXCIgLz5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJkZWFsaW5nLXdpdGgtdGltZS16b25lc1wiXG4gICAgfX0+e2BEZWFsaW5nIFdpdGggVGltZSBab25lc2B9PC9oMT5cbiAgICA8cD57YFRpbWUgWm9uZXMgYXJlLi4uIGB9PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgaGFyZGB9PC9zdHJvbmc+e2AsIGFuZCB3aGlsZSBjaGFuZ2luZyB0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgY3VsdHVyZWB9PC9pbmxpbmVDb2RlPntgIHdpbGwgaGVscCB3aXRoIGludGVybmF0aW9uYWxpemF0aW9uIGFuZCBsb2NhbGl6YXRpb24sIGl0IGRvZXMgbm90IGFkanVzdCB0aGUgZGF0ZXMgZm9yIGEgc3BlY2lmaWMgdGltZSB6b25lLiBKYXZhc2NyaXB0IERhdGUgb2JqZWN0cyBkb24ndCByZWFsbHkgc3VwcG9ydCB0aW1lIHpvbmUgc3dpdGNoaW5nIG5hdGl2ZWx5LCBhbmQgZGF0ZSBtYXRoIGdldHMgYH08c3Ryb25nIHBhcmVudE5hbWU9XCJwXCI+e2B2ZXJ5YH08L3N0cm9uZz57YCBjb21wbGljYXRlZC4gVGhhbmtmdWxseSBCaWcgQ2FsZW5kYXIgZG9lcyBzdXBwb3J0IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG1vbWVudGB9PC9pbmxpbmVDb2RlPntgIGFzIGEgbG9jYWxpemVyLCBzbyBpZiB5b3UgdXNlIGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCJodHRwczovL21vbWVudGpzLmNvbS90aW1lem9uZS9cIixcbiAgICAgICAgXCJ0YXJnZXRcIjogXCJfYmxhbmtcIixcbiAgICAgICAgXCJyZWxcIjogXCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgIH19PntgbW9tZW50LXRpbWV6b25lYH08L2E+e2AgeW91IGNhbiBnZXQgeW91ciBldmVudHMgdG8gZGlzcGxheSByZWxldmFudCB0byBhIHRpbWUgem9uZSBvdGhlciB0aGFuIHRoZSBicm93c2VyIG5hdGl2ZS5gfTwvcD5cbiAgICA8cD57YFRvIGNoYW5nZSB5b3VyIGV2ZW50cyB0byBkaXNwbGF5IGFzIGEgc3BlY2lmaWMgdGltZSB6b25lLCB5b3UgbXVzdCBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiaHR0cHM6Ly9tb21lbnRqcy5jb20vdGltZXpvbmUvZG9jcy8jL3VzaW5nLXRpbWV6b25lcy9kZWZhdWx0LXRpbWV6b25lL1wiLFxuICAgICAgICBcInRhcmdldFwiOiBcIl9ibGFua1wiLFxuICAgICAgICBcInJlbFwiOiBcIm5vZm9sbG93IG5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgfX0+e2BjaGFuZ2UgbW9tZW50J3MgZGVmYXVsdCB0aW1lem9uZWB9PC9hPntgIGZvciBhbGwgZGF0ZXMsIGB9PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgdXNpbmcgYW4gSUFOQSB0aW1lIHpvbmVgfTwvc3Ryb25nPntgLmB9PC9wPlxuICAgIDxwcmU+PGNvZGUgcGFyZW50TmFtZT1cInByZVwiIHsuLi57XG4gICAgICAgIFwiY2xhc3NOYW1lXCI6IFwibGFuZ3VhZ2UtanN4XCJcbiAgICAgIH19PntgaW1wb3J0IHsgQ2FsZW5kYXIsIG1vbWVudExvY2FsaXplciB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50J1xuaW1wb3J0ICdtb21lbnQtdGltZXpvbmUnIC8vIG9yICdtb21lbnQtdGltZXpvbmUvYnVpbGRzL21vbWVudC10aW1lem9uZS13aXRoLWRhdGFbLWRhdGFyYW5nZV0uanMnLiBTZWUgdGhlaXIgZG9jc1xuXG4vLyBTZXQgdGhlIElBTkEgdGltZSB6b25lIHlvdSB3YW50IHRvIHVzZVxubW9tZW50LnR6LnNldERlZmF1bHQoJ0V1cm9wZS9QYXJpcycpXG5cbi8vIFNldHVwIHRoZSBsb2NhbGl6ZXIgYnkgcHJvdmlkaW5nIHRoZSBtb21lbnQgT2JqZWN0XG4vLyB0byB0aGUgY29ycmVjdCBsb2NhbGl6ZXIuXG5jb25zdCBsb2NhbGl6ZXIgPSBtb21lbnRMb2NhbGl6ZXIobW9tZW50KSAvLyBvciBnbG9iYWxpemVMb2NhbGl6ZXJcblxuY29uc3QgTXlDYWxlbmRhciA9IChwcm9wcykgPT4gKFxuICA8ZGl2IGNsYXNzTmFtZT1cIm15Q3VzdG9tSGVpZ2h0XCI+XG4gICAgPENhbGVuZGFyXG4gICAgICBsb2NhbGl6ZXI9e2xvY2FsaXplcn1cbiAgICAgIGV2ZW50cz17bXlFdmVudHNMaXN0fVxuICAgICAgc3RhcnRBY2Nlc3Nvcj1cInN0YXJ0XCJcbiAgICAgIGVuZEFjY2Vzc29yPVwiZW5kXCJcbiAgICAvPlxuICA8L2Rpdj5cbilcbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxwPntgVGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG1vbWVudExvY2FsaXplcmB9PC9pbmxpbmVDb2RlPntgIHdpbGwgbm93IGhhbmRsZSBhbGwgZGF0ZXMgYW5kIGRhdGUgbWF0aCBhcyBpZiB0aGUgZGF0ZSBpcyBpbiB0aGUgdGltZXpvbmUgeW91IHNwZWNpZmllZC4gSXQgaXMgaW1wb3J0YW50IHRvIG5vdGUgdGhhdCBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiaHR0cHM6Ly9tb21lbnRqcy5jb20vdGltZXpvbmUvZG9jcy8jL3VzaW5nLXRpbWV6b25lcy9kZWZhdWx0LXRpbWV6b25lL1wiLFxuICAgICAgICBcInRhcmdldFwiOiBcIl9ibGFua1wiLFxuICAgICAgICBcInJlbFwiOiBcIm5vZm9sbG93IG5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuICAgICAgfX0+e2BjaGFuZ2luZyBtb21lbnQncyBkZWZhdWx0IHRpbWV6b25lYH08L2E+e2AgYWZmZWN0cyBhbGwgZGF0ZXMsIGNyZWF0ZWQgYnkgbW9tZW50LCBmcm9tIHRoYXQgcG9pbnQgZm9yd2FyZCwgc28geW91IG1heSB3YW50IHRvIHJlc2V0IHRoZSBkZWZhdWx0IHdoZW4geW91ciBjb21wb25lbnQgdW5tb3VudHMuIEFuZCwgaWYgc3dpdGNoaW5nIHRpbWV6b25lcyAnb24tdGhlLWZseScsIHlvdSB3YW50IHRvIHVwZGF0ZSB5b3VyIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGxvY2FsaXplcmB9PC9pbmxpbmVDb2RlPntgIGFuZCBhbnkgRGF0ZSBiYXNlZCBwcm9wcyAobWluLCBtYXgsIGdldE5vdywgZXRjKSBhdCB0aGUgc2FtZSB0aW1lLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YE5vdGU6YH08L3N0cm9uZz57YCBUaGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgbHV4b25Mb2NhbGl6ZXJgfTwvaW5saW5lQ29kZT57YCBhbmQgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZGF5anNMb2NhbGl6ZXJgfTwvaW5saW5lQ29kZT57YCBvcGVyYXRlIGluIGEgc2ltaWxhciBmYXNoaW9uLiBWaWV3IHRoZWlyIHJlc3BlY3RpdmUgZGVtb3MgYW5kIHNvdXJjZSBmb3IgZXhhbXBsZXMgb2YgdGhlaXIgdXNhZ2UuYH08L3A+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7XG5cbmV4cG9ydCBjb25zdCBfX3BhZ2UgPSAoKSA9PiB7IHRocm93IG5ldyBFcnJvcihcIkRvY3Mtb25seSBzdG9yeVwiKTsgfTtcblxuX19wYWdlLnBhcmFtZXRlcnMgPSB7IGRvY3NPbmx5OiB0cnVlIH07XG5cbmNvbnN0IGNvbXBvbmVudE1ldGEgPSB7IHRpdGxlOiAnR3VpZGVzL1RpbWV6b25lcycsIGluY2x1ZGVTdG9yaWVzOiBbXCJfX3BhZ2VcIl0sICB9O1xuXG5jb25zdCBtZHhTdG9yeU5hbWVUb0tleSA9IHt9O1xuXG5jb21wb25lbnRNZXRhLnBhcmFtZXRlcnMgPSBjb21wb25lbnRNZXRhLnBhcmFtZXRlcnMgfHwge307XG5jb21wb25lbnRNZXRhLnBhcmFtZXRlcnMuZG9jcyA9IHtcbiAgLi4uKGNvbXBvbmVudE1ldGEucGFyYW1ldGVycy5kb2NzIHx8IHt9KSxcbiAgcGFnZTogKCkgPT4gPEFkZENvbnRleHQgbWR4U3RvcnlOYW1lVG9LZXk9e21keFN0b3J5TmFtZVRvS2V5fSBtZHhDb21wb25lbnRBbm5vdGF0aW9ucz17Y29tcG9uZW50TWV0YX0+PE1EWENvbnRlbnQgLz48L0FkZENvbnRleHQ+LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50TWV0YTsiLCJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnXG5cbi8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi9cbi8qIEBqc3ggbWR4ICovXG5pbXBvcnQgeyBhc3NlcnRJc0ZuLCBBZGRDb250ZXh0IH0gZnJvbSBcIkBzdG9yeWJvb2svYWRkb24tZG9jc1wiO1xuXG5pbXBvcnQgeyBNZXRhIH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1kb2NzJ1xuaW1wb3J0IExpbmtUbyBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWxpbmtzL3JlYWN0J1xuXG5cbmNvbnN0IGxheW91dFByb3BzID0ge1xuICBcbn07XG5jb25zdCBNRFhMYXlvdXQgPSBcIndyYXBwZXJcIlxuZnVuY3Rpb24gTURYQ29udGVudCh7XG4gIGNvbXBvbmVudHMsXG4gIC4uLnByb3BzXG59KSB7XG4gIHJldHVybiA8TURYTGF5b3V0IHsuLi5sYXlvdXRQcm9wc30gey4uLnByb3BzfSBjb21wb25lbnRzPXtjb21wb25lbnRzfSBtZHhUeXBlPVwiTURYTGF5b3V0XCI+XG5cbiAgICA8TWV0YSB0aXRsZT1cIkd1aWRlcy9Mb2NhbGl6ZXJzXCIgbWR4VHlwZT1cIk1ldGFcIiAvPlxuICAgIDxoMSB7Li4ue1xuICAgICAgXCJpZFwiOiBcIndoYXQtaXMtYS1sb2NhbGl6ZXJcIlxuICAgIH19PntgV2hhdCBpcyBhIExvY2FsaXplcj9gfTwvaDE+XG4gICAgPHA+e2BZb3UgaGF2ZSBwcm9iYWJseSBub3RpY2VkIHRoYXQgeW91ciBCaWcgQ2FsZW5kYXIgaW1wbGVtZW50YXRpb25zIHJlcXVpcmUgYSBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJsb2NhbGl6ZXJcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2Bsb2NhbGl6ZXJgfTwvTGlua1RvPntgIHByb3AuIFRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2Bsb2NhbGl6ZXJgfTwvaW5saW5lQ29kZT57YCBpcyBuZWVkZWQgZm9yIGFwcGx5aW5nIGZvcm1hdHRpbmcgYW5kIGN1bHR1cmUgKGkxOG4pIHRvIHlvdXIgZGF0ZSBkaXNwbGF5cyB0aHJvdWdob3V0IHRoZSBDYWxlbmRhci5gfTwvcD5cbiAgICA8cD57YE5vdyB0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgbG9jYWxpemVyYH08L2lubGluZUNvZGU+e2AgYWxzbyBoYW5kbGVzIGFsbCBpbnRlcm5hbCBkYXRlIG1hdGgsIHV0aWxpemluZyB0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgbG9jYWxpemVyYH08L2lubGluZUNvZGU+e2AgeW91IHByb3ZpZGUuIFRoaXMgaXMgaG93IHRoZSBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiaHR0cHM6Ly9tb21lbnRqcy5jb20vXCIsXG4gICAgICAgIFwidGFyZ2V0XCI6IFwiX2JsYW5rXCIsXG4gICAgICAgIFwicmVsXCI6IFwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgICB9fT57YG1vbWVudGB9PC9hPntgIGFuZCBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiaHR0cHM6Ly9tb21lbnQuZ2l0aHViLmlvL2x1eG9uLyMvXCIsXG4gICAgICAgIFwidGFyZ2V0XCI6IFwiX2JsYW5rXCIsXG4gICAgICAgIFwicmVsXCI6IFwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgICB9fT57YEx1eG9uYH08L2E+e2AgbG9jYWxpemVycyBoYW5kbGUgdGltZXpvbmVzLCBhbmQgaG93IGFsbCBvZiB0aGVtIGhhbmRsZSB0aGluZ3MgbGlrZSBEYXlsaWdodCBTYXZpbmdzIFRpbWUuIE1vc3QgY29tcG9uZW50cyByZWNlaXZlIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2Bsb2NhbGl6ZXJgfTwvaW5saW5lQ29kZT57YCBhcyBhIHByb3AsIG1lYW5pbmcgdGhhdCB5b3VyIG92ZXJyaWRlIGNvbXBvbmVudHMgY2FuIGFsc28gdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlc2UgZmVhdHVyZXMuXG5FYWNoIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGxvY2FsaXplcmB9PC9pbmxpbmVDb2RlPntgLCB3aGVuIGNyZWF0ZWQsIGNyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgRGF0ZUxvY2FsaXplcmB9PC9pbmxpbmVDb2RlPntgIGNsYXNzLCBhbmQgZWFjaCBvbmUgaGFzIGEgbm9ybWFsaXplZCBncm91cCBvZiBmdW5jdGlvbnMgYW5kIHByb3BzIGF2YWlsYWJsZSBmb3IgbWFuaXB1bGF0aW5nIGRhdGVzLmB9PC9wPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGFkZChkYXRlOkRhdGUsIGFkZGVyOm51bWJlciwgdW5pdDpzdHJpbmcpID0+IERhdGVgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPjxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgY2VpbChkYXRlOkRhdGUsIHVuaXQ6c3RyaW5nKSA9PiBEYXRlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGNvbnRpbnVlc0FmdGVyKHN0YXJ0OkRhdGUsIGVuZDpEYXRlLCBsYXN0OkRhdGUpID0+IGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPjxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgY29udGludWVzUHJpb3Ioc3RhcnQ6RGF0ZSwgZmlyc3Q6RGF0ZSkgPT4gYm9vbGVhbmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BkaWZmKGE6RGF0ZSwgYjpEYXRlLCB1bml0OnN0cmluZykgPT4gbnVtYmVyYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGVuZE9mKGRhdGU6RGF0ZSwgdW5pdDpzdHJpbmcpID0+IERhdGVgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPjxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZXEoYTpEYXRlLCBiOkRhdGUsIHVuaXQ6c3RyaW5nKSA9PiBib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZpcnN0VmlzaWJsZURheShkYXRlOkRhdGUpID0+IERhdGVgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPjxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZm9ybWF0KHZhbHVlOkRhdGUsIGZvcm1hdDpzdHJpbmcpID0+IHN0cmluZ2B9PC9pbmxpbmVDb2RlPntgLGB9PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZvcm1hdHM6b2JqZWN0YH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGdldERzdE9mZnNldChzdGFydDpEYXRlLCBlbmQ6RGF0ZSkgPT4gbnVtYmVyYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGdldE1pbnV0ZXNGcm9tTWlkbmlnaHQoc3RhcnQ6RGF0ZSkgPT4gbnVtYmVyYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGdldFNsb3REYXRlKGR0OkRhdGUsIG1pbnV0ZXNGcm9tTWlkbmlnaHQ6bnVtYmVyLCBvZmZzZXQ6bnVtYmVyKSA9PiBEYXRlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGdldFRpbWV6b25lT2Zmc2V0KGRhdGU6RGF0ZSkgPT4gbnVtYmVyYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGdldFRvdGFsTWluKHN0YXJ0OkRhdGUsIGVuZDpEYXRlKSA9PiBudW1iZXJgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPjxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZ3QoYTpEYXRlLCBiOkRhdGUsIHVuaXQ6c3RyaW5nKSA9PiBib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGd0ZShhOkRhdGUsIGI6RGF0ZSwgdW5pdDpzdHJpbmcpID0+IGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPjxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgaW5FdmVudFJhbmdlKHtldmVudDoge3N0YXJ0OkRhdGUsIGVuZDpEYXRlfSwgcmFuZ2U6IHtzdGFydDpEYXRlLCBlbmQ6RGF0ZX19KSA9PiBib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGluUmFuZ2UoZGF5OkRhdGUsIHN0YXJ0OkRhdGUsIGVuZDpEYXRlLCB1bml0OnN0cmluZykgPT4gYm9vbGVhbmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2Bpc1NhbWVEYXRlKGRhdGUxOkRhdGUsIGRhdGUyOkRhdGUpID0+IGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPjxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgbGFzdFZpc2libGVEYXkoZGF0ZTpEYXRlKSA9PiBEYXRlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGx0KGE6RGF0ZSwgYjpEYXRlLCB1bml0OnN0cmluZykgPT4gYm9vbGVhbmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BsdGUoYTpEYXRlLCBiOkRhdGUsIHVuaXQ6c3RyaW5nKSA9PiBib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG1heChkYXRlQTpEYXRlLCBkYXRlQjpEYXRlKSA9PiBEYXRlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG1lcmdlKGRhdGU6RGF0ZSwgdGltZTpEYXRlKSA9PiBEYXRlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG1pbihkYXRlQTpEYXRlLCBkYXRlQjpEYXRlKSA9PiBEYXRlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG1pbnV0ZXMoZGF0ZTpEYXRlKSA9PiBudW1iZXJgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPjxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgbmVxKGE6RGF0ZSwgYjpEYXRlLCB1bml0OnN0cmluZykgPT4gYm9vbGVhbmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2ByYW5nZShzdGFydDpEYXRlLCBlbmQ6RGF0ZSwgdW5pdDpzdHJpbmcpID0+IEFycmF5W0RhdGVdYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YHNvcnRFdmVudHMoe2V2dEE6IHtzdGFydDpEYXRlLCBlbmQ6RGF0ZSwgYWxsRGF5OmJvb2xlYW59LCBldnRCOiB7c3RhcnQ6RGF0ZSwgZW5kOkRhdGUsIGFsbERheTpib29sZWFufX0pID0+IG51bWJlcmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BzdGFydEFuZEVuZEFyZURhdGVPbmx5KHN0YXJ0OkRhdGUsIGVuZDpEYXRlKSA9PiBib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj48aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YHN0YXJ0T2YoZGF0ZTpEYXRlLCB1bml0OnN0cmluZykgPT4gRGF0ZWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BzdGFydE9mV2VlayhjdWx0dXJlKSA9PiBudW1iZXJgfTwvaW5saW5lQ29kZT57YCAoYWxpYXMgb2YgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZpcnN0T2ZXZWVrKClgfTwvaW5saW5lQ29kZT57YClgfTwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2B2aXNpYmxlRGF5cyhkYXRlOkRhdGUpID0+IEFycmF5W0RhdGVdYH08L2lubGluZUNvZGU+PC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgTWFueSBvZiB0aGVzZSBtZXRob2RzIGFyZSB1c2VkIGJ5IEJpZyBDYWxlbmRhciBpbiB0aGUgYmFja2dyb3VuZCBmb3IgZGV0ZXJtaW5pbmcgbGF5b3V0LiBZb3UgY2FuIGNyZWF0ZSB5b3VyIG93biBjdXN0b20gYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgbG9jYWxpemVyYH08L2lubGluZUNvZGU+e2AsIHRvIHV0aWxpemUgc29tZSBvdGhlciBsaWJyYXJ5LCBhcyBsb25nIGFzIHRoZXkgaW1wbGVtZW50IHRoZXNlIG1ldGhvZHMuIFRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BEYXRlTG9jYWxpemVyYH08L2lubGluZUNvZGU+e2AgY2xhc3MgZGVmYXVsdHMgdGhlc2UgbWV0aG9kcyB0byBtZXRob2RzIGZyb20gdGhlIGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCJodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9kYXRlLWFyaXRobWV0aWNcIixcbiAgICAgICAgXCJ0YXJnZXRcIjogXCJfYmxhbmtcIixcbiAgICAgICAgXCJyZWxcIjogXCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgIH19PntgZGF0ZS1hcml0aG1ldGljYH08L2E+e2AgcGFja2FnZS5gfTwvcD5cbiAgICA8cD57YEZvciBleGFtcGxlcyBvZiBidWlsZGluZyB5b3VyIG93biBjdXN0b20gYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgbG9jYWxpemVyYH08L2lubGluZUNvZGU+e2AgdGFrZSBhIGxvb2sgYXQgdGhlIGB9PGEgcGFyZW50TmFtZT1cInBcIiB7Li4ue1xuICAgICAgICBcImhyZWZcIjogXCJodHRwczovL2dpdGh1Yi5jb20vanF1ZW5zZS9yZWFjdC1iaWctY2FsZW5kYXIvYmxvYi9tYXN0ZXIvc3JjL2xvY2FsaXplcnNcIixcbiAgICAgICAgXCJ0YXJnZXRcIjogXCJfYmxhbmtcIixcbiAgICAgICAgXCJyZWxcIjogXCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgIH19PntgY3VycmVudGx5IGltcGxlbWVudGVkIGxvY2FsaXplcnNgfTwvYT57YC4gSWYgeW91IGRvIGJ1aWxkIHlvdXIgb3duIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGxvY2FsaXplcmB9PC9pbmxpbmVDb2RlPntgLCBwbGVhc2UgY29uc2lkZXIgcHVibGlzaGluZyBpdCB0byBgfTxhIHBhcmVudE5hbWU9XCJwXCIgey4uLntcbiAgICAgICAgXCJocmVmXCI6IFwiaHR0cHM6Ly9ucG1qcy5vcmdcIixcbiAgICAgICAgXCJ0YXJnZXRcIjogXCJfYmxhbmtcIixcbiAgICAgICAgXCJyZWxcIjogXCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCJcbiAgICAgIH19PntgbnBtYH08L2E+e2AuIFdlIHN1Z2dlc3QgYSBjb21tb24gbmFtaW5nIGNvbnZlbnRpb24gbGlrZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2ByYmMtYWRkb24tbXlsb2NhbGl6ZXJuYW1lYH08L2lubGluZUNvZGU+e2AuYH08L3A+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7XG5cbmV4cG9ydCBjb25zdCBfX3BhZ2UgPSAoKSA9PiB7IHRocm93IG5ldyBFcnJvcihcIkRvY3Mtb25seSBzdG9yeVwiKTsgfTtcblxuX19wYWdlLnBhcmFtZXRlcnMgPSB7IGRvY3NPbmx5OiB0cnVlIH07XG5cbmNvbnN0IGNvbXBvbmVudE1ldGEgPSB7IHRpdGxlOiAnR3VpZGVzL0xvY2FsaXplcnMnLCBpbmNsdWRlU3RvcmllczogW1wiX19wYWdlXCJdLCAgfTtcblxuY29uc3QgbWR4U3RvcnlOYW1lVG9LZXkgPSB7fTtcblxuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzID0gY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzIHx8IHt9O1xuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzLmRvY3MgPSB7XG4gIC4uLihjb21wb25lbnRNZXRhLnBhcmFtZXRlcnMuZG9jcyB8fCB7fSksXG4gIHBhZ2U6ICgpID0+IDxBZGRDb250ZXh0IG1keFN0b3J5TmFtZVRvS2V5PXttZHhTdG9yeU5hbWVUb0tleX0gbWR4Q29tcG9uZW50QW5ub3RhdGlvbnM9e2NvbXBvbmVudE1ldGF9PjxNRFhDb250ZW50IC8+PC9BZGRDb250ZXh0Pixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudE1ldGE7IiwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0J1xuXG4vKiBAanN4UnVudGltZSBjbGFzc2ljICovXG4vKiBAanN4IG1keCAqL1xuaW1wb3J0IHsgYXNzZXJ0SXNGbiwgQWRkQ29udGV4dCB9IGZyb20gXCJAc3Rvcnlib29rL2FkZG9uLWRvY3NcIjtcblxuaW1wb3J0IHsgTWV0YSB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcydcbmltcG9ydCBMaW5rVG8gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1saW5rcy9yZWFjdCdcblxuXG5jb25zdCBsYXlvdXRQcm9wcyA9IHtcbiAgXG59O1xuY29uc3QgTURYTGF5b3V0ID0gXCJ3cmFwcGVyXCJcbmZ1bmN0aW9uIE1EWENvbnRlbnQoe1xuICBjb21wb25lbnRzLFxuICAuLi5wcm9wc1xufSkge1xuICByZXR1cm4gPE1EWExheW91dCB7Li4ubGF5b3V0UHJvcHN9IHsuLi5wcm9wc30gY29tcG9uZW50cz17Y29tcG9uZW50c30gbWR4VHlwZT1cIk1EWExheW91dFwiPlxuXG4gICAgPE1ldGEgdGl0bGU9XCJwcm9wcy9GdWxsIFByb3AgTGlzdFwiIG1keFR5cGU9XCJNZXRhXCIgLz5cbiAgICA8aDEgey4uLntcbiAgICAgIFwiaWRcIjogXCJhbGwtcHJvcHNcIlxuICAgIH19PntgQWxsIFByb3BzYH08L2gxPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcImxvY2FsaXplclwiXG4gICAgfX0+e2Bsb2NhbGl6ZXJgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGluc3RhbmNlT2YoRGF0ZUxvY2FsaXplcilgfTwvaW5saW5lQ29kZT57YCBgfTxzdHJvbmcgcGFyZW50TmFtZT1cImxpXCI+e2ByZXF1aXJlZGB9PC9zdHJvbmc+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImxvY2FsaXplclwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRoZSBsb2NhbGl6ZXIgdXNlZCBmb3IgZm9ybWF0dGluZyBkYXRlcyBhbmQgdGltZXMgYWNjb3JkaW5nIHRvIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2Bmb3JtYXRgfTwvaW5saW5lQ29kZT57YCBhbmQgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgY3VsdHVyZWB9PC9pbmxpbmVDb2RlPjwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgLy8gV2hlbiB1c2luZyBcXGBHbG9iYWxpemVcXGBcbmltcG9ydCB7IGdsb2JhbGl6ZUxvY2FsaXplciB9IGZyb20gJ3JlYWN0LWJpZy1jYWxlbmRhcidcbmltcG9ydCBnbG9iYWxpemUgZnJvbSAnZ2xvYmFsaXplJ1xuXG5jb25zdCBsb2NhbGl6ZXIgPSBnbG9iYWxpemVMb2NhbGl6ZXIoZ2xvYmFsaXplKVxuYH08L2NvZGU+PC9wcmU+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YC8vIFdoZW4gdXNpbmcgXFxgbW9tZW50XFxgXG5pbXBvcnQgeyBtb21lbnRMb2NhbGl6ZXIgfSBmcm9tICdyZWFjdC1iaWctY2FsZW5kYXInXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbi8vIGFuZCwgZm9yIG9wdGlvbmFsIHRpbWUgem9uZSBzdXBwb3J0XG5pbXBvcnQgJ21vbWVudC10aW1lem9uZSdcblxubW9tZW50LnR6LnNldERlZmF1bHQoJ0FtZXJpY2EvTG9zX0FuZ2VsZXMnKVxuLy8gZW5kIG9wdGlvbmFsIHRpbWUgem9uZSBzdXBwb3J0XG5cbmNvbnN0IGxvY2FsaXplciA9IG1vbWVudExvY2FsaXplcihtb21lbnQpXG5gfTwvY29kZT48L3ByZT5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgLy8gV2hlbiB1c2luZyBcXGBMdXhvblxcYFxuaW1wb3J0IHsgbHV4b25Mb2NhbGl6ZXIgfSBmcm9tICdyZWFjdC1iaWctY2FsZW5kYXInXG5pbXBvcnQgeyBEYXRlVGltZSwgU2V0dGluZ3MgfSBmcm9tICdsdXhvbidcbi8vIG9ubHkgdXNlIFxcYFNldHRpbmdzXFxgIGlmIHlvdSByZXF1aXJlIG9wdGlvbmFsIHRpbWUgem9uZSBzdXBwb3J0XG5TZXR0aW5ncy5kZWZhdWx0Wm9uZSA9ICdBbWVyaWNhL0xvc19BbmdlbGVzJ1xuLy8gZW5kIG9wdGlvbmFsIHRpbWUgem9uZSBzdXBwb3J0XG5cbi8vIEx1eG9uIHVzZXMgdGhlIEludGwgQVBJLCB3aGljaCBjdXJyZW50bHkgZG9lcyBub3QgY29udGFpbiBcXGB3ZWVrSW5mb1xcYFxuLy8gdG8gZGV0ZXJtaW5lIHdoaWNoIHdlZWtkYXkgaXMgdGhlIHN0YXJ0IG9mIHRoZSB3ZWVrIGJ5IFxcYGN1bHR1cmVcXGAuXG4vLyBUaGUgXFxgbHV4b25Mb2NhbGl6ZXJcXGAgZGVmYXVsdHMgdGhpcyB0byBTdW5kYXksIHdoaWNoIGRpZmZlcnMgZnJvbVxuLy8gdGhlIEx1eG9uIGRlZmF1bHQgb2YgTW9uZGF5LiBUaGUgbG9jYWxpemVyIHJlcXVpcmVzIHRoaXMgb3B0aW9uXG4vLyB0byBjaGFuZ2UgdGhlIGRpc3BsYXksIGFuZCB0aGUgZGF0ZSBtYXRoIGZvciBkZXRlcm1pbmluZyB0aGVcbi8vIHN0YXJ0IG9mIGEgd2Vlay4gTHV4b24gdXNlcyBub24temVybyBiYXNlZCB2YWx1ZXMgZm9yIFxcYHdlZWtkYXlcXGAuXG5jb25zdCBsb2NhbGl6ZXIgPSBsdXhvbkxvY2FsaXplcihEYXRlVGltZSwgeyBmaXJzdERheU9mV2VlazogNyB9KVxuYH08L2NvZGU+PC9wcmU+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZWxlbWVudHByb3BzXCJcbiAgICB9fT57YGVsZW1lbnRQcm9wc2B9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgb2JqZWN0YH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImVsZW1lbnQtcHJvcHNcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BQcm9wcyBwYXNzZWQgdG8gbWFpbiBjYWxlbmRhciBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2A8ZGl2PmB9PC9pbmxpbmVDb2RlPntgLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YE5vdGU6YH08L3N0cm9uZz57YCBXaWxsIG5vdCBwYXNzIGRvd24gYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgY2xhc3NOYW1lYH08L2lubGluZUNvZGU+e2AuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZ2V0bm93XCJcbiAgICB9fT57YGdldE5vd2B9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKCkgPT4gRGF0ZWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgKCkgPT4gbmV3IERhdGUoKWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJnZXQtbm93XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgRGV0ZXJtaW5lcyB0aGUgY3VycmVudCBkYXRlL3RpbWUgd2hpY2ggaXMgaGlnaGxpZ2h0ZWQgaW4gdGhlIHZpZXdzLmB9PC9wPlxuICAgIDxwPntgVGhlIHZhbHVlIGFmZmVjdHMgd2hpY2ggZGF5IGlzIHNoYWRlZCBhbmQgd2hpY2ggdGltZSBpcyBzaG93biBhcyB0aGUgY3VycmVudCB0aW1lLiBJdCBhbHNvIGFmZmVjdHMgdGhlIGRhdGUgdXNlZCBieSB0aGUgVG9kYXkgYnV0dG9uIGluIHRoZSB0b29sYmFyLmB9PC9wPlxuICAgIDxwPntgUHJvdmlkaW5nIGEgdmFsdWUgaGVyZSBjYW4gYmUgdXNlZnVsIHdoZW4geW91IGFyZSBpbXBsZW1lbnRpbmcgdGltZSB6b25lcyB1c2luZyB0aGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwic3RhcnQtYWNjZXNzb3JcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BzdGFydEFjY2Vzc29yYH08L0xpbmtUbz57YCBhbmQgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZW5kLWFjY2Vzc29yXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgZW5kQWNjZXNzb3JgfTwvTGlua1RvPntgIHByb3BlcnRpZXMuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZGVmYXVsdGRhdGVcIlxuICAgIH19PntgZGVmYXVsdERhdGVgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGluc3RhbmNlT2YoRGF0ZSlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG5ldyBEYXRlKClgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZGVmYXVsdC1kYXRlXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgU2V0cyB0aGUgaW5pdGlhbCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BkYXRlYH08L2lubGluZUNvZGU+e2AgdmFsdWUgaW4geW91ciBjYWxlbmRhciB3aGVuIHlvdSBkb24ndCB3YW50IGl0IHRvIGJlICd0b2RheScsIHdoZW4gbm90IHVzaW5nIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImdldC1ub3dcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BnZXROb3dgfTwvTGlua1RvPntgLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcImRhdGVcIlxuICAgIH19PntgZGF0ZWB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgaW5zdGFuY2VPZihEYXRlKWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgbmV3IERhdGUoKWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2Bjb250cm9sbGVkIGJ5OiBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJvbi1uYXZpZ2F0ZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YG9uTmF2aWdhdGVgfTwvTGlua1RvPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJkYXRlXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVGhlIGN1cnJlbnQgZGF0ZSB2YWx1ZSBvZiB0aGUgY2FsZW5kYXIuIERldGVybWluZXMgdGhlIHZpc2libGUgdmlldyByYW5nZS5cbklmIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGRhdGVgfTwvaW5saW5lQ29kZT57YCBpcyBvbWl0dGVkIHRoZW4gdGhlIHJlc3VsdCBvZiBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJnZXQtbm93XCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgZ2V0Tm93YH08L0xpbmtUbz57YCBpcyB1c2VkOyBvdGhlcndpc2UgdGhlXG5jdXJyZW50IGRhdGUgaXMgdXNlZC5gfTwvcD5cbiAgICA8cD57YFRoaXMgaXMgYSBjb250cm9sbGFibGUgcHJvcCwgd2hlbiB1c2luZyBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJvbi1uYXZpZ2F0ZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YG9uTmF2aWdhdGVgfTwvTGlua1RvPjwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJvbm5hdmlnYXRlXCJcbiAgICB9fT57YG9uTmF2aWdhdGVgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGNvbnRyb2xzOiBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJkYXRlXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgZGF0ZWB9PC9MaW5rVG8+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGV4YW1wbGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2AobmV3RGF0ZSkgPT4gc2V0RGF0ZShuZXdEYXRlKWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJvbi1uYXZpZ2F0ZVwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YENhbGxiYWNrIGZpcmVkIHdoZW4gdGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGRhdGVgfTwvaW5saW5lQ29kZT57YCB2YWx1ZSBjaGFuZ2VzLiBXaGVuIGluY2x1ZGVkIGl0IGlzIHVzZWQgdG8gJ2NvbnRyb2wnIHRoZSBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJkYXRlXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgZGF0ZWB9PC9MaW5rVG8+e2AgcHJvcCB2YWx1ZS5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJkZWZhdWx0dmlld1wiXG4gICAgfX0+e2BkZWZhdWx0Vmlld2B9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BWaWV3cy5NT05USCAobW9udGh8d2Vla3x3b3JrX3dlZWt8ZGF5fGFnZW5kYSlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZGVmYXVsdC12aWV3XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVGhlIGluaXRpYWwgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgdmlld2B9PC9pbmxpbmVDb2RlPntgIHNldCBmb3IgeW91ciBjYWxlbmRhciB3aGVuIHlvdSBkb24ndCB3YW50IGl0IHRvIGJlIHRoZSBkZWZhdWx0ICgnbW9udGgnKS5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJ2aWV3XCJcbiAgICB9fT57YHZpZXdgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YHN0cmluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgVmlld3MuTU9OVEggKG1vbnRofHdlZWt8d29ya193ZWVrfGRheXxhZ2VuZGEpYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGNvbnRyb2xsZWQgYnk6IGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cIm9uLXZpZXdcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BvblZpZXdgfTwvTGlua1RvPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJ2aWV3XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVGhlIGN1cnJlbnQgdmlldyB2YWx1ZSBvZiB0aGUgY2FsZW5kYXIuIERldGVybWluZXMgdGhlIHZpc2libGUgJ3ZpZXcnLlxuSWYgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgdmlld2B9PC9pbmxpbmVDb2RlPntgIGlzIG9taXR0ZWQgdGhlbiBpdCBpcyBkZWZhdWx0ZWQgdG8gJ21vbnRoJy5gfTwvcD5cbiAgICA8cD57YFRoaXMgaXMgYSBjb250cm9sbGFibGUgcHJvcCwgd2hlbiB1c2luZyBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJvbi12aWV3XCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgb25WaWV3YH08L0xpbmtUbz48L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwib252aWV3XCJcbiAgICB9fT57YG9uVmlld2B9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiAnZnVuY3Rpb24nYH08L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgY29udHJvbHM6IGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInZpZXdcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2B2aWV3YH08L0xpbmtUbz48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZXhhbXBsZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YChuZXdWaWV3KSA9PiBzZXRWaWV3KG5ld1ZpZXcpYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cIm9uLXZpZXdcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2B2aWV3YH08L2lubGluZUNvZGU+e2AgdmFsdWUgY2hhbmdlcy4gV2hlbiBpbmNsdWRlZCBpdCBpcyB1c2VkIHRvICdjb250cm9sJyB0aGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwidmlld1wiIG1keFR5cGU9XCJMaW5rVG9cIj57YHZpZXdgfTwvTGlua1RvPntgIHByb3AgdmFsdWUuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZXZlbnRzXCJcbiAgICB9fT57YGV2ZW50c2B9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgYXJyYXlPZihFdmVudClgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YFtdYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImV2ZW50c1wiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEFuIGFycmF5IG9mIGV2ZW50IG9iamVjdHMgdG8gZGlzcGxheSBvbiB0aGUgY2FsZW5kYXIuIEV2ZW50IG9iamVjdHMgY2FuIGJlIGFueSBzaGFwZSwgYXMgbG9uZyBhcyB0aGUgQ2FsZW5kYXIga25vd3MgaG93IHRvIHJldHJpZXZlIHRoZSBmb2xsb3dpbmcgZGV0YWlscyBvZiB0aGUgZXZlbnQ6YH08L3A+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgc3RhcnQgdGltZWB9PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGVuZCB0aW1lYH08L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdGl0bGVgfTwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B3aGV0aGVyIGl0cyBhbiBcImFsbCBkYXlcIiBldmVudCBvciBub3RgfTwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BhbnkgcmVzb3VyY2UgdGhlIGV2ZW50IG1heSBiZSByZWxhdGVkIHRvYH08L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BFYWNoIG9mIHRoZXNlIHByb3BlcnRpZXMgY2FuIGJlIGN1c3RvbWl6ZWQgb3IgZ2VuZXJhdGVkIGR5bmFtaWNhbGx5IGJ5IHNldHRpbmcgdGhlIHZhcmlvdXMgXCJhY2Nlc3NvclwiIHByb3BzLiBXaXRob3V0IGFueSBjb25maWd1cmF0aW9uIHRoZSBkZWZhdWx0IGV2ZW50IHNob3VsZCBsb29rIGxpa2U6YH08L3A+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YEV2ZW50IHtcbiAgdGl0bGU6IHN0cmluZyxcbiAgc3RhcnQ6IERhdGUsXG4gIGVuZDogRGF0ZSxcbiAgYWxsRGF5PzogYm9vbGVhblxuICByZXNvdXJjZT86IGFueSxcbn1cbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcImJhY2tncm91bmRldmVudHNcIlxuICAgIH19PntgYmFja2dyb3VuZEV2ZW50c2B9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgYXJyYXlPZihCYWNrZ3JvdW5kRXZlbnQpYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BbXWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJiYWNrZ3JvdW5kLWV2ZW50c1wiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEFuIGFycmF5IG9mIGJhY2tncm91bmQgZXZlbnQgb2JqZWN0cyB0byBkaXNwbGF5IG9uIHRoZSBjYWxlbmRhci4gQmFja2dyb3VuZCBFdmVudHMgYmVoYXZlIHNpbWlsYXJseSB0byBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJldmVudHNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BldmVudHNgfTwvTGlua1RvPntgIGJ1dCBhcmUgbm90IGZhY3RvcmVkIGludG8gRXZlbnQgb3ZlcmxhcCBsb2dpYywgYWxsb3dpbmcgdGhlbSB0byBzaXQgYmVoaW5kIGFueSBFdmVudHMgdGhhdCBtYXkgb2NjdXIgZHVyaW5nIHRoZSBzYW1lIHBlcmlvZC4gQmFja2dyb3VuZCBFdmVudHMgb2JqZWN0cyBjYW4gYmUgYW55IHNoYXBlLCBhcyBsb25nIGFzIHRoZSBDYWxlbmRhciBrbm93cyBob3cgdG8gcmV0cmlldmUgdGhlIGZvbGxvd2luZyBkZXRhaWxzIG9mIHRoZSBldmVudDpgfTwvcD5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BzdGFydCB0aW1lYH08L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZW5kIHRpbWVgfTwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEVhY2ggb2YgdGhlc2UgcHJvcGVydGllcyBjYW4gYmUgY3VzdG9taXplZCBvciBnZW5lcmF0ZWQgZHluYW1pY2FsbHkgYnkgc2V0dGluZyB0aGUgdmFyaW91cyBcImFjY2Vzc29yXCIgcHJvcHMuIFdpdGhvdXQgYW55IGNvbmZpZ3VyYXRpb24gdGhlIGRlZmF1bHQgZXZlbnQgc2hvdWxkIGxvb2sgbGlrZTpgfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgQmFja2dyb3VuZEV2ZW50IHtcbiAgc3RhcnQ6IERhdGUsXG4gIGVuZDogRGF0ZSxcbn1cbmB9PC9jb2RlPjwvcHJlPlxuICAgIHsvKiAjIyMgYmFja2dyb3VuZEV2ZW50UHJvcEdldHRlclxuICAgICAtIHR5cGU6IGBmdW5jdGlvbiAoZXZlbnQ6IE9iamVjdCwgc3RhcnQ6IERhdGUsIGVuZDogRGF0ZSwgaXNTZWxlY3RlZDogYm9vbGVhbikgPT4ge2NsYXNzTmFtZT86IHN0cmluZywgc3R5bGU/OiBPYmplY3R9YFxuICAgICAtIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJiYWNrZ3JvdW5kLWV2ZW50LXByb3AtZ2V0dGVyXCI+XG4gICAgICAgIEV4YW1wbGVcbiAgICAgIDwvTGlua1RvPlxuICAgICBPcHRpb25hbGx5IHByb3ZpZGUgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gb2JqZWN0IG9mIGNsYXNzTmFtZSBvciBzdHlsZSBwcm9wcyB0byBiZSBhcHBsaWVkIHRvIHRoZSB0aGUgZXZlbnQgbm9kZS4gKi99XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwidGl0bGVhY2Nlc3NvclwiXG4gICAgfX0+e2B0aXRsZUFjY2Vzc29yYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BzdHJpbmcgfCBmdW5jdGlvbiAoZXZlbnQ6IE9iamVjdCkgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6ICd0aXRsZSdgfTwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJ0aXRsZS1hY2Nlc3NvclwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEFjY2Vzc29yIGZvciB0aGUgZXZlbnQgdGl0bGUsIHVzZWQgdG8gZGlzcGxheSBldmVudCBpbmZvcm1hdGlvbi4gU2hvdWxkIHJlc29sdmUgdG8gYSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2ByZW5kZXJhYmxlYH08L2lubGluZUNvZGU+e2AgdmFsdWUuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwidG9vbHRpcGFjY2Vzc29yXCJcbiAgICB9fT57YHRvb2x0aXBBY2Nlc3NvcmB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgc3RyaW5nIHwgZnVuY3Rpb24gKGV2ZW50OiBPYmplY3QpID0+IHN0cmluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiAndGl0bGUnYH08L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwidG9vbHRpcC1hY2Nlc3NvclwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEFjY2Vzc29yIGZvciB0aGUgZXZlbnQgdG9vbHRpcCwgdXNlZCB0byBkaXNwbGF5IGV2ZW50IGluZm9ybWF0aW9uLiBTaG91bGQgcmVzb2x2ZSB0byBhIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHJlbmRlcmFibGVgfTwvaW5saW5lQ29kZT57YCB2YWx1ZS4gUmVtb3ZlcyB0aGUgdG9vbHRpcCBpZiBudWxsLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcInN0YXJ0YWNjZXNzb3JcIlxuICAgIH19Pntgc3RhcnRBY2Nlc3NvcmB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgc3RyaW5nIHwgZnVuY3Rpb24gKGV2ZW50OiBPYmplY3QpID0+IERhdGVgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogJ3N0YXJ0J2B9PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInN0YXJ0LWFjY2Vzc29yXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVGhlIHN0YXJ0IGRhdGUvdGltZSBvZiB0aGUgZXZlbnQuIE11c3QgcmVzb2x2ZSB0byBhIEphdmFTY3JpcHQgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgRGF0ZWB9PC9pbmxpbmVDb2RlPntgIG9iamVjdC5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJlbmRhY2Nlc3NvclwiXG4gICAgfX0+e2BlbmRBY2Nlc3NvcmB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgc3RyaW5nIHwgZnVuY3Rpb24gKGV2ZW50OiBPYmplY3QpID0+IERhdGVgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogJ2VuZCdgfTwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJlbmQtYWNjZXNzb3JcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BUaGUgZW5kIGRhdGUvdGltZSBvZiB0aGUgZXZlbnQuIE11c3QgcmVzb2x2ZSB0byBhIEphdmFTY3JpcHQgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgRGF0ZWB9PC9pbmxpbmVDb2RlPntgIG9iamVjdC5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJhbGxkYXlhY2Nlc3NvclwiXG4gICAgfX0+e2BhbGxEYXlBY2Nlc3NvcmB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgc3RyaW5nIHwgZnVuY3Rpb24gKGV2ZW50OiBPYmplY3QpID0+IGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogJ2FsbERheSdgfTwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJhbGwtZGF5LWFjY2Vzc29yXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBldmVudCBzaG91bGQgYmUgY29uc2lkZXJlZCBhbiBcImFsbCBkYXlcIiBldmVudCBhbmQgaWdub3JlIHRpbWUuIE11c3QgcmVzb2x2ZSB0byBhIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGJvb2xlYW5gfTwvaW5saW5lQ29kZT57YCB2YWx1ZS5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJhbGxkYXltYXhyb3dzXCJcbiAgICB9fT57YGFsbERheU1heFJvd3NgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG51bWJlcmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgSW5maW5pdHlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiYWxsLWRheS1tYXgtcm93c1wiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YERldGVybWluZXMgYSBtYXhpbXVtIGFtb3VudCBvZiByb3dzIG9mIGV2ZW50cyB0byBkaXNwbGF5IGluIHRoZSBhbGwgZGF5IHNlY3Rpb24gZm9yIFdlZWsgYW5kIERheSB2aWV3cywgd2lsbCBkaXNwbGF5IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHNob3dNb3JlYH08L2lubGluZUNvZGU+e2AgYnV0dG9uIGlmIGV2ZW50cyBleGNlZGUgdGhpcyBudW1iZXIuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwicmVzb3VyY2VzXCJcbiAgICB9fT57YHJlc291cmNlc2B9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgYXJyYXlPZihSZXNvdXJjZSlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwicmVzb3VyY2VzXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQW4gYXJyYXkgb2YgcmVzb3VyY2Ugb2JqZWN0cyB0aGF0IG1hcCBldmVudHMgdG8gYSBzcGVjaWZpYyByZXNvdXJjZS4gUmVzb3VyY2Ugb2JqZWN0cywgbGlrZSBldmVudHMsIGNhbiBiZSBhbnkgc2hhcGUgb3IgaGF2ZSBhbnkgcHJvcGVydGllcywgYnV0IHNob3VsZCBiZSB1bmlxdWx5IGlkZW50aWZpYWJsZSB2aWEgdGhlIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInJlc291cmNlLWlkLWFjY2Vzc29yXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgcmVzb3VyY2VJZEFjY2Vzc29yYH08L0xpbmtUbz57YCwgYXMgd2VsbCBhcyBhIFwidGl0bGVcIiBvciBuYW1lIGFzIHByb3ZpZGVkIGJ5IHRoZSBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJyZXNvdXJjZS10aXRsZS1hY2Nlc3NvclwiIG1keFR5cGU9XCJMaW5rVG9cIj57YHJlc291cmNlVGl0bGVBY2Nlc3NvcmB9PC9MaW5rVG8+e2AgcHJvcC5gfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgUmVzb3VyY2Uge1xuICBpZDogc3RyaW5nIHwgbnVtYmVyLCAvLyBtdXN0IGJlIHVuaXF1ZVxuICB0aXRsZTogc3RyaW5nXG59XG5gfTwvY29kZT48L3ByZT5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJyZXNvdXJjZWlkYWNjZXNzb3JcIlxuICAgIH19PntgcmVzb3VyY2VJZEFjY2Vzc29yYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BzdHJpbmcgfCBmdW5jdGlvbiAocmVzb3VyY2U6IE9iamVjdCkgPT4gc3RyaW5nIHwgbnVtYmVyIC8vIG11c3QgYmUgdW5pcXVlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInJlc291cmNlLWlkLWFjY2Vzc29yXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgUHJvdmlkZXMgYSB1bmlxdWUgaWRlbnRpZmllciwgb3IgYW4gYXJyYXkgb2YgdW5pcXVlIGlkZW50aWZpZXJzLCBmb3IgZWFjaCByZXNvdXJjZSBpbiB0aGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwicmVzb3VyY2VzXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgcmVzb3VyY2VzYH08L0xpbmtUbz57YCBhcnJheWB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcInJlc291cmNldGl0bGVhY2Nlc3NvclwiXG4gICAgfX0+e2ByZXNvdXJjZVRpdGxlQWNjZXNzb3JgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YHN0cmluZyB8IGZ1bmN0aW9uIChyZXNvdXJjZTogT2JqZWN0KSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwicmVzb3VyY2UtdGl0bGUtYWNjZXNzb3JcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BQcm92aWRlcyBhIGh1bWFuIHJlYWRhYmxlIG5hbWUgZm9yIHRoZSByZXNvdXJjZSBvYmplY3QsIHVzZWQgaW4gaGVhZGVycy5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJvbmRyaWxsZG93blwiXG4gICAgfX0+e2BvbkRyaWxsRG93bmB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGRhdGU6IERhdGUpID0+IC8vIGRvIHNvbWV0aGluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJvbi1kcmlsbC1kb3duXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQ2FsbGJhY2sgZmlyZWQgd2hlbiBkYXRlIGhlYWRlciwgb3IgdGhlIHRydW5jYXRlZCBldmVudHMgbGlua3MgYXJlIGNsaWNrZWQuIFdoZW4gaW5jbHVkZWQsIGl0IHdpbGwgb3ZlcnJpZGUgdGhlIGRlZmF1bHQgZHJpbGxkb3duIGJlaGF2aW9yLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm9ucmFuZ2VjaGFuZ2VcIlxuICAgIH19Pntgb25SYW5nZUNoYW5nZWB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKHJhbmdlOiBBcnJheSBbMXw3XSB8IE9iamVjdCB7c3RhcnQ6IERhdGUsIGVuZDogRGF0ZX0pID0+IC8vIGRvIHNvbWV0aGluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJvbi1yYW5nZS1jaGFuZ2VcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSB2aXNpYmxlIGRhdGUgcmFuZ2UgY2hhbmdlcy4gUmV0dXJucyBhbiBBcnJheSBvZiBkYXRlcyBvciBhbiBvYmplY3Qgd2l0aCBzdGFydCBhbmQgZW5kIGRhdGVzIGZvciBCVUlMVElOIHZpZXdzLmB9PC9wPlxuICAgIDxwPntgQ3VzdG9tIHZpZXdzIG1heSByZXR1cm4gc29tZXRoaW5nIGRpZmZlcmVudC5gfTwvcD5cbiAgICA8cD48ZW0gcGFyZW50TmFtZT1cInBcIj57YE5vdGU6YH08L2VtPntgIFRoaXMgbWV0aG9kIGlzIG5vdCBmaXJlZCBvbiBpbml0aWFsIHJlbmRlci4gT25seSBhcyB0aGUgdXNlciBuYXZpZ2F0ZXMgdGhyb3VnaCBCaWcgQ2FsZW5kYXIuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwic2VsZWN0YWJsZVwiXG4gICAgfX0+e2BzZWxlY3RhYmxlYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2Bib29sZWFuIHwgJ2lnbm9yZUV2ZW50cydgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwic2VsZWN0YWJsZVwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEFsbG93cyBtb3VzZSBzZWxlY3Rpb24gb2YgcmFuZ2VzIG9mIGRhdGVzL3RpbWVzLmB9PC9wPlxuICAgIDxwPntgVGhlICdpZ25vcmVFdmVudHMnIG9wdGlvbiBwcmV2ZW50cyBzZWxlY3Rpb24gY29kZSBmcm9tIHJ1bm5pbmcgd2hlbiBhIGRyYWcgYmVnaW5zIG92ZXIgYW4gZXZlbnQuIFVzZWZ1bCB3aGVuIHlvdSB3YW50IGN1c3RvbSBldmVudCBjbGljayBvciBkcmFnIGxvZ2ljLmB9PC9wPlxuICAgIDxwPjxlbSBwYXJlbnROYW1lPVwicFwiPntgVGhpbmdzIFRvIEtub3c6YH08L2VtPntgIFdoZW4geW91ICdkb3VibGVDbGljaycsIGJvdGggJ2NsaWNrJyBhbmQgJ2RvdWJsZUNsaWNrJyB3aWxsIGZpcmUuIENsaWNrIG9uIHRoZSAnc2hvd0NvZGUnIGJ1dHRvbiwgYXQgdGhlIGJvdHRvbSBvZiB0aGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwib24tc2VsZWN0LXNsb3RcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BleGFtcGxlYH08L0xpbmtUbz57YCwgdG8gc2VlIGhvdyB5b3UgY2FuIGdldCBhcm91bmQgdGhpcyBpc3N1ZS5gfTwvcD5cbiAgICA8aDIgey4uLntcbiAgICAgIFwiaWRcIjogXCJvbnNlbGVjdHNsb3RcIlxuICAgIH19Pntgb25TZWxlY3RTbG90YH08L2gyPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoT2JqZWN0OiBzbG90SW5mbykgPT4gYW55YH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHJlcXVpcmVzOiBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJzZWxlY3RhYmxlXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgc2VsZWN0YWJsZWB9PC9MaW5rVG8+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cIm9uLXNlbGVjdC1zbG90XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQSBjYWxsYmFjayBmaXJlZCB3aGVuIGEgZGF0ZSBzZWxlY3Rpb24gaXMgbWFkZS4gT25seSBmaXJlcyB3aGVuIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInNlbGVjdGFibGVcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BzZWxlY3RhYmxlYH08L0xpbmtUbz57YCBpcyB0cnVlLmB9PC9wPlxuICAgIDxwPjxlbSBwYXJlbnROYW1lPVwicFwiPntgVGhpbmdzIFRvIEtub3c6YH08L2VtPntgIFdoZW4geW91ICdkb3VibGVDbGljaycsIGJvdGggJ2NsaWNrJyBhbmQgJ2RvdWJsZUNsaWNrJyB3aWxsIGZpcmUuIENsaWNrIG9uIHRoZSAnc2hvd0NvZGUnIGJ1dHRvbiwgYXQgdGhlIGJvdHRvbSBvZiB0aGUgZXhhbXBsZSBiZWxvdywgdG8gc2VlIGhvdyB5b3UgY2FuIGdldCBhcm91bmQgdGhpcyBpc3N1ZS5gfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgOyhzbG90SW5mbzoge1xuICBzdGFydDogRGF0ZSxcbiAgZW5kOiBEYXRlLFxuICBzbG90czogQXJyYXk8RGF0ZT4sXG4gIGFjdGlvbjogJ3NlbGVjdCcgfCAnY2xpY2snIHwgJ2RvdWJsZUNsaWNrJyxcbiAgYm91bmRzOiA/e1xuICAgIC8vIEZvciBcInNlbGVjdFwiIGFjdGlvblxuICAgIHg6IG51bWJlcixcbiAgICB5OiBudW1iZXIsXG4gICAgdG9wOiBudW1iZXIsXG4gICAgcmlnaHQ6IG51bWJlcixcbiAgICBsZWZ0OiBudW1iZXIsXG4gICAgYm90dG9tOiBudW1iZXIsXG4gIH0sXG4gIGJveDogP3tcbiAgICAvLyBGb3IgXCJjbGlja1wiIG9yIFwiZG91YmxlQ2xpY2tcIiBhY3Rpb25zXG4gICAgY2xpZW50WDogbnVtYmVyLFxuICAgIGNsaWVudFk6IG51bWJlcixcbiAgICB4OiBudW1iZXIsXG4gICAgeTogbnVtYmVyLFxuICB9LFxufSkgPT4gYW55XG5gfTwvY29kZT48L3ByZT5cbiAgICA8aDQgey4uLntcbiAgICAgIFwiaWRcIjogXCJ3aGF0cy10aGUtZGlmZmVyZW5jZS1mcm9tLW9uc2VsZWN0aW5nXCJcbiAgICB9fT57YFdoYXQncyBUaGUgRGlmZmVyZW5jZSBmcm9tIG9uU2VsZWN0aW5nP2B9PC9oND5cbiAgICA8cD57YEhvdyBpcyB0aGlzIGRpZmZlcmVudCBmcm9tIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cIm9uLXNlbGVjdGluZ1wiIG1keFR5cGU9XCJMaW5rVG9cIj57YG9uU2VsZWN0aW5nYH08L0xpbmtUbz57YD8gVGhhdCBpcyBhIHZlcnkgZ29vZCBxdWVzdGlvbi4gVGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG9uU2VsZWN0aW5nYH08L2lubGluZUNvZGU+e2AgbWV0aG9kIGlzIG9ubHkgYXZhaWxhYmxlIGluIHRoZSBUaW1lIHZpZXdzIChgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2B3ZWVrYH08L2lubGluZUNvZGU+e2AsIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHdvcmsgd2Vla2B9PC9pbmxpbmVDb2RlPntgLCBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BkYXlgfTwvaW5saW5lQ29kZT57YCksIHdoZXJlYXMgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25TZWxlY3RTbG90YH08L2lubGluZUNvZGU+e2AgaXMgYWxzbyBhdmFpbGFibGUgaW4gdGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG1vbnRoYH08L2lubGluZUNvZGU+e2Agdmlldy4gVGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG9uU2VsZWN0aW5nYH08L2lubGluZUNvZGU+e2AgbWV0aG9kIGFsbG93cyB5b3UgdG8gJ2NhbmNlbCcgeW91ciBzZWxlY3Rpb24gYnkgcmV0dXJuaW5nIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGZhbHNlYH08L2lubGluZUNvZGU+e2AuIFRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BvblNlbGVjdFNsb3RgfTwvaW5saW5lQ29kZT57YCBtZXRob2QgcmV0dXJucyBhIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHNsb3RJbmZvYH08L2lubGluZUNvZGU+e2Agb2JqZWN0LCBjb250YWluaW5nIGEgbG90IG9mIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgeW91ciBzZWxlY3Rpb24uYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwib25zZWxlY3RldmVudFwiXG4gICAgfX0+e2BvblNlbGVjdEV2ZW50YH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoZXZlbnQ6IE9iamVjdCkgPT4gYW55YH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cIm9uLXNlbGVjdC1ldmVudFwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YENhbGxiYWNrIGZpcmVkIHdoZW4gYSBjYWxlbmRhciBldmVudCBpcyBzZWxlY3RlZCAoaS5lLjogYW4gYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25DbGlja2B9PC9pbmxpbmVDb2RlPntgIGhhbmRsZXIpLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YE5vdGU6YH08L3N0cm9uZz57YCBUaGUgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwic2VsZWN0YWJsZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YHNlbGVjdGFibGVgfTwvTGlua1RvPntgIHByb3AgaXMgYH08ZW0gcGFyZW50TmFtZT1cInBcIj57YG5vdGB9PC9lbT57YCByZXF1aXJlZCBmb3IgdGhpcyBwcm9wIHRvIGZ1bmN0aW9uLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YEltcG9ydGFudDpgfTwvc3Ryb25nPntgIFRoZSBldmVudCBwYXNzZWQgaW50byB0aGUgZnVuY3Rpb24gaXMgdGhlIENhbGVuZGFyIEV2ZW50LCBub3QgdGhlIFN5bnRoZXRpY0V2ZW50IGV4cGVjdGVkIGJ5IG1vc3QgY2xpY2sgaGFuZGxlcnMuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwib25kb3VibGVjbGlja2V2ZW50XCJcbiAgICB9fT57YG9uRG91YmxlQ2xpY2tFdmVudGB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGV2ZW50OiBPYmplY3QpID0+IGFueWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJvbi1kb3VibGUtY2xpY2stZXZlbnRcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BDYWxsYmFjayBmaXJlZCB3aGVuIGEgY2FsZW5kYXIgZXZlbnQgaXMgY2xpY2tlZCB0d2ljZS4gKGkuZS46IGFuIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG9uRG91YmxlQ2xpY2tgfTwvaW5saW5lQ29kZT57YCBoYW5kbGVyKS5gfTwvcD5cbiAgICA8cD48c3Ryb25nIHBhcmVudE5hbWU9XCJwXCI+e2BOb3RlOmB9PC9zdHJvbmc+e2AgVGhlIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInNlbGVjdGFibGVcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BzZWxlY3RhYmxlYH08L0xpbmtUbz57YCBwcm9wIGlzIGB9PGVtIHBhcmVudE5hbWU9XCJwXCI+e2Bub3RgfTwvZW0+e2AgcmVxdWlyZWQgZm9yIHRoaXMgcHJvcCB0byBmdW5jdGlvbi5gfTwvcD5cbiAgICA8cD48c3Ryb25nIHBhcmVudE5hbWU9XCJwXCI+e2BJbXBvcnRhbnQ6YH08L3N0cm9uZz57YCBUaGUgZXZlbnQgcGFzc2VkIGludG8gdGhlIGZ1bmN0aW9uIGlzIHRoZSBDYWxlbmRhciBFdmVudCwgbm90IHRoZSBTeW50aGV0aWNFdmVudCBleHBlY3RlZCBieSBtb3N0IGNsaWNrIGhhbmRsZXJzLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm9uc2VsZWN0aW5nXCJcbiAgICB9fT57YG9uU2VsZWN0aW5nYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2AocmFuZ2U6IE9iamVjdCB7IHN0YXJ0OiBEYXRlLCBlbmQ6IERhdGUsIHJlc291cmNlSWQ6IG51bGx8c3RyaW5nfG51bWJlciB9KSA9PiA/Ym9vbGVhbmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2ByZXF1aXJlczogYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwic2VsZWN0YWJsZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YHNlbGVjdGFibGVgfTwvTGlua1RvPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJvbi1zZWxlY3RpbmdcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BDYWxsYmFjayBmaXJlZCB3aGVuIGRyYWdnaW5nIGEgc2VsZWN0aW9uIGluIHRoZSBUaW1lIHZpZXdzLiBPbmx5IGZpcmVzIHdoZW4gYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwic2VsZWN0YWJsZVwiIG1keFR5cGU9XCJMaW5rVG9cIj57YHNlbGVjdGFibGVgfTwvTGlua1RvPntgIGlzIHRydWUuYH08L3A+XG4gICAgPHA+e2BSZXR1cm5pbmcgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZmFsc2VgfTwvaW5saW5lQ29kZT57YCBmcm9tIHRoZSBoYW5kbGVyIHdpbGwgcHJldmVudCBhIHNlbGVjdGlvbi5gfTwvcD5cbiAgICA8aDQgey4uLntcbiAgICAgIFwiaWRcIjogXCJ3aGF0cy10aGUtZGlmZmVyZW5jZS1mcm9tLW9uc2VsZWN0c2xvdFwiXG4gICAgfX0+e2BXaGF0J3MgVGhlIERpZmZlcmVuY2UgZnJvbSBvblNlbGVjdFNsb3Q/YH08L2g0PlxuICAgIDxwPntgSG93IGlzIHRoaXMgZGlmZmVyZW50IGZyb20gYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwib24tc2VsZWN0LXNsb3RcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BvblNlbGVjdFNsb3RgfTwvTGlua1RvPntgPyBUaGF0IGlzIGEgdmVyeSBnb29kIHF1ZXN0aW9uLiBUaGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25TZWxlY3RpbmdgfTwvaW5saW5lQ29kZT57YCBtZXRob2QgaXMgb25seSBhdmFpbGFibGUgaW4gdGhlIFRpbWUgdmlld3MgKGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHdlZWtgfTwvaW5saW5lQ29kZT57YCwgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgd29yayB3ZWVrYH08L2lubGluZUNvZGU+e2AsIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGRheWB9PC9pbmxpbmVDb2RlPntgKSwgd2hlcmVhcyBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BvblNlbGVjdFNsb3RgfTwvaW5saW5lQ29kZT57YCBpcyBhbHNvIGF2YWlsYWJsZSBpbiB0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgbW9udGhgfTwvaW5saW5lQ29kZT57YCB2aWV3LiBUaGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgb25TZWxlY3RpbmdgfTwvaW5saW5lQ29kZT57YCBtZXRob2QgYWxsb3dzIHlvdSB0byAnY2FuY2VsJyB5b3VyIHNlbGVjdGlvbiBieSByZXR1cm5pbmcgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgZmFsc2VgfTwvaW5saW5lQ29kZT57YC4gVGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG9uU2VsZWN0U2xvdGB9PC9pbmxpbmVDb2RlPntgIG1ldGhvZCByZXR1cm5zIGEgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgc2xvdEluZm9gfTwvaW5saW5lQ29kZT57YCBvYmplY3QsIGNvbnRhaW5pbmcgYSBsb3Qgb2YgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBhYm91dCB5b3VyIHNlbGVjdGlvbi5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJvbnNob3dtb3JlXCJcbiAgICB9fT57YG9uU2hvd01vcmVgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChldmVudHM6IEFycmF5W2V2ZW50OiBPYmplY3RdLCBkYXRlOiBEYXRlKSA9PiBhbnlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwib24tc2hvdy1tb3JlXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQ2FsbGJhY2sgZmlyZWQgd2hlbiBhICt7Y291bnR9IG1vcmUgaXMgY2xpY2tlZC4gUmVjZWl2ZXMgYH08c3Ryb25nIHBhcmVudE5hbWU9XCJwXCI+e2BhbGxgfTwvc3Ryb25nPntgIG9mIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BldmVudHNgfTwvaW5saW5lQ29kZT57YCBmb3IgdGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGRhdGVgfTwvaW5saW5lQ29kZT57YCBvbiB3aGljaCBpdCB3YXMgc2VsZWN0ZWQuYH08L3A+XG4gICAgey8qIFRPRE86IGRvU2hvd01vcmVEcmlsbERvd24gaXMgbm90IGZ1bmN0aW9uaW5nICovfVxuICAgIHsvKiBSZXF1aXJlZCB3aGVuIHVzaW5nIHRoZSA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZG8tc2hvdy1tb3JlLWRyaWxsLWRvd25cIj5kb1Nob3dNb3JlRHJpbGxEb3duPC9MaW5rVG8+IHByb3BzIGFzIGBmYWxzZWAuICovfVxuICAgIHsvKiAjIyMgZG9TaG93TW9yZURyaWxsRG93blxuICAgICAtIHR5cGU6IGBib29sZWFuYFxuICAgICAtIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJkby1zaG93LW1vcmUtZHJpbGwtZG93blwiPlxuICAgICAgICBFeGFtcGxlXG4gICAgICA8L0xpbmtUbz5cbiAgICAgRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBkcmlsbCBkb3duIHNob3VsZCBvY2N1ciB3aGVuIGNsaWNraW5nIG9uIHRoZSBcIitfeF8gbW9yZVwiIGxpbmsuXG4gICAgIElmIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJwb3B1cFwiPnBvcHVwPC9MaW5rVG8+IGlzIGBmYWxzZWAsIGFuZCBgZG9TaG93TW9yZURyaWxsRG93bmAgaXMgYHRydWVgLCB0aGUgZHJpbGwgZG93biB3aWxsIG9jY3VyIGFzIHVzdWFsLlxuICAgICBJZiA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwicG9wdXBcIj5wb3B1cDwvTGlua1RvPiBpcyBgZmFsc2VgLCBhbmQgYGRvU2hvd01vcmVEcmlsbERvd25gIGlzIGBmYWxzZWAsIHRoZSBkcmlsbCBkb3duIHdpbGwgbm90IG9jY3VyIGFuZCB0aGUgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cIm9uLXNob3ctbW9yZVwiPm9uU2hvd01vcmU8L0xpbmtUbz4gZnVuY3Rpb24gd2lsbCB0cmlnZ2VyLiAqL31cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJvbmtleXByZXNzZXZlbnRcIlxuICAgIH19Pntgb25LZXlQcmVzc0V2ZW50YH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoZXZlbnQ6IE9iamVjdCwgZTogU3ludGhldGljRXZlbnQpID0+IHZvaWRgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwib24ta2V5LXByZXNzLWV2ZW50XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQ2FsbGJhY2sgZmlyZWQgd2hlbiBhIGZvY3VzZWQgY2FsZW5kYXIgZXZlbnQgcmVjZWl2ZXMgYSBrZXkgcHJlc3MuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwic2hvd2FsbGV2ZW50c1wiXG4gICAgfX0+e2BzaG93QWxsRXZlbnRzYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2Bib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmYWxzZWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJzaG93LWFsbC1ldmVudHNcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BEaXNwbGF5cyBhbGwgZXZlbnRzIG9uIHRoZSBtb250aCB2aWV3IGluc3RlYWQgb2YgaGF2aW5nIHNvbWUgaGlkZGVuIGJlaGluZCAre2NvdW50fSBtb3JlLiBUaGlzIHdpbGwgY2F1c2UgdGhlIHJvd3MgaW4gdGhlIG1vbnRoIHZpZXcgdG8gYmUgc2Nyb2xsYWJsZSBpZiB0aGUgbnVtYmVyIG9mIGV2ZW50cyBleGNlZWQgdGhlIGhlaWdodCBvZiB0aGUgcm93LmB9PC9wPlxuICAgIDxoNCB7Li4ue1xuICAgICAgXCJpZFwiOiBcInNlbGVjdGVkXCJcbiAgICB9fT57YHNlbGVjdGVkYH08L2g0PlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BFdmVudDogT2JqZWN0YH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInNlbGVjdGVkXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVGhlIHNlbGVjdGVkIGV2ZW50LCBpZiBhbnkuIEJ5IGRlZmF1bHQsIEJpZyBDYWxlbmRhciAnY29udHJvbHMnIHRoZSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BzZWxlY3RlZGB9PC9pbmxpbmVDb2RlPntgIChoaWdobGlnaHRlZCkgZXZlbnQgaW4gdGhlIGRpc3BsYXkuIFlvdSBjYW4gdXNlIHRoaXMgcHJvcCB0byBjb250cm9sIHdoaWNoIGV2ZW50IGlzIGhpZ2hsaWdodGVkLiBUaGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgc2VsZWN0ZWRgfTwvaW5saW5lQ29kZT57YCBldmVudCBtdXN0IGJlIGEgb2JqZWN0IHJlZmVyZW5jZSB0byB0aGUgZXZlbnQgd2l0aGluIHRoZSBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJldmVudHNcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BldmVudHNgfTwvTGlua1RvPntgIGFycmF5LmB9PC9wPlxuICAgIDxwPntgT2Z0ZW4gdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cIm9uLXNlbGVjdC1ldmVudFwiIG1keFR5cGU9XCJMaW5rVG9cIj57YE9uU2VsZWN0RXZlbnRgfTwvTGlua1RvPntgIGFuZC9vciBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJvbi1kb3VibGUtY2xpY2stZXZlbnRcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BvbkRvdWJsZUNsaWNrRXZlbnRgfTwvTGlua1RvPntgLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcInZpZXdzXCJcbiAgICB9fT57YHZpZXdzYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BWaWV3cyAoJ21vbnRoJ3wnd2Vlayd8J3dvcmtfd2Vlayd8J2RheSd8J2FnZW5kYScpYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2Bbdmlld3MuTU9OVEgsIHZpZXdzLldFRUssIHZpZXdzLkRBWSwgdmlld3MuQUdFTkRBXWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJjYWwtdmlld3NcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BBbiBhcnJheSBvZiBidWlsdC1pbiB2aWV3IG5hbWVzIHRvIGFsbG93IHRoZSBjYWxlbmRhciB0byBkaXNwbGF5LiBhY2NlcHRzIGVpdGhlciBhbiBhcnJheSBvZiBidWlsdGluIHZpZXcgbmFtZXMsYH08L3A+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YHZpZXdzPXtbJ21vbnRoJywgJ2RheScsICdhZ2VuZGEnXX1cbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxwPntgb3IgYW4gb2JqZWN0IGhhc2ggb2YgdGhlIHZpZXcgbmFtZSBhbmQgdGhlIGNvbXBvbmVudCAob3IgYm9vbGVhbiBmb3IgYnVpbHRpbikuYH08L3A+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YHZpZXdzPXt7XG4gIG1vbnRoOiB0cnVlLFxuICB3ZWVrOiBmYWxzZSxcbiAgbXl3ZWVrOiBXb3JrV2Vla1ZpZXdDb21wb25lbnQsXG59fVxuYH08L2NvZGU+PC9wcmU+XG4gICAgPHA+e2BDdXN0b20gdmlld3MgY2FuIGJlIGFueSBSZWFjdCBjb21wb25lbnQsIHRoYXQgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIGludGVyZmFjZTpgfTwvcD5cbiAgICA8cHJlPjxjb2RlIHBhcmVudE5hbWU9XCJwcmVcIiB7Li4ue1xuICAgICAgICBcImNsYXNzTmFtZVwiOiBcImxhbmd1YWdlLWpzXCJcbiAgICAgIH19PntgaW50ZXJmYWNlIFZpZXcge1xuICBzdGF0aWMgdGl0bGUoZGF0ZTogRGF0ZSwgeyBmb3JtYXRzOiBEYXRlRm9ybWF0W10sIGN1bHR1cmU6IHN0cmluZz8sIC4uLnByb3BzIH0pOiBzdHJpbmdcbiAgc3RhdGljIG5hdmlnYXRlKGRhdGU6IERhdGUsIGFjdGlvbjogJ1BSRVYnIHwgJ05FWFQnIHwgJ0RBVEUnKTogRGF0ZVxufVxuYH08L2NvZGU+PC9wcmU+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZHJpbGxkb3dudmlld1wiXG4gICAgfX0+e2BkcmlsbGRvd25WaWV3YH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YFZpZXdzLkRBWWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJkcmlsbGRvd24tdmlld1wiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRoZSBzdHJpbmcgbmFtZSBvZiB0aGUgZGVzdGluYXRpb24gYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgdmlld2B9PC9pbmxpbmVDb2RlPntgIGZvciBkcmlsbC1kb3duIGFjdGlvbnMsIHN1Y2ggYXMgY2xpY2tpbmcgYSBkYXRlIGhlYWRlciwgb3IgdGhlIHRydW5jYXRlZCBldmVudHMgbGlua3MuIElmIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGdldERyaWxsZG93blZpZXdgfTwvaW5saW5lQ29kZT57YCBpcyBhbHNvIHNwZWNpZmllZCBpdCB3aWxsIGJlIHVzZWQgaW5zdGVhZC5gfTwvcD5cbiAgICA8cD57YFNldCB0byBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2BudWxsYH08L2lubGluZUNvZGU+e2AgdG8gZGlzYWJsZSBkcmlsbC1kb3duIGFjdGlvbnMuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZ2V0ZHJpbGxkb3dudmlld1wiXG4gICAgfX0+e2BnZXREcmlsbGRvd25WaWV3YH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAodGFyZ2V0RGF0ZTogRGF0ZSwgY3VycmVudFZpZXdOYW1lOiBzdHJpbmcsIGNvbmZpZ3VyZWRWaWV3TmFtZXM6IFZpZXdzW10pID0+IHN0cmluZ3xudWxsYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImdldC1kcmlsbGRvd24tdmlld1wiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEZ1bmN0aW9uYWxseSBlcXVpdmFsZW50IHRvIGRyaWxsZG93blZpZXcsIGJ1dCBhY2NlcHRzIGEgZnVuY3Rpb24gdGhhdCBjYW4gcmV0dXJuIGEgdmlldyBuYW1lLiBJdCdzIHVzZWZ1bCBmb3IgY3VzdG9taXppbmcgdGhlIGRyaWxsLWRvd24gYWN0aW9ucyBkZXBlbmRpbmcgb24gdGhlIHRhcmdldCBkYXRlIGFuZCB0cmlnZ2VyaW5nIHZpZXcuYH08L3A+XG4gICAgPHA+e2BSZXR1cm4gbnVsbCB0byBkaXNhYmxlIGRyaWxsLWRvd24gYWN0aW9ucy5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJsZW5ndGhcIlxuICAgIH19PntgbGVuZ3RoYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BudW1iZXJgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YDMwYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImxlbmd0aFwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YERldGVybWluZXMgdGhlIGVuZCBkYXRlIGZyb20gZGF0ZSBwcm9wIGluIHRoZSBhZ2VuZGEgdmlldyBkYXRlIHByb3AgKyBsZW5ndGggKGluIG51bWJlciBvZiBkYXlzKSA9IGVuZCBkYXRlLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcInRvb2xiYXJcIlxuICAgIH19PntgdG9vbGJhcmB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgYm9vbGVhbmB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2BkZWZhdWx0OiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgdHJ1ZWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJ0b29sYmFyXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSB0b29sYmFyIGlzIGRpc3BsYXllZGB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcInBvcHVwXCJcbiAgICB9fT57YHBvcHVwYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2Bib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2B0cnVlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInBvcHVwXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgU2hvdyB0cnVuY2F0ZWQgZXZlbnRzIGluIGFuIG92ZXJsYXkgd2hlbiB5b3UgY2xpY2sgdGhlIFwiK2B9PGVtIHBhcmVudE5hbWU9XCJwXCI+e2B4YH08L2VtPntgIG1vcmVcIiBsaW5rLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcInBvcHVwb2Zmc2V0XCJcbiAgICB9fT57YHBvcHVwT2Zmc2V0YH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BudW1iZXJ8c2hhcGUge3g6IG51bWJlciwgeTogbnVtYmVyfWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJwb3B1cC1vZmZzZXRcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BEaXN0YW5jZSBpbiBwaXhlbHMsIGZyb20gdGhlIGVkZ2VzIG9mIHRoZSB2aWV3cG9ydCwgdGhlIFwic2hvdyBtb3JlXCIgb3ZlcmxheSBzaG91bGQgYmUgcG9zaXRpb25lZC5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJsb25ncHJlc3N0aHJlc2hvbGRcIlxuICAgIH19PntgbG9uZ1ByZXNzVGhyZXNob2xkYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BudW1iZXJgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YDI1MGB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJsb25nLXByZXNzLXRocmVzaG9sZFwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFNwZWNpZmllcyB0aGUgbnVtYmVyIG9mIG1pbGlzZWNvbmRzIHRoZSB1c2VyIG11c3QgcHJlc3MgYW5kIGhvbGQgb24gdGhlIHNjcmVlbiBmb3IgYSB0b3VjaCB0byBiZSBjb25zaWRlcmVkIGEgXCJsb25nIHByZXNzLlwiIExvbmcgcHJlc3NlcyBhcmUgdXNlZCBmb3IgdGltZSBzbG90IHNlbGVjdGlvbiBvbiB0b3VjaCBkZXZpY2VzLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcInN0ZXBcIlxuICAgIH19Pntgc3RlcGB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgbnVtYmVyYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2AzMGB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJzdGVwXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgRGV0ZXJtaW5lcyB0aGUgc2VsZWN0YWJsZSB0aW1lIGluY3JlbWVudHMgaW4gd2VlayBhbmQgZGF5IHZpZXdzYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwidGltZXNsb3RzXCJcbiAgICB9fT57YHRpbWVzbG90c2B9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgbnVtYmVyYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInRpbWVzbG90c1wiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRoZSBudW1iZXIgb2Ygc2xvdHMgcGVyIFwic2VjdGlvblwiIGluIHRoZSB0aW1lIGdyaWQgdmlld3MuIEFkanVzdCB3aXRoIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInN0ZXBcIiBtZHhUeXBlPVwiTGlua1RvXCI+e2BzdGVwYH08L0xpbmtUbz57YCB0byBjaGFuZ2UgdGhlIGRlZmF1bHQgb2YgMSBob3VyIGxvbmcgZ3JvdXBzLCB3aXRoIDMwIG1pbnV0ZSBzbG90cy5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJydGxcIlxuICAgIH19PntgcnRsYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2Bib29sZWFuYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmYWxzZWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJyaWdodC10by1sZWZ0XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgU3dpdGNoIHRoZSBjYWxlbmRhciB0byBhIHJpZ2h0LXRvLWxlZnQgcmVhZCBkaXJlY3Rpb24uYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZXZlbnRwcm9wZ2V0dGVyXCJcbiAgICB9fT57YGV2ZW50UHJvcEdldHRlcmB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGV2ZW50OiBPYmplY3QsIHN0YXJ0OiBEYXRlLCBlbmQ6IERhdGUsIGlzU2VsZWN0ZWQ6IGJvb2xlYW4pID0+IHtjbGFzc05hbWU/OiBzdHJpbmcsIHN0eWxlPzogT2JqZWN0fWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJldmVudC1wcm9wLWdldHRlclwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YE9wdGlvbmFsbHkgcHJvdmlkZSBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhbiBvYmplY3Qgb2YgY2xhc3NOYW1lIG9yIHN0eWxlIHByb3BzIHRvIGJlIGFwcGxpZWQgdG8gdGhlIHRoZSBldmVudCBub2RlLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcInNsb3Rwcm9wZ2V0dGVyXCJcbiAgICB9fT57YHNsb3RQcm9wR2V0dGVyYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoZGF0ZTogRGF0ZSkgPT4ge2NsYXNzTmFtZT86IHN0cmluZywgc3R5bGU/OiBPYmplY3R9YH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cIm9uLXNsb3QtcHJvcC1nZXR0ZXJcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BPcHRpb25hbGx5IHByb3ZpZGUgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gb2JqZWN0IG9mIGNsYXNzTmFtZSBvciBzdHlsZSBwcm9wcyB0byBiZSBhcHBsaWVkIHRvIHRoZSB0aGUgdGltZS1zbG90IG5vZGUuYH08L3A+XG4gICAgPHA+PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgQ2F1dGlvbiFgfTwvc3Ryb25nPntgIFN0eWxlcyB0aGF0IGNoYW5nZSBsYXlvdXQgb3IgcG9zaXRpb24gbWF5IGJyZWFrIHRoZSBjYWxlbmRhciBpbiB1bmV4cGVjdGVkIHdheXMuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwic2xvdGdyb3VwcHJvcGdldHRlclwiXG4gICAgfX0+e2BzbG90R3JvdXBQcm9wR2V0dGVyYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoZ3JvdXA6IERhdGVbXSkgPT4geyBzdHlsZT86IE9iamVjdCB9YH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInNsb3QtZ3JvdXAtcHJvcC1nZXR0ZXJcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BPcHRpb25hbGx5IHByb3ZpZGUgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gb2JqZWN0IG9mIGNsYXNzTmFtZSBvciBzdHlsZSBwcm9wcyB0byBiZSBhcHBsaWVkIHRvIHRoZSB0aW1lLXNsb3Qgbm9kZS5gfTwvcD5cbiAgICA8cD48c3Ryb25nIHBhcmVudE5hbWU9XCJwXCI+e2BDYXV0aW9uISBTdHlsZXMgdGhhdCBjaGFuZ2UgbGF5b3V0IG9yIHBvc2l0aW9uIG1heSBicmVhayB0aGUgY2FsZW5kYXIgaW4gdW5leHBlY3RlZCB3YXlzLmB9PC9zdHJvbmc+PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcImRheXByb3BnZXR0ZXJcIlxuICAgIH19PntgZGF5UHJvcEdldHRlcmB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGRhdGU6IERhdGUpID0+IHtjbGFzc05hbWU/OiBzdHJpbmcsIHN0eWxlPzogT2JqZWN0fWB9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJkYXktcHJvcC1nZXR0ZXJcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BPcHRpb25hbGx5IHByb3ZpZGUgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gb2JqZWN0IG9mIGNsYXNzTmFtZSBvciBzdHlsZSBwcm9wcyB0byBiZSBhcHBsaWVkIHRvIHRoZSB0aGUgZGF5IGJhY2tncm91bmQuYH08L3A+XG4gICAgPHA+PHN0cm9uZyBwYXJlbnROYW1lPVwicFwiPntgQ2F1dGlvbiFgfTwvc3Ryb25nPntgIFN0eWxlcyB0aGF0IGNoYW5nZSBsYXlvdXQgb3IgcG9zaXRpb24gbWF5IGJyZWFrIHRoZSBjYWxlbmRhciBpbiB1bmV4cGVjdGVkIHdheXMuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwic2hvd211bHRpZGF5dGltZXNcIlxuICAgIH19Pntgc2hvd011bHRpRGF5VGltZXNgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGJvb2xlYW5gfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZhbHNlYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInNob3ctbXVsdGktZGF5LXRpbWVzXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgU3VwcG9ydCB0byBzaG93IG11bHRpLWRheSBldmVudHMgd2l0aCBzcGVjaWZpYyBzdGFydCBhbmQgZW5kIHRpbWVzIGluIHRoZSBtYWluIHRpbWUgZ3JpZCAocmF0aGVyIHRoYW4gaW4gdGhlIGFsbCBkYXkgaGVhZGVyKS5gfTwvcD5cbiAgICA8cD48c3Ryb25nIHBhcmVudE5hbWU9XCJwXCI+e2BOb3RlOiBUaGlzIG1heSBjYXVzZSBjYWxlbmRhcnMgd2l0aCBzZXZlcmFsIGV2ZW50cyB0byBsb29rIHZlcnkgYnVzeSBpbiB0aGUgd2VlayBhbmQgZGF5IHZpZXdzLmB9PC9zdHJvbmc+PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm1pblwiXG4gICAgfX0+e2BtaW5gfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGluc3RhbmNlT2YoRGF0ZSlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG5ldyBEYXRlKDE5NzIsIDAsIDEsIDAsIDAsIDApYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cIm1pblwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YENvbnN0cmFpbnMgdGhlIG1pbmltdW0gdGltZSBvZiB0aGUgRGF5IGFuZCBXZWVrIHZpZXdzLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm1heFwiXG4gICAgfX0+e2BtYXhgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGluc3RhbmNlT2YoRGF0ZSlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG5ldyBEYXRlKDE5NzIsIDAsIDEsIDIzLCA1OSwgNTkpYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cIm1heFwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YENvbnN0cmFpbnMgdGhlIG1heGltdW0gdGltZSBvZiB0aGUgRGF5IGFuZCBXZWVrIHZpZXdzLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcInNjcm9sbHRvdGltZVwiXG4gICAgfX0+e2BzY3JvbGxUb1RpbWVgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGluc3RhbmNlT2YoRGF0ZSlgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG5ldyBEYXRlKClgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwic2Nyb2xsLXRvLXRpbWVcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BEZXRlcm1pbmVzIGhvdyBmYXIgZG93biB0aGUgc2Nyb2xsIHBhbmUgaXMgaW5pdGlhbGx5IHNjcm9sbGVkIGRvd24uYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiY3VsdHVyZVwiXG4gICAgfX0+e2BjdWx0dXJlYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgZGVmYXVsdDogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YG5vbmUgKGJyb3dzZXIgZGVmYXVsdClgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiY3VsdHVyZVwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFNwZWNpZnkgYSBzcGVjaWZpYyBjdWx0dXJlIGNvZGUgZm9yIHRoZSBDYWxlbmRhci4gVGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGN1bHR1cmVgfTwvaW5saW5lQ29kZT57YCBpcyB1c2VkIGJ5IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGZvcm1hdHNgfTwvaW5saW5lQ29kZT57YCB3aXRoIHlvdXIgYH08TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwibG9jYWxpemVyXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgbG9jYWxpemVyYH08L0xpbmtUbz57YCB0byAnZm9ybWF0JyBkYXRlL3RpbWUgaW5mb3JtYXRpb24gb24gdGhlIENhbGVuZGFyLiBUbyBsb2NhbGl6ZSBtZXNzYWdpbmcsIHVzZSB0aGUgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgbWVzc2FnZXNgfTwvaW5saW5lQ29kZT57YCBwcm9wLmB9PC9wPlxuICAgIDxwPjxzdHJvbmcgcGFyZW50TmFtZT1cInBcIj57YE5vdGU6IGl0J3MgZ2VuZXJhbGx5IGJldHRlciB0byBoYW5kbGUgdGhpcyBnbG9iYWxseSB2aWEgeW91ciBpMThuIGxpYnJhcnkuYH08L3N0cm9uZz48L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZm9ybWF0c1wiXG4gICAgfX0+e2Bmb3JtYXRzYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BPYmplY3RgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZm9ybWF0c1wiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwibG9jYWxpemVyXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBMb2NhbGl6ZXJcbiAgICA8L0xpbmtUbz4gc3BlY2lmaWMgZm9ybWF0cywgdGVsbCB0aGUgQ2FsZW5kYXIgaG93IHRvIGZvcm1hdCBhbmQgZGlzcGxheSBkYXRlcyBhbmRcbnRpbWVzLlxuICAgIDxwPntgVGhlIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YGZvcm1hdGB9PC9pbmxpbmVDb2RlPntgIHR5cGVzIGFyZSBkZXBlbmRlbnQgb24gdGhlIGNvbmZpZ3VyZWQgbG9jYWxpemVyOyBib3RoIE1vbWVudCBhbmQgR2xvYmFsaXplIGFjY2VwdCBzdHJpbmdzIG9mIHRva2VucyBhY2NvcmRpbmcgdG8gdGhlaXIgb3duIHNwZWNpZmljYXRpb24sIHN1Y2ggYXM6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YCdERCBtbSB5eXl5J2B9PC9pbmxpbmVDb2RlPntgLmB9PC9wPlxuICAgIDxwcmU+PGNvZGUgcGFyZW50TmFtZT1cInByZVwiIHsuLi57XG4gICAgICAgIFwiY2xhc3NOYW1lXCI6IFwibGFuZ3VhZ2UtanNcIlxuICAgICAgfX0+e2Bjb25zdCBmb3JtYXRzID0gdXNlTWVtbygoKSA9PiAoe1xuICBkYXRlRm9ybWF0OiAnZGQnLFxuXG4gIGRheUZvcm1hdDogKGRhdGUsICwgbG9jYWxpemVyKSA9PlxuICAgIGxvY2FsaXplci5mb3JtYXQoZGF0ZSwgJ0RERCcsIGN1bHR1cmUpLFxuXG4gIGRheVJhbmdlSGVhZGVyRm9ybWF0OiAoeyBzdGFydCwgZW5kIH0sIGN1bHR1cmUsIGxvY2FsaXplcikgPT5cbiAgICBsb2NhbGl6ZXIuZm9ybWF0KHN0YXJ0LCB7IGRhdGU6ICdzaG9ydCcgfSwgY3VsdHVyZSkgKyAnIOKAlCAnICtcbiAgICBsb2NhbGl6ZXIuZm9ybWF0KGVuZCwgeyBkYXRlOiAnc2hvcnQnIH0sIGN1bHR1cmUpXG59KSwgW10pXG5cbjxDYWxlbmRhciBmb3JtYXRzPXtmb3JtYXRzfSAvPlxuYH08L2NvZGU+PC9wcmU+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZm9ybWF0c2RhdGVmb3JtYXRcIlxuICAgIH19PntgZm9ybWF0cy5kYXRlRm9ybWF0YH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoZGF0ZTogRGF0ZSwgY3VsdHVyZTogP3N0cmluZywgbG9jYWxpemVyOiBEYXRlTG9jYWxpemVyKSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZm9ybWF0cy1kYXRlLWZvcm1hdFwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEZvcm1hdCBmb3IgdGhlIGRheSBvZiB0aGUgbW9udGggaGVhZGluZyBpbiB0aGUgTW9udGggdmlldy4gZS5nLiBcIjAxXCIsIFwiMDJcIiwgXCIwM1wiLCBldGNgfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJmb3JtYXRzZGF5Zm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMuZGF5Rm9ybWF0YH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoZGF0ZTogRGF0ZSwgY3VsdHVyZTogP3N0cmluZywgbG9jYWxpemVyOiBEYXRlTG9jYWxpemVyKSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZm9ybWF0cy1kYXktZm9ybWF0XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQSBkYXkgb2YgdGhlIHdlZWsgZm9ybWF0IGZvciBXZWVrIGFuZCBEYXkgaGVhZGluZ3MsIGUuZy4gXCJXZWQgMDEvMDRcImB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcImZvcm1hdHN3ZWVrZGF5Zm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMud2Vla2RheUZvcm1hdGB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGRhdGU6IERhdGUsIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogRGF0ZUxvY2FsaXplcikgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImZvcm1hdHMtd2Vla2RheS1mb3JtYXRcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BXZWVrIGRheSBuYW1lIGZvcm1hdCBmb3IgdGhlIE1vbnRoIHdlZWsgZGF5IGhlYWRpbmdzLCBlLmc6IFwiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIGV0Y2B9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcImZvcm1hdHN0aW1lZ3V0dGVyZm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMudGltZUd1dHRlckZvcm1hdGB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGRhdGU6IERhdGUsIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogRGF0ZUxvY2FsaXplcikgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImZvcm1hdHMtdGltZS1ndXR0ZXItZm9ybWF0XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVGhlIHRpbWVzdGFtcCBjZWxsIGZvcm1hdHMgaW4gV2VlayBhbmQgVGltZSB2aWV3cywgZS5nLiBcIjQ6MDAgQU1cImB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcImZvcm1hdHNtb250aGhlYWRlcmZvcm1hdFwiXG4gICAgfX0+e2Bmb3JtYXRzLm1vbnRoSGVhZGVyRm9ybWF0YH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoZGF0ZTogRGF0ZSwgY3VsdHVyZTogP3N0cmluZywgbG9jYWxpemVyOiBEYXRlTG9jYWxpemVyKSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZm9ybWF0cy1tb250aC1oZWFkZXItZm9ybWF0XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVG9vbGJhciBoZWFkZXIgZm9ybWF0IGZvciB0aGUgTW9udGggdmlldywgZS5nIFwiMjAxNSBBcHJpbFwiYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZm9ybWF0c2RheXJhbmdlaGVhZGVyZm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMuZGF5UmFuZ2VIZWFkZXJGb3JtYXRgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChyYW5nZTogT2JqZWN0IHtzdGFydDogRGF0ZSwgZW5kOiBEYXRlfSwgY3VsdHVyZTogP3N0cmluZywgbG9jYWxpemVyOiBEYXRlTG9jYWxpemVyKSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZm9ybWF0cy1kYXktcmFuZ2UtaGVhZGVyLWZvcm1hdFwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRvb2xiYXIgaGVhZGVyIGZvcm1hdCBmb3IgdGhlIFdlZWsgdmlld3MsIGUuZy4gXCJNYXIgMjkgLSBBcHIgMDRcImB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcImZvcm1hdHNkYXloZWFkZXJmb3JtYXRcIlxuICAgIH19PntgZm9ybWF0cy5kYXlIZWFkZXJGb3JtYXRgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChkYXRlOiBEYXRlLCBjdWx0dXJlOiA/c3RyaW5nLCBsb2NhbGl6ZXI6IERhdGVMb2NhbGl6ZXIpID0+IHN0cmluZ2B9PC9pbmxpbmVDb2RlPjwvbGk+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+XG4gICAgICAgIDxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJmb3JtYXRzLWRheS1oZWFkZXItZm9ybWF0XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVG9vbGJhciBoZWFkZXIgZm9ybWF0IGZvciB0aGUgRGF5IHZpZXcsIGUuZy4gXCJXZWRuZXNkYXkgQXByIDAxXCJgfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJmb3JtYXRzYWdlbmRhaGVhZGVyZm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMuYWdlbmRhSGVhZGVyRm9ybWF0YH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAocmFuZ2U6IE9iamVjdCB7c3RhcnQ6IERhdGUsIGVuZDogRGF0ZX0sIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogRGF0ZUxvY2FsaXplcikgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImZvcm1hdHMtYWdlbmRhLWhlYWRlci1mb3JtYXRcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BUb29sYmFyIGhlYWRlciBmb3JtYXQgZm9yIHRoZSBBZ2VuZGEgdmlldywgZS5nLiBcIjQvMS8yMDE1IOKAlCA1LzEvMjAxNVwiYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZm9ybWF0c3NlbGVjdHJhbmdlZm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMuc2VsZWN0UmFuZ2VGb3JtYXRgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChyYW5nZTogT2JqZWN0IHtzdGFydDogRGF0ZSwgZW5kOiBEYXRlfSwgY3VsdHVyZTogP3N0cmluZywgbG9jYWxpemVyOiBEYXRlTG9jYWxpemVyKSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZm9ybWF0cy1zZWxlY3QtcmFuZ2UtZm9ybWF0XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQSB0aW1lIHJhbmdlIGZvcm1hdCBzaG93biBpbiB0aGUgaGlnaGxpZ2h0ZWQgYXJlYSB3aGVuIHNlbGVjdGluZyB0aW1lIHNsb3RzLCBlLmcgXCIwODowMCBhbSDigJQgMTI6MDAgcG1cImB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcImZvcm1hdHNhZ2VuZGFkYXRlZm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMuYWdlbmRhRGF0ZUZvcm1hdGB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGRhdGU6IERhdGUsIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogRGF0ZUxvY2FsaXplcikgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImZvcm1hdHMtYWdlbmRhLWRhdGUtZm9ybWF0XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgRGF0ZXMgZGlzcGxheWVkIGluIHRoZSBndXR0ZXIgb2YgdGhlIEFnZW5kYSBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJwXCI+e2B2aWV3YH08L2lubGluZUNvZGU+PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcImZvcm1hdHNhZ2VuZGF0aW1lZm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMuYWdlbmRhVGltZUZvcm1hdGB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGRhdGU6IERhdGUsIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogRGF0ZUxvY2FsaXplcikgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImZvcm1hdHMtYWdlbmRhLXRpbWUtZm9ybWF0XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVGltZSBvbmx5IChub3QgcmFuZ2UpIGRpc3BsYXllZCBpbiB0aGUgZ3V0dGVyIG9mIHRoZSBBZ2VuZGEgYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwicFwiPntgdmlld2B9PC9pbmxpbmVDb2RlPjwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJmb3JtYXRzYWdlbmRhdGltZXJhbmdlZm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMuYWdlbmRhVGltZVJhbmdlRm9ybWF0YH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAocmFuZ2U6IE9iamVjdCB7c3RhcnQ6IERhdGUsIGVuZDogRGF0ZX0sIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogRGF0ZUxvY2FsaXplcikgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImZvcm1hdHMtYWdlbmRhLXRpbWUtcmFuZ2UtZm9ybWF0XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgVGltZSByYW5nZSBkaXNwbGF5ZWQgaW4gdGhlIGd1dHRlciBvZiB0aGUgQWdlbmRhIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHZpZXdgfTwvaW5saW5lQ29kZT48L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZm9ybWF0c2V2ZW50dGltZXJhbmdlZm9ybWF0XCJcbiAgICB9fT57YGZvcm1hdHMuZXZlbnRUaW1lUmFuZ2VGb3JtYXRgfTwvaDM+XG4gICAgPHVsPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPntgdHlwZTogYH08aW5saW5lQ29kZSBwYXJlbnROYW1lPVwibGlcIj57YGZ1bmN0aW9uIChyYW5nZTogT2JqZWN0IHtzdGFydDogRGF0ZSwgZW5kOiBEYXRlfSwgY3VsdHVyZTogP3N0cmluZywgbG9jYWxpemVyOiBEYXRlTG9jYWxpemVyKSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZm9ybWF0cy1ldmVudC10aW1lLXJhbmdlLWZvcm1hdFwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YFRpbWUgcmFuZ2UgZGlzcGxheWVkIG9uIGV2ZW50cyBpbiBUaW1lIEdyaWQgdmlld3MuYH08L3A+XG4gICAgPGgzIHsuLi57XG4gICAgICBcImlkXCI6IFwiZm9ybWF0c2V2ZW50dGltZXJhbmdlc3RhcnRmb3JtYXRcIlxuICAgIH19PntgZm9ybWF0cy5ldmVudFRpbWVSYW5nZVN0YXJ0Rm9ybWF0YH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BmdW5jdGlvbiAoZGF0ZTogRGF0ZSwgY3VsdHVyZTogP3N0cmluZywgbG9jYWxpemVyOiBEYXRlTG9jYWxpemVyKSA9PiBzdHJpbmdgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwiZm9ybWF0cy1ldmVudC10aW1lLXJhbmdlLXN0YXJ0LWZvcm1hdFwiIG1keFR5cGU9XCJMaW5rVG9cIj5cbiAgRXhhbXBsZVxuICAgICAgICA8L0xpbmtUbz5cbiAgICAgIDwvbGk+XG4gICAgPC91bD5cbiAgICA8cD57YEFuIG9wdGlvbmFsIGV2ZW50IHRpbWUgcmFuZ2UgZm9yIGV2ZW50cyB0aGF0IGNvbnRpbnVlIG9udG8gYW5vdGhlciBkYXkuIFVzZWQgd2l0aCBgfTxMaW5rVG8ga2luZD1cInByb3BzXCIgc3Rvcnk9XCJzaG93LW11bHRpLWRheS10aW1lc1wiIG1keFR5cGU9XCJMaW5rVG9cIj57YHNob3dNdWx0aURheVRpbWVzYH08L0xpbmtUbz57YC5gfTwvcD5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJmb3JtYXRzZXZlbnR0aW1lcmFuZ2VlbmRmb3JtYXRcIlxuICAgIH19PntgZm9ybWF0cy5ldmVudFRpbWVSYW5nZUVuZEZvcm1hdGB9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgZnVuY3Rpb24gKGRhdGU6IERhdGUsIGN1bHR1cmU6ID9zdHJpbmcsIGxvY2FsaXplcjogRGF0ZUxvY2FsaXplcikgPT4gc3RyaW5nYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImZvcm1hdHMtZXZlbnQtdGltZS1yYW5nZS1lbmQtZm9ybWF0XCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQW4gb3B0aW9uYWwgZXZlbnQgdGltZSByYW5nZSBmb3IgZXZlbnRzIHRoYXQgY29udGludWUgb250byBhbm90aGVyIGRheS4gVXNlZCB3aXRoIGB9PExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cInNob3ctbXVsdGktZGF5LXRpbWVzXCIgbWR4VHlwZT1cIkxpbmtUb1wiPntgc2hvd011bHRpRGF5VGltZXNgfTwvTGlua1RvPntgLmB9PC9wPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcImNvbXBvbmVudHNcIlxuICAgIH19PntgY29tcG9uZW50c2B9PC9oMz5cbiAgICA8dWw+XG4gICAgICA8bGkgcGFyZW50TmFtZT1cInVsXCI+e2B0eXBlOiBgfTxpbmxpbmVDb2RlIHBhcmVudE5hbWU9XCJsaVwiPntgb2JqZWN0YH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImNvbXBvbmVudHNcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BDdXN0b21pemUgaG93IGRpZmZlcmVudCBzZWN0aW9ucyBvZiB0aGUgY2FsZW5kYXIgcmVuZGVyIGJ5IHByb3ZpZGluZyBjdXN0b20gQ29tcG9uZW50cy4gSW4gcGFydGljdWxhciB0aGUgRXZlbnQgY29tcG9uZW50IGNhbiBiZSBzcGVjaWZpZWQgZm9yIHRoZSBlbnRpcmUgY2FsZW5kYXIsIG9yIHlvdSBjYW4gcHJvdmlkZSBhbiBpbmRpdmlkdWFsIGNvbXBvbmVudCBmb3IgZWFjaCB2aWV3IHR5cGUuYH08L3A+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YGxldCBjb21wb25lbnRzID0gdXNlTWVtbyh7XG4gIGV2ZW50OiBNeUV2ZW50LCAvLyB1c2VkIGJ5IGVhY2ggdmlldyAoTW9udGgsIERheSwgV2VlaylcbiAgdG9vbGJhcjogTXlUb29sYmFyLFxuICBhZ2VuZGE6IHtcbiAgICAgICBldmVudDogTXlBZ2VuZGFFdmVudCAvLyB3aXRoIHRoZSBhZ2VuZGEgdmlldyB1c2UgYSBkaWZmZXJlbnQgY29tcG9uZW50IHRvIHJlbmRlciBldmVudHNcbiAgfVxufSwgW10pXG48Q2FsZW5kYXIgY29tcG9uZW50cz17Y29tcG9uZW50c30gLz5cbmB9PC9jb2RlPjwvcHJlPlxuICAgIDxoMyB7Li4ue1xuICAgICAgXCJpZFwiOiBcIm1lc3NhZ2VzXCJcbiAgICB9fT57YG1lc3NhZ2VzYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BPYmplY3RgfTwvaW5saW5lQ29kZT48L2xpPlxuICAgICAgPGxpIHBhcmVudE5hbWU9XCJ1bFwiPlxuICAgICAgICA8TGlua1RvIGtpbmQ9XCJwcm9wc1wiIHN0b3J5PVwibWVzc2FnZXNcIiBtZHhUeXBlPVwiTGlua1RvXCI+XG4gIEV4YW1wbGVcbiAgICAgICAgPC9MaW5rVG8+XG4gICAgICA8L2xpPlxuICAgIDwvdWw+XG4gICAgPHA+e2BTdHJpbmcgbWVzc2FnZXMgdXNlZCB0aHJvdWdob3V0IHRoZSBjb21wb25lbnQsIG92ZXJyaWRlIHRvIHByb3ZpZGUgbG9jYWxpemF0aW9ucyBmb3IgYnV0dG9uIHRleHQsIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YHRpdGxlYH08L2lubGluZUNvZGU+e2AgYXR0cmlidXRlcyBhbmQgbW9yZS5gfTwvcD5cbiAgICA8cD57YGRlZmF1bHRzYH08L3A+XG4gICAgPHByZT48Y29kZSBwYXJlbnROYW1lPVwicHJlXCIgey4uLntcbiAgICAgICAgXCJjbGFzc05hbWVcIjogXCJsYW5ndWFnZS1qc1wiXG4gICAgICB9fT57YHtcbiAgZGF0ZTogJ0RhdGUnLFxuICB0aW1lOiAnVGltZScsXG4gIGV2ZW50OiAnRXZlbnQnLFxuICBhbGxEYXk6ICdBbGwgRGF5JyxcbiAgd2VlazogJ1dlZWsnLFxuICB3b3JrX3dlZWs6ICdXb3JrIFdlZWsnLFxuICBkYXk6ICdEYXknLFxuICBtb250aDogJ01vbnRoJyxcbiAgcHJldmlvdXM6ICdCYWNrJyxcbiAgbmV4dDogJ05leHQnLFxuICB5ZXN0ZXJkYXk6ICdZZXN0ZXJkYXknLFxuICB0b21vcnJvdzogJ1RvbW9ycm93JyxcbiAgdG9kYXk6ICdUb2RheScsXG4gIGFnZW5kYTogJ0FnZW5kYScsXG5cbiAgbm9FdmVudHNJblJhbmdlOiAnVGhlcmUgYXJlIG5vIGV2ZW50cyBpbiB0aGlzIHJhbmdlLicsXG5cbiAgc2hvd01vcmU6IHRvdGFsID0+IFxcYCtcXCR7dG90YWx9IG1vcmVcXGAsXG59XG5gfTwvY29kZT48L3ByZT5cbiAgICA8aDMgey4uLntcbiAgICAgIFwiaWRcIjogXCJkYXlsYXlvdXRhbGdvcml0aG1cIlxuICAgIH19PntgZGF5TGF5b3V0QWxnb3JpdGhtYH08L2gzPlxuICAgIDx1bD5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YHR5cGU6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BzdHJpbmcgfCBGdW5jdGlvbihldmVudHMsIG1pbmltdW1TdGFydERpZmZlcmVuY2UsIHNsb3RNZXRyaWNzLCBhY2Nlc3NvcnMpYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj57YGRlZmF1bHQ6IGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cImxpXCI+e2BvdmVybGFwYH08L2lubGluZUNvZGU+PC9saT5cbiAgICAgIDxsaSBwYXJlbnROYW1lPVwidWxcIj5cbiAgICAgICAgPExpbmtUbyBraW5kPVwicHJvcHNcIiBzdG9yeT1cImRheS1sYXlvdXQtYWxnb3JpdGhtXCIgbWR4VHlwZT1cIkxpbmtUb1wiPlxuICBFeGFtcGxlXG4gICAgICAgIDwvTGlua1RvPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxwPntgQSBkYXkgZXZlbnQgbGF5b3V0KGFycmFuZ2VtZW50KSBhbGdvcml0aG0uYH08L3A+XG4gICAgPHA+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG92ZXJsYXBgfTwvaW5saW5lQ29kZT57YCBhbGxvd3MgZXZlbnRzIHRvIGJlIG92ZXJsYXBwZWQuYH08L3A+XG4gICAgPHA+PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YG5vLW92ZXJsYXBgfTwvaW5saW5lQ29kZT57YCByZXNpemVzIGV2ZW50cyB0byBhdm9pZCBvdmVybGFwLmB9PC9wPlxuICAgIDxwPntgb3IgY3VzdG9tIGB9PGlubGluZUNvZGUgcGFyZW50TmFtZT1cInBcIj57YEZ1bmN0aW9uKGV2ZW50cywgbWluaW11bVN0YXJ0RGlmZmVyZW5jZSwgc2xvdE1ldHJpY3MsIGFjY2Vzc29ycylgfTwvaW5saW5lQ29kZT48L3A+XG4gICAgPC9NRFhMYXlvdXQ+O1xufVxuO1xuTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7XG5cbmV4cG9ydCBjb25zdCBfX3BhZ2UgPSAoKSA9PiB7IHRocm93IG5ldyBFcnJvcihcIkRvY3Mtb25seSBzdG9yeVwiKTsgfTtcblxuX19wYWdlLnBhcmFtZXRlcnMgPSB7IGRvY3NPbmx5OiB0cnVlIH07XG5cbmNvbnN0IGNvbXBvbmVudE1ldGEgPSB7IHRpdGxlOiAncHJvcHMvRnVsbCBQcm9wIExpc3QnLCBpbmNsdWRlU3RvcmllczogW1wiX19wYWdlXCJdLCAgfTtcblxuY29uc3QgbWR4U3RvcnlOYW1lVG9LZXkgPSB7fTtcblxuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzID0gY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzIHx8IHt9O1xuY29tcG9uZW50TWV0YS5wYXJhbWV0ZXJzLmRvY3MgPSB7XG4gIC4uLihjb21wb25lbnRNZXRhLnBhcmFtZXRlcnMuZG9jcyB8fCB7fSksXG4gIHBhZ2U6ICgpID0+IDxBZGRDb250ZXh0IG1keFN0b3J5TmFtZVRvS2V5PXttZHhTdG9yeU5hbWVUb0tleX0gbWR4Q29tcG9uZW50QW5ub3RhdGlvbnM9e2NvbXBvbmVudE1ldGF9PjxNRFhDb250ZW50IC8+PC9BZGRDb250ZXh0Pixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudE1ldGE7IiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5yYmMtYWRkb25zLWRuZCAucmJjLWFkZG9ucy1kbmQtcm93LWJvZHl7cG9zaXRpb246cmVsYXRpdmV9LnJiYy1hZGRvbnMtZG5kIC5yYmMtYWRkb25zLWRuZC1kcmFnLXJvd3twb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7cmlnaHQ6MH0ucmJjLWFkZG9ucy1kbmQgLnJiYy1hZGRvbnMtZG5kLW92ZXJ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC4zKX0ucmJjLWFkZG9ucy1kbmQgLnJiYy1ldmVudHt0cmFuc2l0aW9uOm9wYWNpdHkgMTUwbXN9LnJiYy1hZGRvbnMtZG5kIC5yYmMtZXZlbnQ6aG92ZXIgLnJiYy1hZGRvbnMtZG5kLXJlc2l6ZS1ucy1pY29uLC5yYmMtYWRkb25zLWRuZCAucmJjLWV2ZW50OmhvdmVyIC5yYmMtYWRkb25zLWRuZC1yZXNpemUtZXctaWNvbntkaXNwbGF5OmJsb2NrfS5yYmMtYWRkb25zLWRuZCAucmJjLWFkZG9ucy1kbmQtZHJhZ2dlZC1ldmVudHtvcGFjaXR5OjB9LnJiYy1hZGRvbnMtZG5kLnJiYy1hZGRvbnMtZG5kLWlzLWRyYWdnaW5nIC5yYmMtZXZlbnQ6bm90KC5yYmMtYWRkb25zLWRuZC1kcmFnZ2VkLWV2ZW50KTpub3QoLnJiYy1hZGRvbnMtZG5kLWRyYWctcHJldmlldyl7b3BhY2l0eTouNX0ucmJjLWFkZG9ucy1kbmQgLnJiYy1hZGRvbnMtZG5kLXJlc2l6YWJsZXtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlfS5yYmMtYWRkb25zLWRuZCAucmJjLWFkZG9ucy1kbmQtcmVzaXplLW5zLWFuY2hvcnt3aWR0aDoxMDAlO3RleHQtYWxpZ246Y2VudGVyO3Bvc2l0aW9uOmFic29sdXRlfS5yYmMtYWRkb25zLWRuZCAucmJjLWFkZG9ucy1kbmQtcmVzaXplLW5zLWFuY2hvcjpmaXJzdC1jaGlsZHt0b3A6MH0ucmJjLWFkZG9ucy1kbmQgLnJiYy1hZGRvbnMtZG5kLXJlc2l6ZS1ucy1hbmNob3I6bGFzdC1jaGlsZHtib3R0b206MH0ucmJjLWFkZG9ucy1kbmQgLnJiYy1hZGRvbnMtZG5kLXJlc2l6ZS1ucy1hbmNob3IgLnJiYy1hZGRvbnMtZG5kLXJlc2l6ZS1ucy1pY29ue2Rpc3BsYXk6bm9uZTtib3JkZXItdG9wOjNweCBkb3VibGU7bWFyZ2luOjAgYXV0bzt3aWR0aDoxMHB4O2N1cnNvcjpucy1yZXNpemV9LnJiYy1hZGRvbnMtZG5kIC5yYmMtYWRkb25zLWRuZC1yZXNpemUtZXctYW5jaG9ye3Bvc2l0aW9uOmFic29sdXRlO3RvcDo0cHg7Ym90dG9tOjB9LnJiYy1hZGRvbnMtZG5kIC5yYmMtYWRkb25zLWRuZC1yZXNpemUtZXctYW5jaG9yOmZpcnN0LWNoaWxke2xlZnQ6MH0ucmJjLWFkZG9ucy1kbmQgLnJiYy1hZGRvbnMtZG5kLXJlc2l6ZS1ldy1hbmNob3I6bGFzdC1jaGlsZHtyaWdodDowfS5yYmMtYWRkb25zLWRuZCAucmJjLWFkZG9ucy1kbmQtcmVzaXplLWV3LWFuY2hvciAucmJjLWFkZG9ucy1kbmQtcmVzaXplLWV3LWljb257ZGlzcGxheTpub25lO2JvcmRlci1sZWZ0OjNweCBkb3VibGU7bWFyZ2luLXRvcDphdXRvO21hcmdpbi1ib3R0b206YXV0bztoZWlnaHQ6MTBweDtjdXJzb3I6ZXctcmVzaXplfVwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnJiYy1idG57Y29sb3I6aW5oZXJpdDtmb250OmluaGVyaXQ7bWFyZ2luOjB9YnV0dG9uLnJiYy1idG57b3ZlcmZsb3c6dmlzaWJsZTt0ZXh0LXRyYW5zZm9ybTpub25lO2FwcGVhcmFuY2U6YnV0dG9uO2N1cnNvcjpwb2ludGVyfWJ1dHRvbltkaXNhYmxlZF0ucmJjLWJ0bntjdXJzb3I6bm90LWFsbG93ZWR9YnV0dG9uLnJiYy1pbnB1dDo6LW1vei1mb2N1cy1pbm5lcntib3JkZXI6MDtwYWRkaW5nOjB9LnJiYy1jYWxlbmRhcntib3gtc2l6aW5nOmJvcmRlci1ib3g7aGVpZ2h0OjEwMCU7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjthbGlnbi1pdGVtczpzdHJldGNofS5yYmMtbS1iLW5lZ2F0aXZlLTN7bWFyZ2luLWJvdHRvbTotM3B4fS5yYmMtaC1mdWxse2hlaWdodDoxMDAlfS5yYmMtY2FsZW5kYXIgKiwucmJjLWNhbGVuZGFyICo6YmVmb3JlLC5yYmMtY2FsZW5kYXIgKjphZnRlcntib3gtc2l6aW5nOmluaGVyaXR9LnJiYy1hYnMtZnVsbCwucmJjLXJvdy1iZ3tvdmVyZmxvdzpoaWRkZW47cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3JpZ2h0OjA7Ym90dG9tOjB9LnJiYy1lbGxpcHNpcywucmJjLXNob3ctbW9yZSwucmJjLXJvdy1zZWdtZW50IC5yYmMtZXZlbnQtY29udGVudCwucmJjLWV2ZW50LWxhYmVse2Rpc3BsYXk6YmxvY2s7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7d2hpdGUtc3BhY2U6bm93cmFwfS5yYmMtcnRse2RpcmVjdGlvbjpydGx9LnJiYy1vZmYtcmFuZ2V7Y29sb3I6Izk5OX0ucmJjLW9mZi1yYW5nZS1iZ3tiYWNrZ3JvdW5kOiNlNmU2ZTZ9LnJiYy1oZWFkZXJ7b3ZlcmZsb3c6aGlkZGVuO2ZsZXg6MSAwIDAlO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7d2hpdGUtc3BhY2U6bm93cmFwO3BhZGRpbmc6MCAzcHg7dGV4dC1hbGlnbjpjZW50ZXI7dmVydGljYWwtYWxpZ246bWlkZGxlO2ZvbnQtd2VpZ2h0OmJvbGQ7Zm9udC1zaXplOjkwJTttaW4taGVpZ2h0OjA7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZH0ucmJjLWhlYWRlcisucmJjLWhlYWRlcntib3JkZXItbGVmdDoxcHggc29saWQgI2RkZH0ucmJjLXJ0bCAucmJjLWhlYWRlcisucmJjLWhlYWRlcntib3JkZXItbGVmdC13aWR0aDowO2JvcmRlci1yaWdodDoxcHggc29saWQgI2RkZH0ucmJjLWhlYWRlcj5hLC5yYmMtaGVhZGVyPmE6YWN0aXZlLC5yYmMtaGVhZGVyPmE6dmlzaXRlZHtjb2xvcjppbmhlcml0O3RleHQtZGVjb3JhdGlvbjpub25lfS5yYmMtYnV0dG9uLWxpbmt7Y29sb3I6aW5oZXJpdDtiYWNrZ3JvdW5kOm5vbmU7bWFyZ2luOjA7cGFkZGluZzowO2JvcmRlcjpub25lO2N1cnNvcjpwb2ludGVyO3VzZXItc2VsZWN0OnRleHR9LnJiYy1yb3ctY29udGVudHtwb3NpdGlvbjpyZWxhdGl2ZTt1c2VyLXNlbGVjdDpub25lOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTt6LWluZGV4OjR9LnJiYy1yb3ctY29udGVudC1zY3JvbGxhYmxle2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47aGVpZ2h0OjEwMCV9LnJiYy1yb3ctY29udGVudC1zY3JvbGxhYmxlIC5yYmMtcm93LWNvbnRlbnQtc2Nyb2xsLWNvbnRhaW5lcntoZWlnaHQ6MTAwJTtvdmVyZmxvdy15OnNjcm9sbDstbXMtb3ZlcmZsb3ctc3R5bGU6bm9uZTtzY3JvbGxiYXItd2lkdGg6bm9uZTstbXMtb3ZlcmZsb3ctc3R5bGU6bm9uZTtzY3JvbGxiYXItd2lkdGg6bm9uZX0ucmJjLXJvdy1jb250ZW50LXNjcm9sbGFibGUgLnJiYy1yb3ctY29udGVudC1zY3JvbGwtY29udGFpbmVyOjotd2Via2l0LXNjcm9sbGJhcntkaXNwbGF5Om5vbmV9LnJiYy10b2RheXtiYWNrZ3JvdW5kLWNvbG9yOiNlYWY2ZmZ9LnJiYy1vdmVybGF5e3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6NTtib3JkZXI6MXB4IHNvbGlkICNlNWU1ZTU7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JveC1zaGFkb3c6MCA1cHggMTVweCByZ2JhKDAsMCwwLC4yNSk7cGFkZGluZzoxMHB4fS5yYmMtb3ZlcmxheT4qKyp7bWFyZ2luLXRvcDoxcHh9LnJiYy1vdmVybGF5LWhlYWRlcntib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZTVlNWU1O21hcmdpbjotMTBweCAtMTBweCA1cHggLTEwcHg7cGFkZGluZzoycHggMTBweH0ucmJjLXRvb2xiYXJ7ZGlzcGxheTpmbGV4O2ZsZXgtd3JhcDp3cmFwO2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO21hcmdpbi1ib3R0b206MTBweDtmb250LXNpemU6MTZweH0ucmJjLXRvb2xiYXIgLnJiYy10b29sYmFyLWxhYmVse2ZsZXgtZ3JvdzoxO3BhZGRpbmc6MCAxMHB4O3RleHQtYWxpZ246Y2VudGVyfS5yYmMtdG9vbGJhciBidXR0b257Y29sb3I6IzM3M2EzYztkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW46MDt0ZXh0LWFsaWduOmNlbnRlcjt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7YmFja2dyb3VuZDpub25lO2JhY2tncm91bmQtaW1hZ2U6bm9uZTtib3JkZXI6MXB4IHNvbGlkICNjY2M7cGFkZGluZzouMzc1cmVtIDFyZW07Ym9yZGVyLXJhZGl1czo0cHg7bGluZS1oZWlnaHQ6bm9ybWFsO3doaXRlLXNwYWNlOm5vd3JhcH0ucmJjLXRvb2xiYXIgYnV0dG9uOmFjdGl2ZSwucmJjLXRvb2xiYXIgYnV0dG9uLnJiYy1hY3RpdmV7YmFja2dyb3VuZC1pbWFnZTpub25lO2JveC1zaGFkb3c6aW5zZXQgMCAzcHggNXB4IHJnYmEoMCwwLDAsLjEyNSk7YmFja2dyb3VuZC1jb2xvcjojZTZlNmU2O2JvcmRlci1jb2xvcjojYWRhZGFkfS5yYmMtdG9vbGJhciBidXR0b246YWN0aXZlOmhvdmVyLC5yYmMtdG9vbGJhciBidXR0b246YWN0aXZlOmZvY3VzLC5yYmMtdG9vbGJhciBidXR0b24ucmJjLWFjdGl2ZTpob3ZlciwucmJjLXRvb2xiYXIgYnV0dG9uLnJiYy1hY3RpdmU6Zm9jdXN7Y29sb3I6IzM3M2EzYztiYWNrZ3JvdW5kLWNvbG9yOiNkNGQ0ZDQ7Ym9yZGVyLWNvbG9yOiM4YzhjOGN9LnJiYy10b29sYmFyIGJ1dHRvbjpmb2N1c3tjb2xvcjojMzczYTNjO2JhY2tncm91bmQtY29sb3I6I2U2ZTZlNjtib3JkZXItY29sb3I6I2FkYWRhZH0ucmJjLXRvb2xiYXIgYnV0dG9uOmhvdmVye2NvbG9yOiMzNzNhM2M7Y3Vyc29yOnBvaW50ZXI7YmFja2dyb3VuZC1jb2xvcjojZTZlNmU2O2JvcmRlci1jb2xvcjojYWRhZGFkfS5yYmMtYnRuLWdyb3Vwe2Rpc3BsYXk6aW5saW5lLWJsb2NrO3doaXRlLXNwYWNlOm5vd3JhcH0ucmJjLWJ0bi1ncm91cD5idXR0b246Zmlyc3QtY2hpbGQ6bm90KDpsYXN0LWNoaWxkKXtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjB9LnJiYy1idG4tZ3JvdXA+YnV0dG9uOmxhc3QtY2hpbGQ6bm90KDpmaXJzdC1jaGlsZCl7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0ucmJjLXJ0bCAucmJjLWJ0bi1ncm91cD5idXR0b246Zmlyc3QtY2hpbGQ6bm90KDpsYXN0LWNoaWxkKXtib3JkZXItcmFkaXVzOjRweDtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfS5yYmMtcnRsIC5yYmMtYnRuLWdyb3VwPmJ1dHRvbjpsYXN0LWNoaWxkOm5vdCg6Zmlyc3QtY2hpbGQpe2JvcmRlci1yYWRpdXM6NHB4O2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MH0ucmJjLWJ0bi1ncm91cD5idXR0b246bm90KDpmaXJzdC1jaGlsZCk6bm90KDpsYXN0LWNoaWxkKXtib3JkZXItcmFkaXVzOjB9LnJiYy1idG4tZ3JvdXAgYnV0dG9uK2J1dHRvbnttYXJnaW4tbGVmdDotMXB4fS5yYmMtcnRsIC5yYmMtYnRuLWdyb3VwIGJ1dHRvbitidXR0b257bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6LTFweH0ucmJjLWJ0bi1ncm91cCsucmJjLWJ0bi1ncm91cCwucmJjLWJ0bi1ncm91cCtidXR0b257bWFyZ2luLWxlZnQ6MTBweH1AbWVkaWEobWF4LXdpZHRoOiA3NjdweCl7LnJiYy10b29sYmFye2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn19LnJiYy1ldmVudCwucmJjLWRheS1zbG90IC5yYmMtYmFja2dyb3VuZC1ldmVudHtib3JkZXI6bm9uZTtib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNoYWRvdzpub25lO21hcmdpbjowO3BhZGRpbmc6MnB4IDVweDtiYWNrZ3JvdW5kLWNvbG9yOiMzMTc0YWQ7Ym9yZGVyLXJhZGl1czo1cHg7Y29sb3I6I2ZmZjtjdXJzb3I6cG9pbnRlcjt3aWR0aDoxMDAlO3RleHQtYWxpZ246bGVmdH0ucmJjLXNsb3Qtc2VsZWN0aW5nIC5yYmMtZXZlbnQsLnJiYy1zbG90LXNlbGVjdGluZyAucmJjLWRheS1zbG90IC5yYmMtYmFja2dyb3VuZC1ldmVudCwucmJjLWRheS1zbG90IC5yYmMtc2xvdC1zZWxlY3RpbmcgLnJiYy1iYWNrZ3JvdW5kLWV2ZW50e2N1cnNvcjppbmhlcml0O3BvaW50ZXItZXZlbnRzOm5vbmV9LnJiYy1ldmVudC5yYmMtc2VsZWN0ZWQsLnJiYy1kYXktc2xvdCAucmJjLXNlbGVjdGVkLnJiYy1iYWNrZ3JvdW5kLWV2ZW50e2JhY2tncm91bmQtY29sb3I6IzI2NTk4NX0ucmJjLWV2ZW50OmZvY3VzLC5yYmMtZGF5LXNsb3QgLnJiYy1iYWNrZ3JvdW5kLWV2ZW50OmZvY3Vze291dGxpbmU6NXB4IGF1dG8gIzNiOTlmY30ucmJjLWV2ZW50LWxhYmVse2ZvbnQtc2l6ZTo4MCV9LnJiYy1ldmVudC1vdmVybGFwc3tib3gtc2hhZG93Oi0xcHggMXB4IDVweCAwcHggcmdiYSg1MSw1MSw1MSwuNSl9LnJiYy1ldmVudC1jb250aW51ZXMtcHJpb3J7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0ucmJjLWV2ZW50LWNvbnRpbnVlcy1hZnRlcntib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjB9LnJiYy1ldmVudC1jb250aW51ZXMtZWFybGllcntib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MH0ucmJjLWV2ZW50LWNvbnRpbnVlcy1sYXRlcntib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MH0ucmJjLXJvd3tkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246cm93fS5yYmMtcm93LXNlZ21lbnR7cGFkZGluZzowIDFweCAxcHggMXB4fS5yYmMtc2VsZWN0ZWQtY2VsbHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjEpfS5yYmMtc2hvdy1tb3Jle2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuMyk7ei1pbmRleDo0O2ZvbnQtd2VpZ2h0OmJvbGQ7Zm9udC1zaXplOjg1JTtoZWlnaHQ6YXV0bztsaW5lLWhlaWdodDpub3JtYWw7Y29sb3I6IzMxNzRhZH0ucmJjLXNob3ctbW9yZTpob3ZlciwucmJjLXNob3ctbW9yZTpmb2N1c3tjb2xvcjojMjY1OTg1fS5yYmMtbW9udGgtdmlld3twb3NpdGlvbjpyZWxhdGl2ZTtib3JkZXI6MXB4IHNvbGlkICNkZGQ7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4OjEgMCAwO3dpZHRoOjEwMCU7dXNlci1zZWxlY3Q6bm9uZTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7aGVpZ2h0OjEwMCV9LnJiYy1tb250aC1oZWFkZXJ7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOnJvd30ucmJjLW1vbnRoLXJvd3tkaXNwbGF5OmZsZXg7cG9zaXRpb246cmVsYXRpdmU7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXg6MSAwIDA7ZmxleC1iYXNpczowcHg7b3ZlcmZsb3c6aGlkZGVuO2hlaWdodDoxMDAlfS5yYmMtbW9udGgtcm93Ky5yYmMtbW9udGgtcm93e2JvcmRlci10b3A6MXB4IHNvbGlkICNkZGR9LnJiYy1kYXRlLWNlbGx7ZmxleDoxIDEgMDttaW4td2lkdGg6MDtwYWRkaW5nLXJpZ2h0OjVweDt0ZXh0LWFsaWduOnJpZ2h0fS5yYmMtZGF0ZS1jZWxsLnJiYy1ub3d7Zm9udC13ZWlnaHQ6Ym9sZH0ucmJjLWRhdGUtY2VsbD5hLC5yYmMtZGF0ZS1jZWxsPmE6YWN0aXZlLC5yYmMtZGF0ZS1jZWxsPmE6dmlzaXRlZHtjb2xvcjppbmhlcml0O3RleHQtZGVjb3JhdGlvbjpub25lfS5yYmMtcm93LWJne2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpyb3c7ZmxleDoxIDAgMDtvdmVyZmxvdzpoaWRkZW47cmlnaHQ6MXB4fS5yYmMtZGF5LWJne2ZsZXg6MSAwIDAlfS5yYmMtZGF5LWJnKy5yYmMtZGF5LWJne2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjZGRkfS5yYmMtcnRsIC5yYmMtZGF5LWJnKy5yYmMtZGF5LWJne2JvcmRlci1sZWZ0LXdpZHRoOjA7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjZGRkfS5yYmMtYWdlbmRhLXZpZXd7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4OjEgMCAwO292ZXJmbG93OmF1dG99LnJiYy1hZ2VuZGEtdmlldyB0YWJsZS5yYmMtYWdlbmRhLXRhYmxle3dpZHRoOjEwMCU7Ym9yZGVyOjFweCBzb2xpZCAjZGRkO2JvcmRlci1zcGFjaW5nOjA7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlfS5yYmMtYWdlbmRhLXZpZXcgdGFibGUucmJjLWFnZW5kYS10YWJsZSB0Ym9keT50cj50ZHtwYWRkaW5nOjVweCAxMHB4O3ZlcnRpY2FsLWFsaWduOnRvcH0ucmJjLWFnZW5kYS12aWV3IHRhYmxlLnJiYy1hZ2VuZGEtdGFibGUgLnJiYy1hZ2VuZGEtdGltZS1jZWxse3BhZGRpbmctbGVmdDoxNXB4O3BhZGRpbmctcmlnaHQ6MTVweDt0ZXh0LXRyYW5zZm9ybTpsb3dlcmNhc2V9LnJiYy1hZ2VuZGEtdmlldyB0YWJsZS5yYmMtYWdlbmRhLXRhYmxlIHRib2R5PnRyPnRkK3Rke2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjZGRkfS5yYmMtcnRsIC5yYmMtYWdlbmRhLXZpZXcgdGFibGUucmJjLWFnZW5kYS10YWJsZSB0Ym9keT50cj50ZCt0ZHtib3JkZXItbGVmdC13aWR0aDowO2JvcmRlci1yaWdodDoxcHggc29saWQgI2RkZH0ucmJjLWFnZW5kYS12aWV3IHRhYmxlLnJiYy1hZ2VuZGEtdGFibGUgdGJvZHk+dHIrdHJ7Ym9yZGVyLXRvcDoxcHggc29saWQgI2RkZH0ucmJjLWFnZW5kYS12aWV3IHRhYmxlLnJiYy1hZ2VuZGEtdGFibGUgdGhlYWQ+dHI+dGh7cGFkZGluZzozcHggNXB4O3RleHQtYWxpZ246bGVmdDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZGRkfS5yYmMtcnRsIC5yYmMtYWdlbmRhLXZpZXcgdGFibGUucmJjLWFnZW5kYS10YWJsZSB0aGVhZD50cj50aHt0ZXh0LWFsaWduOnJpZ2h0fS5yYmMtYWdlbmRhLXRpbWUtY2VsbHt0ZXh0LXRyYW5zZm9ybTpsb3dlcmNhc2V9LnJiYy1hZ2VuZGEtdGltZS1jZWxsIC5yYmMtY29udGludWVzLWFmdGVyOmFmdGVye2NvbnRlbnQ6XFxcIiDCu1xcXCJ9LnJiYy1hZ2VuZGEtdGltZS1jZWxsIC5yYmMtY29udGludWVzLXByaW9yOmJlZm9yZXtjb250ZW50OlxcXCLCqyBcXFwifS5yYmMtYWdlbmRhLWRhdGUtY2VsbCwucmJjLWFnZW5kYS10aW1lLWNlbGx7d2hpdGUtc3BhY2U6bm93cmFwfS5yYmMtYWdlbmRhLWV2ZW50LWNlbGx7d2lkdGg6MTAwJX0ucmJjLXRpbWUtY29sdW1ue2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47bWluLWhlaWdodDoxMDAlfS5yYmMtdGltZS1jb2x1bW4gLnJiYy10aW1lc2xvdC1ncm91cHtmbGV4OjF9LnJiYy10aW1lc2xvdC1ncm91cHtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZGRkO21pbi1oZWlnaHQ6NDBweDtkaXNwbGF5OmZsZXg7ZmxleC1mbG93OmNvbHVtbiBub3dyYXB9LnJiYy10aW1lLWd1dHRlciwucmJjLWhlYWRlci1ndXR0ZXJ7ZmxleDpub25lfS5yYmMtbGFiZWx7cGFkZGluZzowIDVweH0ucmJjLWRheS1zbG90e3Bvc2l0aW9uOnJlbGF0aXZlfS5yYmMtZGF5LXNsb3QgLnJiYy1ldmVudHMtY29udGFpbmVye2JvdHRvbTowO2xlZnQ6MDtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO21hcmdpbi1yaWdodDoxMHB4O3RvcDowfS5yYmMtZGF5LXNsb3QgLnJiYy1ldmVudHMtY29udGFpbmVyLnJiYy1ydGx7bGVmdDoxMHB4O3JpZ2h0OjB9LnJiYy1kYXktc2xvdCAucmJjLWV2ZW50LC5yYmMtZGF5LXNsb3QgLnJiYy1iYWNrZ3JvdW5kLWV2ZW50e2JvcmRlcjoxcHggc29saWQgIzI2NTk4NTtkaXNwbGF5OmZsZXg7bWF4LWhlaWdodDoxMDAlO21pbi1oZWlnaHQ6MjBweDtmbGV4LWZsb3c6Y29sdW1uIHdyYXA7YWxpZ24taXRlbXM6ZmxleC1zdGFydDtvdmVyZmxvdzpoaWRkZW47cG9zaXRpb246YWJzb2x1dGV9LnJiYy1kYXktc2xvdCAucmJjLWJhY2tncm91bmQtZXZlbnR7b3BhY2l0eTouNzV9LnJiYy1kYXktc2xvdCAucmJjLWV2ZW50LWxhYmVse2ZsZXg6bm9uZTtwYWRkaW5nLXJpZ2h0OjVweDt3aWR0aDphdXRvfS5yYmMtZGF5LXNsb3QgLnJiYy1ldmVudC1jb250ZW50e3dpZHRoOjEwMCU7ZmxleDoxIDEgMDt3b3JkLXdyYXA6YnJlYWstd29yZDtsaW5lLWhlaWdodDoxO2hlaWdodDoxMDAlO21pbi1oZWlnaHQ6MWVtfS5yYmMtZGF5LXNsb3QgLnJiYy10aW1lLXNsb3R7Ym9yZGVyLXRvcDoxcHggc29saWQgI2Y3ZjdmN30ucmJjLXRpbWUtdmlldy1yZXNvdXJjZXMgLnJiYy10aW1lLWd1dHRlciwucmJjLXRpbWUtdmlldy1yZXNvdXJjZXMgLnJiYy10aW1lLWhlYWRlci1ndXR0ZXJ7cG9zaXRpb246c3RpY2t5O2xlZnQ6MDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjZGRkO3otaW5kZXg6MTA7bWFyZ2luLXJpZ2h0Oi0xcHh9LnJiYy10aW1lLXZpZXctcmVzb3VyY2VzIC5yYmMtdGltZS1oZWFkZXJ7b3ZlcmZsb3c6aGlkZGVufS5yYmMtdGltZS12aWV3LXJlc291cmNlcyAucmJjLXRpbWUtaGVhZGVyLWNvbnRlbnR7bWluLXdpZHRoOmF1dG87ZmxleDoxIDAgMDtmbGV4LWJhc2lzOjBweH0ucmJjLXRpbWUtdmlldy1yZXNvdXJjZXMgLnJiYy10aW1lLWhlYWRlci1jZWxsLXNpbmdsZS1kYXl7ZGlzcGxheTpub25lfS5yYmMtdGltZS12aWV3LXJlc291cmNlcyAucmJjLWRheS1zbG90e21pbi13aWR0aDoxNDBweH0ucmJjLXRpbWUtdmlldy1yZXNvdXJjZXMgLnJiYy1oZWFkZXIsLnJiYy10aW1lLXZpZXctcmVzb3VyY2VzIC5yYmMtZGF5LWJne3dpZHRoOjE0MHB4O2ZsZXg6MSAxIDA7ZmxleC1iYXNpczowIHB4fS5yYmMtdGltZS1oZWFkZXItY29udGVudCsucmJjLXRpbWUtaGVhZGVyLWNvbnRlbnR7bWFyZ2luLWxlZnQ6LTFweH0ucmJjLXRpbWUtc2xvdHtmbGV4OjEgMCAwfS5yYmMtdGltZS1zbG90LnJiYy1ub3d7Zm9udC13ZWlnaHQ6Ym9sZH0ucmJjLWRheS1oZWFkZXJ7dGV4dC1hbGlnbjpjZW50ZXJ9LnJiYy1zbG90LXNlbGVjdGlvbnt6LWluZGV4OjEwO3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuNSk7Y29sb3I6I2ZmZjtmb250LXNpemU6NzUlO3dpZHRoOjEwMCU7cGFkZGluZzozcHh9LnJiYy1zbG90LXNlbGVjdGluZ3tjdXJzb3I6bW92ZX0ucmJjLXRpbWUtdmlld3tkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXg6MTt3aWR0aDoxMDAlO2JvcmRlcjoxcHggc29saWQgI2RkZDttaW4taGVpZ2h0OjB9LnJiYy10aW1lLXZpZXcgLnJiYy10aW1lLWd1dHRlcnt3aGl0ZS1zcGFjZTpub3dyYXA7dGV4dC1hbGlnbjpyaWdodH0ucmJjLXRpbWUtdmlldyAucmJjLWFsbGRheS1jZWxse2JveC1zaXppbmc6Y29udGVudC1ib3g7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwb3NpdGlvbjpyZWxhdGl2ZX0ucmJjLXRpbWUtdmlldyAucmJjLWFsbGRheS1jZWxsKy5yYmMtYWxsZGF5LWNlbGx7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNkZGR9LnJiYy10aW1lLXZpZXcgLnJiYy1hbGxkYXktZXZlbnRze3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6NH0ucmJjLXRpbWUtdmlldyAucmJjLXJvd3tib3gtc2l6aW5nOmJvcmRlci1ib3g7bWluLWhlaWdodDoyMHB4fS5yYmMtdGltZS1oZWFkZXJ7ZGlzcGxheTpmbGV4O2ZsZXg6MCAwIGF1dG87ZmxleC1kaXJlY3Rpb246cm93fS5yYmMtdGltZS1oZWFkZXIucmJjLW92ZXJmbG93aW5ne2JvcmRlci1yaWdodDoxcHggc29saWQgI2RkZH0ucmJjLXJ0bCAucmJjLXRpbWUtaGVhZGVyLnJiYy1vdmVyZmxvd2luZ3tib3JkZXItcmlnaHQtd2lkdGg6MDtib3JkZXItbGVmdDoxcHggc29saWQgI2RkZH0ucmJjLXRpbWUtaGVhZGVyPi5yYmMtcm93OmZpcnN0LWNoaWxke2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZGR9LnJiYy10aW1lLWhlYWRlcj4ucmJjLXJvdy5yYmMtcm93LXJlc291cmNle2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZGR9LnJiYy10aW1lLWhlYWRlci1jZWxsLXNpbmdsZS1kYXl7ZGlzcGxheTpub25lfS5yYmMtdGltZS1oZWFkZXItY29udGVudHtmbGV4OjE7ZGlzcGxheTpmbGV4O21pbi13aWR0aDowO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtib3JkZXItbGVmdDoxcHggc29saWQgI2RkZH0ucmJjLXJ0bCAucmJjLXRpbWUtaGVhZGVyLWNvbnRlbnR7Ym9yZGVyLWxlZnQtd2lkdGg6MDtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNkZGR9LnJiYy10aW1lLWhlYWRlci1jb250ZW50Pi5yYmMtcm93LnJiYy1yb3ctcmVzb3VyY2V7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZDtmbGV4LXNocmluazowfS5yYmMtdGltZS1jb250ZW50e2Rpc3BsYXk6ZmxleDtmbGV4OjEgMCAwJTthbGlnbi1pdGVtczpmbGV4LXN0YXJ0O3dpZHRoOjEwMCU7Ym9yZGVyLXRvcDoycHggc29saWQgI2RkZDtvdmVyZmxvdy15OmF1dG87cG9zaXRpb246cmVsYXRpdmV9LnJiYy10aW1lLWNvbnRlbnQ+LnJiYy10aW1lLWd1dHRlcntmbGV4Om5vbmV9LnJiYy10aW1lLWNvbnRlbnQ+KisqPip7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNkZGR9LnJiYy1ydGwgLnJiYy10aW1lLWNvbnRlbnQ+KisqPip7Ym9yZGVyLWxlZnQtd2lkdGg6MDtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNkZGR9LnJiYy10aW1lLWNvbnRlbnQ+LnJiYy1kYXktc2xvdHt3aWR0aDoxMDAlO3VzZXItc2VsZWN0Om5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lfS5yYmMtY3VycmVudC10aW1lLWluZGljYXRvcntwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjM7bGVmdDowO3JpZ2h0OjA7aGVpZ2h0OjFweDtiYWNrZ3JvdW5kLWNvbG9yOiM3NGFkMzE7cG9pbnRlci1ldmVudHM6bm9uZX0ucmJjLXJlc291cmNlLWdyb3VwaW5nLnJiYy10aW1lLWhlYWRlci1jb250ZW50e2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW59LnJiYy1yZXNvdXJjZS1ncm91cGluZyAucmJjLXJvdyAucmJjLWhlYWRlcnt3aWR0aDoxNDFweH1cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5leGFtcGxlcy0tY3VzdG9tLXRvb2xiYXIgYnV0dG9ue2ZvbnQtd2VpZ2h0OjYwMDtmb250LXNpemU6MXJlbX1cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5yYmMtYnRue2NvbG9yOmluaGVyaXQ7Zm9udDppbmhlcml0O21hcmdpbjowfWJ1dHRvbi5yYmMtYnRue292ZXJmbG93OnZpc2libGU7dGV4dC10cmFuc2Zvcm06bm9uZTthcHBlYXJhbmNlOmJ1dHRvbjtjdXJzb3I6cG9pbnRlcn1idXR0b25bZGlzYWJsZWRdLnJiYy1idG57Y3Vyc29yOm5vdC1hbGxvd2VkfWJ1dHRvbi5yYmMtaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXJ7Ym9yZGVyOjA7cGFkZGluZzowfS5yYmMtY2FsZW5kYXJ7Ym94LXNpemluZzpib3JkZXItYm94O2hlaWdodDoxMDAlO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YWxpZ24taXRlbXM6c3RyZXRjaH0ucmJjLW0tYi1uZWdhdGl2ZS0ze21hcmdpbi1ib3R0b206LTNweH0ucmJjLWgtZnVsbHtoZWlnaHQ6MTAwJX0ucmJjLWNhbGVuZGFyICosLnJiYy1jYWxlbmRhciAqOmJlZm9yZSwucmJjLWNhbGVuZGFyICo6YWZ0ZXJ7Ym94LXNpemluZzppbmhlcml0fS5yYmMtYWJzLWZ1bGwsLnJiYy1yb3ctYmd7b3ZlcmZsb3c6aGlkZGVuO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDtyaWdodDowO2JvdHRvbTowfS5yYmMtZWxsaXBzaXMsLnJiYy1zaG93LW1vcmUsLnJiYy1yb3ctc2VnbWVudCAucmJjLWV2ZW50LWNvbnRlbnQsLnJiYy1ldmVudC1sYWJlbHtkaXNwbGF5OmJsb2NrO292ZXJmbG93OmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3doaXRlLXNwYWNlOm5vd3JhcH0ucmJjLXJ0bHtkaXJlY3Rpb246cnRsfS5yYmMtb2ZmLXJhbmdle2NvbG9yOiM5OTl9LnJiYy1vZmYtcmFuZ2UtYmd7YmFja2dyb3VuZDojZTZlNmU2fS5yYmMtaGVhZGVye292ZXJmbG93OmhpZGRlbjtmbGV4OjEgMCAwJTt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3doaXRlLXNwYWNlOm5vd3JhcDtwYWRkaW5nOjAgM3B4O3RleHQtYWxpZ246Y2VudGVyO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtmb250LXdlaWdodDpib2xkO2ZvbnQtc2l6ZTo5MCU7bWluLWhlaWdodDowO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZGR9LnJiYy1oZWFkZXIrLnJiYy1oZWFkZXJ7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNkZGR9LnJiYy1ydGwgLnJiYy1oZWFkZXIrLnJiYy1oZWFkZXJ7Ym9yZGVyLWxlZnQtd2lkdGg6MDtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNkZGR9LnJiYy1oZWFkZXI+YSwucmJjLWhlYWRlcj5hOmFjdGl2ZSwucmJjLWhlYWRlcj5hOnZpc2l0ZWR7Y29sb3I6aW5oZXJpdDt0ZXh0LWRlY29yYXRpb246bm9uZX0ucmJjLWJ1dHRvbi1saW5re2NvbG9yOmluaGVyaXQ7YmFja2dyb3VuZDpub25lO21hcmdpbjowO3BhZGRpbmc6MDtib3JkZXI6bm9uZTtjdXJzb3I6cG9pbnRlcjt1c2VyLXNlbGVjdDp0ZXh0fS5yYmMtcm93LWNvbnRlbnR7cG9zaXRpb246cmVsYXRpdmU7dXNlci1zZWxlY3Q6bm9uZTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7ei1pbmRleDo0fS5yYmMtcm93LWNvbnRlbnQtc2Nyb2xsYWJsZXtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2hlaWdodDoxMDAlfS5yYmMtcm93LWNvbnRlbnQtc2Nyb2xsYWJsZSAucmJjLXJvdy1jb250ZW50LXNjcm9sbC1jb250YWluZXJ7aGVpZ2h0OjEwMCU7b3ZlcmZsb3cteTpzY3JvbGw7LW1zLW92ZXJmbG93LXN0eWxlOm5vbmU7c2Nyb2xsYmFyLXdpZHRoOm5vbmU7LW1zLW92ZXJmbG93LXN0eWxlOm5vbmU7c2Nyb2xsYmFyLXdpZHRoOm5vbmV9LnJiYy1yb3ctY29udGVudC1zY3JvbGxhYmxlIC5yYmMtcm93LWNvbnRlbnQtc2Nyb2xsLWNvbnRhaW5lcjo6LXdlYmtpdC1zY3JvbGxiYXJ7ZGlzcGxheTpub25lfS5yYmMtdG9kYXl7YmFja2dyb3VuZC1jb2xvcjojZWFmNmZmfS5yYmMtb3ZlcmxheXtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjU7Ym9yZGVyOjFweCBzb2xpZCAjZTVlNWU1O2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3gtc2hhZG93OjAgNXB4IDE1cHggcmdiYSgwLDAsMCwuMjUpO3BhZGRpbmc6MTBweH0ucmJjLW92ZXJsYXk+Kisqe21hcmdpbi10b3A6MXB4fS5yYmMtb3ZlcmxheS1oZWFkZXJ7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2U1ZTVlNTttYXJnaW46LTEwcHggLTEwcHggNXB4IC0xMHB4O3BhZGRpbmc6MnB4IDEwcHh9LnJiYy10b29sYmFye2Rpc3BsYXk6ZmxleDtmbGV4LXdyYXA6d3JhcDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjttYXJnaW4tYm90dG9tOjEwcHg7Zm9udC1zaXplOjE2cHh9LnJiYy10b29sYmFyIC5yYmMtdG9vbGJhci1sYWJlbHtmbGV4LWdyb3c6MTtwYWRkaW5nOjAgMTBweDt0ZXh0LWFsaWduOmNlbnRlcn0ucmJjLXRvb2xiYXIgYnV0dG9ue2NvbG9yOiMzNzNhM2M7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luOjA7dGV4dC1hbGlnbjpjZW50ZXI7dmVydGljYWwtYWxpZ246bWlkZGxlO2JhY2tncm91bmQ6bm9uZTtiYWNrZ3JvdW5kLWltYWdlOm5vbmU7Ym9yZGVyOjFweCBzb2xpZCAjY2NjO3BhZGRpbmc6LjM3NXJlbSAxcmVtO2JvcmRlci1yYWRpdXM6NHB4O2xpbmUtaGVpZ2h0Om5vcm1hbDt3aGl0ZS1zcGFjZTpub3dyYXB9LnJiYy10b29sYmFyIGJ1dHRvbjphY3RpdmUsLnJiYy10b29sYmFyIGJ1dHRvbi5yYmMtYWN0aXZle2JhY2tncm91bmQtaW1hZ2U6bm9uZTtib3gtc2hhZG93Omluc2V0IDAgM3B4IDVweCByZ2JhKDAsMCwwLC4xMjUpO2JhY2tncm91bmQtY29sb3I6I2U2ZTZlNjtib3JkZXItY29sb3I6I2FkYWRhZH0ucmJjLXRvb2xiYXIgYnV0dG9uOmFjdGl2ZTpob3ZlciwucmJjLXRvb2xiYXIgYnV0dG9uOmFjdGl2ZTpmb2N1cywucmJjLXRvb2xiYXIgYnV0dG9uLnJiYy1hY3RpdmU6aG92ZXIsLnJiYy10b29sYmFyIGJ1dHRvbi5yYmMtYWN0aXZlOmZvY3Vze2NvbG9yOiMzNzNhM2M7YmFja2dyb3VuZC1jb2xvcjojZDRkNGQ0O2JvcmRlci1jb2xvcjojOGM4YzhjfS5yYmMtdG9vbGJhciBidXR0b246Zm9jdXN7Y29sb3I6IzM3M2EzYztiYWNrZ3JvdW5kLWNvbG9yOiNlNmU2ZTY7Ym9yZGVyLWNvbG9yOiNhZGFkYWR9LnJiYy10b29sYmFyIGJ1dHRvbjpob3Zlcntjb2xvcjojMzczYTNjO2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQtY29sb3I6I2U2ZTZlNjtib3JkZXItY29sb3I6I2FkYWRhZH0ucmJjLWJ0bi1ncm91cHtkaXNwbGF5OmlubGluZS1ibG9jazt3aGl0ZS1zcGFjZTpub3dyYXB9LnJiYy1idG4tZ3JvdXA+YnV0dG9uOmZpcnN0LWNoaWxkOm5vdCg6bGFzdC1jaGlsZCl7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowfS5yYmMtYnRuLWdyb3VwPmJ1dHRvbjpsYXN0LWNoaWxkOm5vdCg6Zmlyc3QtY2hpbGQpe2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9LnJiYy1ydGwgLnJiYy1idG4tZ3JvdXA+YnV0dG9uOmZpcnN0LWNoaWxkOm5vdCg6bGFzdC1jaGlsZCl7Ym9yZGVyLXJhZGl1czo0cHg7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0ucmJjLXJ0bCAucmJjLWJ0bi1ncm91cD5idXR0b246bGFzdC1jaGlsZDpub3QoOmZpcnN0LWNoaWxkKXtib3JkZXItcmFkaXVzOjRweDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjB9LnJiYy1idG4tZ3JvdXA+YnV0dG9uOm5vdCg6Zmlyc3QtY2hpbGQpOm5vdCg6bGFzdC1jaGlsZCl7Ym9yZGVyLXJhZGl1czowfS5yYmMtYnRuLWdyb3VwIGJ1dHRvbitidXR0b257bWFyZ2luLWxlZnQ6LTFweH0ucmJjLXJ0bCAucmJjLWJ0bi1ncm91cCBidXR0b24rYnV0dG9ue21hcmdpbi1sZWZ0OjA7bWFyZ2luLXJpZ2h0Oi0xcHh9LnJiYy1idG4tZ3JvdXArLnJiYy1idG4tZ3JvdXAsLnJiYy1idG4tZ3JvdXArYnV0dG9ue21hcmdpbi1sZWZ0OjEwcHh9QG1lZGlhKG1heC13aWR0aDogNzY3cHgpey5yYmMtdG9vbGJhcntmbGV4LWRpcmVjdGlvbjpjb2x1bW59fS5yYmMtZXZlbnQsLnJiYy1kYXktc2xvdCAucmJjLWJhY2tncm91bmQtZXZlbnR7Ym9yZGVyOm5vbmU7Ym94LXNpemluZzpib3JkZXItYm94O2JveC1zaGFkb3c6bm9uZTttYXJnaW46MDtwYWRkaW5nOjJweCA1cHg7YmFja2dyb3VuZC1jb2xvcjojMzE3NGFkO2JvcmRlci1yYWRpdXM6NXB4O2NvbG9yOiNmZmY7Y3Vyc29yOnBvaW50ZXI7d2lkdGg6MTAwJTt0ZXh0LWFsaWduOmxlZnR9LnJiYy1zbG90LXNlbGVjdGluZyAucmJjLWV2ZW50LC5yYmMtc2xvdC1zZWxlY3RpbmcgLnJiYy1kYXktc2xvdCAucmJjLWJhY2tncm91bmQtZXZlbnQsLnJiYy1kYXktc2xvdCAucmJjLXNsb3Qtc2VsZWN0aW5nIC5yYmMtYmFja2dyb3VuZC1ldmVudHtjdXJzb3I6aW5oZXJpdDtwb2ludGVyLWV2ZW50czpub25lfS5yYmMtZXZlbnQucmJjLXNlbGVjdGVkLC5yYmMtZGF5LXNsb3QgLnJiYy1zZWxlY3RlZC5yYmMtYmFja2dyb3VuZC1ldmVudHtiYWNrZ3JvdW5kLWNvbG9yOiMyNjU5ODV9LnJiYy1ldmVudDpmb2N1cywucmJjLWRheS1zbG90IC5yYmMtYmFja2dyb3VuZC1ldmVudDpmb2N1c3tvdXRsaW5lOjVweCBhdXRvICMzYjk5ZmN9LnJiYy1ldmVudC1sYWJlbHtmb250LXNpemU6ODAlfS5yYmMtZXZlbnQtb3ZlcmxhcHN7Ym94LXNoYWRvdzotMXB4IDFweCA1cHggMHB4IHJnYmEoNTEsNTEsNTEsLjUpfS5yYmMtZXZlbnQtY29udGludWVzLXByaW9ye2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9LnJiYy1ldmVudC1jb250aW51ZXMtYWZ0ZXJ7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowfS5yYmMtZXZlbnQtY29udGludWVzLWVhcmxpZXJ7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9LnJiYy1ldmVudC1jb250aW51ZXMtbGF0ZXJ7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjB9LnJiYy1yb3d7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOnJvd30ucmJjLXJvdy1zZWdtZW50e3BhZGRpbmc6MCAxcHggMXB4IDFweH0ucmJjLXNlbGVjdGVkLWNlbGx7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC4xKX0ucmJjLXNob3ctbW9yZXtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjMpO3otaW5kZXg6NDtmb250LXdlaWdodDpib2xkO2ZvbnQtc2l6ZTo4NSU7aGVpZ2h0OmF1dG87bGluZS1oZWlnaHQ6bm9ybWFsO2NvbG9yOiMzMTc0YWR9LnJiYy1zaG93LW1vcmU6aG92ZXIsLnJiYy1zaG93LW1vcmU6Zm9jdXN7Y29sb3I6IzI2NTk4NX0ucmJjLW1vbnRoLXZpZXd7cG9zaXRpb246cmVsYXRpdmU7Ym9yZGVyOjFweCBzb2xpZCAjZGRkO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleDoxIDAgMDt3aWR0aDoxMDAlO3VzZXItc2VsZWN0Om5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lO2hlaWdodDoxMDAlfS5yYmMtbW9udGgtaGVhZGVye2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpyb3d9LnJiYy1tb250aC1yb3d7ZGlzcGxheTpmbGV4O3Bvc2l0aW9uOnJlbGF0aXZlO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4OjEgMCAwO2ZsZXgtYmFzaXM6MHB4O292ZXJmbG93OmhpZGRlbjtoZWlnaHQ6MTAwJX0ucmJjLW1vbnRoLXJvdysucmJjLW1vbnRoLXJvd3tib3JkZXItdG9wOjFweCBzb2xpZCAjZGRkfS5yYmMtZGF0ZS1jZWxse2ZsZXg6MSAxIDA7bWluLXdpZHRoOjA7cGFkZGluZy1yaWdodDo1cHg7dGV4dC1hbGlnbjpyaWdodH0ucmJjLWRhdGUtY2VsbC5yYmMtbm93e2ZvbnQtd2VpZ2h0OmJvbGR9LnJiYy1kYXRlLWNlbGw+YSwucmJjLWRhdGUtY2VsbD5hOmFjdGl2ZSwucmJjLWRhdGUtY2VsbD5hOnZpc2l0ZWR7Y29sb3I6aW5oZXJpdDt0ZXh0LWRlY29yYXRpb246bm9uZX0ucmJjLXJvdy1iZ3tkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246cm93O2ZsZXg6MSAwIDA7b3ZlcmZsb3c6aGlkZGVuO3JpZ2h0OjFweH0ucmJjLWRheS1iZ3tmbGV4OjEgMCAwJX0ucmJjLWRheS1iZysucmJjLWRheS1iZ3tib3JkZXItbGVmdDoxcHggc29saWQgI2RkZH0ucmJjLXJ0bCAucmJjLWRheS1iZysucmJjLWRheS1iZ3tib3JkZXItbGVmdC13aWR0aDowO2JvcmRlci1yaWdodDoxcHggc29saWQgI2RkZH0ucmJjLWFnZW5kYS12aWV3e2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleDoxIDAgMDtvdmVyZmxvdzphdXRvfS5yYmMtYWdlbmRhLXZpZXcgdGFibGUucmJjLWFnZW5kYS10YWJsZXt3aWR0aDoxMDAlO2JvcmRlcjoxcHggc29saWQgI2RkZDtib3JkZXItc3BhY2luZzowO2JvcmRlci1jb2xsYXBzZTpjb2xsYXBzZX0ucmJjLWFnZW5kYS12aWV3IHRhYmxlLnJiYy1hZ2VuZGEtdGFibGUgdGJvZHk+dHI+dGR7cGFkZGluZzo1cHggMTBweDt2ZXJ0aWNhbC1hbGlnbjp0b3B9LnJiYy1hZ2VuZGEtdmlldyB0YWJsZS5yYmMtYWdlbmRhLXRhYmxlIC5yYmMtYWdlbmRhLXRpbWUtY2VsbHtwYWRkaW5nLWxlZnQ6MTVweDtwYWRkaW5nLXJpZ2h0OjE1cHg7dGV4dC10cmFuc2Zvcm06bG93ZXJjYXNlfS5yYmMtYWdlbmRhLXZpZXcgdGFibGUucmJjLWFnZW5kYS10YWJsZSB0Ym9keT50cj50ZCt0ZHtib3JkZXItbGVmdDoxcHggc29saWQgI2RkZH0ucmJjLXJ0bCAucmJjLWFnZW5kYS12aWV3IHRhYmxlLnJiYy1hZ2VuZGEtdGFibGUgdGJvZHk+dHI+dGQrdGR7Ym9yZGVyLWxlZnQtd2lkdGg6MDtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNkZGR9LnJiYy1hZ2VuZGEtdmlldyB0YWJsZS5yYmMtYWdlbmRhLXRhYmxlIHRib2R5PnRyK3Rye2JvcmRlci10b3A6MXB4IHNvbGlkICNkZGR9LnJiYy1hZ2VuZGEtdmlldyB0YWJsZS5yYmMtYWdlbmRhLXRhYmxlIHRoZWFkPnRyPnRoe3BhZGRpbmc6M3B4IDVweDt0ZXh0LWFsaWduOmxlZnQ7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZH0ucmJjLXJ0bCAucmJjLWFnZW5kYS12aWV3IHRhYmxlLnJiYy1hZ2VuZGEtdGFibGUgdGhlYWQ+dHI+dGh7dGV4dC1hbGlnbjpyaWdodH0ucmJjLWFnZW5kYS10aW1lLWNlbGx7dGV4dC10cmFuc2Zvcm06bG93ZXJjYXNlfS5yYmMtYWdlbmRhLXRpbWUtY2VsbCAucmJjLWNvbnRpbnVlcy1hZnRlcjphZnRlcntjb250ZW50OlxcXCIgwrtcXFwifS5yYmMtYWdlbmRhLXRpbWUtY2VsbCAucmJjLWNvbnRpbnVlcy1wcmlvcjpiZWZvcmV7Y29udGVudDpcXFwiwqsgXFxcIn0ucmJjLWFnZW5kYS1kYXRlLWNlbGwsLnJiYy1hZ2VuZGEtdGltZS1jZWxse3doaXRlLXNwYWNlOm5vd3JhcH0ucmJjLWFnZW5kYS1ldmVudC1jZWxse3dpZHRoOjEwMCV9LnJiYy10aW1lLWNvbHVtbntkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO21pbi1oZWlnaHQ6MTAwJX0ucmJjLXRpbWUtY29sdW1uIC5yYmMtdGltZXNsb3QtZ3JvdXB7ZmxleDoxfS5yYmMtdGltZXNsb3QtZ3JvdXB7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZDttaW4taGVpZ2h0OjQwcHg7ZGlzcGxheTpmbGV4O2ZsZXgtZmxvdzpjb2x1bW4gbm93cmFwfS5yYmMtdGltZS1ndXR0ZXIsLnJiYy1oZWFkZXItZ3V0dGVye2ZsZXg6bm9uZX0ucmJjLWxhYmVse3BhZGRpbmc6MCA1cHh9LnJiYy1kYXktc2xvdHtwb3NpdGlvbjpyZWxhdGl2ZX0ucmJjLWRheS1zbG90IC5yYmMtZXZlbnRzLWNvbnRhaW5lcntib3R0b206MDtsZWZ0OjA7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MDttYXJnaW4tcmlnaHQ6MTBweDt0b3A6MH0ucmJjLWRheS1zbG90IC5yYmMtZXZlbnRzLWNvbnRhaW5lci5yYmMtcnRse2xlZnQ6MTBweDtyaWdodDowfS5yYmMtZGF5LXNsb3QgLnJiYy1ldmVudCwucmJjLWRheS1zbG90IC5yYmMtYmFja2dyb3VuZC1ldmVudHtib3JkZXI6MXB4IHNvbGlkICMyNjU5ODU7ZGlzcGxheTpmbGV4O21heC1oZWlnaHQ6MTAwJTttaW4taGVpZ2h0OjIwcHg7ZmxleC1mbG93OmNvbHVtbiB3cmFwO2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7b3ZlcmZsb3c6aGlkZGVuO3Bvc2l0aW9uOmFic29sdXRlfS5yYmMtZGF5LXNsb3QgLnJiYy1iYWNrZ3JvdW5kLWV2ZW50e29wYWNpdHk6Ljc1fS5yYmMtZGF5LXNsb3QgLnJiYy1ldmVudC1sYWJlbHtmbGV4Om5vbmU7cGFkZGluZy1yaWdodDo1cHg7d2lkdGg6YXV0b30ucmJjLWRheS1zbG90IC5yYmMtZXZlbnQtY29udGVudHt3aWR0aDoxMDAlO2ZsZXg6MSAxIDA7d29yZC13cmFwOmJyZWFrLXdvcmQ7bGluZS1oZWlnaHQ6MTtoZWlnaHQ6MTAwJTttaW4taGVpZ2h0OjFlbX0ucmJjLWRheS1zbG90IC5yYmMtdGltZS1zbG90e2JvcmRlci10b3A6MXB4IHNvbGlkICNmN2Y3Zjd9LnJiYy10aW1lLXZpZXctcmVzb3VyY2VzIC5yYmMtdGltZS1ndXR0ZXIsLnJiYy10aW1lLXZpZXctcmVzb3VyY2VzIC5yYmMtdGltZS1oZWFkZXItZ3V0dGVye3Bvc2l0aW9uOnN0aWNreTtsZWZ0OjA7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlci1yaWdodDoxcHggc29saWQgI2RkZDt6LWluZGV4OjEwO21hcmdpbi1yaWdodDotMXB4fS5yYmMtdGltZS12aWV3LXJlc291cmNlcyAucmJjLXRpbWUtaGVhZGVye292ZXJmbG93OmhpZGRlbn0ucmJjLXRpbWUtdmlldy1yZXNvdXJjZXMgLnJiYy10aW1lLWhlYWRlci1jb250ZW50e21pbi13aWR0aDphdXRvO2ZsZXg6MSAwIDA7ZmxleC1iYXNpczowcHh9LnJiYy10aW1lLXZpZXctcmVzb3VyY2VzIC5yYmMtdGltZS1oZWFkZXItY2VsbC1zaW5nbGUtZGF5e2Rpc3BsYXk6bm9uZX0ucmJjLXRpbWUtdmlldy1yZXNvdXJjZXMgLnJiYy1kYXktc2xvdHttaW4td2lkdGg6MTQwcHh9LnJiYy10aW1lLXZpZXctcmVzb3VyY2VzIC5yYmMtaGVhZGVyLC5yYmMtdGltZS12aWV3LXJlc291cmNlcyAucmJjLWRheS1iZ3t3aWR0aDoxNDBweDtmbGV4OjEgMSAwO2ZsZXgtYmFzaXM6MCBweH0ucmJjLXRpbWUtaGVhZGVyLWNvbnRlbnQrLnJiYy10aW1lLWhlYWRlci1jb250ZW50e21hcmdpbi1sZWZ0Oi0xcHh9LnJiYy10aW1lLXNsb3R7ZmxleDoxIDAgMH0ucmJjLXRpbWUtc2xvdC5yYmMtbm93e2ZvbnQtd2VpZ2h0OmJvbGR9LnJiYy1kYXktaGVhZGVye3RleHQtYWxpZ246Y2VudGVyfS5yYmMtc2xvdC1zZWxlY3Rpb257ei1pbmRleDoxMDtwb3NpdGlvbjphYnNvbHV0ZTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjUpO2NvbG9yOiNmZmY7Zm9udC1zaXplOjc1JTt3aWR0aDoxMDAlO3BhZGRpbmc6M3B4fS5yYmMtc2xvdC1zZWxlY3Rpbmd7Y3Vyc29yOm1vdmV9LnJiYy10aW1lLXZpZXd7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4OjE7d2lkdGg6MTAwJTtib3JkZXI6MXB4IHNvbGlkICNkZGQ7bWluLWhlaWdodDowfS5yYmMtdGltZS12aWV3IC5yYmMtdGltZS1ndXR0ZXJ7d2hpdGUtc3BhY2U6bm93cmFwO3RleHQtYWxpZ246cmlnaHR9LnJiYy10aW1lLXZpZXcgLnJiYy1hbGxkYXktY2VsbHtib3gtc2l6aW5nOmNvbnRlbnQtYm94O3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7cG9zaXRpb246cmVsYXRpdmV9LnJiYy10aW1lLXZpZXcgLnJiYy1hbGxkYXktY2VsbCsucmJjLWFsbGRheS1jZWxse2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjZGRkfS5yYmMtdGltZS12aWV3IC5yYmMtYWxsZGF5LWV2ZW50c3twb3NpdGlvbjpyZWxhdGl2ZTt6LWluZGV4OjR9LnJiYy10aW1lLXZpZXcgLnJiYy1yb3d7Ym94LXNpemluZzpib3JkZXItYm94O21pbi1oZWlnaHQ6MjBweH0ucmJjLXRpbWUtaGVhZGVye2Rpc3BsYXk6ZmxleDtmbGV4OjAgMCBhdXRvO2ZsZXgtZGlyZWN0aW9uOnJvd30ucmJjLXRpbWUtaGVhZGVyLnJiYy1vdmVyZmxvd2luZ3tib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNkZGR9LnJiYy1ydGwgLnJiYy10aW1lLWhlYWRlci5yYmMtb3ZlcmZsb3dpbmd7Ym9yZGVyLXJpZ2h0LXdpZHRoOjA7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNkZGR9LnJiYy10aW1lLWhlYWRlcj4ucmJjLXJvdzpmaXJzdC1jaGlsZHtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZGRkfS5yYmMtdGltZS1oZWFkZXI+LnJiYy1yb3cucmJjLXJvdy1yZXNvdXJjZXtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZGRkfS5yYmMtdGltZS1oZWFkZXItY2VsbC1zaW5nbGUtZGF5e2Rpc3BsYXk6bm9uZX0ucmJjLXRpbWUtaGVhZGVyLWNvbnRlbnR7ZmxleDoxO2Rpc3BsYXk6ZmxleDttaW4td2lkdGg6MDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNkZGR9LnJiYy1ydGwgLnJiYy10aW1lLWhlYWRlci1jb250ZW50e2JvcmRlci1sZWZ0LXdpZHRoOjA7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjZGRkfS5yYmMtdGltZS1oZWFkZXItY29udGVudD4ucmJjLXJvdy5yYmMtcm93LXJlc291cmNle2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZGQ7ZmxleC1zaHJpbms6MH0ucmJjLXRpbWUtY29udGVudHtkaXNwbGF5OmZsZXg7ZmxleDoxIDAgMCU7YWxpZ24taXRlbXM6ZmxleC1zdGFydDt3aWR0aDoxMDAlO2JvcmRlci10b3A6MnB4IHNvbGlkICNkZGQ7b3ZlcmZsb3cteTphdXRvO3Bvc2l0aW9uOnJlbGF0aXZlfS5yYmMtdGltZS1jb250ZW50Pi5yYmMtdGltZS1ndXR0ZXJ7ZmxleDpub25lfS5yYmMtdGltZS1jb250ZW50PiorKj4qe2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjZGRkfS5yYmMtcnRsIC5yYmMtdGltZS1jb250ZW50PiorKj4qe2JvcmRlci1sZWZ0LXdpZHRoOjA7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjZGRkfS5yYmMtdGltZS1jb250ZW50Pi5yYmMtZGF5LXNsb3R7d2lkdGg6MTAwJTt1c2VyLXNlbGVjdDpub25lOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZX0ucmJjLWN1cnJlbnQtdGltZS1pbmRpY2F0b3J7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDozO2xlZnQ6MDtyaWdodDowO2hlaWdodDoxcHg7YmFja2dyb3VuZC1jb2xvcjojNzRhZDMxO3BvaW50ZXItZXZlbnRzOm5vbmV9LnJiYy1yZXNvdXJjZS1ncm91cGluZy5yYmMtdGltZS1oZWFkZXItY29udGVudHtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1ufS5yYmMtcmVzb3VyY2UtZ3JvdXBpbmcgLnJiYy1yb3cgLnJiYy1oZWFkZXJ7d2lkdGg6MTQxcHh9LnJiYy1hZGRvbnMtZG5kIC5yYmMtYWRkb25zLWRuZC1yb3ctYm9keXtwb3NpdGlvbjpyZWxhdGl2ZX0ucmJjLWFkZG9ucy1kbmQgLnJiYy1hZGRvbnMtZG5kLWRyYWctcm93e3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDtyaWdodDowfS5yYmMtYWRkb25zLWRuZCAucmJjLWFkZG9ucy1kbmQtb3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjMpfS5yYmMtYWRkb25zLWRuZCAucmJjLWV2ZW50LC5yYmMtYWRkb25zLWRuZCAucmJjLWRheS1zbG90IC5yYmMtYmFja2dyb3VuZC1ldmVudCwucmJjLWRheS1zbG90IC5yYmMtYWRkb25zLWRuZCAucmJjLWJhY2tncm91bmQtZXZlbnR7dHJhbnNpdGlvbjpvcGFjaXR5IDE1MG1zfS5yYmMtYWRkb25zLWRuZCAucmJjLWV2ZW50OmhvdmVyIC5yYmMtYWRkb25zLWRuZC1yZXNpemUtbnMtaWNvbiwucmJjLWFkZG9ucy1kbmQgLnJiYy1kYXktc2xvdCAucmJjLWJhY2tncm91bmQtZXZlbnQ6aG92ZXIgLnJiYy1hZGRvbnMtZG5kLXJlc2l6ZS1ucy1pY29uLC5yYmMtZGF5LXNsb3QgLnJiYy1hZGRvbnMtZG5kIC5yYmMtYmFja2dyb3VuZC1ldmVudDpob3ZlciAucmJjLWFkZG9ucy1kbmQtcmVzaXplLW5zLWljb24sLnJiYy1hZGRvbnMtZG5kIC5yYmMtZXZlbnQ6aG92ZXIgLnJiYy1hZGRvbnMtZG5kLXJlc2l6ZS1ldy1pY29uLC5yYmMtYWRkb25zLWRuZCAucmJjLWRheS1zbG90IC5yYmMtYmFja2dyb3VuZC1ldmVudDpob3ZlciAucmJjLWFkZG9ucy1kbmQtcmVzaXplLWV3LWljb24sLnJiYy1kYXktc2xvdCAucmJjLWFkZG9ucy1kbmQgLnJiYy1iYWNrZ3JvdW5kLWV2ZW50OmhvdmVyIC5yYmMtYWRkb25zLWRuZC1yZXNpemUtZXctaWNvbntkaXNwbGF5OmJsb2NrfS5yYmMtYWRkb25zLWRuZCAucmJjLWFkZG9ucy1kbmQtZHJhZ2dlZC1ldmVudHtvcGFjaXR5OjB9LnJiYy1hZGRvbnMtZG5kLnJiYy1hZGRvbnMtZG5kLWlzLWRyYWdnaW5nIC5yYmMtZXZlbnQ6bm90KC5yYmMtYWRkb25zLWRuZC1kcmFnZ2VkLWV2ZW50KTpub3QoLnJiYy1hZGRvbnMtZG5kLWRyYWctcHJldmlldyksLnJiYy1hZGRvbnMtZG5kLnJiYy1hZGRvbnMtZG5kLWlzLWRyYWdnaW5nIC5yYmMtZGF5LXNsb3QgLnJiYy1iYWNrZ3JvdW5kLWV2ZW50Om5vdCgucmJjLWFkZG9ucy1kbmQtZHJhZ2dlZC1ldmVudCk6bm90KC5yYmMtYWRkb25zLWRuZC1kcmFnLXByZXZpZXcpLC5yYmMtZGF5LXNsb3QgLnJiYy1hZGRvbnMtZG5kLnJiYy1hZGRvbnMtZG5kLWlzLWRyYWdnaW5nIC5yYmMtYmFja2dyb3VuZC1ldmVudDpub3QoLnJiYy1hZGRvbnMtZG5kLWRyYWdnZWQtZXZlbnQpOm5vdCgucmJjLWFkZG9ucy1kbmQtZHJhZy1wcmV2aWV3KXtvcGFjaXR5Oi41fS5yYmMtYWRkb25zLWRuZCAucmJjLWFkZG9ucy1kbmQtcmVzaXphYmxle3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCV9LnJiYy1hZGRvbnMtZG5kIC5yYmMtYWRkb25zLWRuZC1yZXNpemUtbnMtYW5jaG9ye3dpZHRoOjEwMCU7dGV4dC1hbGlnbjpjZW50ZXI7cG9zaXRpb246YWJzb2x1dGV9LnJiYy1hZGRvbnMtZG5kIC5yYmMtYWRkb25zLWRuZC1yZXNpemUtbnMtYW5jaG9yOmZpcnN0LWNoaWxke3RvcDowfS5yYmMtYWRkb25zLWRuZCAucmJjLWFkZG9ucy1kbmQtcmVzaXplLW5zLWFuY2hvcjpsYXN0LWNoaWxke2JvdHRvbTowfS5yYmMtYWRkb25zLWRuZCAucmJjLWFkZG9ucy1kbmQtcmVzaXplLW5zLWFuY2hvciAucmJjLWFkZG9ucy1kbmQtcmVzaXplLW5zLWljb257ZGlzcGxheTpub25lO2JvcmRlci10b3A6M3B4IGRvdWJsZTttYXJnaW46MCBhdXRvO3dpZHRoOjEwcHg7Y3Vyc29yOm5zLXJlc2l6ZX0ucmJjLWFkZG9ucy1kbmQgLnJiYy1hZGRvbnMtZG5kLXJlc2l6ZS1ldy1hbmNob3J7cG9zaXRpb246YWJzb2x1dGU7dG9wOjRweDtib3R0b206MH0ucmJjLWFkZG9ucy1kbmQgLnJiYy1hZGRvbnMtZG5kLXJlc2l6ZS1ldy1hbmNob3I6Zmlyc3QtY2hpbGR7bGVmdDowfS5yYmMtYWRkb25zLWRuZCAucmJjLWFkZG9ucy1kbmQtcmVzaXplLWV3LWFuY2hvcjpsYXN0LWNoaWxke3JpZ2h0OjB9LnJiYy1hZGRvbnMtZG5kIC5yYmMtYWRkb25zLWRuZC1yZXNpemUtZXctYW5jaG9yIC5yYmMtYWRkb25zLWRuZC1yZXNpemUtZXctaWNvbntkaXNwbGF5Om5vbmU7Ym9yZGVyLWxlZnQ6M3B4IGRvdWJsZTttYXJnaW4tdG9wOmF1dG87bWFyZ2luLWJvdHRvbTphdXRvO2hlaWdodDoxMHB4O2N1cnNvcjpldy1yZXNpemV9LmhlaWdodDYwMHtwb3NpdGlvbjpyZWxhdGl2ZTtoZWlnaHQ6NjAwcHh9LmV4YW1wbGVzLS1oZWFkZXIsLmRuZE91dHNpZGVTb3VyY2VFeGFtcGxle21hcmdpbjowIDQwcHg7dGV4dC1hbGlnbjpjZW50ZXJ9LmRuZE91dHNpZGVTb3VyY2VFeGFtcGxle2Rpc3BsYXk6ZmxleH0uZG5kT3V0c2lkZVNvdXJjZUV4YW1wbGU+LmlubmVye2Rpc3BsYXk6ZmxleDtmbGV4OjE7anVzdGlmeS1jb250ZW50OmNlbnRlcjtmbGV4LXdyYXA6d3JhcH0uZG5kT3V0c2lkZVNvdXJjZUV4YW1wbGU+LmlubmVyIGg0e2NvbG9yOmdyYXk7d2lkdGg6MTAwJX0uZG5kT3V0c2lkZVNvdXJjZUV4YW1wbGU+LmlubmVyIGRpdltkcmFnZ2FibGVde2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtib3JkZXI6MnB4IHNvbGlkIGdyYXk7Ym9yZGVyLXJhZGl1czo0cHg7d2lkdGg6MTAwcHg7bWFyZ2luOjEwcHg7Y3Vyc29yOmdyYWJ9LmRuZE91dHNpZGVTb3VyY2VFeGFtcGxlPi5pbm5lciBpbnB1dFt0eXBlPWNoZWNrYm94XXttYXJnaW4tcmlnaHQ6NXB4fS5jYXJke2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MDtwYWRkaW5nOjI0cHg7Ym9yZGVyLXJhZGl1czoycHg7bWFyZ2luLWJvdHRvbToyMHB4O2JveC1zaGFkb3c6MCAycHggMnB4IDAgcmdiYSgwLDAsMCwuMTQpLDAgM3B4IDFweCAtMnB4IHJnYmEoMCwwLDAsLjIpLDAgMXB4IDVweCAwIHJnYmEoMCwwLDAsLjEyKX0uaXNEcmFnZ2FibGV7Y3Vyc29yOmdyYWIgIWltcG9ydGFudH0ubm9uRHJhZ2dhYmxlLC5ub25SZXNpemFibGV7YmFja2dyb3VuZC1jb2xvcjojYmVkN2VjICFpbXBvcnRhbnQ7Y29sb3I6IzAwMCAhaW1wb3J0YW50fVwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnBvd2RlckJsdWUsI215X3NjaGVkdWxlciwudHVlc2RheXtiYWNrZ3JvdW5kLWNvbG9yOiNiMGUwZTY7Y29sb3I6IzAwMH0uZGFya0dyZWVue2JhY2tncm91bmQtY29sb3I6IzAwNjQwMDtjb2xvcjojZmZmfS5zbG90RGVmYXVsdHtiYWNrZ3JvdW5kLWNvbG9yOlxcXCIjRkFGMEU2XFxcIjtjb2xvcjpcXFwiYmxhY2tcXFwifSNteV9zY2hlZHVsZXJ7cGFkZGluZzouNWVtO2JvcmRlcjoxcHggc29saWQgYmx1ZX1cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5yZW5kZXJpbmctbW9kdWxlX19zcGVjaWFsRGF5LS0zbk5XaXtiYWNrZ3JvdW5kLWNvbG9yOiNmZWN9XCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcInNwZWNpYWxEYXlcIjogXCJyZW5kZXJpbmctbW9kdWxlX19zcGVjaWFsRGF5LS0zbk5XaVwiXG59O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwidmFyIG1hcCA9IHtcblx0XCIuL2FmXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9hZi5qc1wiLFxuXHRcIi4vYWYuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2FmLmpzXCIsXG5cdFwiLi9hclwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvYXIuanNcIixcblx0XCIuL2FyLWR6XCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9hci1kei5qc1wiLFxuXHRcIi4vYXItZHouanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2FyLWR6LmpzXCIsXG5cdFwiLi9hci1rd1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvYXIta3cuanNcIixcblx0XCIuL2FyLWt3LmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9hci1rdy5qc1wiLFxuXHRcIi4vYXItbHlcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2FyLWx5LmpzXCIsXG5cdFwiLi9hci1seS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvYXItbHkuanNcIixcblx0XCIuL2FyLW1hXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9hci1tYS5qc1wiLFxuXHRcIi4vYXItbWEuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2FyLW1hLmpzXCIsXG5cdFwiLi9hci1wc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvYXItcHMuanNcIixcblx0XCIuL2FyLXBzLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9hci1wcy5qc1wiLFxuXHRcIi4vYXItc2FcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2FyLXNhLmpzXCIsXG5cdFwiLi9hci1zYS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvYXItc2EuanNcIixcblx0XCIuL2FyLXRuXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9hci10bi5qc1wiLFxuXHRcIi4vYXItdG4uanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2FyLXRuLmpzXCIsXG5cdFwiLi9hci5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvYXIuanNcIixcblx0XCIuL2F6XCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9hei5qc1wiLFxuXHRcIi4vYXouanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2F6LmpzXCIsXG5cdFwiLi9iZVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvYmUuanNcIixcblx0XCIuL2JlLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9iZS5qc1wiLFxuXHRcIi4vYmdcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2JnLmpzXCIsXG5cdFwiLi9iZy5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvYmcuanNcIixcblx0XCIuL2JtXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9ibS5qc1wiLFxuXHRcIi4vYm0uanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2JtLmpzXCIsXG5cdFwiLi9iblwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvYm4uanNcIixcblx0XCIuL2JuLWJkXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9ibi1iZC5qc1wiLFxuXHRcIi4vYm4tYmQuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2JuLWJkLmpzXCIsXG5cdFwiLi9ibi5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvYm4uanNcIixcblx0XCIuL2JvXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9iby5qc1wiLFxuXHRcIi4vYm8uanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2JvLmpzXCIsXG5cdFwiLi9iclwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvYnIuanNcIixcblx0XCIuL2JyLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9ici5qc1wiLFxuXHRcIi4vYnNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2JzLmpzXCIsXG5cdFwiLi9icy5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvYnMuanNcIixcblx0XCIuL2NhXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9jYS5qc1wiLFxuXHRcIi4vY2EuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2NhLmpzXCIsXG5cdFwiLi9jc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvY3MuanNcIixcblx0XCIuL2NzLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9jcy5qc1wiLFxuXHRcIi4vY3ZcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2N2LmpzXCIsXG5cdFwiLi9jdi5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvY3YuanNcIixcblx0XCIuL2N5XCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9jeS5qc1wiLFxuXHRcIi4vY3kuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2N5LmpzXCIsXG5cdFwiLi9kYVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZGEuanNcIixcblx0XCIuL2RhLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9kYS5qc1wiLFxuXHRcIi4vZGVcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2RlLmpzXCIsXG5cdFwiLi9kZS1hdFwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZGUtYXQuanNcIixcblx0XCIuL2RlLWF0LmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9kZS1hdC5qc1wiLFxuXHRcIi4vZGUtY2hcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2RlLWNoLmpzXCIsXG5cdFwiLi9kZS1jaC5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZGUtY2guanNcIixcblx0XCIuL2RlLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9kZS5qc1wiLFxuXHRcIi4vZHZcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2R2LmpzXCIsXG5cdFwiLi9kdi5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZHYuanNcIixcblx0XCIuL2VsXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9lbC5qc1wiLFxuXHRcIi4vZWwuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2VsLmpzXCIsXG5cdFwiLi9lbi1hdVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZW4tYXUuanNcIixcblx0XCIuL2VuLWF1LmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9lbi1hdS5qc1wiLFxuXHRcIi4vZW4tY2FcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2VuLWNhLmpzXCIsXG5cdFwiLi9lbi1jYS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZW4tY2EuanNcIixcblx0XCIuL2VuLWdiXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9lbi1nYi5qc1wiLFxuXHRcIi4vZW4tZ2IuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2VuLWdiLmpzXCIsXG5cdFwiLi9lbi1pZVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZW4taWUuanNcIixcblx0XCIuL2VuLWllLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9lbi1pZS5qc1wiLFxuXHRcIi4vZW4taWxcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2VuLWlsLmpzXCIsXG5cdFwiLi9lbi1pbC5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZW4taWwuanNcIixcblx0XCIuL2VuLWluXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9lbi1pbi5qc1wiLFxuXHRcIi4vZW4taW4uanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2VuLWluLmpzXCIsXG5cdFwiLi9lbi1uelwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZW4tbnouanNcIixcblx0XCIuL2VuLW56LmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9lbi1uei5qc1wiLFxuXHRcIi4vZW4tc2dcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2VuLXNnLmpzXCIsXG5cdFwiLi9lbi1zZy5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZW4tc2cuanNcIixcblx0XCIuL2VvXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9lby5qc1wiLFxuXHRcIi4vZW8uanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2VvLmpzXCIsXG5cdFwiLi9lc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZXMuanNcIixcblx0XCIuL2VzLWRvXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9lcy1kby5qc1wiLFxuXHRcIi4vZXMtZG8uanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2VzLWRvLmpzXCIsXG5cdFwiLi9lcy1teFwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZXMtbXguanNcIixcblx0XCIuL2VzLW14LmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9lcy1teC5qc1wiLFxuXHRcIi4vZXMtdXNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2VzLXVzLmpzXCIsXG5cdFwiLi9lcy11cy5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZXMtdXMuanNcIixcblx0XCIuL2VzLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9lcy5qc1wiLFxuXHRcIi4vZXRcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2V0LmpzXCIsXG5cdFwiLi9ldC5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZXQuanNcIixcblx0XCIuL2V1XCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9ldS5qc1wiLFxuXHRcIi4vZXUuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2V1LmpzXCIsXG5cdFwiLi9mYVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZmEuanNcIixcblx0XCIuL2ZhLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9mYS5qc1wiLFxuXHRcIi4vZmlcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2ZpLmpzXCIsXG5cdFwiLi9maS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZmkuanNcIixcblx0XCIuL2ZpbFwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZmlsLmpzXCIsXG5cdFwiLi9maWwuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2ZpbC5qc1wiLFxuXHRcIi4vZm9cIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2ZvLmpzXCIsXG5cdFwiLi9mby5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZm8uanNcIixcblx0XCIuL2ZyXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9mci5qc1wiLFxuXHRcIi4vZnItY2FcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2ZyLWNhLmpzXCIsXG5cdFwiLi9mci1jYS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZnItY2EuanNcIixcblx0XCIuL2ZyLWNoXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9mci1jaC5qc1wiLFxuXHRcIi4vZnItY2guanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2ZyLWNoLmpzXCIsXG5cdFwiLi9mci5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZnIuanNcIixcblx0XCIuL2Z5XCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9meS5qc1wiLFxuXHRcIi4vZnkuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2Z5LmpzXCIsXG5cdFwiLi9nYVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZ2EuanNcIixcblx0XCIuL2dhLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9nYS5qc1wiLFxuXHRcIi4vZ2RcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2dkLmpzXCIsXG5cdFwiLi9nZC5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZ2QuanNcIixcblx0XCIuL2dsXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9nbC5qc1wiLFxuXHRcIi4vZ2wuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2dsLmpzXCIsXG5cdFwiLi9nb20tZGV2YVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZ29tLWRldmEuanNcIixcblx0XCIuL2dvbS1kZXZhLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9nb20tZGV2YS5qc1wiLFxuXHRcIi4vZ29tLWxhdG5cIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2dvbS1sYXRuLmpzXCIsXG5cdFwiLi9nb20tbGF0bi5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvZ29tLWxhdG4uanNcIixcblx0XCIuL2d1XCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9ndS5qc1wiLFxuXHRcIi4vZ3UuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2d1LmpzXCIsXG5cdFwiLi9oZVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvaGUuanNcIixcblx0XCIuL2hlLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9oZS5qc1wiLFxuXHRcIi4vaGlcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2hpLmpzXCIsXG5cdFwiLi9oaS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvaGkuanNcIixcblx0XCIuL2hyXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9oci5qc1wiLFxuXHRcIi4vaHIuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2hyLmpzXCIsXG5cdFwiLi9odVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvaHUuanNcIixcblx0XCIuL2h1LmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9odS5qc1wiLFxuXHRcIi4vaHktYW1cIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2h5LWFtLmpzXCIsXG5cdFwiLi9oeS1hbS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvaHktYW0uanNcIixcblx0XCIuL2lkXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9pZC5qc1wiLFxuXHRcIi4vaWQuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2lkLmpzXCIsXG5cdFwiLi9pc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvaXMuanNcIixcblx0XCIuL2lzLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9pcy5qc1wiLFxuXHRcIi4vaXRcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2l0LmpzXCIsXG5cdFwiLi9pdC1jaFwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvaXQtY2guanNcIixcblx0XCIuL2l0LWNoLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9pdC1jaC5qc1wiLFxuXHRcIi4vaXQuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2l0LmpzXCIsXG5cdFwiLi9qYVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvamEuanNcIixcblx0XCIuL2phLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9qYS5qc1wiLFxuXHRcIi4vanZcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2p2LmpzXCIsXG5cdFwiLi9qdi5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvanYuanNcIixcblx0XCIuL2thXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9rYS5qc1wiLFxuXHRcIi4va2EuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2thLmpzXCIsXG5cdFwiLi9ra1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUva2suanNcIixcblx0XCIuL2trLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9ray5qc1wiLFxuXHRcIi4va21cIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2ttLmpzXCIsXG5cdFwiLi9rbS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUva20uanNcIixcblx0XCIuL2tuXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9rbi5qc1wiLFxuXHRcIi4va24uanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2tuLmpzXCIsXG5cdFwiLi9rb1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUva28uanNcIixcblx0XCIuL2tvLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9rby5qc1wiLFxuXHRcIi4va3VcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2t1LmpzXCIsXG5cdFwiLi9rdS1rbXJcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2t1LWttci5qc1wiLFxuXHRcIi4va3Uta21yLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9rdS1rbXIuanNcIixcblx0XCIuL2t1LmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9rdS5qc1wiLFxuXHRcIi4va3lcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2t5LmpzXCIsXG5cdFwiLi9reS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUva3kuanNcIixcblx0XCIuL2xiXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9sYi5qc1wiLFxuXHRcIi4vbGIuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2xiLmpzXCIsXG5cdFwiLi9sb1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvbG8uanNcIixcblx0XCIuL2xvLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9sby5qc1wiLFxuXHRcIi4vbHRcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2x0LmpzXCIsXG5cdFwiLi9sdC5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvbHQuanNcIixcblx0XCIuL2x2XCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9sdi5qc1wiLFxuXHRcIi4vbHYuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL2x2LmpzXCIsXG5cdFwiLi9tZVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvbWUuanNcIixcblx0XCIuL21lLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9tZS5qc1wiLFxuXHRcIi4vbWlcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL21pLmpzXCIsXG5cdFwiLi9taS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvbWkuanNcIixcblx0XCIuL21rXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9tay5qc1wiLFxuXHRcIi4vbWsuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL21rLmpzXCIsXG5cdFwiLi9tbFwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvbWwuanNcIixcblx0XCIuL21sLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9tbC5qc1wiLFxuXHRcIi4vbW5cIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL21uLmpzXCIsXG5cdFwiLi9tbi5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvbW4uanNcIixcblx0XCIuL21yXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9tci5qc1wiLFxuXHRcIi4vbXIuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL21yLmpzXCIsXG5cdFwiLi9tc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvbXMuanNcIixcblx0XCIuL21zLW15XCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9tcy1teS5qc1wiLFxuXHRcIi4vbXMtbXkuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL21zLW15LmpzXCIsXG5cdFwiLi9tcy5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvbXMuanNcIixcblx0XCIuL210XCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9tdC5qc1wiLFxuXHRcIi4vbXQuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL210LmpzXCIsXG5cdFwiLi9teVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvbXkuanNcIixcblx0XCIuL215LmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9teS5qc1wiLFxuXHRcIi4vbmJcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL25iLmpzXCIsXG5cdFwiLi9uYi5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvbmIuanNcIixcblx0XCIuL25lXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9uZS5qc1wiLFxuXHRcIi4vbmUuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL25lLmpzXCIsXG5cdFwiLi9ubFwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvbmwuanNcIixcblx0XCIuL25sLWJlXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9ubC1iZS5qc1wiLFxuXHRcIi4vbmwtYmUuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL25sLWJlLmpzXCIsXG5cdFwiLi9ubC5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvbmwuanNcIixcblx0XCIuL25uXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9ubi5qc1wiLFxuXHRcIi4vbm4uanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL25uLmpzXCIsXG5cdFwiLi9vYy1sbmNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL29jLWxuYy5qc1wiLFxuXHRcIi4vb2MtbG5jLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9vYy1sbmMuanNcIixcblx0XCIuL3BhLWluXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9wYS1pbi5qc1wiLFxuXHRcIi4vcGEtaW4uanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3BhLWluLmpzXCIsXG5cdFwiLi9wbFwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvcGwuanNcIixcblx0XCIuL3BsLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9wbC5qc1wiLFxuXHRcIi4vcHRcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3B0LmpzXCIsXG5cdFwiLi9wdC1iclwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvcHQtYnIuanNcIixcblx0XCIuL3B0LWJyLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9wdC1ici5qc1wiLFxuXHRcIi4vcHQuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3B0LmpzXCIsXG5cdFwiLi9yb1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvcm8uanNcIixcblx0XCIuL3JvLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9yby5qc1wiLFxuXHRcIi4vcnVcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3J1LmpzXCIsXG5cdFwiLi9ydS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvcnUuanNcIixcblx0XCIuL3NkXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9zZC5qc1wiLFxuXHRcIi4vc2QuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3NkLmpzXCIsXG5cdFwiLi9zZVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvc2UuanNcIixcblx0XCIuL3NlLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9zZS5qc1wiLFxuXHRcIi4vc2lcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3NpLmpzXCIsXG5cdFwiLi9zaS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvc2kuanNcIixcblx0XCIuL3NrXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9zay5qc1wiLFxuXHRcIi4vc2suanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3NrLmpzXCIsXG5cdFwiLi9zbFwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvc2wuanNcIixcblx0XCIuL3NsLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9zbC5qc1wiLFxuXHRcIi4vc3FcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3NxLmpzXCIsXG5cdFwiLi9zcS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvc3EuanNcIixcblx0XCIuL3NyXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9zci5qc1wiLFxuXHRcIi4vc3ItY3lybFwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvc3ItY3lybC5qc1wiLFxuXHRcIi4vc3ItY3lybC5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvc3ItY3lybC5qc1wiLFxuXHRcIi4vc3IuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3NyLmpzXCIsXG5cdFwiLi9zc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvc3MuanNcIixcblx0XCIuL3NzLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9zcy5qc1wiLFxuXHRcIi4vc3ZcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3N2LmpzXCIsXG5cdFwiLi9zdi5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvc3YuanNcIixcblx0XCIuL3N3XCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS9zdy5qc1wiLFxuXHRcIi4vc3cuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3N3LmpzXCIsXG5cdFwiLi90YVwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvdGEuanNcIixcblx0XCIuL3RhLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS90YS5qc1wiLFxuXHRcIi4vdGVcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3RlLmpzXCIsXG5cdFwiLi90ZS5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvdGUuanNcIixcblx0XCIuL3RldFwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvdGV0LmpzXCIsXG5cdFwiLi90ZXQuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3RldC5qc1wiLFxuXHRcIi4vdGdcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3RnLmpzXCIsXG5cdFwiLi90Zy5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvdGcuanNcIixcblx0XCIuL3RoXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS90aC5qc1wiLFxuXHRcIi4vdGguanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3RoLmpzXCIsXG5cdFwiLi90a1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvdGsuanNcIixcblx0XCIuL3RrLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS90ay5qc1wiLFxuXHRcIi4vdGwtcGhcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3RsLXBoLmpzXCIsXG5cdFwiLi90bC1waC5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvdGwtcGguanNcIixcblx0XCIuL3RsaFwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvdGxoLmpzXCIsXG5cdFwiLi90bGguanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3RsaC5qc1wiLFxuXHRcIi4vdHJcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3RyLmpzXCIsXG5cdFwiLi90ci5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvdHIuanNcIixcblx0XCIuL3R6bFwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvdHpsLmpzXCIsXG5cdFwiLi90emwuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3R6bC5qc1wiLFxuXHRcIi4vdHptXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS90em0uanNcIixcblx0XCIuL3R6bS1sYXRuXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS90em0tbGF0bi5qc1wiLFxuXHRcIi4vdHptLWxhdG4uanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3R6bS1sYXRuLmpzXCIsXG5cdFwiLi90em0uanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3R6bS5qc1wiLFxuXHRcIi4vdWctY25cIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3VnLWNuLmpzXCIsXG5cdFwiLi91Zy1jbi5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvdWctY24uanNcIixcblx0XCIuL3VrXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS91ay5qc1wiLFxuXHRcIi4vdWsuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3VrLmpzXCIsXG5cdFwiLi91clwiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvdXIuanNcIixcblx0XCIuL3VyLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS91ci5qc1wiLFxuXHRcIi4vdXpcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3V6LmpzXCIsXG5cdFwiLi91ei1sYXRuXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS91ei1sYXRuLmpzXCIsXG5cdFwiLi91ei1sYXRuLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS91ei1sYXRuLmpzXCIsXG5cdFwiLi91ei5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvdXouanNcIixcblx0XCIuL3ZpXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS92aS5qc1wiLFxuXHRcIi4vdmkuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3ZpLmpzXCIsXG5cdFwiLi94LXBzZXVkb1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUveC1wc2V1ZG8uanNcIixcblx0XCIuL3gtcHNldWRvLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS94LXBzZXVkby5qc1wiLFxuXHRcIi4veW9cIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3lvLmpzXCIsXG5cdFwiLi95by5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUveW8uanNcIixcblx0XCIuL3poLWNuXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS96aC1jbi5qc1wiLFxuXHRcIi4vemgtY24uanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3poLWNuLmpzXCIsXG5cdFwiLi96aC1oa1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvemgtaGsuanNcIixcblx0XCIuL3poLWhrLmpzXCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS96aC1oay5qc1wiLFxuXHRcIi4vemgtbW9cIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3poLW1vLmpzXCIsXG5cdFwiLi96aC1tby5qc1wiOiBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUvemgtbW8uanNcIixcblx0XCIuL3poLXR3XCI6IFwiLi9ub2RlX21vZHVsZXMvbW9tZW50L2xvY2FsZS96aC10dy5qc1wiLFxuXHRcIi4vemgtdHcuanNcIjogXCIuL25vZGVfbW9kdWxlcy9tb21lbnQvbG9jYWxlL3poLXR3LmpzXCJcbn07XG5cblxuZnVuY3Rpb24gd2VicGFja0NvbnRleHQocmVxKSB7XG5cdHZhciBpZCA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpO1xuXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhpZCk7XG59XG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKSB7XG5cdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8obWFwLCByZXEpKSB7XG5cdFx0dmFyIGUgPSBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiICsgcmVxICsgXCInXCIpO1xuXHRcdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0XHR0aHJvdyBlO1xuXHR9XG5cdHJldHVybiBtYXBbcmVxXTtcbn1cbndlYnBhY2tDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQ29udGV4dEtleXMoKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhtYXApO1xufTtcbndlYnBhY2tDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmU7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tDb250ZXh0O1xud2VicGFja0NvbnRleHQuaWQgPSBcIi4vbm9kZV9tb2R1bGVzL21vbWVudC9sb2NhbGUgc3luYyByZWN1cnNpdmUgXlxcXFwuXFxcXC8uKiRcIjsiLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlcy5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlcy5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2N1c3RvbVRvb2xiYXIuc2Nzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307IiwidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcHJvcEdldHRlci5zY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzhdLnVzZVsxXSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9yZW5kZXJpbmcubW9kdWxlLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsInZhciBtYXAgPSB7XG5cdFwiLi9DYWxlbmRhci5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL0NhbGVuZGFyLnN0b3JpZXMuanNcIixcblx0XCIuL0RyYWdBbmREcm9wLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvRHJhZ0FuZERyb3Auc3Rvcmllcy5qc1wiLFxuXHRcIi4vRHVyYXRpb25zLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvRHVyYXRpb25zLnN0b3JpZXMuanNcIixcblx0XCIuL0xheW91dC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL0xheW91dC5zdG9yaWVzLmpzXCIsXG5cdFwiLi9UaW1lc2xvdHMuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9UaW1lc2xvdHMuc3Rvcmllcy5qc1wiLFxuXHRcIi4vYWRkb25zL2RyYWdBbmREcm9wL2Jhc2ljLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvYWRkb25zL2RyYWdBbmREcm9wL2Jhc2ljLnN0b3JpZXMuanNcIixcblx0XCIuL2FkZG9ucy9kcmFnQW5kRHJvcC9vdXRzaWRlLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvYWRkb25zL2RyYWdBbmREcm9wL291dHNpZGUuc3Rvcmllcy5qc1wiLFxuXHRcIi4vYWRkb25zL2RyYWdBbmREcm9wL3Byb3BzL2RyYWdGcm9tT3V0c2lkZUl0ZW0uc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvZHJhZ0Zyb21PdXRzaWRlSXRlbS5zdG9yaWVzLmpzXCIsXG5cdFwiLi9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvZHJhZ2dhYmxlQWNjZXNzb3Iuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvZHJhZ2dhYmxlQWNjZXNzb3Iuc3Rvcmllcy5qc1wiLFxuXHRcIi4vYWRkb25zL2RyYWdBbmREcm9wL3Byb3BzL29uRHJhZ092ZXIuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvb25EcmFnT3Zlci5zdG9yaWVzLmpzXCIsXG5cdFwiLi9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvb25EcmFnU3RhcnQuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvb25EcmFnU3RhcnQuc3Rvcmllcy5qc1wiLFxuXHRcIi4vYWRkb25zL2RyYWdBbmREcm9wL3Byb3BzL29uRHJvcEZyb21PdXRzaWRlLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvYWRkb25zL2RyYWdBbmREcm9wL3Byb3BzL29uRHJvcEZyb21PdXRzaWRlLnN0b3JpZXMuanNcIixcblx0XCIuL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9vbkV2ZW50RHJvcC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9vbkV2ZW50RHJvcC5zdG9yaWVzLmpzXCIsXG5cdFwiLi9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvb25FdmVudFJlc2l6ZS5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9vbkV2ZW50UmVzaXplLnN0b3JpZXMuanNcIixcblx0XCIuL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9yZXNpemFibGUuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvcHJvcHMvcmVzaXphYmxlLnN0b3JpZXMuanNcIixcblx0XCIuL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9yZXNpemFibGVBY2Nlc3Nvci5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9yZXNpemFibGVBY2Nlc3Nvci5zdG9yaWVzLmpzXCIsXG5cdFwiLi9hZGRvbnMvZHJhZ0FuZERyb3AvcmVzb3VyY2Uuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9hZGRvbnMvZHJhZ0FuZERyb3AvcmVzb3VyY2Uuc3Rvcmllcy5qc1wiLFxuXHRcIi4vZGVtb3MvYmFja2dyb3VuZEV2ZW50cy5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL2RlbW9zL2JhY2tncm91bmRFdmVudHMuc3Rvcmllcy5qc1wiLFxuXHRcIi4vZGVtb3MvYmFzaWMuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9kZW1vcy9iYXNpYy5zdG9yaWVzLmpzXCIsXG5cdFwiLi9kZW1vcy9jdWx0dXJlcy5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL2RlbW9zL2N1bHR1cmVzLnN0b3JpZXMuanNcIixcblx0XCIuL2RlbW9zL2N1c3RvbVZpZXcuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9kZW1vcy9jdXN0b21WaWV3LnN0b3JpZXMuanNcIixcblx0XCIuL2RlbW9zL2RheWpzLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvZGVtb3MvZGF5anMuc3Rvcmllcy5qc1wiLFxuXHRcIi4vZGVtb3MvbHV4b24uc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9kZW1vcy9sdXhvbi5zdG9yaWVzLmpzXCIsXG5cdFwiLi9kZW1vcy9ub092ZXJsYXAuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9kZW1vcy9ub092ZXJsYXAuc3Rvcmllcy5qc1wiLFxuXHRcIi4vZGVtb3MvcG9wdXAuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9kZW1vcy9wb3B1cC5zdG9yaWVzLmpzXCIsXG5cdFwiLi9kZW1vcy9yZW5kZXJpbmcuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9kZW1vcy9yZW5kZXJpbmcuc3Rvcmllcy5qc1wiLFxuXHRcIi4vZGVtb3MvcmVzb3VyY2Uuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9kZW1vcy9yZXNvdXJjZS5zdG9yaWVzLmpzXCIsXG5cdFwiLi9kZW1vcy9zZWxlY3RhYmxlLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvZGVtb3Mvc2VsZWN0YWJsZS5zdG9yaWVzLmpzXCIsXG5cdFwiLi9kZW1vcy90aW1lc2xvdHMuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9kZW1vcy90aW1lc2xvdHMuc3Rvcmllcy5qc1wiLFxuXHRcIi4vZGVtb3MvdGltZXpvbmVzLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvZGVtb3MvdGltZXpvbmVzLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL2FsbERheUFjY2Vzc29yLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvYWxsRGF5QWNjZXNzb3Iuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvYWxsRGF5TWF4Um93cy5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2FsbERheU1heFJvd3Muc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvYmFja2dyb3VuZEV2ZW50cy5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2JhY2tncm91bmRFdmVudHMuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvY29tcG9uZW50cy5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2NvbXBvbmVudHMuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvY3VsdHVyZS5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2N1bHR1cmUuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvZGF0ZS5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2RhdGUuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvZGF5TGF5b3V0QWxnb3JpdGhtLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvZGF5TGF5b3V0QWxnb3JpdGhtLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL2RheVByb3BHZXR0ZXIuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9kYXlQcm9wR2V0dGVyLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL2RlZmF1bHREYXRlLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvZGVmYXVsdERhdGUuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvZGVmYXVsdFZpZXcuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9kZWZhdWx0Vmlldy5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9kcmlsbGRvd25WaWV3LnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvZHJpbGxkb3duVmlldy5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9lbGVtZW50UHJvcHMuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9lbGVtZW50UHJvcHMuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvZW5kQWNjZXNzb3Iuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9lbmRBY2Nlc3Nvci5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9ldmVudElkQWNjZXNzb3Iuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9ldmVudElkQWNjZXNzb3Iuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvZXZlbnRQcm9wR2V0dGVyLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvZXZlbnRQcm9wR2V0dGVyLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL2V2ZW50cy5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2V2ZW50cy5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9mb3JtYXRzLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvZm9ybWF0cy5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9mb3JtYXRzQWdlbmRhRGF0ZUZvcm1hdC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNBZ2VuZGFEYXRlRm9ybWF0LnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL2Zvcm1hdHNBZ2VuZGFIZWFkZXJGb3JtYXQuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzQWdlbmRhSGVhZGVyRm9ybWF0LnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL2Zvcm1hdHNBZ2VuZGFUaW1lRm9ybWF0LnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvZm9ybWF0c0FnZW5kYVRpbWVGb3JtYXQuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvZm9ybWF0c0FnZW5kYVRpbWVSYW5nZUZvcm1hdC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNBZ2VuZGFUaW1lUmFuZ2VGb3JtYXQuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvZm9ybWF0c0RhdGVGb3JtYXQuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzRGF0ZUZvcm1hdC5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9mb3JtYXRzRGF5Rm9ybWF0LnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvZm9ybWF0c0RheUZvcm1hdC5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9mb3JtYXRzRGF5SGVhZGVyRm9ybWF0LnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvZm9ybWF0c0RheUhlYWRlckZvcm1hdC5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9mb3JtYXRzRGF5UmFuZ2VIZWFkZXJGb3JtYXQuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzRGF5UmFuZ2VIZWFkZXJGb3JtYXQuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvZm9ybWF0c0V2ZW50VGltZVJhbmdlRW5kRm9ybWF0LnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvZm9ybWF0c0V2ZW50VGltZVJhbmdlRW5kRm9ybWF0LnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL2Zvcm1hdHNFdmVudFRpbWVSYW5nZUZvcm1hdC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNFdmVudFRpbWVSYW5nZUZvcm1hdC5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9mb3JtYXRzRXZlbnRUaW1lUmFuZ2VTdGFydEZvcm1hdC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNFdmVudFRpbWVSYW5nZVN0YXJ0Rm9ybWF0LnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL2Zvcm1hdHNNb250aEhlYWRlckZvcm1hdC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNNb250aEhlYWRlckZvcm1hdC5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9mb3JtYXRzU2VsZWN0UmFuZ2VGb3JtYXQuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzU2VsZWN0UmFuZ2VGb3JtYXQuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvZm9ybWF0c1RpbWVHdXR0ZXJGb3JtYXQuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9mb3JtYXRzVGltZUd1dHRlckZvcm1hdC5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9mb3JtYXRzV2Vla2RheUZvcm1hdC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2Zvcm1hdHNXZWVrZGF5Rm9ybWF0LnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL2dldERyaWxsZG93blZpZXcuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9nZXREcmlsbGRvd25WaWV3LnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL2dldE5vdy5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2dldE5vdy5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9sZW5ndGguc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9sZW5ndGguc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvbG9jYWxpemVyLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvbG9jYWxpemVyLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL2xvbmdQcmVzc1RocmVzaG9sZC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL2xvbmdQcmVzc1RocmVzaG9sZC5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9tYXguc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9tYXguc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvbWVzc2FnZXMuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9tZXNzYWdlcy5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9taW4uc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9taW4uc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvb25Eb3VibGVDbGlja0V2ZW50LnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvb25Eb3VibGVDbGlja0V2ZW50LnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL29uRHJpbGxEb3duLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvb25EcmlsbERvd24uc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvb25LZXlQcmVzc0V2ZW50LnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvb25LZXlQcmVzc0V2ZW50LnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL29uTmF2aWdhdGUuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9vbk5hdmlnYXRlLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL29uUmFuZ2VDaGFuZ2Uuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9vblJhbmdlQ2hhbmdlLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL29uU2VsZWN0RXZlbnQuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9vblNlbGVjdEV2ZW50LnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL29uU2VsZWN0U2xvdC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL29uU2VsZWN0U2xvdC5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9vblNlbGVjdGluZy5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL29uU2VsZWN0aW5nLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL29uU2hvd01vcmUuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9vblNob3dNb3JlLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL29uVmlldy5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL29uVmlldy5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9wb3B1cC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL3BvcHVwLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL3BvcHVwT2Zmc2V0LnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvcG9wdXBPZmZzZXQuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvcmVzb3VyY2VHcm91cGluZ0xheW91dC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL3Jlc291cmNlR3JvdXBpbmdMYXlvdXQuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvcmVzb3VyY2VJZEFjY2Vzc29yLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvcmVzb3VyY2VJZEFjY2Vzc29yLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL3Jlc291cmNlVGl0bGVBY2Nlc3Nvci5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL3Jlc291cmNlVGl0bGVBY2Nlc3Nvci5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9yZXNvdXJjZXMuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9yZXNvdXJjZXMuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvcnRsLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvcnRsLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL3Njcm9sbFRvVGltZS5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL3Njcm9sbFRvVGltZS5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9zZWxlY3RhYmxlLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvc2VsZWN0YWJsZS5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9zZWxlY3RlZC5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL3NlbGVjdGVkLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL3Nob3dBbGxFdmVudHMuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9zaG93QWxsRXZlbnRzLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL3Nob3dNdWx0aURheVRpbWVzLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvc2hvd011bHRpRGF5VGltZXMuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvc2xvdEdyb3VwUHJvcEdldHRlci5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL3Nsb3RHcm91cFByb3BHZXR0ZXIuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvc2xvdFByb3BHZXR0ZXIuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy9zbG90UHJvcEdldHRlci5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9zdGFydEFjY2Vzc29yLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvc3RhcnRBY2Nlc3Nvci5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy9zdGVwLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvc3RlcC5zdG9yaWVzLmpzXCIsXG5cdFwiLi9wcm9wcy90aW1lc2xvdHMuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy90aW1lc2xvdHMuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvdGl0bGVBY2Nlc3Nvci5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL3RpdGxlQWNjZXNzb3Iuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvdG9vbGJhci5zdG9yaWVzLmpzXCI6IFwiLi9zdG9yaWVzL3Byb3BzL3Rvb2xiYXIuc3Rvcmllcy5qc1wiLFxuXHRcIi4vcHJvcHMvdG9vbHRpcEFjY2Vzc29yLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvdG9vbHRpcEFjY2Vzc29yLnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL3ZpZXcuc3Rvcmllcy5qc1wiOiBcIi4vc3Rvcmllcy9wcm9wcy92aWV3LnN0b3JpZXMuanNcIixcblx0XCIuL3Byb3BzL3ZpZXdzLnN0b3JpZXMuanNcIjogXCIuL3N0b3JpZXMvcHJvcHMvdmlld3Muc3Rvcmllcy5qc1wiXG59O1xuXG5cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0KHJlcSkge1xuXHR2YXIgaWQgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKTtcblx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oaWQpO1xufVxuZnVuY3Rpb24gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSkge1xuXHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1hcCwgcmVxKSkge1xuXHRcdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0XHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdFx0dGhyb3cgZTtcblx0fVxuXHRyZXR1cm4gbWFwW3JlcV07XG59XG53ZWJwYWNrQ29udGV4dC5rZXlzID0gZnVuY3Rpb24gd2VicGFja0NvbnRleHRLZXlzKCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXMobWFwKTtcbn07XG53ZWJwYWNrQ29udGV4dC5yZXNvbHZlID0gd2VicGFja0NvbnRleHRSZXNvbHZlO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQ29udGV4dDtcbndlYnBhY2tDb250ZXh0LmlkID0gXCIuL3N0b3JpZXMgc3luYyByZWN1cnNpdmUgXlxcXFwuKD86KD86XiU3Q1xcXFwvJTdDKD86KD86KD8lMjEoPzpeJTdDXFxcXC8pXFxcXC4pLikqPylcXFxcLykoPyUyMVxcXFwuKSg/PS4pW14vXSo/XFxcXC5zdG9yaWVzXFxcXC4oanMlN0Nqc3glN0N0cyU3Q3RzeCkpJFwiOyIsInZhciBtYXAgPSB7XG5cdFwiLi9BYm91dEJpZ0NhbGVuZGFyLnN0b3JpZXMubWR4XCI6IFwiLi9zdG9yaWVzL0Fib3V0QmlnQ2FsZW5kYXIuc3Rvcmllcy5tZHhcIixcblx0XCIuL0Fib3V0RXhhbXBsZXMuc3Rvcmllcy5tZHhcIjogXCIuL3N0b3JpZXMvQWJvdXRFeGFtcGxlcy5zdG9yaWVzLm1keFwiLFxuXHRcIi4vYWRkb25zL2FkZE9ucy5zdG9yaWVzLm1keFwiOiBcIi4vc3Rvcmllcy9hZGRvbnMvYWRkT25zLnN0b3JpZXMubWR4XCIsXG5cdFwiLi9hZGRvbnMvZHJhZ0FuZERyb3AvSW50cm9kdWN0aW9uLnN0b3JpZXMubWR4XCI6IFwiLi9zdG9yaWVzL2FkZG9ucy9kcmFnQW5kRHJvcC9JbnRyb2R1Y3Rpb24uc3Rvcmllcy5tZHhcIixcblx0XCIuL2FkZG9ucy9kcmFnQW5kRHJvcC9wcm9wcy9BUEkuc3Rvcmllcy5tZHhcIjogXCIuL3N0b3JpZXMvYWRkb25zL2RyYWdBbmREcm9wL3Byb3BzL0FQSS5zdG9yaWVzLm1keFwiLFxuXHRcIi4vZGVtb3MvZHJhZ0FuZERyb3Auc3Rvcmllcy5tZHhcIjogXCIuL3N0b3JpZXMvZGVtb3MvZHJhZ0FuZERyb3Auc3Rvcmllcy5tZHhcIixcblx0XCIuL2d1aWRlcy9DdXN0b21TdHlsaW5nLnN0b3JpZXMubWR4XCI6IFwiLi9zdG9yaWVzL2d1aWRlcy9DdXN0b21TdHlsaW5nLnN0b3JpZXMubWR4XCIsXG5cdFwiLi9ndWlkZXMvQ3VzdG9tVmlldy5zdG9yaWVzLm1keFwiOiBcIi4vc3Rvcmllcy9ndWlkZXMvQ3VzdG9tVmlldy5zdG9yaWVzLm1keFwiLFxuXHRcIi4vZ3VpZGVzL0RhdGVzLnN0b3JpZXMubWR4XCI6IFwiLi9zdG9yaWVzL2d1aWRlcy9EYXRlcy5zdG9yaWVzLm1keFwiLFxuXHRcIi4vZ3VpZGVzL1RpbWV6b25lcy5zdG9yaWVzLm1keFwiOiBcIi4vc3Rvcmllcy9ndWlkZXMvVGltZXpvbmVzLnN0b3JpZXMubWR4XCIsXG5cdFwiLi9ndWlkZXMvbG9jYWxpemVyLnN0b3JpZXMubWR4XCI6IFwiLi9zdG9yaWVzL2d1aWRlcy9sb2NhbGl6ZXIuc3Rvcmllcy5tZHhcIixcblx0XCIuL3Byb3BzL0FQSS5zdG9yaWVzLm1keFwiOiBcIi4vc3Rvcmllcy9wcm9wcy9BUEkuc3Rvcmllcy5tZHhcIlxufTtcblxuXG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0dmFyIGlkID0gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSk7XG5cdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcbn1cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhtYXAsIHJlcSkpIHtcblx0XHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdFx0ZS5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuXHRcdHRocm93IGU7XG5cdH1cblx0cmV0dXJuIG1hcFtyZXFdO1xufVxud2VicGFja0NvbnRleHQua2V5cyA9IGZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0S2V5cygpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKG1hcCk7XG59O1xud2VicGFja0NvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZTtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0NvbnRleHQ7XG53ZWJwYWNrQ29udGV4dC5pZCA9IFwiLi9zdG9yaWVzIHN5bmMgcmVjdXJzaXZlIF5cXFxcLig/Oig/Ol4lN0NcXFxcLyU3Qyg/Oig/Oig/JTIxKD86XiU3Q1xcXFwvKVxcXFwuKS4pKj8pXFxcXC8pKD8lMjFcXFxcLikoPz0uKVteL10qP1xcXFwuc3Rvcmllc1xcXFwubWR4KSRcIjsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9mcmFtZXdvcmtJbXBvcnRQYXRoID0gcmVxdWlyZShcIkBzdG9yeWJvb2svcmVhY3RcIik7XG5cbi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9uby11bnJlc29sdmVkICovXG4oMCwgX2ZyYW1ld29ya0ltcG9ydFBhdGguY29uZmlndXJlKShbcmVxdWlyZS5jb250ZXh0KCcuL3N0b3JpZXMnLCB0cnVlLCAvXlxcLig/Oig/Ol58XFwvfCg/Oig/Oig/ISg/Ol58XFwvKVxcLikuKSo/KVxcLykoPyFcXC4pKD89LilbXi9dKj9cXC5zdG9yaWVzXFwubWR4KSQvKSxyZXF1aXJlLmNvbnRleHQoJy4vc3RvcmllcycsIHRydWUsIC9eXFwuKD86KD86XnxcXC98KD86KD86KD8hKD86XnxcXC8pXFwuKS4pKj8pXFwvKSg/IVxcLikoPz0uKVteL10qP1xcLnN0b3JpZXNcXC4oanN8anN4fHRzfHRzeCkpJC8pXSwgbW9kdWxlLCBmYWxzZSk7Il0sIm5hbWVzIjpbInBhcmFtZXRlcnMiLCJhY3Rpb25zIiwiYXJnVHlwZXNSZWdleCIsImNvbnRyb2xzIiwibWF0Y2hlcnMiLCJjb2xvciIsImRhdGUiLCJzdG9yeVNvcnQiLCJvcmRlciIsInZpZXdNb2RlIiwiX19uYW1lZEV4cG9ydHNPcmRlciIsIm93bktleXMiLCJvYmplY3QiLCJlbnVtZXJhYmxlT25seSIsImtleXMiLCJPYmplY3QiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJzeW1ib2xzIiwiZmlsdGVyIiwic3ltIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9kZWZpbmVQcm9wZXJ0eSIsIm9iaiIsImtleSIsInZhbHVlIiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImNvbmZpZyIsImZvckVhY2giLCJhZGRBcmdzIiwiYWRkQXJnVHlwZXMiLCJkZWNvcmF0b3IiLCJhZGREZWNvcmF0b3IiLCJsb2FkZXIiLCJhZGRMb2FkZXIiLCJhZGRQYXJhbWV0ZXJzIiwiX29iamVjdFNwcmVhZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImVuaGFuY2VyIiwiYWRkQXJnVHlwZXNFbmhhbmNlciIsImFkZEFyZ3NFbmhhbmNlciIsInNldEdsb2JhbFJlbmRlciIsInYiLCJjb25zb2xlIiwibG9nIiwidGl0bGUiLCJjb21wb25lbnQiLCJDYWxlbmRhciIsImRlY29yYXRvcnMiLCJTdG9yeSIsIl9qc3giLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsIlRlbXBsYXRlIiwiYXJncyIsIkJhc2VDYWxlbmRhciIsImFzc2lnbiIsImRpc3BsYXlOYW1lIiwiQ29tcGxleERheVZpZXdMYXlvdXQiLCJiaW5kIiwic3RvcnlOYW1lIiwiZGVmYXVsdFZpZXciLCJWaWV3cyIsIkRBWSIsImRlZmF1bHREYXRlIiwiRGF0ZSIsImV2ZW50cyIsImNyZWF0ZUV2ZW50cyIsInN0ZXAiLCJUaW1lR3V0dGVyIiwiQ3VzdG9tVGltZUd1dHRlckhlYWRlciIsInBvcHVwIiwiZGVtb0V2ZW50cyIsIm9uU2VsZWN0RXZlbnQiLCJhY3Rpb24iLCJXRUVLIiwidmlld3MiLCJjb21wb25lbnRzIiwidGltZUd1dHRlckhlYWRlciIsIkN1c3RvbVRpbWVHdXR0ZXJXcmFwcGVyIiwidGltZUd1dHRlcldyYXBwZXIiLCJjdXN0b21Db21wb25lbnRzIiwiQ3VzdG9tRGF0ZUNlbGxXcmFwcGVyIiwiTU9OVEgiLCJkYXRlQ2VsbFdyYXBwZXIiLCJDdXN0b21UaW1lU2xvdFdyYXBwZXIiLCJ0aW1lU2xvdFdyYXBwZXIiLCJDdXN0b21FdmVudFdyYXBwZXIiLCJldmVudFdyYXBwZXIiLCJDdXN0b21Ob0FnZW5kYUV2ZW50c0xhYmVsIiwiQUdFTkRBIiwibWVzc2FnZXMiLCJub0V2ZW50c0luUmFuZ2UiLCJDdXN0b21EYXlDb2x1bW5XcmFwcGVyIiwicmVzb3VyY2VFdmVudHMiLCJyZXNvdXJjZXMiLCJyZXNvdXJjZUFjY2Vzc29yIiwicmVzb3VyY2VJZEFjY2Vzc29yIiwicmVzb3VyY2VUaXRsZUFjY2Vzc29yIiwiZGF5Q29sdW1uV3JhcHBlciIsImRvY3MiLCJkZXNjcmlwdGlvbiIsInN0b3J5IiwiQ3VzdG9tU2hvd01vcmUiLCJzaG93TW9yZSIsInN0b3J5U291cmNlIiwiRHJhZ0FuZERyb3BDYWxlbmRhciIsIkRyYWdnYWJsZUFuZFJlc2l6YWJsZSIsInJlc2l6YWJsZSIsIm9uRXZlbnREcm9wIiwib25FdmVudFJlc2l6ZSIsIkN1c3RvbVN0ZXBzQW5kVGltZXNsb3RzIiwic3RlcHMiLCJ0aW1lc2xvdHMiLCJXaXRoTXVsdGlEYXlUaW1lcyIsInNob3dNdWx0aURheVRpbWVzIiwiV2l0aEN1c3RvbURhdGVDZWxsV3JhcHBlciIsIldpdGhDdXN0b21UaW1lc2xvdFdyYXBwZXIiLCJXaXRoQ3VzdG9tRXZlbnRXcmFwcGVyIiwiRHJhZ2dhYmxlTXVsdGlwbGVSZXNvdXJjZXMiLCJsb2NhbGl6ZXJzIiwiZ2xvYmFsaXplIiwiZ2xvYmFsaXplTG9jYWxpemVyIiwibW9tZW50IiwibW9tZW50TG9jYWxpemVyIiwibHV4b24iLCJsdXhvbkxvY2FsaXplciIsIkRhdGVUaW1lIiwiZmlyc3REYXlPZldlZWsiLCJEcmFnZ2FibGVDYWxlbmRhciIsIndpdGhEcmFnQW5kRHJvcCIsIl9yZWYiLCJfcmVmJGxvY2FsaXplciIsImxvY2FsaXplciIsImxvYyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsIl9leGNsdWRlZCIsIkRheWxpZ2h0U2F2aW5nc1N0YXJ0cyIsImFyZ1R5cGVzIiwib3B0aW9ucyIsImNvbnRyb2wiLCJ0eXBlIiwibWluIiwidG9EYXRlIiwibWF4Iiwic3RhcnQiLCJlbmQiLCJhbGxEYXkiLCJEYXlsaWdodFNhdmluZ3NTdGFydHNBZnRlcjJBbSIsIkRheWxpZ2h0U2F2aW5nc0VuZHMiLCJEYXlsaWdodFNhdmluZ3NFbmRzQWZ0ZXIyQW0iLCJFdmVudExheW91dCIsIkZpcnN0T2ZXZWVrQWxsRGF5IiwiRW5kT2ZXZWVrQWxsRGF5IiwiRXZlbnRBdFN0YXJ0T2ZXZWVrIiwiYWRkIiwic3VidHJhY3QiLCJFdmVudEF0RW5kT2ZXZWVrIiwiRXZlbnRzT25BQ29uc3RyYWluZWREYXlDb2x1bW4iLCJOb0R1cmF0aW9uIiwiRGF5U3BhbiIsIlplcm9EdXJhdGlvbk9kZGl0aWVzIiwiaWQiLCJaZXJvRHVyYXRpb25PdmVybGFwIiwiZGF5TGF5b3V0QWxnb3JpdGhtIiwic2Nyb2xsVG9UaW1lIiwiT3ZlcmxhcHBpbmdCYWNrZ3JvdW5kRXZlbnRzT3ZlcmxhcCIsImJhY2tncm91bmRFdmVudHMiLCJPdmVybGFwcGluZ0JhY2tncm91bmRFdmVudHNOb092ZXJsYXAiLCJfX2RvY2dlbkluZm8iLCJTVE9SWUJPT0tfUkVBQ1RfQ0xBU1NFUyIsIm5hbWUiLCJkb2NnZW5JbmZvIiwicGF0aCIsIlNlbGVjdGFibGVTdGVwMTV4NFNsb3QiLCJzZWxlY3RhYmxlIiwib25TZWxlY3RTbG90IiwiU2VsZWN0YWJsZVN0ZXAxMHg2U2xvdCIsIlNlbGVjdGFibGVTdGVwNXg2U2xvdCIsIlNlbGVjdGFibGUzU2xvdCIsIkRyYWdBbmREcm9wIiwiX3VzZVN0YXRlIiwidXNlU3RhdGUiLCJfdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkiLCJteUV2ZW50cyIsInNldE15RXZlbnRzIiwibW92ZUV2ZW50IiwidXNlQ2FsbGJhY2siLCJfcmVmMiIsImV2ZW50IiwiX3JlZjIkaXNBbGxEYXkiLCJpc0FsbERheSIsImRyb3BwZWRPbkFsbERheVNsb3QiLCJwcmV2IiwiX3ByZXYkZmluZCIsImV4aXN0aW5nIiwiZmluZCIsImV2IiwiZmlsdGVyZWQiLCJjb25jYXQiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJyZXNpemVFdmVudCIsIl9yZWYzIiwiX3ByZXYkZmluZDIiLCJ1c2VNZW1vIiwiX2pzeHMiLCJGcmFnbWVudCIsIkRlbW9MaW5rIiwiZmlsZU5hbWUiLCJwYWdlIiwiRXhhbXBsZTEiLCJCYXNpYyIsIkV4YW1wbGUzIiwibGF5b3V0UHJvcHMiLCJNRFhDb250ZW50IiwicHJvcHMiLCJtZHgiLCJfZXh0ZW5kcyIsIm1keFR5cGUiLCJwYXJlbnROYW1lIiwiaXNNRFhDb21wb25lbnQiLCJEcmFnRnJvbU91dHNpZGVJdGVtIiwiRHJhZ2dhYmxlQWNjZXNzb3IiLCJPbkRyYWdPdmVyIiwiT25EcmFnU3RhcnQiLCJMaW5rVG8iLCJraW5kIiwiT25Ecm9wRnJvbU91dHNpZGUiLCJPbkV2ZW50RHJvcCIsIk9uRXZlbnRSZXNpemUiLCJSZXNpemFibGUiLCJSZXNpemFibGVBY2Nlc3NvciIsInJlc291cmNlSWQiLCJyZXNvdXJjZU1hcCIsInJlc291cmNlVGl0bGUiLCJEbkRSZXNvdXJjZSIsIl91c2VTdGF0ZTMiLCJfdXNlU3RhdGU0IiwiY29weUV2ZW50Iiwic2V0Q29weUV2ZW50IiwidG9nZ2xlQ29weUV2ZW50IiwidmFsIiwiQXJyYXkiLCJpc0FycmF5IiwiU2V0Iiwic291cmNlUmVzb3VyY2UiLCJfdXNlTWVtbyIsInN0eWxlIiwibWFyZ2luIiwiY2hlY2tlZCIsIm9uQ2hhbmdlIiwiRXhhbXBsZTIiLCJhbGxWaWV3cyIsIm1hcCIsImsiLCJCYWNrZ3JvdW5kRXZlbnRzQ2FsZW5kYXIiLCJkYXRlcyIsIkV4YW1wbGUxMCIsIkJhY2tncm91bmRDYWxlbmRhciIsInJlcXVpcmUiLCJjdWx0dXJlcyIsImxhbmciLCJlbiIsImVzIiwid2VlayIsIndvcmtfd2VlayIsImRheSIsIm1vbnRoIiwicHJldmlvdXMiLCJuZXh0IiwidG9kYXkiLCJhZ2VuZGEiLCJ0b3RhbCIsImZyIiwiQ3VsdHVyZXNEZW1vIiwiY3VsdHVyZSIsInNldEN1bHR1cmUiLCJyaWdodFRvTGVmdCIsInNldFJpZ2h0VG9MZWZ0IiwiY3VsdHVyZU9uQ2xpY2siLCJMYXlvdXQiLCJkaXJlY3Rpb24iLCJhbGlnbiIsIndpZHRoIiwiZGlzcGxheSIsImRlZmF1bHRWYWx1ZSIsImMiLCJpZHgiLCJydGwiLCJFeGFtcGxlNSIsIkN1bHR1cmVEZW1vIiwiTXlXZWVrIiwiX3JlZiRtYXgiLCJlbmRPZiIsIl9yZWYkbWluIiwic3RhcnRPZiIsIl9yZWYkc2Nyb2xsVG9UaW1lIiwiY3VyclJhbmdlIiwicmFuZ2UiLCJUaW1lR3JpZCIsImV2ZW50T2Zmc2V0IiwiQ3VzdG9tVmlldyIsIl9yZWY0IiwiY3VycmVudCIsImx0ZSIsIm5hdmlnYXRlIiwiTmF2aWdhdGUiLCJQUkVWSU9VUyIsIk5FWFQiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJFeGFtcGxlOSIsImRheWpzIiwidGltZXpvbmUiLCJkakxvY2FsaXplciIsImRheWpzTG9jYWxpemVyIiwiQ29sb3JlZERhdGVDZWxsV3JhcHBlciIsIlJlYWN0Iiwib25seSIsImJhY2tncm91bmRDb2xvciIsIkRheWpzIiwiX29iamVjdERlc3RydWN0dXJpbmdFbXB0eSIsIkRheWpzTG9jYWxpemVyIiwiZGVmYXVsdFRaIiwibG9jYWwiLCJ6b25lTmFtZSIsIkx1eG9uIiwic2V0VGltZXpvbmUiLCJTZXR0aW5ncyIsImRlZmF1bHRab25lIiwic3RyIiwiRGF0ZVRpbWVPYmoiLCJmcm9tSVNPIiwidG9KU0RhdGUiLCJnZXROb3ciLCJ1c2VFZmZlY3QiLCJUaW1lem9uZVNlbGVjdCIsIkx1eG9uTG9jYWxpemVyIiwiQ3JlYXRlRXZlbnRXaXRoTm9PdmVybGFwIiwiX3JlZiRkYXlMYXlvdXRBbGdvcml0Iiwic2V0RXZlbnRzIiwiaGFuZGxlU2VsZWN0U2xvdCIsIndpbmRvdyIsInByb21wdCIsImhhbmRsZVNlbGVjdEV2ZW50IiwiYWxlcnQiLCJQb3B1cCIsIkV4YW1wbGU2IiwiUG9wdXBEZW1vIiwiRXZlbnQiLCJkZXNjIiwiRXZlbnRBZ2VuZGEiLCJjdXN0b21EYXlQcm9wR2V0dGVyIiwiZ2V0RGF0ZSIsInN0eWxlcyIsImJvcmRlciIsImN1c3RvbVNsb3RQcm9wR2V0dGVyIiwiUmVuZGVyaW5nIiwiZGF5UHJvcEdldHRlciIsInNsb3RQcm9wR2V0dGVyIiwiRXhhbXBsZTgiLCJldmVudElkIiwiZnJvbSIsIl8iLCJmbGF0TWFwIiwiY3VycmVudFJlc291cmNlIiwiZGF5RGlmZiIsImoiLCJSZXNvdXJjZSIsImdyb3VwUmVzb3VyY2VzT25XZWVrIiwic2V0R3JvdXBSZXNvdXJjZXNPbldlZWsiLCJfcmVmMyRpc0FsbERheSIsInJlc291cmNlR3JvdXBpbmdMYXlvdXQiLCJFeGFtcGxlMTEiLCJTZWxlY3RhYmxlIiwiVGltZXNsb3RzIiwiRXhhbXBsZTciLCJndWVzcyIsIlRpbWV6b25lcyIsInNldERlZmF1bHQiLCJtb21lbnRPYmoiLCJFeGFtcGxlNCIsIlRpbWV6b25lQ2FsZW5kYXIiLCJBbGxEYXlBY2Nlc3NvciIsImFjY2Vzc29yU3RvcnlBcmdzIiwibUxvY2FsaXplciIsIkFsbERheU1heFJvd3MiLCJhbGxEYXlFdmVudHMiLCJhbGxEYXlNYXhSb3dzIiwiQmFja0dyb3VuZEV2ZW50cyIsIkNhbnZhcyIsIlZpZXdOYW1lc0dyb3VwIiwidmlld05hbWVzIiwidmlldyIsIm9uVmlldyIsImNsc3giLCJvbkNsaWNrIiwiQ3VzdG9tVG9vbGJhciIsImxhYmVsIiwib25OYXZpZ2F0ZSIsIlRPREFZIiwiQ29tcG9uZW50cyIsInRvb2xiYXIiLCJDdWx0dXJlIiwiQ2FsRGF0ZSIsInNldERhdGUiLCJuZXdEYXRlIiwiRGF5TGF5b3V0QWxnb3JpdGhtIiwiRGF5UHJvcEdldHRlciIsIkRlZmF1bHREYXRlIiwiRGVmYXVsdFZpZXciLCJkcmlsbGRvd25WaWV3IiwiRHJpbGxkb3duVmlldyIsIkVsZW1lbnRQcm9wcyIsImVsZW1lbnRQcm9wcyIsIkVuZEFjY2Vzc29yIiwiRXZlbnRJZEFjY2Vzc29yIiwiRXZlbnRQcm9wR2V0dGVyIiwiZXZlbnRQcm9wR2V0dGVyIiwiaXNTZWxlY3RlZCIsImhvdXIiLCJpbmNsdWRlcyIsIkV2ZW50cyIsIkZvcm1hdHMiLCJmb3JtYXRzIiwiZGF0ZUZvcm1hdCIsIndlZWtkYXlGb3JtYXQiLCJmb3JtYXQiLCJkYXlGb3JtYXQiLCJ0aW1lR3V0dGVyRm9ybWF0IiwiRm9ybWF0c0FnZW5kRGF0ZUZvcm1hdCIsImFnZW5kYURhdGVGb3JtYXQiLCJGb3JtYXRzQWdlbmRIZWFkZXJGb3JtYXQiLCJhZ2VuZGFIZWFkZXJGb3JtYXQiLCJGb3JtYXRzQWdlbmRUaW1lRm9ybWF0IiwiYWdlbmRhVGltZUZvcm1hdCIsIkZvcm1hdHNBZ2VuZGFUaW1lUmFuZ2VGb3JtYXQiLCJhZ2VuZGFUaW1lUmFuZ2VGb3JtYXQiLCJGb3JtYXRzRGF0ZUZvcm1hdCIsIkZvcm1hdHNEYXlGb3JtYXQiLCJGb3JtYXRzRGF5SGVhZGVyRm9ybWF0IiwiZGF5SGVhZGVyRm9ybWF0IiwiRm9ybWF0c0RheVJhbmdlSGVhZGVyRm9ybWF0IiwiZGF5UmFuZ2VIZWFkZXJGb3JtYXQiLCJGb3JtYXRzRXZlbnRUaW1lUmFuZ2VFbmRGb3JtYXQiLCJldmVudFRpbWVSYW5nZUVuZEZvcm1hdCIsIkZvcm1hdHNFdmVudFRpbWVSYW5nZUZvcm1hdCIsImV2ZW50VGltZVJhbmdlRm9ybWF0IiwiRm9ybWF0c0V2ZW50VGltZVJhbmdlU3RhcnRGb3JtYXQiLCJldmVudFRpbWVSYW5nZVN0YXJ0Rm9ybWF0IiwiRm9ybWF0c01vbnRoSGVhZGVyRm9ybWF0IiwibW9udGhIZWFkZXJGb3JtYXQiLCJGb3JtYXRzU2VsZWN0UmFuZ2VGb3JtYXQiLCJzZWxlY3RSYW5nZUZvcm1hdCIsIkZvcm1hdHNUaW1lR3V0dGVyRm9ybWF0IiwiRm9ybWF0c1dlZWtkYXlGb3JtYXQiLCJHZXREcmlsbGRvd25WaWV3IiwiZ2V0RHJpbGxkb3duVmlldyIsInRhcmdldERhdGUiLCJjdXJyZW50Vmlld05hbWUiLCJjb25maWd1cmVkVmlld05hbWVzIiwiR2V0Tm93IiwiTGVuZ3RoIiwiaGVpZ2h0IiwiTG9jYWxpemVyIiwibG9uZ1ByZXNzVGhyZXNob2xkIiwiTG9uZ1ByZXNzVGhyZXNob2xkIiwiTWF4IiwiTWVzc2FnZXMiLCJNaW4iLCJidWlsZE1lc3NhZ2UiLCJjYWxFdmVudCIsImV2ZW50TmFtZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJPbkRvdWJsZUNsaWNrRXZlbnQiLCJjbGlja1JlZiIsInVzZVJlZiIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJvbkRvdWJsZUNsaWNrRXZlbnQiLCJPbkRyaWxsRG93biIsInNldFZpZXciLCJuZXdWaWV3Iiwib25EcmlsbERvd24iLCJPbktleVByZXNzRXZlbnQiLCJwcmVzc1JlZiIsIm9uS2V5UHJlc3NFdmVudCIsImtleXByZXNzRXZlbnQiLCJhbHRLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJtZXRhS2V5IiwicHJlZml4IiwiT25OYXZpZ2F0ZSIsIk9uUmFuZ2VDaGFuZ2UiLCJvblJhbmdlQ2hhbmdlIiwidG9Mb2NhbGVTdHJpbmciLCJPblNlbGVjdEV2ZW50IiwiT25TZWxlY3RTbG90Iiwic2xvdEluZm8iLCJPblNlbGVjdGluZyIsIm9uU2VsZWN0aW5nIiwiT25TaG93TW9yZSIsIm9uU2hvd01vcmUiLCJjYWxFdmVudHMiLCJPblZpZXciLCJQb3B1cE9mZnNldCIsInBvcHVwT2Zmc2V0IiwieCIsInkiLCJSZXNvdXJjZUdyb3VwaW5nTGF5b3V0IiwicmVzb3VyY2VBY2Nlc3NvclN0b3J5QXJncyIsIlJlc291cmNlSWRBY2Nlc3NvciIsIlJlc291cmNlVGl0bGVBY2Nlc3NvciIsInJlc291cmNlRGF0YSIsImxpc3QiLCJSZXNvdXJjZXMiLCJSaWdodFRvTGVmdCIsIlNjcm9sbFRvVGltZSIsIlNlbGVjdGVkIiwic2VsZWN0ZWQiLCJzZXRTZWxlY3RlZCIsInNob3dBbGxFdmVudHMiLCJTaG93QWxsRXZlbnRzIiwiU2hvd011bHRpRGF5VGltZXMiLCJTbG90R3JvdXBQcm9wR2V0dGVyIiwic2xvdEdyb3VwUHJvcEdldHRlciIsIm1pbkhlaWdodCIsIlNsb3RQcm9wR2V0dGVyIiwiU3RhcnRBY2Nlc3NvciIsIlN0ZXAiLCJUaXRsZUFjY2Vzc29yIiwiVG9vbGJhciIsIlRvb2x0aXBBY2Nlc3NvciIsIlZpZXciLCJDYWxWaWV3cyIsIk5vb3BXcmFwcGVyIiwiQmFja2dyb3VuZENlbGxzIiwiX1JlYWN0JENvbXBvbmVudCIsImNvbnRleHQiLCJfdGhpcyIsIl9jbGFzc0NhbGxDaGVjayIsIl9jYWxsU3VwZXIiLCJzdGF0ZSIsInNlbGVjdGluZyIsImNvbnRhaW5lclJlZiIsImNyZWF0ZVJlZiIsIl9pbmhlcml0cyIsIl9jcmVhdGVDbGFzcyIsImNvbXBvbmVudERpZE1vdW50IiwidGhpcyIsIl9zZWxlY3RhYmxlIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJfdGVhcmRvd25TZWxlY3RhYmxlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwicHJldlByb3BzIiwicmVuZGVyIiwiX3RoaXMkcHJvcHMiLCJnZXR0ZXJzIiwiY3VycmVudERhdGUiLCJXcmFwcGVyIiwiX3RoaXMkc3RhdGUiLCJzdGFydElkeCIsImVuZElkeCIsInJlZiIsImluZGV4IiwiX2dldHRlcnMkZGF5UHJvcCIsImRheVByb3AiLCJpc1NhbWVEYXRlIiwibmVxIiwiX3RoaXMyIiwibm9kZSIsInNlbGVjdG9yIiwiX3NlbGVjdG9yIiwiU2VsZWN0aW9uIiwiY29udGFpbmVyIiwic2VsZWN0b3JDbGlja3NIYW5kbGVyIiwicG9pbnQiLCJhY3Rpb25UeXBlIiwiaXNFdmVudCIsImlzU2hvd01vcmUiLCJyb3dCb3giLCJnZXRCb3VuZHNGb3JOb2RlIiwiX3RoaXMyJHByb3BzIiwicG9pbnRJbkJveCIsImN1cnJlbnRDZWxsIiwiZ2V0U2xvdEF0WCIsIl9zZWxlY3RTbG90IiwiYm94IiwiX2luaXRpYWwiLCJzZXRTdGF0ZSIsIm9uIiwiX3RoaXMyJHByb3BzMiIsIm5vdGlmeSIsIm9uU2VsZWN0U3RhcnQiLCJub2RlQm94IiwiX2RhdGVDZWxsU2VsZWN0aW9uIiwiZGF0ZUNlbGxTZWxlY3Rpb24iLCJib3VuZHMiLCJvblNlbGVjdEVuZCIsInRlYXJkb3duIiwiaXNTZWdtZW50SW5TbG90Iiwic2VnIiwic2xvdCIsImxlZnQiLCJyaWdodCIsImV2ZW50c0luU2xvdCIsInNlZ21lbnRzIiwiRXZlbnRFbmRpbmdSb3ciLCJzbG90cyIsInNsb3RNZXRyaWNzIiwicm93U2VnbWVudHMiLCJldmVudExldmVscyIsImxldmVscyIsImxhc3RFbmQiLCJyb3ciLCJzcGFuIiwiZ2FwIiwiTWF0aCIsImNhblJlbmRlclNsb3RFdmVudCIsImNvbnRlbnQiLCJFdmVudFJvd01peGluIiwicmVuZGVyRXZlbnQiLCJyZW5kZXJTcGFuIiwicmVuZGVyU2hvd01vcmUiLCJldmVyeSIsInMiLCJfdGhpcyRwcm9wczIiLCJnZXRFdmVudHNGb3JTbG90IiwicmVtYWluaW5nRXZlbnRzIiwiY291bnQiLCJTaG93TW9yZSIsInNsb3REYXRlIiwiZ2V0RGF0ZUZvclNsb3QiLCJlIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJkZWZhdWx0UHJvcHMiLCJTY3JvbGxhYmxlV2Vla1dyYXBwZXIiLCJpc0VxdWFsIiwiYSIsImIiLCJnZXRTbG90TWV0cmljcyIsIm1lbW9pemUiLCJtYXhSb3dzIiwibWluUm93cyIsImFjY2Vzc29ycyIsIl9lbmRPZlJhbmdlIiwiZW5kT2ZSYW5nZSIsImRhdGVSYW5nZSIsImZpcnN0IiwibGFzdCIsImV2dCIsImV2ZW50U2VnbWVudHMiLCJfZXZlbnRMZXZlbHMiLCJleHRyYSIsIm1pbkV2ZW50Um93cyIsImNsb25lIiwibWV0cmljcyIsInNsb3ROdW1iZXIiLCJnZXRTbG90Rm9yRGF0ZSIsInIiLCJjb250aW51ZXNQcmlvciIsImNvbnRpbnVlc0FmdGVyIiwiRGF0ZUNvbnRlbnRSb3ciLCJfbGVuIiwiX2tleSIsInNsaWNlIiwiaGFuZGxlU2hvd01vcmUiLCJjZWxsIiwicXNhIiwiZ2V0Q29udGFpbmVyIiwicmVuZGVySGVhZGluZ0NlbGwiLCJfdGhpcyRwcm9wczMiLCJyZW5kZXJIZWFkZXIiLCJyZW5kZXJEdW1teSIsIl90aGlzJHByb3BzNCIsImhlYWRpbmdSb3dSZWYiLCJldmVudFJvd1JlZiIsIkRhdGVTbG90TWV0cmljcyIsImdldFJvd0xpbWl0IiwiX3RoaXMkaGVhZGluZ1Jvd1JlZiIsImV2ZW50SGVpZ2h0IiwiZ2V0SGVpZ2h0IiwiaGVhZGluZ0hlaWdodCIsImV2ZW50U3BhY2UiLCJmbG9vciIsIl90aGlzJHByb3BzNSIsInJlbmRlckZvck1lYXN1cmUiLCJvblNlbGVjdCIsIm9uRG91YmxlQ2xpY2siLCJvbktleVByZXNzIiwiU2Nyb2xsYWJsZVdlZWtDb21wb25lbnQiLCJXZWVrV3JhcHBlciIsIndlZWtXcmFwcGVyIiwiZXZlbnRSb3dQcm9wcyIsInJvbGUiLCJzZWdzIiwiRXZlbnRSb3ciLCJJbmZpbml0eSIsIkV2ZW50Q2VsbCIsIl90aGlzJHByb3BzJGNvbXBvbmVudCIsIkV2ZW50V3JhcHBlciIsInNsb3RTdGFydCIsInNsb3RFbmQiLCJ0b29sdGlwIiwic2hvd0FzQWxsRGF5IiwiZGlmZiIsImNlaWwiLCJ1c2VyUHJvcHMiLCJldmVudFByb3AiLCJ1bmRlZmluZWQiLCJvbktleURvd24iLCJyZWR1Y2UiLCJsaSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImlzUmVxdWlyZWQiLCJsZW4iLCJwZXIiLCJhYnMiLCJXZWJraXRGbGV4QmFzaXMiLCJmbGV4QmFzaXMiLCJtYXhXaWR0aCIsIkhlYWRlciIsIlBvcCIsInNob3ciLCJoYW5kbGVEcmFnU3RhcnQiLCJwb3BwZXJSZWYiLCJvZmZzZXQiLCJ1c2VDbGlja091dHNpZGUiLCJjYWxsYmFjayIsImhhbmRsZUNsaWNrT3V0c2lkZSIsImNvbnRhaW5zIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInVzZUxheW91dEVmZmVjdCIsInRhcmdldFJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJjb250YWluZXJSZWN0IiwicG9wcGVyUmVjdCIsInJiY0RheUJnIiwicGFyZW50RWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ0b3BPZmZzZXQiLCJib3R0b20iLCJzY3JvbGxZIiwidG9wIiwibGVmdE9mZnNldCIsInJiY0RheUJnV2lkdGgiLCJtaW5XaWR0aCIsImx0IiwiZ3RlIiwiZHJhZ2dhYmxlIiwib25EcmFnU3RhcnQiLCJvbkRyYWdFbmQiLCJwb3NpdGlvbiIsIkNhbE92ZXJsYXkiLCJfcmVmJHBvcHVwT2Zmc2V0Iiwib3ZlcmxheSIsImhhbmRsZURvdWJsZUNsaWNrRXZlbnQiLCJoYW5kbGVLZXlQcmVzc0V2ZW50Iiwib25IaWRlIiwib3ZlcmxheURpc3BsYXkiLCJpc05hTiIsIk92ZXJsYXkiLCJyb290Q2xvc2UiLCJmbGlwIiwicGxhY2VtZW50IiwiUG9wT3ZlcmxheSIsImhhbmRsZXIiLCJsaXN0ZW4iLCJwYXNzaXZlIiwiZ2V0RXZlbnROb2RlRnJvbVBvaW50IiwiY2xpZW50WCIsImNsaWVudFkiLCJlbGVtZW50RnJvbVBvaW50IiwiY2xvc2VzdCIsImdldFNob3dNb3JlTm9kZUZyb21Qb2ludCIsImdldEV2ZW50Q29vcmRpbmF0ZXMiLCJ0b3VjaGVzIiwicGFnZVgiLCJwYWdlWSIsIl9yZWYzJGdsb2JhbCIsImdsb2JhbCIsIl9yZWYzJGxvbmdQcmVzc1RocmVzaCIsIl9yZWYzJHZhbGlkQ29udGFpbmVycyIsInZhbGlkQ29udGFpbmVycyIsIl9pbml0aWFsRXZlbnQiLCJpc0RldGFjaGVkIiwiZ2xvYmFsTW91c2UiLCJfbGlzdGVuZXJzIiwiY3JlYXRlIiwiX2hhbmRsZUluaXRpYWxFdmVudCIsIl9oYW5kbGVNb3ZlRXZlbnQiLCJfaGFuZGxlVGVybWluYXRpbmdFdmVudCIsIl9rZXlMaXN0ZW5lciIsIl9kcm9wRnJvbU91dHNpZGVMaXN0ZW5lciIsIl9kcmFnT3ZlckZyb21PdXRzaWRlTGlzdGVuZXIiLCJfcmVtb3ZlVG91Y2hNb3ZlV2luZG93TGlzdGVuZXIiLCJfcmVtb3ZlS2V5RG93bkxpc3RlbmVyIiwiX3JlbW92ZUtleVVwTGlzdGVuZXIiLCJfcmVtb3ZlRHJvcEZyb21PdXRzaWRlTGlzdGVuZXIiLCJfcmVtb3ZlRHJhZ092ZXJGcm9tT3V0c2lkZUxpc3RlbmVyIiwiX2FkZEluaXRpYWxFdmVudExpc3RlbmVyIiwiaGFuZGxlcnMiLCJyZW1vdmUiLCJpbmRleE9mIiwic3BsaWNlIiwiZW1pdCIsInJlc3VsdCIsImZuIiwiX2luaXRpYWxFdmVudERhdGEiLCJfc2VsZWN0UmVjdCIsIl9sYXN0Q2xpY2tEYXRhIiwiX3JlbW92ZUluaXRpYWxFdmVudExpc3RlbmVyIiwiX3JlbW92ZUVuZExpc3RlbmVyIiwiX29uRXNjTGlzdGVuZXIiLCJfcmVtb3ZlTW92ZUxpc3RlbmVyIiwib2JqZWN0c0NvbGxpZGUiLCJpdGVtcyIsIl9hZGRMb25nUHJlc3NMaXN0ZW5lciIsImluaXRpYWxFdmVudCIsInRpbWVyIiwicmVtb3ZlVG91Y2hNb3ZlTGlzdGVuZXIiLCJyZW1vdmVUb3VjaEVuZExpc3RlbmVyIiwiaGFuZGxlVG91Y2hTdGFydCIsImNsZWFudXAiLCJyZW1vdmVUb3VjaFN0YXJ0TGlzdGVuZXIiLCJyZW1vdmVNb3VzZURvd25MaXN0ZW5lciIsIl9nZXRFdmVudENvb3JkaW5hdGVzIiwiX2dldEV2ZW50Q29vcmRpbmF0ZXMyIiwib2Zmc2V0RGF0YSIsIl9nZXRFdmVudENvb3JkaW5hdGVzMyIsIndoaWNoIiwiYnV0dG9uIiwiaXNPdmVyQ29udGFpbmVyIiwiX25vcm1hbGl6ZURpc3RhbmNlIiwibm9ybWFsaXplRGlzdGFuY2UiLCJkaXN0YW5jZSIsImlzVG91Y2giLCJ0ZXN0IiwiX2lzV2l0aGluVmFsaWRDb250YWluZXIiLCJldmVudFRhcmdldCIsImNvbnRhaW5lcnMiLCJzb21lIiwiaW5Sb290IiwiaXNXaXRoaW5WYWxpZENvbnRhaW5lciIsIl9oYW5kbGVDbGlja0V2ZW50IiwiX2dldEV2ZW50Q29vcmRpbmF0ZXM0Iiwibm93IiwiZ2V0VGltZSIsInRpbWVzdGFtcCIsIl90aGlzJF9pbml0aWFsRXZlbnREYSIsIl9nZXRFdmVudENvb3JkaW5hdGVzNSIsInciLCJoIiwib2xkIiwiY2xpY2siLCJpc0NsaWNrIiwiY3RybCIsIl90aGlzJF9pbml0aWFsRXZlbnREYTIiLCJub2RlQSIsIm5vZGVCIiwidG9sZXJhbmNlIiwiX2dldEJvdW5kc0Zvck5vZGUiLCJhVG9wIiwiYUxlZnQiLCJfZ2V0Qm91bmRzRm9yTm9kZSRyaWciLCJhUmlnaHQiLCJfZ2V0Qm91bmRzRm9yTm9kZSRib3QiLCJhQm90dG9tIiwiX2dldEJvdW5kc0Zvck5vZGUyIiwiYlRvcCIsImJMZWZ0IiwiX2dldEJvdW5kc0Zvck5vZGUyJHJpIiwiYlJpZ2h0IiwiX2dldEJvdW5kc0Zvck5vZGUyJGJvIiwicmVjdCIsInBhZ2VPZmZzZXQiLCJvZmZzZXRXaWR0aCIsIm9mZnNldEhlaWdodCIsImRpciIsInBhZ2VYT2Zmc2V0IiwiYm9keSIsInNjcm9sbExlZnQiLCJwYWdlWU9mZnNldCIsInNjcm9sbFRvcCIsImdldEtleSIsInRvdGFsTWluIiwiZ2V0VG90YWxNaW4iLCJtaW51dGVzRnJvbU1pZG5pZ2h0IiwiZ2V0TWludXRlc0Zyb21NaWRuaWdodCIsIm51bUdyb3VwcyIsIm51bVNsb3RzIiwiZ3JvdXBzIiwiZ3JwIiwic2xvdElkeCIsIm1pbkZyb21TdGFydCIsImdldFNsb3REYXRlIiwibGFzdFNsb3RNaW5Gcm9tU3RhcnQiLCJwb3NpdGlvbkZyb21EYXRlIiwiZ2V0RHN0T2Zmc2V0IiwidXBkYXRlIiwiZGF0ZUlzSW5Hcm91cCIsImdyb3VwSW5kZXgiLCJuZXh0R3JvdXAiLCJpblJhbmdlIiwibmV4dFNsb3QiLCJmaW5kSW5kZXgiLCJlcSIsImNsb3Nlc3RTbG90VG9Qb3NpdGlvbiIsInBlcmNlbnQiLCJjbG9zZXN0U2xvdEZyb21Qb2ludCIsImJvdW5kYXJ5UmVjdCIsImNsb3Nlc3RTbG90RnJvbURhdGUiLCJndCIsImRpZmZNaW5zIiwic3RhcnRzQmVmb3JlRGF5Iiwic3RhcnRzQWZ0ZXJEYXkiLCJzdGFydHNCZWZvcmUiLCJtZXJnZSIsInN0YXJ0c0FmdGVyIiwiZ2V0UmFuZ2UiLCJyYW5nZVN0YXJ0IiwicmFuZ2VFbmQiLCJpZ25vcmVNaW4iLCJpZ25vcmVNYXgiLCJyYW5nZVN0YXJ0TWluIiwicmFuZ2VFbmRNaW4iLCJzdGFydERhdGUiLCJlbmREYXRlIiwiZ2V0Q3VycmVudFRpbWVQb3NpdGlvbiIsImRhdGEiLCJfc2xvdE1ldHJpY3MkZ2V0UmFuZ2UiLCJzdGFydE1zIiwiZW5kTXMiLCJnZXQiLCJyb3dzIiwibGVhdmVzIiwiX3dpZHRoIiwibm9PdmVybGFwIiwib3ZlcmxhcCIsIl90aGlzJHJvdyIsInhPZmZzZXQiLCJvblNhbWVSb3ciLCJtaW5pbXVtU3RhcnREaWZmZXJlbmNlIiwiZ2V0U3R5bGVkRXZlbnRzIiwiZXZlbnRzSW5SZW5kZXJPcmRlciIsInNvcnRCeVJlbmRlciIsInNvcnRlZEJ5VGltZSIsInNvcnRCeSIsInNvcnRlZCIsInNoaWZ0IiwiY29udGFpbmVyRXZlbnRzIiwiX2xvb3AiLCJnZXRNYXhJZHhERlMiLCJtYXhJZHgiLCJ2aXNpdGVkIiwiZnJpZW5kcyIsIm5ld0lkeCIsIkRlZmF1bHRBbGdvcml0aG1zIiwic3R5bGVkRXZlbnRzIiwic29ydCIsInNpemUiLCJzZTEiLCJ5MSIsInkyIiwic2UyIiwieTMiLCJ5NCIsInNlIiwiYml0bWFwIiwiYWxsRnJpZW5kcyIsInBhZGRpbmciLCJUaW1lU2xvdEdyb3VwIiwiX0NvbXBvbmVudCIsInJlbmRlclNsb3QiLCJyZXNvdXJjZSIsImdyb3VwIiwiX3RoaXMkcHJvcHMkY29tcG9uZW50MiIsIkJhY2tncm91bmRXcmFwcGVyIiwiZ3JvdXBQcm9wcyIsInNsb3RHcm91cFByb3AiLCJzbG90UHJvcHMiLCJzbG90UHJvcCIsIkNvbXBvbmVudCIsIkRheUNvbHVtbldyYXBwZXIiLCJpbm5lclJlZiIsIkRheUNvbHVtbiIsInRpbWVJbmRpY2F0b3JQb3NpdGlvbiIsImludGVydmFsVHJpZ2dlcmVkIiwicmVuZGVyRXZlbnRzIiwiaXNCYWNrZ3JvdW5kRXZlbnQiLCJhbGdvcml0aG0iLCJpc0Z1bmN0aW9uIiwiY29uc3RydWN0b3IiLCJjYWxsIiwiRGF5RXZlbnRMYXlvdXQiLCJfYWNjZXNzb3JzJGV2ZW50SWQiLCJUaW1lR3JpZEV2ZW50IiwiX3NlbGVjdCIsIl9kb3VibGVDbGljayIsIl9rZXlQcmVzcyIsIm1heWJlU2VsZWN0Iiwic2VsZWN0aW9uU3RhdGUiLCJjdXJyZW50U2xvdCIsIl9pbml0aWFsU2xvdCIsImluaXRpYWxTbG90Iiwic2VsZWN0UmFuZ2UiLCJfc2VsZWN0aW9uU3RhdGUiLCJfbGVuMiIsIl9rZXkyIiwiX2xlbjMiLCJfa2V5MyIsIl9sZW40IiwiX2tleTQiLCJUaW1lU2xvdFV0aWxzIiwiaXNOb3ciLCJzZXRUaW1lSW5kaWNhdG9yUG9zaXRpb25VcGRhdGVJbnRlcnZhbCIsImNsZWFyVGltZUluZGljYXRvckludGVydmFsIiwicHJldlN0YXRlIiwiZ2V0Tm93Q2hhbmdlZCIsInRhaWwiLCJwb3NpdGlvblRpbWVJbmRpY2F0b3IiLCJfdGhpczMiLCJfdGltZUluZGljYXRvclRpbWVvdXQiLCJfdGhpcyRwcm9wczUkZ2V0dGVycyIsIl90aGlzJHByb3BzNSRjb21wb25lbiIsIkV2ZW50Q29udGFpbmVyIiwiZXZlbnRDb250YWluZXJXcmFwcGVyIiwiX2V4Y2x1ZGVkMiIsInNlbGVjdERhdGVzIiwiX2RheVByb3AiLCJEYXlDb2x1bW5XcmFwcGVyQ29tcG9uZW50IiwiZHJhZ1Rocm91Z2hFdmVudHMiLCJSZXNvdXJjZUhlYWRlciIsIlRpbWVHcmlkSGVhZGVyIiwiaGFuZGxlSGVhZGVyQ2xpY2siLCJyZW5kZXJSb3ciLCJldmVudHNUb0Rpc3BsYXkiLCJyZW5kZXJIZWFkZXJDZWxscyIsIl90aGlzJHByb3BzMiRjb21wb25lbiIsImhlYWRlciIsIkhlYWRlckNvbXBvbmVudCIsInNjcm9sbFJlZiIsImlzT3ZlcmZsb3dpbmciLCJfdGhpcyRwcm9wczMkY29tcG9uZW4iLCJUaW1lR3V0dGVySGVhZGVyIiwiX3RoaXMkcHJvcHMzJGNvbXBvbmVuMiIsInJlc291cmNlSGVhZGVyIiwiUmVzb3VyY2VIZWFkZXJDb21wb25lbnQiLCJzY3JvbGxiYXJTaXplIiwiZ3JvdXBlZEV2ZW50cyIsImdyb3VwRXZlbnRzIiwiVGltZUdyaWRIZWFkZXJSZXNvdXJjZXMiLCJfdGhpcyRwcm9wcyRjb21wb25lbnQzIiwiZmlsdGVyZWRFdmVudHMiLCJndXR0ZXJSZWYiLCJUaW1lR3V0dGVyV3JhcHBlciIsImFkanVzdEZvckRTVCIsImdldFRpbWV6b25lT2Zmc2V0IiwidG9JU09TdHJpbmciLCJzZXRTbG90TWV0cmljcyIsIk5PTkUiLCJoYW5kbGVTY3JvbGwiLCJoYW5kbGVSZXNpemUiLCJhbmltYXRpb25GcmFtZSIsInJhZkhhbmRsZSIsImNoZWNrT3ZlcmZsb3ciLCJjbGVhclNlbGVjdGlvbiIsImRvU2hvd01vcmVEcmlsbERvd24iLCJnZXRQb3NpdGlvbiIsImhhbmRsZVNlbGVjdEFsbERheVNsb3QiLCJfdXBkYXRpbmdPdmVyZmxvdyIsImNvbnRlbnRSZWYiLCJzY3JvbGxIZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJtZW1vaXplZFJlc291cmNlcyIsImV2ZW50c0J5UmVzb3VyY2UiLCJNYXAiLCJpdGVtIiwic2V0IiwiZ3V0dGVyV2lkdGgiLCJfc2Nyb2xsUmF0aW8iLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIm1lYXN1cmVHdXR0ZXIiLCJjYWxjdWxhdGVTY3JvbGwiLCJhcHBseVNjcm9sbCIsIm1lYXN1cmVHdXR0ZXJBbmltYXRpb25GcmFtZVJlcXVlc3QiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlbmRlckRheUNvbHVtbiIsImdyb3VwZWRCYWNrZ3JvdW5kRXZlbnRzIiwiZGF5c0V2ZW50cyIsImRheXNCYWNrZ3JvdW5kRXZlbnRzIiwiX2NyZWF0ZUVsZW1lbnQiLCJyZW5kZXJSZXNvdXJjZXNGaXJzdCIsInJlbmRlclJhbmdlRmlyc3QiLCJmbGV4IiwiX3RoaXMkcHJvcHMkYWxsRGF5TWF4IiwicmFuZ2VFdmVudHMiLCJyYW5nZUJhY2tncm91bmRFdmVudHMiLCJlU3RhcnQiLCJlRW5kIiwic3RhcnRBbmRFbmRBcmVEYXRlT25seSIsInNvcnRFdmVudHMiLCJoZWFkZXJQcm9wcyIsInJlbmRlck92ZXJsYXkiLCJvblNjcm9sbCIsIl90aGlzJHN0YXRlJG92ZXJsYXkiLCJfdGhpczQiLCJfc2VsZWN0VGltZXIiLCJfcGVuZGluZ1NlbGVjdGlvbiIsIl90aGlzNSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIl90aGlzNSRndXR0ZXJSZWYiLCJnZXRXaWR0aCIsImVuYWJsZUF1dG9TY3JvbGwiLCJkaWZmTWlsbGlzIiwidG90YWxNaWxsaXMiLCJzdHJpbmdpZnlQZXJjZW50IiwiX3Byb3BzJGNvbXBvbmVudHMiLCJpbm5lciIsImV2ZW50U3R5bGUiLCJ0YWJJbmRleCIsIkRuRENvbnRleHQiLCJoYW5kbGVSZXNpemVVcCIsIm9uQmVnaW5BY3Rpb24iLCJoYW5kbGVSZXNpemVEb3duIiwiaGFuZGxlUmVzaXplTGVmdCIsImhhbmRsZVJlc2l6ZVJpZ2h0IiwiaGFuZGxlU3RhcnREcmFnZ2luZyIsIl9lJHRhcmdldCRnZXRBdHRyaWJ1dCIsImdldEF0dHJpYnV0ZSIsInJlbmRlckFuY2hvciIsImNscyIsIm9uTW91c2VEb3duIiwiX19pc1ByZXZpZXciLCJkcmFnZ2FibGVBY2Nlc3NvciIsInJlc2l6YWJsZUFjY2Vzc29yIiwiaXNEcmFnZ2FibGUiLCJpc1Jlc2l6YWJsZSIsIm5ld1Byb3BzIiwib25Ub3VjaFN0YXJ0IiwiU3RhcnRBbmNob3IiLCJFbmRBbmNob3IiLCJkcmFnQW5kRHJvcEFjdGlvbiIsImludGVyYWN0aW5nIiwiY29udGV4dFR5cGUiLCJkcmFnQWNjZXNzb3JzIiwid3JhcEFjY2Vzc29yIiwibWVyZ2VDb21wb25lbnRzIiwiYWRkb25zIiwibmVzdCIsImZhY3RvcmllcyIsIkJvb2xlYW4iLCJjcmVhdGVGYWN0b3J5IiwiTmVzdCIsInJlZHVjZVJpZ2h0IiwiY2hpbGQiLCJmYWN0b3J5IiwicG9pbnRJbkNvbHVtbiIsImV2ZW50VGltZXMiLCJkdXJhdGlvbiIsIkV2ZW50Q29udGFpbmVyV3JhcHBlciIsImhhbmRsZU1vdmUiLCJyZXNldCIsIm5ld1Nsb3QiLCJldmVudE9mZnNldFRvcCIsIm5ld0VuZCIsImhhbmRsZURyb3BGcm9tT3V0c2lkZSIsImJvdW5kYXJ5Qm94IiwiX2NhbGN1bGF0ZURuREVuZCIsIm9uRHJvcEZyb21PdXRzaWRlIiwiaGFuZGxlRHJhZ092ZXJGcm9tT3V0c2lkZSIsImRyYWdGcm9tT3V0c2lkZUl0ZW0iLCJldmVudER1cmF0aW9uIiwiZXZlbnRFbmRTbG90IiwidXBkYXRlUGFyZW50U2Nyb2xsIiwicGFyZW50IiwiZHJhZ2dlZEVsIiwib2Zmc2V0VG9wIiwid3JhcHBlciIsImlzQmVpbmdEcmFnZ2VkIiwic2Nyb2xsUGFyZW50IiwiZXZlbnROb2RlIiwib25TdGFydCIsImhhbmRsZUludGVyYWN0aW9uRW5kIiwib25FbmQiLCJsYXN0RXZlbnQiLCJuZXdSYW5nZSIsIl90aGlzJGNvbnRleHQkZHJhZ2dhYiIsIm5ld1RpbWUiLCJfZXZlbnRUaW1lczMiLCJuZXdTdGFydCIsInJlbmRlckNvbnRlbnQiLCJkcmFnZ2VkRXZlbnQiLCJfZXZlbnRUaW1lcyIsImlzTW9udGhSb3ciLCJjbGFzc0xpc3QiLCJpc0luQm94Iiwic2VnbWVudCIsImxhc3RTZWdtZW50IiwiX2V2ZW50VGltZXMyIiwiY3Vyc29ySW5Sb3ciLCJvcmlnaW5hbEVuZCIsIm9yaWdpbmFsU3RhcnQiLCJkZWZhdWx0T25EcmFnT3ZlciIsImhhbmRsZUJlZ2luQWN0aW9uIiwiaGFuZGxlSW50ZXJhY3Rpb25TdGFydCIsImludGVyYWN0aW9uSW5mbyIsImdldERuRENvbnRleHRWYWx1ZSIsImVsZW1lbnRQcm9wc1dpdGhEcm9wRnJvbU91dHNpZGUiLCJvbkRyYWdPdmVyIiwiUHJvdmlkZXIiLCJsb2NhbGVQcm9wVHlwZSIsIl9mb3JtYXQiLCJmb3JtYXR0ZXIiLCJpbnZhcmlhbnQiLCJkdCIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJkYXlzdGFydCIsImRheVNwYW4iLCJfcmVmJGV2dEEiLCJldnRBIiwiYVN0YXJ0IiwiYUVuZCIsImFBbGxEYXkiLCJfcmVmJGV2dEIiLCJldnRCIiwiYlN0YXJ0IiwiYkVuZCIsImJBbGxEYXkiLCJzdGFydFNvcnQiLCJkdXJBIiwiZHVyQiIsImluRXZlbnRSYW5nZSIsIl9yZWYyJGV2ZW50IiwiX3JlZjIkcmFuZ2UiLCJzdGFydHNCZWZvcmVFbmQiLCJlbmRzQWZ0ZXJTdGFydCIsImRhdGUxIiwiZGF0ZTIiLCJpc0p1c3REYXRlIiwiRGF0ZUxvY2FsaXplciIsInNwZWMiLCJmaXJzdE9mV2VlayIsInByb3BUeXBlIiwic3RhcnRPZldlZWsiLCJtaW51dGVzIiwiZmlyc3RWaXNpYmxlRGF5IiwibGFzdFZpc2libGVEYXkiLCJ2aXNpYmxlRGF5cyIsInNlZ21lbnRPZmZzZXQiLCJicm93c2VyVFpPZmZzZXQiLCJtZXJnZVdpdGhEZWZhdWx0cyIsImZvcm1hdE92ZXJyaWRlcyIsInZpZXdOYW1lc0dyb3VwIiwiZGVmYXVsdE1lc3NhZ2VzIiwidGltZSIsInllc3RlcmRheSIsInRvbW9ycm93IiwiRGF0ZUhlYWRlciIsIk1vbnRoVmlldyIsInJlbmRlcldlZWsiLCJ3ZWVrSWR4IiwibmVlZExpbWl0TWVhc3VyZSIsInJvd0xpbWl0Iiwid2Vla3NFdmVudHMiLCJldmVudHNGb3JXZWVrIiwiZXZ0cyIsInNvcnRXZWVrRXZlbnRzIiwic2xvdFJvd1JlZiIsInJlYWRlckRhdGVIZWFkaW5nIiwiaXNPZmZSYW5nZSIsImlzQ3VycmVudCIsIkRhdGVIZWFkZXJDb21wb25lbnQiLCJkYXRlSGVhZGVyIiwiaGFuZGxlSGVhZGluZ0NsaWNrIiwiX2JnUm93cyIsInJ1bm5pbmciLCJtZWFzdXJlUm93TGltaXQiLCJfcmVzaXplTGlzdGVuZXIiLCJ3ZWVrcyIsImNodW5rIiwiX3dlZWtDb3VudCIsInJlbmRlckhlYWRlcnMiLCJfdGhpcyRzdGF0ZTIiLCJfdGhpcyRwcm9wczYiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJfcmVmNSIsIkRheSIsIl90aGlzJHByb3BzJG1pbiIsIl90aGlzJHByb3BzJG1heCIsIl90aGlzJHByb3BzJHNjcm9sbFRvVCIsIl90aGlzJHByb3BzJGVuYWJsZUF1dCIsIldlZWsiLCJfV2VlayRyYW5nZSIsIl9XZWVrJHJhbmdlMiIsIl90b0FycmF5IiwicmVzdCIsInBvcCIsIndvcmtXZWVrUmFuZ2UiLCJkIiwiZ2V0RGF5IiwiV29ya1dlZWsiLCJfd29ya1dlZWtSYW5nZSIsIl93b3JrV2Vla1JhbmdlMiIsIkFnZW5kYSIsIl9yZWYkbGVuZ3RoIiwiaGVhZGVyUmVmIiwiZGF0ZUNvbFJlZiIsInRpbWVDb2xSZWYiLCJ0Ym9keVJlZiIsIl9hZGp1c3RIZWFkZXIiLCJ0aW1lUmFuZ2VMYWJlbCIsImxhYmVsQ2xhc3MiLCJUaW1lQ29tcG9uZW50IiwidHJpbSIsImZpcnN0Um93IiwiZmlyc3RDaGlsZCIsIl93aWR0aHMiLCJ3aWR0aHMiLCJhZGRDbGFzcyIsIm1hcmdpblJpZ2h0IiwicmVtb3ZlQ2xhc3MiLCJyZW5kZXJEYXkiLCJkYXlLZXkiLCJBZ2VuZGFEYXRlIiwiZGF0ZUxhYmVsIiwicm93U3BhbiIsIl9yZWYyJGxlbmd0aCIsIl9yZWYzJGxlbmd0aCIsIl9yZWY0JGxlbmd0aCIsIk1vbnRoIiwiV09SS19XRUVLIiwiX3ZpZXdzIiwiX2kiLCJfT2JqZWN0JGVudHJpZXMiLCJlbnRyaWVzIiwiZ2V0Vmlld3MiLCJ0cmFuc2Zvcm0iLCJWSUVXUyIsIm1hcFZhbHVlcyIsImdldFZpZXciLCJoYW5kbGVSYW5nZUNoYW5nZSIsInZpZXdDb21wb25lbnQiLCJoYW5kbGVOYXZpZ2F0ZSIsIlZpZXdDb21wb25lbnQiLCJtb3ZlRGF0ZSIsIkRBVEUiLCJoYW5kbGVWaWV3Q2hhbmdlIiwiaXNWYWxpZFZpZXciLCJoYW5kbGVEcmlsbERvd24iLCJnZXRDb250ZXh0IiwiX3RoaXMkc3RhdGUkY29udGV4dCIsIkNhbFRvb2xiYXIiLCJuZXh0UHJvcHMiLCJzdGFydEFjY2Vzc29yIiwiZW5kQWNjZXNzb3IiLCJhbGxEYXlBY2Nlc3NvciIsInRvb2x0aXBBY2Nlc3NvciIsInRpdGxlQWNjZXNzb3IiLCJldmVudElkQWNjZXNzb3IiLCJiYWNrZ3JvdW5kRXZlbnRQcm9wR2V0dGVyIiwiX3JlZjQkbWVzc2FnZXMiLCJfcmVmNCRjb21wb25lbnRzIiwiX3JlZjQkZm9ybWF0cyIsIm5hbWVzIiwibXNncyIsIm1lc3NhZ2UiLCJiYWNrZ3JvdW5kRXZlbnRQcm9wIiwiZGVmYXVsdHMiLCJvbWl0IiwiYmFja2dyb3VuZEV2ZW50V3JhcHBlciIsInVuY29udHJvbGxhYmxlIiwidGltZVJhbmdlRm9ybWF0IiwidGltZVJhbmdlU3RhcnRGb3JtYXQiLCJ0aW1lUmFuZ2VFbmRGb3JtYXQiLCJ3ZWVrUmFuZ2VGb3JtYXQiLCJkYXRlUmFuZ2VGb3JtYXQiLCJmaXhVbml0IiwidW5pdCIsImRhdGVQYXJ0IiwidG9Mb3dlckNhc2UiLCJfc3QkX3okbmFtZSIsIl9zdCRfeiIsInN0IiwiZWQiLCJ0eiIsInR6TmFtZSIsIl96Iiwiem9uZSIsInV0Y09mZnNldCIsImRlZmluZUNvbXBhcmF0b3JzIiwiX2RlZmluZUNvbXBhcmF0b3JzIiwiX2RlZmluZUNvbXBhcmF0b3JzMiIsImR0QSIsImR0QiIsImlzU2FtZSIsIl9kZWZpbmVDb21wYXJhdG9yczkiLCJfZGVmaW5lQ29tcGFyYXRvcnMxMCIsImlzU2FtZU9yQmVmb3JlIiwiYWRkZXIiLCJtU3RhcnQiLCJtRW5kIiwiZGF5cyIsImxvY2FsZURhdGEiLCJsb2NhbGUiLCJtIiwiX2RlZmluZUNvbXBhcmF0b3JzNSIsIl9kZWZpbmVDb21wYXJhdG9yczYiLCJpc0JlZm9yZSIsIl9kZWZpbmVDb21wYXJhdG9yczMiLCJfZGVmaW5lQ29tcGFyYXRvcnM0IiwiaXNBZnRlciIsIl9kZWZpbmVDb21wYXJhdG9yczciLCJfZGVmaW5lQ29tcGFyYXRvcnM4IiwidG0iLCJtRGF5IiwibU1pbiIsIm1NYXgiLCJpc0JldHdlZW4iLCJkYXRlQSIsImRhdGVCIiwibWludXRlIiwiZGF5U3RhcnQiLCJnZXREYXlTdGFydERzdE9mZnNldCIsIm1GaXJzdCIsIm1MYXN0IiwiaXNTYW1lT3JBZnRlciIsIl9yZWY2IiwiX3JlZjYkZXZ0QSIsIl9yZWY2JGV2dEIiLCJfcmVmNyIsIl9yZWY3JGV2ZW50IiwiX3JlZjckcmFuZ2UiLCJzdGFydE9mRGF5IiwiclN0YXJ0IiwickVuZCIsImR0MiIsIm5lZyIsInRvU3RyaW5nIiwiZHRPZmZzZXQiLCJjb21wYXJhdG9yIiwiTnVtYmVyIiwicGx1cmFsaXplVW5pdCIsIl9yZWY2JGZpcnN0RGF5T2ZXZWVrIiwiZnJvbUpTRGF0ZSIsInN0YXJ0T2ZEVFdlZWsiLCJkdE9iaiIsIndlZWtkYXkiLCJtaW51cyIsImVuZE9mRFRXZWVrIiwiZW93IiwicGx1cyIsInN0YXJ0T2ZEVCIsImVuZE9mRFQiLCJjb252ZXJzaW9uQWNjdXJhY3kiLCJ0b09iamVjdCIsImR0U3RhcnQiLCJhcyIsImZvcm1hdERhdGVXaXRoQ3VsdHVyZSIsInNldExvY2FsZSIsInRvRm9ybWF0IiwiZm9ybWF0RGF0ZSIsInNlY29uZCIsIm1pbGxpc2Vjb25kIiwicm91bmQiLCJfcmVmNyRldnRBIiwiX3JlZjckZXZ0QiIsIl9yZWY4IiwiX3JlZjgkZXZlbnQiLCJfcmVmOCRyYW5nZSIsImhhc1NhbWUiLCJnZXRDdWx0dXJlIiwiZmluZENsb3Nlc3RDdWx0dXJlIiwiY2FsZW5kYXIiLCJmaXJzdERheSIsImxvYWQiLCJjbGRyIiwidGVycml0b3J5IiwiYXR0cmlidXRlcyIsIndlZWtEYXRhIiwicHJvY2VzcyIsImxvY2FsZURheSIsInBhcnNlSW50IiwicmF3Iiwib2xkR2xvYmFsaXplIiwiZGF5anNMaWIiLCJleHRlbmQiLCJsb2NhbGl6ZWRGb3JtYXQiLCJtaW5NYXgiLCJ1dGMiLCJfc3QkdHokJHgkJHRpbWV6b25lIiwiJHgiLCIkdGltZXpvbmUiLCJzdGFydERheSIsImRqIiwiZGpEYXkiLCJkak1pbiIsImRqTWF4IiwiZGpTdGFydCIsImRqRmlyc3QiLCJkakVuZCIsImRqTGFzdCIsImFjY2Vzc29yIiwiZmllbGQiLCJhY2MiLCJNSUxMSSIsInNlY29uZHMiLCJob3VycyIsImZpcnN0T2ZNb250aCIsImVuZE9mTW9udGgiLCJfcmVmJHVuaXQiLCJsaW1pdCIsInNlZ3NPdmVybGFwIiwib3RoZXJTZWdzIiwib3RoZXJTZWciLCJiYXNlIiwibXVsdGlEYXlFdmVudHMiLCJzdGFuZGFyZEV2ZW50cyIsInN0YXJ0Q2hlY2siLCJlbmRDaGVjayIsIm11bHRpU29ydGVkIiwic3RhbmRhcmRTb3J0ZWQiLCJldmVudEEiLCJldmVudEIiLCJwcm9wIiwic2xvdFdpZHRoIiwiY2VsbFdpZHRoIiwibGFzdFNsb3RJZHgiLCJpc0N1cnJlbnRSb3ciLCJpc1N0YXJ0Um93IiwiaXNBYm92ZVN0YXJ0IiwiaXNCZWxvd1N0YXJ0IiwibGlua0Jhc2UiLCJtYXJnaW5Cb3R0b20iLCJocmVmIiwiYWxsWm9uZXMiLCJfcmVmJGRlZmF1bHRUWiIsInVuc2hpZnQiLCJfcmVmMiRsb2NhbGl6ZXIiLCJfcmVmMiRzaG93RGVtb0xpbmsiLCJzaG93RGVtb0xpbmsiLCJhZGpFdmVudHMiLCJpdCIsImluZCIsImZvcm1hdE5hbWUiLCJEbkRPdXRzaWRlUmVzb3VyY2UiLCJzZXREcmFnZ2VkRXZlbnQiLCJfdXNlU3RhdGU1IiwiX3VzZVN0YXRlNiIsImRpc3BsYXlEcmFnSXRlbUluQ2VsbCIsInNldERpc3BsYXlEcmFnSXRlbUluQ2VsbCIsIl91c2VTdGF0ZTciLCJpdGVtMSIsIml0ZW0yIiwiX3VzZVN0YXRlOCIsImNvdW50ZXJzIiwic2V0Q291bnRlcnMiLCJjdXN0b21PbkRyYWdPdmVyRnJvbU91dHNpZGUiLCJkcmFnRXZlbnQiLCJoYW5kbGVEaXNwbGF5RHJhZ0l0ZW1JbkNlbGwiLCJuZXdFdmVudCIsImlkTGlzdCIsIm5ld0lkIiwiQ2FyZCIsIm9uRHJhZ092ZXJGcm9tT3V0c2lkZSIsInNldFJlc2l6YWJsZSIsInRvZ2dsZVJlc2l6aW5nIiwiRHJhZ2FibGVDYWxlbmRhciIsImFkanVzdGVkIiwiYWxsRGF5RXZlbnQiLCJvdGhlciIsImlkQWNjZXNzb3IiLCJhZGp1c3RlZFJlc291cmNlcyIsIklkIiwiVGl0bGUiLCJkYXlDb2x1bW5XcmFwcGVyUHJvcHMiLCJib3JkZXJDb2xvciIsImJvcmRlclN0eWxlIiwiYm9yZGVyV2lkdGgiLCJkYXRlQ2VsbFdyYXBwZXJQcm9wcyIsImhhc0FsZXJ0IiwiYm9yZGVyTGVmdCIsInRpbWVTbG90V3JhcHBlclByb3BzIiwiaGFzQ3VzdG9tSW5mbyIsImdldEhvdXJzIiwiZXZlbnRXcmFwcGVyUHJvcHMiLCJnZXRNaW51dGVzIiwidGltZUd1dHRlcldyYXBwZXJQcm9wcyIsInNob3dNb3JlUHJvcHMiLCJjdXJzb3IiLCJzdWJzdHIiLCJzZXRIb3VycyIsIk1ldGEiLCJfX3BhZ2UiLCJFcnJvciIsImRvY3NPbmx5IiwiY29tcG9uZW50TWV0YSIsImluY2x1ZGVTdG9yaWVzIiwibWR4U3RvcnlOYW1lVG9LZXkiLCJBZGRDb250ZXh0IiwibWR4Q29tcG9uZW50QW5ub3RhdGlvbnMiLCJleHBvcnRzIiwiX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIiwibW9kdWxlIiwibG9jYWxzIiwid2VicGFja0NvbnRleHQiLCJyZXEiLCJ3ZWJwYWNrQ29udGV4dFJlc29sdmUiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibyIsImNvZGUiLCJ3ZWJwYWNrQ29udGV4dEtleXMiLCJyZXNvbHZlIiwiYXBpIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjb25maWd1cmUiXSwic291cmNlUm9vdCI6IiJ9